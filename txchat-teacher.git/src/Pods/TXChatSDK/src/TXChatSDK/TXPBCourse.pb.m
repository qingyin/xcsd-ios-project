// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "TXPBCourse.pb.h"
// @@protoc_insertion_point(imports)

@implementation TXPBTxpbcourseRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TXPBTxpbcourseRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [TXPBTxpbchatRoot registerAllExtensions:registry];
    [ObjectivecDescriptorRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL TXPBCourseUserIsValidValue(TXPBCourseUser value) {
  switch (value) {
    case TXPBCourseUserTTeacher:
    case TXPBCourseUserTParent:
    case TXPBCourseUserTGardenLeader:
    case TXPBCourseUserTSchool:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBCourseUser(TXPBCourseUser value) {
  switch (value) {
    case TXPBCourseUserTTeacher:
      return @"TXPBCourseUserTTeacher";
    case TXPBCourseUserTParent:
      return @"TXPBCourseUserTParent";
    case TXPBCourseUserTGardenLeader:
      return @"TXPBCourseUserTGardenLeader";
    case TXPBCourseUserTSchool:
      return @"TXPBCourseUserTSchool";
    default:
      return nil;
  }
}

BOOL TXPBCourseTypeIsValidValue(TXPBCourseType value) {
  switch (value) {
    case TXPBCourseTypeTLive:
    case TXPBCourseTypeTVod:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBCourseType(TXPBCourseType value) {
  switch (value) {
    case TXPBCourseTypeTLive:
      return @"TXPBCourseTypeTLive";
    case TXPBCourseTypeTVod:
      return @"TXPBCourseTypeTVod";
    default:
      return nil;
  }
}

BOOL TXPBCourseStatusIsValidValue(TXPBCourseStatus value) {
  switch (value) {
    case TXPBCourseStatusTDraft:
    case TXPBCourseStatusTOffline:
    case TXPBCourseStatusTOnline:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBCourseStatus(TXPBCourseStatus value) {
  switch (value) {
    case TXPBCourseStatusTDraft:
      return @"TXPBCourseStatusTDraft";
    case TXPBCourseStatusTOffline:
      return @"TXPBCourseStatusTOffline";
    case TXPBCourseStatusTOnline:
      return @"TXPBCourseStatusTOnline";
    default:
      return nil;
  }
}

BOOL TXPBLessonLiveStatusIsValidValue(TXPBLessonLiveStatus value) {
  switch (value) {
    case TXPBLessonLiveStatusTNotStart:
    case TXPBLessonLiveStatusTStart:
    case TXPBLessonLiveStatusTStop:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBLessonLiveStatus(TXPBLessonLiveStatus value) {
  switch (value) {
    case TXPBLessonLiveStatusTNotStart:
      return @"TXPBLessonLiveStatusTNotStart";
    case TXPBLessonLiveStatusTStart:
      return @"TXPBLessonLiveStatusTStart";
    case TXPBLessonLiveStatusTStop:
      return @"TXPBLessonLiveStatusTStop";
    default:
      return nil;
  }
}

@interface TXPBCourse ()
@property SInt64 id;
@property SInt64 createOn;
@property SInt64 updateOn;
@property SInt64 teacherId;
@property (strong) NSString* teacherName;
@property SInt64 labelId;
@property (strong) NSString* labelName;
@property TXPBCourseType type;
@property (strong) NSString* title;
@property (strong) NSString* pb_description;
@property (strong) NSString* cover;
@property TXPBCourseStatus status;
@property SInt64 hits;
@property Float64 score;
@property SInt64 scoreCnt;
@property SInt64 startOn;
@property SInt64 endOn;
@property (strong) NSString* teacherDesc;
@property (strong) NSString* teacherAvatar;
@end

@implementation TXPBCourse

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
- (BOOL) hasTeacherId {
  return !!hasTeacherId_;
}
- (void) setHasTeacherId:(BOOL) _value_ {
  hasTeacherId_ = !!_value_;
}
@synthesize teacherId;
- (BOOL) hasTeacherName {
  return !!hasTeacherName_;
}
- (void) setHasTeacherName:(BOOL) _value_ {
  hasTeacherName_ = !!_value_;
}
@synthesize teacherName;
- (BOOL) hasLabelId {
  return !!hasLabelId_;
}
- (void) setHasLabelId:(BOOL) _value_ {
  hasLabelId_ = !!_value_;
}
@synthesize labelId;
- (BOOL) hasLabelName {
  return !!hasLabelName_;
}
- (void) setHasLabelName:(BOOL) _value_ {
  hasLabelName_ = !!_value_;
}
@synthesize labelName;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) _value_ {
  hasDescription_ = !!_value_;
}
@synthesize pb_description;
- (BOOL) hasCover {
  return !!hasCover_;
}
- (void) setHasCover:(BOOL) _value_ {
  hasCover_ = !!_value_;
}
@synthesize cover;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasHits {
  return !!hasHits_;
}
- (void) setHasHits:(BOOL) _value_ {
  hasHits_ = !!_value_;
}
@synthesize hits;
- (BOOL) hasScore {
  return !!hasScore_;
}
- (void) setHasScore:(BOOL) _value_ {
  hasScore_ = !!_value_;
}
@synthesize score;
- (BOOL) hasScoreCnt {
  return !!hasScoreCnt_;
}
- (void) setHasScoreCnt:(BOOL) _value_ {
  hasScoreCnt_ = !!_value_;
}
@synthesize scoreCnt;
- (BOOL) hasStartOn {
  return !!hasStartOn_;
}
- (void) setHasStartOn:(BOOL) _value_ {
  hasStartOn_ = !!_value_;
}
@synthesize startOn;
- (BOOL) hasEndOn {
  return !!hasEndOn_;
}
- (void) setHasEndOn:(BOOL) _value_ {
  hasEndOn_ = !!_value_;
}
@synthesize endOn;
- (BOOL) hasTeacherDesc {
  return !!hasTeacherDesc_;
}
- (void) setHasTeacherDesc:(BOOL) _value_ {
  hasTeacherDesc_ = !!_value_;
}
@synthesize teacherDesc;
- (BOOL) hasTeacherAvatar {
  return !!hasTeacherAvatar_;
}
- (void) setHasTeacherAvatar:(BOOL) _value_ {
  hasTeacherAvatar_ = !!_value_;
}
@synthesize teacherAvatar;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.createOn = 0L;
    self.updateOn = 0L;
    self.teacherId = 0L;
    self.teacherName = @"";
    self.labelId = 0L;
    self.labelName = @"";
    self.type = TXPBCourseTypeTLive;
    self.title = @"";
    self.pb_description = @"";
    self.cover = @"";
    self.status = TXPBCourseStatusTDraft;
    self.hits = 0L;
    self.score = 0;
    self.scoreCnt = 0L;
    self.startOn = 0L;
    self.endOn = 0L;
    self.teacherDesc = @"";
    self.teacherAvatar = @"";
  }
  return self;
}
static TXPBCourse* defaultTXPBCourseInstance = nil;
+ (void) initialize {
  if (self == [TXPBCourse class]) {
    defaultTXPBCourseInstance = [[TXPBCourse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCourseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCourseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUpdateOn) {
    return NO;
  }
  if (!self.hasTeacherId) {
    return NO;
  }
  if (!self.hasTeacherName) {
    return NO;
  }
  if (!self.hasLabelId) {
    return NO;
  }
  if (!self.hasLabelName) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasCover) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasHits) {
    return NO;
  }
  if (!self.hasScore) {
    return NO;
  }
  if (!self.hasScoreCnt) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasCreateOn) {
    [output writeInt64:2 value:self.createOn];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:3 value:self.updateOn];
  }
  if (self.hasTeacherId) {
    [output writeInt64:4 value:self.teacherId];
  }
  if (self.hasTeacherName) {
    [output writeString:5 value:self.teacherName];
  }
  if (self.hasLabelId) {
    [output writeInt64:6 value:self.labelId];
  }
  if (self.hasLabelName) {
    [output writeString:7 value:self.labelName];
  }
  if (self.hasType) {
    [output writeEnum:8 value:self.type];
  }
  if (self.hasTitle) {
    [output writeString:9 value:self.title];
  }
  if (self.hasDescription) {
    [output writeString:10 value:self.pb_description];
  }
  if (self.hasCover) {
    [output writeString:11 value:self.cover];
  }
  if (self.hasStatus) {
    [output writeEnum:12 value:self.status];
  }
  if (self.hasHits) {
    [output writeInt64:13 value:self.hits];
  }
  if (self.hasScore) {
    [output writeDouble:14 value:self.score];
  }
  if (self.hasScoreCnt) {
    [output writeInt64:15 value:self.scoreCnt];
  }
  if (self.hasStartOn) {
    [output writeInt64:16 value:self.startOn];
  }
  if (self.hasEndOn) {
    [output writeInt64:17 value:self.endOn];
  }
  if (self.hasTeacherDesc) {
    [output writeString:18 value:self.teacherDesc];
  }
  if (self.hasTeacherAvatar) {
    [output writeString:19 value:self.teacherAvatar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(2, self.createOn);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(3, self.updateOn);
  }
  if (self.hasTeacherId) {
    size_ += computeInt64Size(4, self.teacherId);
  }
  if (self.hasTeacherName) {
    size_ += computeStringSize(5, self.teacherName);
  }
  if (self.hasLabelId) {
    size_ += computeInt64Size(6, self.labelId);
  }
  if (self.hasLabelName) {
    size_ += computeStringSize(7, self.labelName);
  }
  if (self.hasType) {
    size_ += computeEnumSize(8, self.type);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(9, self.title);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(10, self.pb_description);
  }
  if (self.hasCover) {
    size_ += computeStringSize(11, self.cover);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(12, self.status);
  }
  if (self.hasHits) {
    size_ += computeInt64Size(13, self.hits);
  }
  if (self.hasScore) {
    size_ += computeDoubleSize(14, self.score);
  }
  if (self.hasScoreCnt) {
    size_ += computeInt64Size(15, self.scoreCnt);
  }
  if (self.hasStartOn) {
    size_ += computeInt64Size(16, self.startOn);
  }
  if (self.hasEndOn) {
    size_ += computeInt64Size(17, self.endOn);
  }
  if (self.hasTeacherDesc) {
    size_ += computeStringSize(18, self.teacherDesc);
  }
  if (self.hasTeacherAvatar) {
    size_ += computeStringSize(19, self.teacherAvatar);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCourse*) parseFromData:(NSData*) data {
  return (TXPBCourse*)[[[TXPBCourse builder] mergeFromData:data] build];
}
+ (TXPBCourse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourse*)[[[TXPBCourse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCourse*)[[[TXPBCourse builder] mergeFromInputStream:input] build];
}
+ (TXPBCourse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourse*)[[[TXPBCourse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCourse*)[[[TXPBCourse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCourse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourse*)[[[TXPBCourse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourseBuilder*) builder {
  return [[TXPBCourseBuilder alloc] init];
}
+ (TXPBCourseBuilder*) builderWithPrototype:(TXPBCourse*) prototype {
  return [[TXPBCourse builder] mergeFrom:prototype];
}
- (TXPBCourseBuilder*) builder {
  return [TXPBCourse builder];
}
- (TXPBCourseBuilder*) toBuilder {
  return [TXPBCourse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  if (self.hasTeacherId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teacherId", [NSNumber numberWithLongLong:self.teacherId]];
  }
  if (self.hasTeacherName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teacherName", self.teacherName];
  }
  if (self.hasLabelId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"labelId", [NSNumber numberWithLongLong:self.labelId]];
  }
  if (self.hasLabelName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"labelName", self.labelName];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBCourseType(self.type)];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_description", self.pb_description];
  }
  if (self.hasCover) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cover", self.cover];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", NSStringFromTXPBCourseStatus(self.status)];
  }
  if (self.hasHits) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hits", [NSNumber numberWithLongLong:self.hits]];
  }
  if (self.hasScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"score", [NSNumber numberWithDouble:self.score]];
  }
  if (self.hasScoreCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"scoreCnt", [NSNumber numberWithLongLong:self.scoreCnt]];
  }
  if (self.hasStartOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startOn", [NSNumber numberWithLongLong:self.startOn]];
  }
  if (self.hasEndOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endOn", [NSNumber numberWithLongLong:self.endOn]];
  }
  if (self.hasTeacherDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teacherDesc", self.teacherDesc];
  }
  if (self.hasTeacherAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teacherAvatar", self.teacherAvatar];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  if (self.hasTeacherId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.teacherId] forKey: @"teacherId"];
  }
  if (self.hasTeacherName) {
    [dictionary setObject: self.teacherName forKey: @"teacherName"];
  }
  if (self.hasLabelId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.labelId] forKey: @"labelId"];
  }
  if (self.hasLabelName) {
    [dictionary setObject: self.labelName forKey: @"labelName"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasDescription) {
    [dictionary setObject: self.pb_description forKey: @"pb_description"];
  }
  if (self.hasCover) {
    [dictionary setObject: self.cover forKey: @"cover"];
  }
  if (self.hasStatus) {
    [dictionary setObject: @(self.status) forKey: @"status"];
  }
  if (self.hasHits) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.hits] forKey: @"hits"];
  }
  if (self.hasScore) {
    [dictionary setObject: [NSNumber numberWithDouble:self.score] forKey: @"score"];
  }
  if (self.hasScoreCnt) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.scoreCnt] forKey: @"scoreCnt"];
  }
  if (self.hasStartOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.startOn] forKey: @"startOn"];
  }
  if (self.hasEndOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.endOn] forKey: @"endOn"];
  }
  if (self.hasTeacherDesc) {
    [dictionary setObject: self.teacherDesc forKey: @"teacherDesc"];
  }
  if (self.hasTeacherAvatar) {
    [dictionary setObject: self.teacherAvatar forKey: @"teacherAvatar"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCourse class]]) {
    return NO;
  }
  TXPBCourse *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      self.hasTeacherId == otherMessage.hasTeacherId &&
      (!self.hasTeacherId || self.teacherId == otherMessage.teacherId) &&
      self.hasTeacherName == otherMessage.hasTeacherName &&
      (!self.hasTeacherName || [self.teacherName isEqual:otherMessage.teacherName]) &&
      self.hasLabelId == otherMessage.hasLabelId &&
      (!self.hasLabelId || self.labelId == otherMessage.labelId) &&
      self.hasLabelName == otherMessage.hasLabelName &&
      (!self.hasLabelName || [self.labelName isEqual:otherMessage.labelName]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.pb_description isEqual:otherMessage.pb_description]) &&
      self.hasCover == otherMessage.hasCover &&
      (!self.hasCover || [self.cover isEqual:otherMessage.cover]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasHits == otherMessage.hasHits &&
      (!self.hasHits || self.hits == otherMessage.hits) &&
      self.hasScore == otherMessage.hasScore &&
      (!self.hasScore || self.score == otherMessage.score) &&
      self.hasScoreCnt == otherMessage.hasScoreCnt &&
      (!self.hasScoreCnt || self.scoreCnt == otherMessage.scoreCnt) &&
      self.hasStartOn == otherMessage.hasStartOn &&
      (!self.hasStartOn || self.startOn == otherMessage.startOn) &&
      self.hasEndOn == otherMessage.hasEndOn &&
      (!self.hasEndOn || self.endOn == otherMessage.endOn) &&
      self.hasTeacherDesc == otherMessage.hasTeacherDesc &&
      (!self.hasTeacherDesc || [self.teacherDesc isEqual:otherMessage.teacherDesc]) &&
      self.hasTeacherAvatar == otherMessage.hasTeacherAvatar &&
      (!self.hasTeacherAvatar || [self.teacherAvatar isEqual:otherMessage.teacherAvatar]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  if (self.hasTeacherId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.teacherId] hash];
  }
  if (self.hasTeacherName) {
    hashCode = hashCode * 31 + [self.teacherName hash];
  }
  if (self.hasLabelId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.labelId] hash];
  }
  if (self.hasLabelName) {
    hashCode = hashCode * 31 + [self.labelName hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.pb_description hash];
  }
  if (self.hasCover) {
    hashCode = hashCode * 31 + [self.cover hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasHits) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.hits] hash];
  }
  if (self.hasScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.score] hash];
  }
  if (self.hasScoreCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.scoreCnt] hash];
  }
  if (self.hasStartOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startOn] hash];
  }
  if (self.hasEndOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.endOn] hash];
  }
  if (self.hasTeacherDesc) {
    hashCode = hashCode * 31 + [self.teacherDesc hash];
  }
  if (self.hasTeacherAvatar) {
    hashCode = hashCode * 31 + [self.teacherAvatar hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCourseBuilder()
@property (strong) TXPBCourse* resultCourse;
@end

@implementation TXPBCourseBuilder
@synthesize resultCourse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCourse = [[TXPBCourse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCourse;
}
- (TXPBCourseBuilder*) clear {
  self.resultCourse = [[TXPBCourse alloc] init];
  return self;
}
- (TXPBCourseBuilder*) clone {
  return [TXPBCourse builderWithPrototype:resultCourse];
}
- (TXPBCourse*) defaultInstance {
  return [TXPBCourse defaultInstance];
}
- (TXPBCourse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCourse*) buildPartial {
  TXPBCourse* returnMe = resultCourse;
  self.resultCourse = nil;
  return returnMe;
}
- (TXPBCourseBuilder*) mergeFrom:(TXPBCourse*) other {
  if (other == [TXPBCourse defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.hasTeacherId) {
    [self setTeacherId:other.teacherId];
  }
  if (other.hasTeacherName) {
    [self setTeacherName:other.teacherName];
  }
  if (other.hasLabelId) {
    [self setLabelId:other.labelId];
  }
  if (other.hasLabelName) {
    [self setLabelName:other.labelName];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasDescription) {
    [self setDescription:other.pb_description];
  }
  if (other.hasCover) {
    [self setCover:other.cover];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasHits) {
    [self setHits:other.hits];
  }
  if (other.hasScore) {
    [self setScore:other.score];
  }
  if (other.hasScoreCnt) {
    [self setScoreCnt:other.scoreCnt];
  }
  if (other.hasStartOn) {
    [self setStartOn:other.startOn];
  }
  if (other.hasEndOn) {
    [self setEndOn:other.endOn];
  }
  if (other.hasTeacherDesc) {
    [self setTeacherDesc:other.teacherDesc];
  }
  if (other.hasTeacherAvatar) {
    [self setTeacherAvatar:other.teacherAvatar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCourseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCourseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 24: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 32: {
        [self setTeacherId:[input readInt64]];
        break;
      }
      case 42: {
        [self setTeacherName:[input readString]];
        break;
      }
      case 48: {
        [self setLabelId:[input readInt64]];
        break;
      }
      case 58: {
        [self setLabelName:[input readString]];
        break;
      }
      case 64: {
        TXPBCourseType value = (TXPBCourseType)[input readEnum];
        if (TXPBCourseTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 74: {
        [self setTitle:[input readString]];
        break;
      }
      case 82: {
        [self setDescription:[input readString]];
        break;
      }
      case 90: {
        [self setCover:[input readString]];
        break;
      }
      case 96: {
        TXPBCourseStatus value = (TXPBCourseStatus)[input readEnum];
        if (TXPBCourseStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:12 value:value];
        }
        break;
      }
      case 104: {
        [self setHits:[input readInt64]];
        break;
      }
      case 113: {
        [self setScore:[input readDouble]];
        break;
      }
      case 120: {
        [self setScoreCnt:[input readInt64]];
        break;
      }
      case 128: {
        [self setStartOn:[input readInt64]];
        break;
      }
      case 136: {
        [self setEndOn:[input readInt64]];
        break;
      }
      case 146: {
        [self setTeacherDesc:[input readString]];
        break;
      }
      case 154: {
        [self setTeacherAvatar:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultCourse.hasId;
}
- (SInt64) id {
  return resultCourse.id;
}
- (TXPBCourseBuilder*) setId:(SInt64) value {
  resultCourse.hasId = YES;
  resultCourse.id = value;
  return self;
}
- (TXPBCourseBuilder*) clearId {
  resultCourse.hasId = NO;
  resultCourse.id = 0L;
  return self;
}
- (BOOL) hasCreateOn {
  return resultCourse.hasCreateOn;
}
- (SInt64) createOn {
  return resultCourse.createOn;
}
- (TXPBCourseBuilder*) setCreateOn:(SInt64) value {
  resultCourse.hasCreateOn = YES;
  resultCourse.createOn = value;
  return self;
}
- (TXPBCourseBuilder*) clearCreateOn {
  resultCourse.hasCreateOn = NO;
  resultCourse.createOn = 0L;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultCourse.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultCourse.updateOn;
}
- (TXPBCourseBuilder*) setUpdateOn:(SInt64) value {
  resultCourse.hasUpdateOn = YES;
  resultCourse.updateOn = value;
  return self;
}
- (TXPBCourseBuilder*) clearUpdateOn {
  resultCourse.hasUpdateOn = NO;
  resultCourse.updateOn = 0L;
  return self;
}
- (BOOL) hasTeacherId {
  return resultCourse.hasTeacherId;
}
- (SInt64) teacherId {
  return resultCourse.teacherId;
}
- (TXPBCourseBuilder*) setTeacherId:(SInt64) value {
  resultCourse.hasTeacherId = YES;
  resultCourse.teacherId = value;
  return self;
}
- (TXPBCourseBuilder*) clearTeacherId {
  resultCourse.hasTeacherId = NO;
  resultCourse.teacherId = 0L;
  return self;
}
- (BOOL) hasTeacherName {
  return resultCourse.hasTeacherName;
}
- (NSString*) teacherName {
  return resultCourse.teacherName;
}
- (TXPBCourseBuilder*) setTeacherName:(NSString*) value {
  resultCourse.hasTeacherName = YES;
  resultCourse.teacherName = value;
  return self;
}
- (TXPBCourseBuilder*) clearTeacherName {
  resultCourse.hasTeacherName = NO;
  resultCourse.teacherName = @"";
  return self;
}
- (BOOL) hasLabelId {
  return resultCourse.hasLabelId;
}
- (SInt64) labelId {
  return resultCourse.labelId;
}
- (TXPBCourseBuilder*) setLabelId:(SInt64) value {
  resultCourse.hasLabelId = YES;
  resultCourse.labelId = value;
  return self;
}
- (TXPBCourseBuilder*) clearLabelId {
  resultCourse.hasLabelId = NO;
  resultCourse.labelId = 0L;
  return self;
}
- (BOOL) hasLabelName {
  return resultCourse.hasLabelName;
}
- (NSString*) labelName {
  return resultCourse.labelName;
}
- (TXPBCourseBuilder*) setLabelName:(NSString*) value {
  resultCourse.hasLabelName = YES;
  resultCourse.labelName = value;
  return self;
}
- (TXPBCourseBuilder*) clearLabelName {
  resultCourse.hasLabelName = NO;
  resultCourse.labelName = @"";
  return self;
}
- (BOOL) hasType {
  return resultCourse.hasType;
}
- (TXPBCourseType) type {
  return resultCourse.type;
}
- (TXPBCourseBuilder*) setType:(TXPBCourseType) value {
  resultCourse.hasType = YES;
  resultCourse.type = value;
  return self;
}
- (TXPBCourseBuilder*) clearType {
  resultCourse.hasType = NO;
  resultCourse.type = TXPBCourseTypeTLive;
  return self;
}
- (BOOL) hasTitle {
  return resultCourse.hasTitle;
}
- (NSString*) title {
  return resultCourse.title;
}
- (TXPBCourseBuilder*) setTitle:(NSString*) value {
  resultCourse.hasTitle = YES;
  resultCourse.title = value;
  return self;
}
- (TXPBCourseBuilder*) clearTitle {
  resultCourse.hasTitle = NO;
  resultCourse.title = @"";
  return self;
}
- (BOOL) hasDescription {
  return resultCourse.hasDescription;
}
- (NSString*) pb_description {
  return resultCourse.pb_description;
}
- (TXPBCourseBuilder*) setDescription:(NSString*) value {
  resultCourse.hasDescription = YES;
  resultCourse.pb_description = value;
  return self;
}
- (TXPBCourseBuilder*) clearDescription {
  resultCourse.hasDescription = NO;
  resultCourse.pb_description = @"";
  return self;
}
- (BOOL) hasCover {
  return resultCourse.hasCover;
}
- (NSString*) cover {
  return resultCourse.cover;
}
- (TXPBCourseBuilder*) setCover:(NSString*) value {
  resultCourse.hasCover = YES;
  resultCourse.cover = value;
  return self;
}
- (TXPBCourseBuilder*) clearCover {
  resultCourse.hasCover = NO;
  resultCourse.cover = @"";
  return self;
}
- (BOOL) hasStatus {
  return resultCourse.hasStatus;
}
- (TXPBCourseStatus) status {
  return resultCourse.status;
}
- (TXPBCourseBuilder*) setStatus:(TXPBCourseStatus) value {
  resultCourse.hasStatus = YES;
  resultCourse.status = value;
  return self;
}
- (TXPBCourseBuilder*) clearStatus {
  resultCourse.hasStatus = NO;
  resultCourse.status = TXPBCourseStatusTDraft;
  return self;
}
- (BOOL) hasHits {
  return resultCourse.hasHits;
}
- (SInt64) hits {
  return resultCourse.hits;
}
- (TXPBCourseBuilder*) setHits:(SInt64) value {
  resultCourse.hasHits = YES;
  resultCourse.hits = value;
  return self;
}
- (TXPBCourseBuilder*) clearHits {
  resultCourse.hasHits = NO;
  resultCourse.hits = 0L;
  return self;
}
- (BOOL) hasScore {
  return resultCourse.hasScore;
}
- (Float64) score {
  return resultCourse.score;
}
- (TXPBCourseBuilder*) setScore:(Float64) value {
  resultCourse.hasScore = YES;
  resultCourse.score = value;
  return self;
}
- (TXPBCourseBuilder*) clearScore {
  resultCourse.hasScore = NO;
  resultCourse.score = 0;
  return self;
}
- (BOOL) hasScoreCnt {
  return resultCourse.hasScoreCnt;
}
- (SInt64) scoreCnt {
  return resultCourse.scoreCnt;
}
- (TXPBCourseBuilder*) setScoreCnt:(SInt64) value {
  resultCourse.hasScoreCnt = YES;
  resultCourse.scoreCnt = value;
  return self;
}
- (TXPBCourseBuilder*) clearScoreCnt {
  resultCourse.hasScoreCnt = NO;
  resultCourse.scoreCnt = 0L;
  return self;
}
- (BOOL) hasStartOn {
  return resultCourse.hasStartOn;
}
- (SInt64) startOn {
  return resultCourse.startOn;
}
- (TXPBCourseBuilder*) setStartOn:(SInt64) value {
  resultCourse.hasStartOn = YES;
  resultCourse.startOn = value;
  return self;
}
- (TXPBCourseBuilder*) clearStartOn {
  resultCourse.hasStartOn = NO;
  resultCourse.startOn = 0L;
  return self;
}
- (BOOL) hasEndOn {
  return resultCourse.hasEndOn;
}
- (SInt64) endOn {
  return resultCourse.endOn;
}
- (TXPBCourseBuilder*) setEndOn:(SInt64) value {
  resultCourse.hasEndOn = YES;
  resultCourse.endOn = value;
  return self;
}
- (TXPBCourseBuilder*) clearEndOn {
  resultCourse.hasEndOn = NO;
  resultCourse.endOn = 0L;
  return self;
}
- (BOOL) hasTeacherDesc {
  return resultCourse.hasTeacherDesc;
}
- (NSString*) teacherDesc {
  return resultCourse.teacherDesc;
}
- (TXPBCourseBuilder*) setTeacherDesc:(NSString*) value {
  resultCourse.hasTeacherDesc = YES;
  resultCourse.teacherDesc = value;
  return self;
}
- (TXPBCourseBuilder*) clearTeacherDesc {
  resultCourse.hasTeacherDesc = NO;
  resultCourse.teacherDesc = @"";
  return self;
}
- (BOOL) hasTeacherAvatar {
  return resultCourse.hasTeacherAvatar;
}
- (NSString*) teacherAvatar {
  return resultCourse.teacherAvatar;
}
- (TXPBCourseBuilder*) setTeacherAvatar:(NSString*) value {
  resultCourse.hasTeacherAvatar = YES;
  resultCourse.teacherAvatar = value;
  return self;
}
- (TXPBCourseBuilder*) clearTeacherAvatar {
  resultCourse.hasTeacherAvatar = NO;
  resultCourse.teacherAvatar = @"";
  return self;
}
@end

@interface TXPBCourseLesson ()
@property SInt64 id;
@property SInt64 createOn;
@property SInt64 updateOn;
@property SInt64 courseId;
@property (strong) NSString* title;
@property SInt64 startOn;
@property SInt64 endOn;
@property (strong) NSString* videoUrl;
@property SInt64 hits;
@property SInt64 liveHits;
@property TXPBLessonLiveStatus liveStatus;
@property (strong) TXPBCourse* course;
@property (strong) NSString* pic;
@property SInt32 duration;
@property SInt32 resourceType;
@end

@implementation TXPBCourseLesson

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
- (BOOL) hasCourseId {
  return !!hasCourseId_;
}
- (void) setHasCourseId:(BOOL) _value_ {
  hasCourseId_ = !!_value_;
}
@synthesize courseId;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasStartOn {
  return !!hasStartOn_;
}
- (void) setHasStartOn:(BOOL) _value_ {
  hasStartOn_ = !!_value_;
}
@synthesize startOn;
- (BOOL) hasEndOn {
  return !!hasEndOn_;
}
- (void) setHasEndOn:(BOOL) _value_ {
  hasEndOn_ = !!_value_;
}
@synthesize endOn;
- (BOOL) hasVideoUrl {
  return !!hasVideoUrl_;
}
- (void) setHasVideoUrl:(BOOL) _value_ {
  hasVideoUrl_ = !!_value_;
}
@synthesize videoUrl;
- (BOOL) hasHits {
  return !!hasHits_;
}
- (void) setHasHits:(BOOL) _value_ {
  hasHits_ = !!_value_;
}
@synthesize hits;
- (BOOL) hasLiveHits {
  return !!hasLiveHits_;
}
- (void) setHasLiveHits:(BOOL) _value_ {
  hasLiveHits_ = !!_value_;
}
@synthesize liveHits;
- (BOOL) hasLiveStatus {
  return !!hasLiveStatus_;
}
- (void) setHasLiveStatus:(BOOL) _value_ {
  hasLiveStatus_ = !!_value_;
}
@synthesize liveStatus;
- (BOOL) hasCourse {
  return !!hasCourse_;
}
- (void) setHasCourse:(BOOL) _value_ {
  hasCourse_ = !!_value_;
}
@synthesize course;
- (BOOL) hasPic {
  return !!hasPic_;
}
- (void) setHasPic:(BOOL) _value_ {
  hasPic_ = !!_value_;
}
@synthesize pic;
- (BOOL) hasDuration {
  return !!hasDuration_;
}
- (void) setHasDuration:(BOOL) _value_ {
  hasDuration_ = !!_value_;
}
@synthesize duration;
- (BOOL) hasResourceType {
  return !!hasResourceType_;
}
- (void) setHasResourceType:(BOOL) _value_ {
  hasResourceType_ = !!_value_;
}
@synthesize resourceType;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.createOn = 0L;
    self.updateOn = 0L;
    self.courseId = 0L;
    self.title = @"";
    self.startOn = 0L;
    self.endOn = 0L;
    self.videoUrl = @"";
    self.hits = 0L;
    self.liveHits = 0L;
    self.liveStatus = TXPBLessonLiveStatusTNotStart;
    self.course = [TXPBCourse defaultInstance];
    self.pic = @"";
    self.duration = 0;
    self.resourceType = 0;
  }
  return self;
}
static TXPBCourseLesson* defaultTXPBCourseLessonInstance = nil;
+ (void) initialize {
  if (self == [TXPBCourseLesson class]) {
    defaultTXPBCourseLessonInstance = [[TXPBCourseLesson alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCourseLessonInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCourseLessonInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUpdateOn) {
    return NO;
  }
  if (!self.hasCourseId) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasVideoUrl) {
    return NO;
  }
  if (!self.hasHits) {
    return NO;
  }
  if (!self.hasLiveHits) {
    return NO;
  }
  if (!self.hasPic) {
    return NO;
  }
  if (!self.hasDuration) {
    return NO;
  }
  if (self.hasCourse) {
    if (!self.course.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasCreateOn) {
    [output writeInt64:2 value:self.createOn];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:3 value:self.updateOn];
  }
  if (self.hasCourseId) {
    [output writeInt64:4 value:self.courseId];
  }
  if (self.hasTitle) {
    [output writeString:5 value:self.title];
  }
  if (self.hasStartOn) {
    [output writeInt64:6 value:self.startOn];
  }
  if (self.hasEndOn) {
    [output writeInt64:7 value:self.endOn];
  }
  if (self.hasVideoUrl) {
    [output writeString:8 value:self.videoUrl];
  }
  if (self.hasHits) {
    [output writeInt64:9 value:self.hits];
  }
  if (self.hasLiveHits) {
    [output writeInt64:10 value:self.liveHits];
  }
  if (self.hasLiveStatus) {
    [output writeEnum:11 value:self.liveStatus];
  }
  if (self.hasCourse) {
    [output writeMessage:12 value:self.course];
  }
  if (self.hasPic) {
    [output writeString:13 value:self.pic];
  }
  if (self.hasDuration) {
    [output writeInt32:14 value:self.duration];
  }
  if (self.hasResourceType) {
    [output writeInt32:15 value:self.resourceType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(2, self.createOn);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(3, self.updateOn);
  }
  if (self.hasCourseId) {
    size_ += computeInt64Size(4, self.courseId);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(5, self.title);
  }
  if (self.hasStartOn) {
    size_ += computeInt64Size(6, self.startOn);
  }
  if (self.hasEndOn) {
    size_ += computeInt64Size(7, self.endOn);
  }
  if (self.hasVideoUrl) {
    size_ += computeStringSize(8, self.videoUrl);
  }
  if (self.hasHits) {
    size_ += computeInt64Size(9, self.hits);
  }
  if (self.hasLiveHits) {
    size_ += computeInt64Size(10, self.liveHits);
  }
  if (self.hasLiveStatus) {
    size_ += computeEnumSize(11, self.liveStatus);
  }
  if (self.hasCourse) {
    size_ += computeMessageSize(12, self.course);
  }
  if (self.hasPic) {
    size_ += computeStringSize(13, self.pic);
  }
  if (self.hasDuration) {
    size_ += computeInt32Size(14, self.duration);
  }
  if (self.hasResourceType) {
    size_ += computeInt32Size(15, self.resourceType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCourseLesson*) parseFromData:(NSData*) data {
  return (TXPBCourseLesson*)[[[TXPBCourseLesson builder] mergeFromData:data] build];
}
+ (TXPBCourseLesson*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourseLesson*)[[[TXPBCourseLesson builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourseLesson*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCourseLesson*)[[[TXPBCourseLesson builder] mergeFromInputStream:input] build];
}
+ (TXPBCourseLesson*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourseLesson*)[[[TXPBCourseLesson builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourseLesson*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCourseLesson*)[[[TXPBCourseLesson builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCourseLesson*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourseLesson*)[[[TXPBCourseLesson builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourseLessonBuilder*) builder {
  return [[TXPBCourseLessonBuilder alloc] init];
}
+ (TXPBCourseLessonBuilder*) builderWithPrototype:(TXPBCourseLesson*) prototype {
  return [[TXPBCourseLesson builder] mergeFrom:prototype];
}
- (TXPBCourseLessonBuilder*) builder {
  return [TXPBCourseLesson builder];
}
- (TXPBCourseLessonBuilder*) toBuilder {
  return [TXPBCourseLesson builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  if (self.hasCourseId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseId", [NSNumber numberWithLongLong:self.courseId]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasStartOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"startOn", [NSNumber numberWithLongLong:self.startOn]];
  }
  if (self.hasEndOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endOn", [NSNumber numberWithLongLong:self.endOn]];
  }
  if (self.hasVideoUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"videoUrl", self.videoUrl];
  }
  if (self.hasHits) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hits", [NSNumber numberWithLongLong:self.hits]];
  }
  if (self.hasLiveHits) {
    [output appendFormat:@"%@%@: %@\n", indent, @"liveHits", [NSNumber numberWithLongLong:self.liveHits]];
  }
  if (self.hasLiveStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"liveStatus", NSStringFromTXPBLessonLiveStatus(self.liveStatus)];
  }
  if (self.hasCourse) {
    [output appendFormat:@"%@%@ {\n", indent, @"course"];
    [self.course writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPic) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pic", self.pic];
  }
  if (self.hasDuration) {
    [output appendFormat:@"%@%@: %@\n", indent, @"duration", [NSNumber numberWithInteger:self.duration]];
  }
  if (self.hasResourceType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceType", [NSNumber numberWithInteger:self.resourceType]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  if (self.hasCourseId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseId] forKey: @"courseId"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasStartOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.startOn] forKey: @"startOn"];
  }
  if (self.hasEndOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.endOn] forKey: @"endOn"];
  }
  if (self.hasVideoUrl) {
    [dictionary setObject: self.videoUrl forKey: @"videoUrl"];
  }
  if (self.hasHits) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.hits] forKey: @"hits"];
  }
  if (self.hasLiveHits) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.liveHits] forKey: @"liveHits"];
  }
  if (self.hasLiveStatus) {
    [dictionary setObject: @(self.liveStatus) forKey: @"liveStatus"];
  }
  if (self.hasCourse) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.course storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"course"];
  }
  if (self.hasPic) {
    [dictionary setObject: self.pic forKey: @"pic"];
  }
  if (self.hasDuration) {
    [dictionary setObject: [NSNumber numberWithInteger:self.duration] forKey: @"duration"];
  }
  if (self.hasResourceType) {
    [dictionary setObject: [NSNumber numberWithInteger:self.resourceType] forKey: @"resourceType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCourseLesson class]]) {
    return NO;
  }
  TXPBCourseLesson *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      self.hasCourseId == otherMessage.hasCourseId &&
      (!self.hasCourseId || self.courseId == otherMessage.courseId) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasStartOn == otherMessage.hasStartOn &&
      (!self.hasStartOn || self.startOn == otherMessage.startOn) &&
      self.hasEndOn == otherMessage.hasEndOn &&
      (!self.hasEndOn || self.endOn == otherMessage.endOn) &&
      self.hasVideoUrl == otherMessage.hasVideoUrl &&
      (!self.hasVideoUrl || [self.videoUrl isEqual:otherMessage.videoUrl]) &&
      self.hasHits == otherMessage.hasHits &&
      (!self.hasHits || self.hits == otherMessage.hits) &&
      self.hasLiveHits == otherMessage.hasLiveHits &&
      (!self.hasLiveHits || self.liveHits == otherMessage.liveHits) &&
      self.hasLiveStatus == otherMessage.hasLiveStatus &&
      (!self.hasLiveStatus || self.liveStatus == otherMessage.liveStatus) &&
      self.hasCourse == otherMessage.hasCourse &&
      (!self.hasCourse || [self.course isEqual:otherMessage.course]) &&
      self.hasPic == otherMessage.hasPic &&
      (!self.hasPic || [self.pic isEqual:otherMessage.pic]) &&
      self.hasDuration == otherMessage.hasDuration &&
      (!self.hasDuration || self.duration == otherMessage.duration) &&
      self.hasResourceType == otherMessage.hasResourceType &&
      (!self.hasResourceType || self.resourceType == otherMessage.resourceType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  if (self.hasCourseId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseId] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasStartOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.startOn] hash];
  }
  if (self.hasEndOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.endOn] hash];
  }
  if (self.hasVideoUrl) {
    hashCode = hashCode * 31 + [self.videoUrl hash];
  }
  if (self.hasHits) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.hits] hash];
  }
  if (self.hasLiveHits) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.liveHits] hash];
  }
  if (self.hasLiveStatus) {
    hashCode = hashCode * 31 + self.liveStatus;
  }
  if (self.hasCourse) {
    hashCode = hashCode * 31 + [self.course hash];
  }
  if (self.hasPic) {
    hashCode = hashCode * 31 + [self.pic hash];
  }
  if (self.hasDuration) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.duration] hash];
  }
  if (self.hasResourceType) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.resourceType] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCourseLessonBuilder()
@property (strong) TXPBCourseLesson* resultCourseLesson;
@end

@implementation TXPBCourseLessonBuilder
@synthesize resultCourseLesson;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCourseLesson = [[TXPBCourseLesson alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCourseLesson;
}
- (TXPBCourseLessonBuilder*) clear {
  self.resultCourseLesson = [[TXPBCourseLesson alloc] init];
  return self;
}
- (TXPBCourseLessonBuilder*) clone {
  return [TXPBCourseLesson builderWithPrototype:resultCourseLesson];
}
- (TXPBCourseLesson*) defaultInstance {
  return [TXPBCourseLesson defaultInstance];
}
- (TXPBCourseLesson*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCourseLesson*) buildPartial {
  TXPBCourseLesson* returnMe = resultCourseLesson;
  self.resultCourseLesson = nil;
  return returnMe;
}
- (TXPBCourseLessonBuilder*) mergeFrom:(TXPBCourseLesson*) other {
  if (other == [TXPBCourseLesson defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.hasCourseId) {
    [self setCourseId:other.courseId];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasStartOn) {
    [self setStartOn:other.startOn];
  }
  if (other.hasEndOn) {
    [self setEndOn:other.endOn];
  }
  if (other.hasVideoUrl) {
    [self setVideoUrl:other.videoUrl];
  }
  if (other.hasHits) {
    [self setHits:other.hits];
  }
  if (other.hasLiveHits) {
    [self setLiveHits:other.liveHits];
  }
  if (other.hasLiveStatus) {
    [self setLiveStatus:other.liveStatus];
  }
  if (other.hasCourse) {
    [self mergeCourse:other.course];
  }
  if (other.hasPic) {
    [self setPic:other.pic];
  }
  if (other.hasDuration) {
    [self setDuration:other.duration];
  }
  if (other.hasResourceType) {
    [self setResourceType:other.resourceType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCourseLessonBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCourseLessonBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 24: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 32: {
        [self setCourseId:[input readInt64]];
        break;
      }
      case 42: {
        [self setTitle:[input readString]];
        break;
      }
      case 48: {
        [self setStartOn:[input readInt64]];
        break;
      }
      case 56: {
        [self setEndOn:[input readInt64]];
        break;
      }
      case 66: {
        [self setVideoUrl:[input readString]];
        break;
      }
      case 72: {
        [self setHits:[input readInt64]];
        break;
      }
      case 80: {
        [self setLiveHits:[input readInt64]];
        break;
      }
      case 88: {
        TXPBLessonLiveStatus value = (TXPBLessonLiveStatus)[input readEnum];
        if (TXPBLessonLiveStatusIsValidValue(value)) {
          [self setLiveStatus:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
      case 98: {
        TXPBCourseBuilder* subBuilder = [TXPBCourse builder];
        if (self.hasCourse) {
          [subBuilder mergeFrom:self.course];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCourse:[subBuilder buildPartial]];
        break;
      }
      case 106: {
        [self setPic:[input readString]];
        break;
      }
      case 112: {
        [self setDuration:[input readInt32]];
        break;
      }
      case 120: {
        [self setResourceType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultCourseLesson.hasId;
}
- (SInt64) id {
  return resultCourseLesson.id;
}
- (TXPBCourseLessonBuilder*) setId:(SInt64) value {
  resultCourseLesson.hasId = YES;
  resultCourseLesson.id = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearId {
  resultCourseLesson.hasId = NO;
  resultCourseLesson.id = 0L;
  return self;
}
- (BOOL) hasCreateOn {
  return resultCourseLesson.hasCreateOn;
}
- (SInt64) createOn {
  return resultCourseLesson.createOn;
}
- (TXPBCourseLessonBuilder*) setCreateOn:(SInt64) value {
  resultCourseLesson.hasCreateOn = YES;
  resultCourseLesson.createOn = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearCreateOn {
  resultCourseLesson.hasCreateOn = NO;
  resultCourseLesson.createOn = 0L;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultCourseLesson.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultCourseLesson.updateOn;
}
- (TXPBCourseLessonBuilder*) setUpdateOn:(SInt64) value {
  resultCourseLesson.hasUpdateOn = YES;
  resultCourseLesson.updateOn = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearUpdateOn {
  resultCourseLesson.hasUpdateOn = NO;
  resultCourseLesson.updateOn = 0L;
  return self;
}
- (BOOL) hasCourseId {
  return resultCourseLesson.hasCourseId;
}
- (SInt64) courseId {
  return resultCourseLesson.courseId;
}
- (TXPBCourseLessonBuilder*) setCourseId:(SInt64) value {
  resultCourseLesson.hasCourseId = YES;
  resultCourseLesson.courseId = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearCourseId {
  resultCourseLesson.hasCourseId = NO;
  resultCourseLesson.courseId = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultCourseLesson.hasTitle;
}
- (NSString*) title {
  return resultCourseLesson.title;
}
- (TXPBCourseLessonBuilder*) setTitle:(NSString*) value {
  resultCourseLesson.hasTitle = YES;
  resultCourseLesson.title = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearTitle {
  resultCourseLesson.hasTitle = NO;
  resultCourseLesson.title = @"";
  return self;
}
- (BOOL) hasStartOn {
  return resultCourseLesson.hasStartOn;
}
- (SInt64) startOn {
  return resultCourseLesson.startOn;
}
- (TXPBCourseLessonBuilder*) setStartOn:(SInt64) value {
  resultCourseLesson.hasStartOn = YES;
  resultCourseLesson.startOn = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearStartOn {
  resultCourseLesson.hasStartOn = NO;
  resultCourseLesson.startOn = 0L;
  return self;
}
- (BOOL) hasEndOn {
  return resultCourseLesson.hasEndOn;
}
- (SInt64) endOn {
  return resultCourseLesson.endOn;
}
- (TXPBCourseLessonBuilder*) setEndOn:(SInt64) value {
  resultCourseLesson.hasEndOn = YES;
  resultCourseLesson.endOn = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearEndOn {
  resultCourseLesson.hasEndOn = NO;
  resultCourseLesson.endOn = 0L;
  return self;
}
- (BOOL) hasVideoUrl {
  return resultCourseLesson.hasVideoUrl;
}
- (NSString*) videoUrl {
  return resultCourseLesson.videoUrl;
}
- (TXPBCourseLessonBuilder*) setVideoUrl:(NSString*) value {
  resultCourseLesson.hasVideoUrl = YES;
  resultCourseLesson.videoUrl = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearVideoUrl {
  resultCourseLesson.hasVideoUrl = NO;
  resultCourseLesson.videoUrl = @"";
  return self;
}
- (BOOL) hasHits {
  return resultCourseLesson.hasHits;
}
- (SInt64) hits {
  return resultCourseLesson.hits;
}
- (TXPBCourseLessonBuilder*) setHits:(SInt64) value {
  resultCourseLesson.hasHits = YES;
  resultCourseLesson.hits = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearHits {
  resultCourseLesson.hasHits = NO;
  resultCourseLesson.hits = 0L;
  return self;
}
- (BOOL) hasLiveHits {
  return resultCourseLesson.hasLiveHits;
}
- (SInt64) liveHits {
  return resultCourseLesson.liveHits;
}
- (TXPBCourseLessonBuilder*) setLiveHits:(SInt64) value {
  resultCourseLesson.hasLiveHits = YES;
  resultCourseLesson.liveHits = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearLiveHits {
  resultCourseLesson.hasLiveHits = NO;
  resultCourseLesson.liveHits = 0L;
  return self;
}
- (BOOL) hasLiveStatus {
  return resultCourseLesson.hasLiveStatus;
}
- (TXPBLessonLiveStatus) liveStatus {
  return resultCourseLesson.liveStatus;
}
- (TXPBCourseLessonBuilder*) setLiveStatus:(TXPBLessonLiveStatus) value {
  resultCourseLesson.hasLiveStatus = YES;
  resultCourseLesson.liveStatus = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearLiveStatus {
  resultCourseLesson.hasLiveStatus = NO;
  resultCourseLesson.liveStatus = TXPBLessonLiveStatusTNotStart;
  return self;
}
- (BOOL) hasCourse {
  return resultCourseLesson.hasCourse;
}
- (TXPBCourse*) course {
  return resultCourseLesson.course;
}
- (TXPBCourseLessonBuilder*) setCourse:(TXPBCourse*) value {
  resultCourseLesson.hasCourse = YES;
  resultCourseLesson.course = value;
  return self;
}
- (TXPBCourseLessonBuilder*) setCourseBuilder:(TXPBCourseBuilder*) builderForValue {
  return [self setCourse:[builderForValue build]];
}
- (TXPBCourseLessonBuilder*) mergeCourse:(TXPBCourse*) value {
  if (resultCourseLesson.hasCourse &&
      resultCourseLesson.course != [TXPBCourse defaultInstance]) {
    resultCourseLesson.course =
      [[[TXPBCourse builderWithPrototype:resultCourseLesson.course] mergeFrom:value] buildPartial];
  } else {
    resultCourseLesson.course = value;
  }
  resultCourseLesson.hasCourse = YES;
  return self;
}
- (TXPBCourseLessonBuilder*) clearCourse {
  resultCourseLesson.hasCourse = NO;
  resultCourseLesson.course = [TXPBCourse defaultInstance];
  return self;
}
- (BOOL) hasPic {
  return resultCourseLesson.hasPic;
}
- (NSString*) pic {
  return resultCourseLesson.pic;
}
- (TXPBCourseLessonBuilder*) setPic:(NSString*) value {
  resultCourseLesson.hasPic = YES;
  resultCourseLesson.pic = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearPic {
  resultCourseLesson.hasPic = NO;
  resultCourseLesson.pic = @"";
  return self;
}
- (BOOL) hasDuration {
  return resultCourseLesson.hasDuration;
}
- (SInt32) duration {
  return resultCourseLesson.duration;
}
- (TXPBCourseLessonBuilder*) setDuration:(SInt32) value {
  resultCourseLesson.hasDuration = YES;
  resultCourseLesson.duration = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearDuration {
  resultCourseLesson.hasDuration = NO;
  resultCourseLesson.duration = 0;
  return self;
}
- (BOOL) hasResourceType {
  return resultCourseLesson.hasResourceType;
}
- (SInt32) resourceType {
  return resultCourseLesson.resourceType;
}
- (TXPBCourseLessonBuilder*) setResourceType:(SInt32) value {
  resultCourseLesson.hasResourceType = YES;
  resultCourseLesson.resourceType = value;
  return self;
}
- (TXPBCourseLessonBuilder*) clearResourceType {
  resultCourseLesson.hasResourceType = NO;
  resultCourseLesson.resourceType = 0;
  return self;
}
@end

@interface TXPBCourseComment ()
@property SInt64 id;
@property SInt64 createOn;
@property SInt64 updateOn;
@property SInt64 courseId;
@property (strong) NSString* content;
@property SInt32 score;
@property SInt64 userId;
@property (strong) NSString* userName;
@property (strong) NSString* userAvatar;
@end

@implementation TXPBCourseComment

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
- (BOOL) hasCourseId {
  return !!hasCourseId_;
}
- (void) setHasCourseId:(BOOL) _value_ {
  hasCourseId_ = !!_value_;
}
@synthesize courseId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasScore {
  return !!hasScore_;
}
- (void) setHasScore:(BOOL) _value_ {
  hasScore_ = !!_value_;
}
@synthesize score;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasUserAvatar {
  return !!hasUserAvatar_;
}
- (void) setHasUserAvatar:(BOOL) _value_ {
  hasUserAvatar_ = !!_value_;
}
@synthesize userAvatar;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.createOn = 0L;
    self.updateOn = 0L;
    self.courseId = 0L;
    self.content = @"";
    self.score = 0;
    self.userId = 0L;
    self.userName = @"";
    self.userAvatar = @"";
  }
  return self;
}
static TXPBCourseComment* defaultTXPBCourseCommentInstance = nil;
+ (void) initialize {
  if (self == [TXPBCourseComment class]) {
    defaultTXPBCourseCommentInstance = [[TXPBCourseComment alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCourseCommentInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCourseCommentInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUpdateOn) {
    return NO;
  }
  if (!self.hasCourseId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasScore) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasCreateOn) {
    [output writeInt64:2 value:self.createOn];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:3 value:self.updateOn];
  }
  if (self.hasCourseId) {
    [output writeInt64:4 value:self.courseId];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasScore) {
    [output writeInt32:6 value:self.score];
  }
  if (self.hasUserId) {
    [output writeInt64:7 value:self.userId];
  }
  if (self.hasUserName) {
    [output writeString:8 value:self.userName];
  }
  if (self.hasUserAvatar) {
    [output writeString:9 value:self.userAvatar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(2, self.createOn);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(3, self.updateOn);
  }
  if (self.hasCourseId) {
    size_ += computeInt64Size(4, self.courseId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  if (self.hasScore) {
    size_ += computeInt32Size(6, self.score);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(7, self.userId);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(8, self.userName);
  }
  if (self.hasUserAvatar) {
    size_ += computeStringSize(9, self.userAvatar);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCourseComment*) parseFromData:(NSData*) data {
  return (TXPBCourseComment*)[[[TXPBCourseComment builder] mergeFromData:data] build];
}
+ (TXPBCourseComment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourseComment*)[[[TXPBCourseComment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourseComment*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCourseComment*)[[[TXPBCourseComment builder] mergeFromInputStream:input] build];
}
+ (TXPBCourseComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourseComment*)[[[TXPBCourseComment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourseComment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCourseComment*)[[[TXPBCourseComment builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCourseComment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCourseComment*)[[[TXPBCourseComment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCourseCommentBuilder*) builder {
  return [[TXPBCourseCommentBuilder alloc] init];
}
+ (TXPBCourseCommentBuilder*) builderWithPrototype:(TXPBCourseComment*) prototype {
  return [[TXPBCourseComment builder] mergeFrom:prototype];
}
- (TXPBCourseCommentBuilder*) builder {
  return [TXPBCourseComment builder];
}
- (TXPBCourseCommentBuilder*) toBuilder {
  return [TXPBCourseComment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  if (self.hasCourseId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseId", [NSNumber numberWithLongLong:self.courseId]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"score", [NSNumber numberWithInteger:self.score]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasUserAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userAvatar", self.userAvatar];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  if (self.hasCourseId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseId] forKey: @"courseId"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasScore) {
    [dictionary setObject: [NSNumber numberWithInteger:self.score] forKey: @"score"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  if (self.hasUserAvatar) {
    [dictionary setObject: self.userAvatar forKey: @"userAvatar"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCourseComment class]]) {
    return NO;
  }
  TXPBCourseComment *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      self.hasCourseId == otherMessage.hasCourseId &&
      (!self.hasCourseId || self.courseId == otherMessage.courseId) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasScore == otherMessage.hasScore &&
      (!self.hasScore || self.score == otherMessage.score) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasUserAvatar == otherMessage.hasUserAvatar &&
      (!self.hasUserAvatar || [self.userAvatar isEqual:otherMessage.userAvatar]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  if (self.hasCourseId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseId] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.score] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasUserAvatar) {
    hashCode = hashCode * 31 + [self.userAvatar hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCourseCommentBuilder()
@property (strong) TXPBCourseComment* resultCourseComment;
@end

@implementation TXPBCourseCommentBuilder
@synthesize resultCourseComment;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCourseComment = [[TXPBCourseComment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCourseComment;
}
- (TXPBCourseCommentBuilder*) clear {
  self.resultCourseComment = [[TXPBCourseComment alloc] init];
  return self;
}
- (TXPBCourseCommentBuilder*) clone {
  return [TXPBCourseComment builderWithPrototype:resultCourseComment];
}
- (TXPBCourseComment*) defaultInstance {
  return [TXPBCourseComment defaultInstance];
}
- (TXPBCourseComment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCourseComment*) buildPartial {
  TXPBCourseComment* returnMe = resultCourseComment;
  self.resultCourseComment = nil;
  return returnMe;
}
- (TXPBCourseCommentBuilder*) mergeFrom:(TXPBCourseComment*) other {
  if (other == [TXPBCourseComment defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.hasCourseId) {
    [self setCourseId:other.courseId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasScore) {
    [self setScore:other.score];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasUserAvatar) {
    [self setUserAvatar:other.userAvatar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCourseCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCourseCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 24: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 32: {
        [self setCourseId:[input readInt64]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 48: {
        [self setScore:[input readInt32]];
        break;
      }
      case 56: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 66: {
        [self setUserName:[input readString]];
        break;
      }
      case 74: {
        [self setUserAvatar:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultCourseComment.hasId;
}
- (SInt64) id {
  return resultCourseComment.id;
}
- (TXPBCourseCommentBuilder*) setId:(SInt64) value {
  resultCourseComment.hasId = YES;
  resultCourseComment.id = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearId {
  resultCourseComment.hasId = NO;
  resultCourseComment.id = 0L;
  return self;
}
- (BOOL) hasCreateOn {
  return resultCourseComment.hasCreateOn;
}
- (SInt64) createOn {
  return resultCourseComment.createOn;
}
- (TXPBCourseCommentBuilder*) setCreateOn:(SInt64) value {
  resultCourseComment.hasCreateOn = YES;
  resultCourseComment.createOn = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearCreateOn {
  resultCourseComment.hasCreateOn = NO;
  resultCourseComment.createOn = 0L;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultCourseComment.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultCourseComment.updateOn;
}
- (TXPBCourseCommentBuilder*) setUpdateOn:(SInt64) value {
  resultCourseComment.hasUpdateOn = YES;
  resultCourseComment.updateOn = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearUpdateOn {
  resultCourseComment.hasUpdateOn = NO;
  resultCourseComment.updateOn = 0L;
  return self;
}
- (BOOL) hasCourseId {
  return resultCourseComment.hasCourseId;
}
- (SInt64) courseId {
  return resultCourseComment.courseId;
}
- (TXPBCourseCommentBuilder*) setCourseId:(SInt64) value {
  resultCourseComment.hasCourseId = YES;
  resultCourseComment.courseId = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearCourseId {
  resultCourseComment.hasCourseId = NO;
  resultCourseComment.courseId = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultCourseComment.hasContent;
}
- (NSString*) content {
  return resultCourseComment.content;
}
- (TXPBCourseCommentBuilder*) setContent:(NSString*) value {
  resultCourseComment.hasContent = YES;
  resultCourseComment.content = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearContent {
  resultCourseComment.hasContent = NO;
  resultCourseComment.content = @"";
  return self;
}
- (BOOL) hasScore {
  return resultCourseComment.hasScore;
}
- (SInt32) score {
  return resultCourseComment.score;
}
- (TXPBCourseCommentBuilder*) setScore:(SInt32) value {
  resultCourseComment.hasScore = YES;
  resultCourseComment.score = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearScore {
  resultCourseComment.hasScore = NO;
  resultCourseComment.score = 0;
  return self;
}
- (BOOL) hasUserId {
  return resultCourseComment.hasUserId;
}
- (SInt64) userId {
  return resultCourseComment.userId;
}
- (TXPBCourseCommentBuilder*) setUserId:(SInt64) value {
  resultCourseComment.hasUserId = YES;
  resultCourseComment.userId = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearUserId {
  resultCourseComment.hasUserId = NO;
  resultCourseComment.userId = 0L;
  return self;
}
- (BOOL) hasUserName {
  return resultCourseComment.hasUserName;
}
- (NSString*) userName {
  return resultCourseComment.userName;
}
- (TXPBCourseCommentBuilder*) setUserName:(NSString*) value {
  resultCourseComment.hasUserName = YES;
  resultCourseComment.userName = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearUserName {
  resultCourseComment.hasUserName = NO;
  resultCourseComment.userName = @"";
  return self;
}
- (BOOL) hasUserAvatar {
  return resultCourseComment.hasUserAvatar;
}
- (NSString*) userAvatar {
  return resultCourseComment.userAvatar;
}
- (TXPBCourseCommentBuilder*) setUserAvatar:(NSString*) value {
  resultCourseComment.hasUserAvatar = YES;
  resultCourseComment.userAvatar = value;
  return self;
}
- (TXPBCourseCommentBuilder*) clearUserAvatar {
  resultCourseComment.hasUserAvatar = NO;
  resultCourseComment.userAvatar = @"";
  return self;
}
@end

@interface TXPBFetchCourseListRequest ()
@property SInt32 page;
@end

@implementation TXPBFetchCourseListRequest

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
  }
  return self;
}
static TXPBFetchCourseListRequest* defaultTXPBFetchCourseListRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseListRequest class]) {
    defaultTXPBFetchCourseListRequestInstance = [[TXPBFetchCourseListRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseListRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseListRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseListRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseListRequest*)[[[TXPBFetchCourseListRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseListRequest*)[[[TXPBFetchCourseListRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseListRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseListRequest*)[[[TXPBFetchCourseListRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseListRequest*)[[[TXPBFetchCourseListRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseListRequest*)[[[TXPBFetchCourseListRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseListRequest*)[[[TXPBFetchCourseListRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseListRequestBuilder*) builder {
  return [[TXPBFetchCourseListRequestBuilder alloc] init];
}
+ (TXPBFetchCourseListRequestBuilder*) builderWithPrototype:(TXPBFetchCourseListRequest*) prototype {
  return [[TXPBFetchCourseListRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCourseListRequestBuilder*) builder {
  return [TXPBFetchCourseListRequest builder];
}
- (TXPBFetchCourseListRequestBuilder*) toBuilder {
  return [TXPBFetchCourseListRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseListRequest class]]) {
    return NO;
  }
  TXPBFetchCourseListRequest *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseListRequestBuilder()
@property (strong) TXPBFetchCourseListRequest* resultFetchCourseListRequest;
@end

@implementation TXPBFetchCourseListRequestBuilder
@synthesize resultFetchCourseListRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseListRequest = [[TXPBFetchCourseListRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseListRequest;
}
- (TXPBFetchCourseListRequestBuilder*) clear {
  self.resultFetchCourseListRequest = [[TXPBFetchCourseListRequest alloc] init];
  return self;
}
- (TXPBFetchCourseListRequestBuilder*) clone {
  return [TXPBFetchCourseListRequest builderWithPrototype:resultFetchCourseListRequest];
}
- (TXPBFetchCourseListRequest*) defaultInstance {
  return [TXPBFetchCourseListRequest defaultInstance];
}
- (TXPBFetchCourseListRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseListRequest*) buildPartial {
  TXPBFetchCourseListRequest* returnMe = resultFetchCourseListRequest;
  self.resultFetchCourseListRequest = nil;
  return returnMe;
}
- (TXPBFetchCourseListRequestBuilder*) mergeFrom:(TXPBFetchCourseListRequest*) other {
  if (other == [TXPBFetchCourseListRequest defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return resultFetchCourseListRequest.hasPage;
}
- (SInt32) page {
  return resultFetchCourseListRequest.page;
}
- (TXPBFetchCourseListRequestBuilder*) setPage:(SInt32) value {
  resultFetchCourseListRequest.hasPage = YES;
  resultFetchCourseListRequest.page = value;
  return self;
}
- (TXPBFetchCourseListRequestBuilder*) clearPage {
  resultFetchCourseListRequest.hasPage = NO;
  resultFetchCourseListRequest.page = 0;
  return self;
}
@end

@interface TXPBFetchCourseListResponse ()
@property (strong) NSMutableArray * coursesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchCourseListResponse

@synthesize coursesArray;
@dynamic courses;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchCourseListResponse* defaultTXPBFetchCourseListResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseListResponse class]) {
    defaultTXPBFetchCourseListResponseInstance = [[TXPBFetchCourseListResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseListResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseListResponseInstance;
}
- (NSArray *)courses {
  return coursesArray;
}
- (TXPBCourse*)coursesAtIndex:(NSUInteger)index {
  return [coursesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitcourses = YES;
   [self.courses enumerateObjectsUsingBlock:^(TXPBCourse *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcourses = NO;
      *stop = YES;
    }
  }];
  if (!isInitcourses) return isInitcourses;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.coursesArray enumerateObjectsUsingBlock:^(TXPBCourse *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.coursesArray enumerateObjectsUsingBlock:^(TXPBCourse *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseListResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseListResponse*)[[[TXPBFetchCourseListResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseListResponse*)[[[TXPBFetchCourseListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseListResponse*)[[[TXPBFetchCourseListResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseListResponse*)[[[TXPBFetchCourseListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseListResponse*)[[[TXPBFetchCourseListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseListResponse*)[[[TXPBFetchCourseListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseListResponseBuilder*) builder {
  return [[TXPBFetchCourseListResponseBuilder alloc] init];
}
+ (TXPBFetchCourseListResponseBuilder*) builderWithPrototype:(TXPBFetchCourseListResponse*) prototype {
  return [[TXPBFetchCourseListResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCourseListResponseBuilder*) builder {
  return [TXPBFetchCourseListResponse builder];
}
- (TXPBFetchCourseListResponseBuilder*) toBuilder {
  return [TXPBFetchCourseListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.coursesArray enumerateObjectsUsingBlock:^(TXPBCourse *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"courses"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCourse* element in self.coursesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"courses"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseListResponse class]]) {
    return NO;
  }
  TXPBFetchCourseListResponse *otherMessage = other;
  return
      [self.coursesArray isEqualToArray:otherMessage.coursesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.coursesArray enumerateObjectsUsingBlock:^(TXPBCourse *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseListResponseBuilder()
@property (strong) TXPBFetchCourseListResponse* resultFetchCourseListResponse;
@end

@implementation TXPBFetchCourseListResponseBuilder
@synthesize resultFetchCourseListResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseListResponse = [[TXPBFetchCourseListResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseListResponse;
}
- (TXPBFetchCourseListResponseBuilder*) clear {
  self.resultFetchCourseListResponse = [[TXPBFetchCourseListResponse alloc] init];
  return self;
}
- (TXPBFetchCourseListResponseBuilder*) clone {
  return [TXPBFetchCourseListResponse builderWithPrototype:resultFetchCourseListResponse];
}
- (TXPBFetchCourseListResponse*) defaultInstance {
  return [TXPBFetchCourseListResponse defaultInstance];
}
- (TXPBFetchCourseListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseListResponse*) buildPartial {
  TXPBFetchCourseListResponse* returnMe = resultFetchCourseListResponse;
  self.resultFetchCourseListResponse = nil;
  return returnMe;
}
- (TXPBFetchCourseListResponseBuilder*) mergeFrom:(TXPBFetchCourseListResponse*) other {
  if (other == [TXPBFetchCourseListResponse defaultInstance]) {
    return self;
  }
  if (other.coursesArray.count > 0) {
    if (resultFetchCourseListResponse.coursesArray == nil) {
      resultFetchCourseListResponse.coursesArray = [[NSMutableArray alloc] initWithArray:other.coursesArray];
    } else {
      [resultFetchCourseListResponse.coursesArray addObjectsFromArray:other.coursesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCourseBuilder* subBuilder = [TXPBCourse builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCourses:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)courses {
  return resultFetchCourseListResponse.coursesArray;
}
- (TXPBCourse*)coursesAtIndex:(NSUInteger)index {
  return [resultFetchCourseListResponse coursesAtIndex:index];
}
- (TXPBFetchCourseListResponseBuilder *)addCourses:(TXPBCourse*)value {
  if (resultFetchCourseListResponse.coursesArray == nil) {
    resultFetchCourseListResponse.coursesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCourseListResponse.coursesArray addObject:value];
  return self;
}
- (TXPBFetchCourseListResponseBuilder *)setCoursesArray:(NSArray *)array {
  resultFetchCourseListResponse.coursesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCourseListResponseBuilder *)clearCourses {
  resultFetchCourseListResponse.coursesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchCourseListResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchCourseListResponse.hasMore;
}
- (TXPBFetchCourseListResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchCourseListResponse.hasHasMore = YES;
  resultFetchCourseListResponse.hasMore = value;
  return self;
}
- (TXPBFetchCourseListResponseBuilder*) clearHasMore {
  resultFetchCourseListResponse.hasHasMore = NO;
  resultFetchCourseListResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchCourseLessonListRequest ()
@property SInt32 page;
@end

@implementation TXPBFetchCourseLessonListRequest

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
  }
  return self;
}
static TXPBFetchCourseLessonListRequest* defaultTXPBFetchCourseLessonListRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseLessonListRequest class]) {
    defaultTXPBFetchCourseLessonListRequestInstance = [[TXPBFetchCourseLessonListRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonListRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonListRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseLessonListRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseLessonListRequest*)[[[TXPBFetchCourseLessonListRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseLessonListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonListRequest*)[[[TXPBFetchCourseLessonListRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonListRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseLessonListRequest*)[[[TXPBFetchCourseLessonListRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseLessonListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonListRequest*)[[[TXPBFetchCourseLessonListRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseLessonListRequest*)[[[TXPBFetchCourseLessonListRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseLessonListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonListRequest*)[[[TXPBFetchCourseLessonListRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonListRequestBuilder*) builder {
  return [[TXPBFetchCourseLessonListRequestBuilder alloc] init];
}
+ (TXPBFetchCourseLessonListRequestBuilder*) builderWithPrototype:(TXPBFetchCourseLessonListRequest*) prototype {
  return [[TXPBFetchCourseLessonListRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCourseLessonListRequestBuilder*) builder {
  return [TXPBFetchCourseLessonListRequest builder];
}
- (TXPBFetchCourseLessonListRequestBuilder*) toBuilder {
  return [TXPBFetchCourseLessonListRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseLessonListRequest class]]) {
    return NO;
  }
  TXPBFetchCourseLessonListRequest *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseLessonListRequestBuilder()
@property (strong) TXPBFetchCourseLessonListRequest* resultFetchCourseLessonListRequest;
@end

@implementation TXPBFetchCourseLessonListRequestBuilder
@synthesize resultFetchCourseLessonListRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseLessonListRequest = [[TXPBFetchCourseLessonListRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseLessonListRequest;
}
- (TXPBFetchCourseLessonListRequestBuilder*) clear {
  self.resultFetchCourseLessonListRequest = [[TXPBFetchCourseLessonListRequest alloc] init];
  return self;
}
- (TXPBFetchCourseLessonListRequestBuilder*) clone {
  return [TXPBFetchCourseLessonListRequest builderWithPrototype:resultFetchCourseLessonListRequest];
}
- (TXPBFetchCourseLessonListRequest*) defaultInstance {
  return [TXPBFetchCourseLessonListRequest defaultInstance];
}
- (TXPBFetchCourseLessonListRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseLessonListRequest*) buildPartial {
  TXPBFetchCourseLessonListRequest* returnMe = resultFetchCourseLessonListRequest;
  self.resultFetchCourseLessonListRequest = nil;
  return returnMe;
}
- (TXPBFetchCourseLessonListRequestBuilder*) mergeFrom:(TXPBFetchCourseLessonListRequest*) other {
  if (other == [TXPBFetchCourseLessonListRequest defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseLessonListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseLessonListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return resultFetchCourseLessonListRequest.hasPage;
}
- (SInt32) page {
  return resultFetchCourseLessonListRequest.page;
}
- (TXPBFetchCourseLessonListRequestBuilder*) setPage:(SInt32) value {
  resultFetchCourseLessonListRequest.hasPage = YES;
  resultFetchCourseLessonListRequest.page = value;
  return self;
}
- (TXPBFetchCourseLessonListRequestBuilder*) clearPage {
  resultFetchCourseLessonListRequest.hasPage = NO;
  resultFetchCourseLessonListRequest.page = 0;
  return self;
}
@end

@interface TXPBFetchCourseLessonListResponse ()
@property (strong) NSMutableArray * lessonsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchCourseLessonListResponse

@synthesize lessonsArray;
@dynamic lessons;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchCourseLessonListResponse* defaultTXPBFetchCourseLessonListResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseLessonListResponse class]) {
    defaultTXPBFetchCourseLessonListResponseInstance = [[TXPBFetchCourseLessonListResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonListResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonListResponseInstance;
}
- (NSArray *)lessons {
  return lessonsArray;
}
- (TXPBCourseLesson*)lessonsAtIndex:(NSUInteger)index {
  return [lessonsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitlessons = YES;
   [self.lessons enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitlessons = NO;
      *stop = YES;
    }
  }];
  if (!isInitlessons) return isInitlessons;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseLessonListResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseLessonListResponse*)[[[TXPBFetchCourseLessonListResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseLessonListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonListResponse*)[[[TXPBFetchCourseLessonListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseLessonListResponse*)[[[TXPBFetchCourseLessonListResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseLessonListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonListResponse*)[[[TXPBFetchCourseLessonListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseLessonListResponse*)[[[TXPBFetchCourseLessonListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseLessonListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonListResponse*)[[[TXPBFetchCourseLessonListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonListResponseBuilder*) builder {
  return [[TXPBFetchCourseLessonListResponseBuilder alloc] init];
}
+ (TXPBFetchCourseLessonListResponseBuilder*) builderWithPrototype:(TXPBFetchCourseLessonListResponse*) prototype {
  return [[TXPBFetchCourseLessonListResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCourseLessonListResponseBuilder*) builder {
  return [TXPBFetchCourseLessonListResponse builder];
}
- (TXPBFetchCourseLessonListResponseBuilder*) toBuilder {
  return [TXPBFetchCourseLessonListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"lessons"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCourseLesson* element in self.lessonsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"lessons"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseLessonListResponse class]]) {
    return NO;
  }
  TXPBFetchCourseLessonListResponse *otherMessage = other;
  return
      [self.lessonsArray isEqualToArray:otherMessage.lessonsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseLessonListResponseBuilder()
@property (strong) TXPBFetchCourseLessonListResponse* resultFetchCourseLessonListResponse;
@end

@implementation TXPBFetchCourseLessonListResponseBuilder
@synthesize resultFetchCourseLessonListResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseLessonListResponse = [[TXPBFetchCourseLessonListResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseLessonListResponse;
}
- (TXPBFetchCourseLessonListResponseBuilder*) clear {
  self.resultFetchCourseLessonListResponse = [[TXPBFetchCourseLessonListResponse alloc] init];
  return self;
}
- (TXPBFetchCourseLessonListResponseBuilder*) clone {
  return [TXPBFetchCourseLessonListResponse builderWithPrototype:resultFetchCourseLessonListResponse];
}
- (TXPBFetchCourseLessonListResponse*) defaultInstance {
  return [TXPBFetchCourseLessonListResponse defaultInstance];
}
- (TXPBFetchCourseLessonListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseLessonListResponse*) buildPartial {
  TXPBFetchCourseLessonListResponse* returnMe = resultFetchCourseLessonListResponse;
  self.resultFetchCourseLessonListResponse = nil;
  return returnMe;
}
- (TXPBFetchCourseLessonListResponseBuilder*) mergeFrom:(TXPBFetchCourseLessonListResponse*) other {
  if (other == [TXPBFetchCourseLessonListResponse defaultInstance]) {
    return self;
  }
  if (other.lessonsArray.count > 0) {
    if (resultFetchCourseLessonListResponse.lessonsArray == nil) {
      resultFetchCourseLessonListResponse.lessonsArray = [[NSMutableArray alloc] initWithArray:other.lessonsArray];
    } else {
      [resultFetchCourseLessonListResponse.lessonsArray addObjectsFromArray:other.lessonsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseLessonListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseLessonListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCourseLessonBuilder* subBuilder = [TXPBCourseLesson builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLessons:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)lessons {
  return resultFetchCourseLessonListResponse.lessonsArray;
}
- (TXPBCourseLesson*)lessonsAtIndex:(NSUInteger)index {
  return [resultFetchCourseLessonListResponse lessonsAtIndex:index];
}
- (TXPBFetchCourseLessonListResponseBuilder *)addLessons:(TXPBCourseLesson*)value {
  if (resultFetchCourseLessonListResponse.lessonsArray == nil) {
    resultFetchCourseLessonListResponse.lessonsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCourseLessonListResponse.lessonsArray addObject:value];
  return self;
}
- (TXPBFetchCourseLessonListResponseBuilder *)setLessonsArray:(NSArray *)array {
  resultFetchCourseLessonListResponse.lessonsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCourseLessonListResponseBuilder *)clearLessons {
  resultFetchCourseLessonListResponse.lessonsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchCourseLessonListResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchCourseLessonListResponse.hasMore;
}
- (TXPBFetchCourseLessonListResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchCourseLessonListResponse.hasHasMore = YES;
  resultFetchCourseLessonListResponse.hasMore = value;
  return self;
}
- (TXPBFetchCourseLessonListResponseBuilder*) clearHasMore {
  resultFetchCourseLessonListResponse.hasHasMore = NO;
  resultFetchCourseLessonListResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchCourseRequest ()
@property SInt64 courseId;
@end

@implementation TXPBFetchCourseRequest

- (BOOL) hasCourseId {
  return !!hasCourseId_;
}
- (void) setHasCourseId:(BOOL) _value_ {
  hasCourseId_ = !!_value_;
}
@synthesize courseId;
- (instancetype) init {
  if ((self = [super init])) {
    self.courseId = 0L;
  }
  return self;
}
static TXPBFetchCourseRequest* defaultTXPBFetchCourseRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseRequest class]) {
    defaultTXPBFetchCourseRequestInstance = [[TXPBFetchCourseRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCourseId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCourseId) {
    [output writeInt64:1 value:self.courseId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCourseId) {
    size_ += computeInt64Size(1, self.courseId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseRequest*)[[[TXPBFetchCourseRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseRequest*)[[[TXPBFetchCourseRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseRequest*)[[[TXPBFetchCourseRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseRequest*)[[[TXPBFetchCourseRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseRequest*)[[[TXPBFetchCourseRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseRequest*)[[[TXPBFetchCourseRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseRequestBuilder*) builder {
  return [[TXPBFetchCourseRequestBuilder alloc] init];
}
+ (TXPBFetchCourseRequestBuilder*) builderWithPrototype:(TXPBFetchCourseRequest*) prototype {
  return [[TXPBFetchCourseRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCourseRequestBuilder*) builder {
  return [TXPBFetchCourseRequest builder];
}
- (TXPBFetchCourseRequestBuilder*) toBuilder {
  return [TXPBFetchCourseRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCourseId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseId", [NSNumber numberWithLongLong:self.courseId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCourseId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseId] forKey: @"courseId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseRequest class]]) {
    return NO;
  }
  TXPBFetchCourseRequest *otherMessage = other;
  return
      self.hasCourseId == otherMessage.hasCourseId &&
      (!self.hasCourseId || self.courseId == otherMessage.courseId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCourseId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseRequestBuilder()
@property (strong) TXPBFetchCourseRequest* resultFetchCourseRequest;
@end

@implementation TXPBFetchCourseRequestBuilder
@synthesize resultFetchCourseRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseRequest = [[TXPBFetchCourseRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseRequest;
}
- (TXPBFetchCourseRequestBuilder*) clear {
  self.resultFetchCourseRequest = [[TXPBFetchCourseRequest alloc] init];
  return self;
}
- (TXPBFetchCourseRequestBuilder*) clone {
  return [TXPBFetchCourseRequest builderWithPrototype:resultFetchCourseRequest];
}
- (TXPBFetchCourseRequest*) defaultInstance {
  return [TXPBFetchCourseRequest defaultInstance];
}
- (TXPBFetchCourseRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseRequest*) buildPartial {
  TXPBFetchCourseRequest* returnMe = resultFetchCourseRequest;
  self.resultFetchCourseRequest = nil;
  return returnMe;
}
- (TXPBFetchCourseRequestBuilder*) mergeFrom:(TXPBFetchCourseRequest*) other {
  if (other == [TXPBFetchCourseRequest defaultInstance]) {
    return self;
  }
  if (other.hasCourseId) {
    [self setCourseId:other.courseId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCourseId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCourseId {
  return resultFetchCourseRequest.hasCourseId;
}
- (SInt64) courseId {
  return resultFetchCourseRequest.courseId;
}
- (TXPBFetchCourseRequestBuilder*) setCourseId:(SInt64) value {
  resultFetchCourseRequest.hasCourseId = YES;
  resultFetchCourseRequest.courseId = value;
  return self;
}
- (TXPBFetchCourseRequestBuilder*) clearCourseId {
  resultFetchCourseRequest.hasCourseId = NO;
  resultFetchCourseRequest.courseId = 0L;
  return self;
}
@end

@interface TXPBFetchCourseResponse ()
@property (strong) TXPBCourse* course;
@end

@implementation TXPBFetchCourseResponse

- (BOOL) hasCourse {
  return !!hasCourse_;
}
- (void) setHasCourse:(BOOL) _value_ {
  hasCourse_ = !!_value_;
}
@synthesize course;
- (instancetype) init {
  if ((self = [super init])) {
    self.course = [TXPBCourse defaultInstance];
  }
  return self;
}
static TXPBFetchCourseResponse* defaultTXPBFetchCourseResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseResponse class]) {
    defaultTXPBFetchCourseResponseInstance = [[TXPBFetchCourseResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasCourse) {
    if (!self.course.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCourse) {
    [output writeMessage:1 value:self.course];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCourse) {
    size_ += computeMessageSize(1, self.course);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseResponse*)[[[TXPBFetchCourseResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseResponse*)[[[TXPBFetchCourseResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseResponse*)[[[TXPBFetchCourseResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseResponse*)[[[TXPBFetchCourseResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseResponse*)[[[TXPBFetchCourseResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseResponse*)[[[TXPBFetchCourseResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseResponseBuilder*) builder {
  return [[TXPBFetchCourseResponseBuilder alloc] init];
}
+ (TXPBFetchCourseResponseBuilder*) builderWithPrototype:(TXPBFetchCourseResponse*) prototype {
  return [[TXPBFetchCourseResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCourseResponseBuilder*) builder {
  return [TXPBFetchCourseResponse builder];
}
- (TXPBFetchCourseResponseBuilder*) toBuilder {
  return [TXPBFetchCourseResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCourse) {
    [output appendFormat:@"%@%@ {\n", indent, @"course"];
    [self.course writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCourse) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.course storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"course"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseResponse class]]) {
    return NO;
  }
  TXPBFetchCourseResponse *otherMessage = other;
  return
      self.hasCourse == otherMessage.hasCourse &&
      (!self.hasCourse || [self.course isEqual:otherMessage.course]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCourse) {
    hashCode = hashCode * 31 + [self.course hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseResponseBuilder()
@property (strong) TXPBFetchCourseResponse* resultFetchCourseResponse;
@end

@implementation TXPBFetchCourseResponseBuilder
@synthesize resultFetchCourseResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseResponse = [[TXPBFetchCourseResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseResponse;
}
- (TXPBFetchCourseResponseBuilder*) clear {
  self.resultFetchCourseResponse = [[TXPBFetchCourseResponse alloc] init];
  return self;
}
- (TXPBFetchCourseResponseBuilder*) clone {
  return [TXPBFetchCourseResponse builderWithPrototype:resultFetchCourseResponse];
}
- (TXPBFetchCourseResponse*) defaultInstance {
  return [TXPBFetchCourseResponse defaultInstance];
}
- (TXPBFetchCourseResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseResponse*) buildPartial {
  TXPBFetchCourseResponse* returnMe = resultFetchCourseResponse;
  self.resultFetchCourseResponse = nil;
  return returnMe;
}
- (TXPBFetchCourseResponseBuilder*) mergeFrom:(TXPBFetchCourseResponse*) other {
  if (other == [TXPBFetchCourseResponse defaultInstance]) {
    return self;
  }
  if (other.hasCourse) {
    [self mergeCourse:other.course];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCourseBuilder* subBuilder = [TXPBCourse builder];
        if (self.hasCourse) {
          [subBuilder mergeFrom:self.course];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCourse:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCourse {
  return resultFetchCourseResponse.hasCourse;
}
- (TXPBCourse*) course {
  return resultFetchCourseResponse.course;
}
- (TXPBFetchCourseResponseBuilder*) setCourse:(TXPBCourse*) value {
  resultFetchCourseResponse.hasCourse = YES;
  resultFetchCourseResponse.course = value;
  return self;
}
- (TXPBFetchCourseResponseBuilder*) setCourseBuilder:(TXPBCourseBuilder*) builderForValue {
  return [self setCourse:[builderForValue build]];
}
- (TXPBFetchCourseResponseBuilder*) mergeCourse:(TXPBCourse*) value {
  if (resultFetchCourseResponse.hasCourse &&
      resultFetchCourseResponse.course != [TXPBCourse defaultInstance]) {
    resultFetchCourseResponse.course =
      [[[TXPBCourse builderWithPrototype:resultFetchCourseResponse.course] mergeFrom:value] buildPartial];
  } else {
    resultFetchCourseResponse.course = value;
  }
  resultFetchCourseResponse.hasCourse = YES;
  return self;
}
- (TXPBFetchCourseResponseBuilder*) clearCourse {
  resultFetchCourseResponse.hasCourse = NO;
  resultFetchCourseResponse.course = [TXPBCourse defaultInstance];
  return self;
}
@end

@interface TXPBFetchCourseLessonRequest ()
@property SInt64 courseId;
@end

@implementation TXPBFetchCourseLessonRequest

- (BOOL) hasCourseId {
  return !!hasCourseId_;
}
- (void) setHasCourseId:(BOOL) _value_ {
  hasCourseId_ = !!_value_;
}
@synthesize courseId;
- (instancetype) init {
  if ((self = [super init])) {
    self.courseId = 0L;
  }
  return self;
}
static TXPBFetchCourseLessonRequest* defaultTXPBFetchCourseLessonRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseLessonRequest class]) {
    defaultTXPBFetchCourseLessonRequestInstance = [[TXPBFetchCourseLessonRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCourseId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCourseId) {
    [output writeInt64:1 value:self.courseId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCourseId) {
    size_ += computeInt64Size(1, self.courseId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseLessonRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseLessonRequest*)[[[TXPBFetchCourseLessonRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseLessonRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonRequest*)[[[TXPBFetchCourseLessonRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseLessonRequest*)[[[TXPBFetchCourseLessonRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseLessonRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonRequest*)[[[TXPBFetchCourseLessonRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseLessonRequest*)[[[TXPBFetchCourseLessonRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseLessonRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonRequest*)[[[TXPBFetchCourseLessonRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonRequestBuilder*) builder {
  return [[TXPBFetchCourseLessonRequestBuilder alloc] init];
}
+ (TXPBFetchCourseLessonRequestBuilder*) builderWithPrototype:(TXPBFetchCourseLessonRequest*) prototype {
  return [[TXPBFetchCourseLessonRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCourseLessonRequestBuilder*) builder {
  return [TXPBFetchCourseLessonRequest builder];
}
- (TXPBFetchCourseLessonRequestBuilder*) toBuilder {
  return [TXPBFetchCourseLessonRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCourseId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseId", [NSNumber numberWithLongLong:self.courseId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCourseId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseId] forKey: @"courseId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseLessonRequest class]]) {
    return NO;
  }
  TXPBFetchCourseLessonRequest *otherMessage = other;
  return
      self.hasCourseId == otherMessage.hasCourseId &&
      (!self.hasCourseId || self.courseId == otherMessage.courseId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCourseId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseLessonRequestBuilder()
@property (strong) TXPBFetchCourseLessonRequest* resultFetchCourseLessonRequest;
@end

@implementation TXPBFetchCourseLessonRequestBuilder
@synthesize resultFetchCourseLessonRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseLessonRequest = [[TXPBFetchCourseLessonRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseLessonRequest;
}
- (TXPBFetchCourseLessonRequestBuilder*) clear {
  self.resultFetchCourseLessonRequest = [[TXPBFetchCourseLessonRequest alloc] init];
  return self;
}
- (TXPBFetchCourseLessonRequestBuilder*) clone {
  return [TXPBFetchCourseLessonRequest builderWithPrototype:resultFetchCourseLessonRequest];
}
- (TXPBFetchCourseLessonRequest*) defaultInstance {
  return [TXPBFetchCourseLessonRequest defaultInstance];
}
- (TXPBFetchCourseLessonRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseLessonRequest*) buildPartial {
  TXPBFetchCourseLessonRequest* returnMe = resultFetchCourseLessonRequest;
  self.resultFetchCourseLessonRequest = nil;
  return returnMe;
}
- (TXPBFetchCourseLessonRequestBuilder*) mergeFrom:(TXPBFetchCourseLessonRequest*) other {
  if (other == [TXPBFetchCourseLessonRequest defaultInstance]) {
    return self;
  }
  if (other.hasCourseId) {
    [self setCourseId:other.courseId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseLessonRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseLessonRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCourseId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCourseId {
  return resultFetchCourseLessonRequest.hasCourseId;
}
- (SInt64) courseId {
  return resultFetchCourseLessonRequest.courseId;
}
- (TXPBFetchCourseLessonRequestBuilder*) setCourseId:(SInt64) value {
  resultFetchCourseLessonRequest.hasCourseId = YES;
  resultFetchCourseLessonRequest.courseId = value;
  return self;
}
- (TXPBFetchCourseLessonRequestBuilder*) clearCourseId {
  resultFetchCourseLessonRequest.hasCourseId = NO;
  resultFetchCourseLessonRequest.courseId = 0L;
  return self;
}
@end

@interface TXPBFetchCourseLessonResponse ()
@property (strong) NSMutableArray * lessonsArray;
@end

@implementation TXPBFetchCourseLessonResponse

@synthesize lessonsArray;
@dynamic lessons;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchCourseLessonResponse* defaultTXPBFetchCourseLessonResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseLessonResponse class]) {
    defaultTXPBFetchCourseLessonResponseInstance = [[TXPBFetchCourseLessonResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseLessonResponseInstance;
}
- (NSArray *)lessons {
  return lessonsArray;
}
- (TXPBCourseLesson*)lessonsAtIndex:(NSUInteger)index {
  return [lessonsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitlessons = YES;
   [self.lessons enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitlessons = NO;
      *stop = YES;
    }
  }];
  if (!isInitlessons) return isInitlessons;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseLessonResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseLessonResponse*)[[[TXPBFetchCourseLessonResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseLessonResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonResponse*)[[[TXPBFetchCourseLessonResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseLessonResponse*)[[[TXPBFetchCourseLessonResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseLessonResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonResponse*)[[[TXPBFetchCourseLessonResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseLessonResponse*)[[[TXPBFetchCourseLessonResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseLessonResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseLessonResponse*)[[[TXPBFetchCourseLessonResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseLessonResponseBuilder*) builder {
  return [[TXPBFetchCourseLessonResponseBuilder alloc] init];
}
+ (TXPBFetchCourseLessonResponseBuilder*) builderWithPrototype:(TXPBFetchCourseLessonResponse*) prototype {
  return [[TXPBFetchCourseLessonResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCourseLessonResponseBuilder*) builder {
  return [TXPBFetchCourseLessonResponse builder];
}
- (TXPBFetchCourseLessonResponseBuilder*) toBuilder {
  return [TXPBFetchCourseLessonResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"lessons"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCourseLesson* element in self.lessonsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"lessons"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseLessonResponse class]]) {
    return NO;
  }
  TXPBFetchCourseLessonResponse *otherMessage = other;
  return
      [self.lessonsArray isEqualToArray:otherMessage.lessonsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.lessonsArray enumerateObjectsUsingBlock:^(TXPBCourseLesson *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseLessonResponseBuilder()
@property (strong) TXPBFetchCourseLessonResponse* resultFetchCourseLessonResponse;
@end

@implementation TXPBFetchCourseLessonResponseBuilder
@synthesize resultFetchCourseLessonResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseLessonResponse = [[TXPBFetchCourseLessonResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseLessonResponse;
}
- (TXPBFetchCourseLessonResponseBuilder*) clear {
  self.resultFetchCourseLessonResponse = [[TXPBFetchCourseLessonResponse alloc] init];
  return self;
}
- (TXPBFetchCourseLessonResponseBuilder*) clone {
  return [TXPBFetchCourseLessonResponse builderWithPrototype:resultFetchCourseLessonResponse];
}
- (TXPBFetchCourseLessonResponse*) defaultInstance {
  return [TXPBFetchCourseLessonResponse defaultInstance];
}
- (TXPBFetchCourseLessonResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseLessonResponse*) buildPartial {
  TXPBFetchCourseLessonResponse* returnMe = resultFetchCourseLessonResponse;
  self.resultFetchCourseLessonResponse = nil;
  return returnMe;
}
- (TXPBFetchCourseLessonResponseBuilder*) mergeFrom:(TXPBFetchCourseLessonResponse*) other {
  if (other == [TXPBFetchCourseLessonResponse defaultInstance]) {
    return self;
  }
  if (other.lessonsArray.count > 0) {
    if (resultFetchCourseLessonResponse.lessonsArray == nil) {
      resultFetchCourseLessonResponse.lessonsArray = [[NSMutableArray alloc] initWithArray:other.lessonsArray];
    } else {
      [resultFetchCourseLessonResponse.lessonsArray addObjectsFromArray:other.lessonsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseLessonResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseLessonResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCourseLessonBuilder* subBuilder = [TXPBCourseLesson builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLessons:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)lessons {
  return resultFetchCourseLessonResponse.lessonsArray;
}
- (TXPBCourseLesson*)lessonsAtIndex:(NSUInteger)index {
  return [resultFetchCourseLessonResponse lessonsAtIndex:index];
}
- (TXPBFetchCourseLessonResponseBuilder *)addLessons:(TXPBCourseLesson*)value {
  if (resultFetchCourseLessonResponse.lessonsArray == nil) {
    resultFetchCourseLessonResponse.lessonsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCourseLessonResponse.lessonsArray addObject:value];
  return self;
}
- (TXPBFetchCourseLessonResponseBuilder *)setLessonsArray:(NSArray *)array {
  resultFetchCourseLessonResponse.lessonsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCourseLessonResponseBuilder *)clearLessons {
  resultFetchCourseLessonResponse.lessonsArray = nil;
  return self;
}
@end

@interface TXPBFetchCourseCommentRequest ()
@property SInt64 courseId;
@property SInt64 maxId;
@end

@implementation TXPBFetchCourseCommentRequest

- (BOOL) hasCourseId {
  return !!hasCourseId_;
}
- (void) setHasCourseId:(BOOL) _value_ {
  hasCourseId_ = !!_value_;
}
@synthesize courseId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.courseId = 0L;
    self.maxId = 0L;
  }
  return self;
}
static TXPBFetchCourseCommentRequest* defaultTXPBFetchCourseCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseCommentRequest class]) {
    defaultTXPBFetchCourseCommentRequestInstance = [[TXPBFetchCourseCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseCommentRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCourseId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCourseId) {
    [output writeInt64:1 value:self.courseId];
  }
  if (self.hasMaxId) {
    [output writeInt64:2 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCourseId) {
    size_ += computeInt64Size(1, self.courseId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(2, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseCommentRequest*)[[[TXPBFetchCourseCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseCommentRequest*)[[[TXPBFetchCourseCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseCommentRequest*)[[[TXPBFetchCourseCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseCommentRequest*)[[[TXPBFetchCourseCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseCommentRequest*)[[[TXPBFetchCourseCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseCommentRequest*)[[[TXPBFetchCourseCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseCommentRequestBuilder*) builder {
  return [[TXPBFetchCourseCommentRequestBuilder alloc] init];
}
+ (TXPBFetchCourseCommentRequestBuilder*) builderWithPrototype:(TXPBFetchCourseCommentRequest*) prototype {
  return [[TXPBFetchCourseCommentRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCourseCommentRequestBuilder*) builder {
  return [TXPBFetchCourseCommentRequest builder];
}
- (TXPBFetchCourseCommentRequestBuilder*) toBuilder {
  return [TXPBFetchCourseCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCourseId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseId", [NSNumber numberWithLongLong:self.courseId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCourseId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseId] forKey: @"courseId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseCommentRequest class]]) {
    return NO;
  }
  TXPBFetchCourseCommentRequest *otherMessage = other;
  return
      self.hasCourseId == otherMessage.hasCourseId &&
      (!self.hasCourseId || self.courseId == otherMessage.courseId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCourseId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseCommentRequestBuilder()
@property (strong) TXPBFetchCourseCommentRequest* resultFetchCourseCommentRequest;
@end

@implementation TXPBFetchCourseCommentRequestBuilder
@synthesize resultFetchCourseCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseCommentRequest = [[TXPBFetchCourseCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseCommentRequest;
}
- (TXPBFetchCourseCommentRequestBuilder*) clear {
  self.resultFetchCourseCommentRequest = [[TXPBFetchCourseCommentRequest alloc] init];
  return self;
}
- (TXPBFetchCourseCommentRequestBuilder*) clone {
  return [TXPBFetchCourseCommentRequest builderWithPrototype:resultFetchCourseCommentRequest];
}
- (TXPBFetchCourseCommentRequest*) defaultInstance {
  return [TXPBFetchCourseCommentRequest defaultInstance];
}
- (TXPBFetchCourseCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseCommentRequest*) buildPartial {
  TXPBFetchCourseCommentRequest* returnMe = resultFetchCourseCommentRequest;
  self.resultFetchCourseCommentRequest = nil;
  return returnMe;
}
- (TXPBFetchCourseCommentRequestBuilder*) mergeFrom:(TXPBFetchCourseCommentRequest*) other {
  if (other == [TXPBFetchCourseCommentRequest defaultInstance]) {
    return self;
  }
  if (other.hasCourseId) {
    [self setCourseId:other.courseId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCourseId:[input readInt64]];
        break;
      }
      case 16: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCourseId {
  return resultFetchCourseCommentRequest.hasCourseId;
}
- (SInt64) courseId {
  return resultFetchCourseCommentRequest.courseId;
}
- (TXPBFetchCourseCommentRequestBuilder*) setCourseId:(SInt64) value {
  resultFetchCourseCommentRequest.hasCourseId = YES;
  resultFetchCourseCommentRequest.courseId = value;
  return self;
}
- (TXPBFetchCourseCommentRequestBuilder*) clearCourseId {
  resultFetchCourseCommentRequest.hasCourseId = NO;
  resultFetchCourseCommentRequest.courseId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchCourseCommentRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchCourseCommentRequest.maxId;
}
- (TXPBFetchCourseCommentRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchCourseCommentRequest.hasMaxId = YES;
  resultFetchCourseCommentRequest.maxId = value;
  return self;
}
- (TXPBFetchCourseCommentRequestBuilder*) clearMaxId {
  resultFetchCourseCommentRequest.hasMaxId = NO;
  resultFetchCourseCommentRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBFetchCourseCommentResponse ()
@property (strong) NSMutableArray * commentsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchCourseCommentResponse

@synthesize commentsArray;
@dynamic comments;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchCourseCommentResponse* defaultTXPBFetchCourseCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCourseCommentResponse class]) {
    defaultTXPBFetchCourseCommentResponseInstance = [[TXPBFetchCourseCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCourseCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCourseCommentResponseInstance;
}
- (NSArray *)comments {
  return commentsArray;
}
- (TXPBCourseComment*)commentsAtIndex:(NSUInteger)index {
  return [commentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitcomments = YES;
   [self.comments enumerateObjectsUsingBlock:^(TXPBCourseComment *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcomments = NO;
      *stop = YES;
    }
  }];
  if (!isInitcomments) return isInitcomments;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBCourseComment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBCourseComment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCourseCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCourseCommentResponse*)[[[TXPBFetchCourseCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCourseCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseCommentResponse*)[[[TXPBFetchCourseCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCourseCommentResponse*)[[[TXPBFetchCourseCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseCommentResponse*)[[[TXPBFetchCourseCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCourseCommentResponse*)[[[TXPBFetchCourseCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCourseCommentResponse*)[[[TXPBFetchCourseCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCourseCommentResponseBuilder*) builder {
  return [[TXPBFetchCourseCommentResponseBuilder alloc] init];
}
+ (TXPBFetchCourseCommentResponseBuilder*) builderWithPrototype:(TXPBFetchCourseCommentResponse*) prototype {
  return [[TXPBFetchCourseCommentResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCourseCommentResponseBuilder*) builder {
  return [TXPBFetchCourseCommentResponse builder];
}
- (TXPBFetchCourseCommentResponseBuilder*) toBuilder {
  return [TXPBFetchCourseCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBCourseComment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"comments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCourseComment* element in self.commentsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"comments"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCourseCommentResponse class]]) {
    return NO;
  }
  TXPBFetchCourseCommentResponse *otherMessage = other;
  return
      [self.commentsArray isEqualToArray:otherMessage.commentsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBCourseComment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCourseCommentResponseBuilder()
@property (strong) TXPBFetchCourseCommentResponse* resultFetchCourseCommentResponse;
@end

@implementation TXPBFetchCourseCommentResponseBuilder
@synthesize resultFetchCourseCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCourseCommentResponse = [[TXPBFetchCourseCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCourseCommentResponse;
}
- (TXPBFetchCourseCommentResponseBuilder*) clear {
  self.resultFetchCourseCommentResponse = [[TXPBFetchCourseCommentResponse alloc] init];
  return self;
}
- (TXPBFetchCourseCommentResponseBuilder*) clone {
  return [TXPBFetchCourseCommentResponse builderWithPrototype:resultFetchCourseCommentResponse];
}
- (TXPBFetchCourseCommentResponse*) defaultInstance {
  return [TXPBFetchCourseCommentResponse defaultInstance];
}
- (TXPBFetchCourseCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCourseCommentResponse*) buildPartial {
  TXPBFetchCourseCommentResponse* returnMe = resultFetchCourseCommentResponse;
  self.resultFetchCourseCommentResponse = nil;
  return returnMe;
}
- (TXPBFetchCourseCommentResponseBuilder*) mergeFrom:(TXPBFetchCourseCommentResponse*) other {
  if (other == [TXPBFetchCourseCommentResponse defaultInstance]) {
    return self;
  }
  if (other.commentsArray.count > 0) {
    if (resultFetchCourseCommentResponse.commentsArray == nil) {
      resultFetchCourseCommentResponse.commentsArray = [[NSMutableArray alloc] initWithArray:other.commentsArray];
    } else {
      [resultFetchCourseCommentResponse.commentsArray addObjectsFromArray:other.commentsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCourseCommentBuilder* subBuilder = [TXPBCourseComment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addComments:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)comments {
  return resultFetchCourseCommentResponse.commentsArray;
}
- (TXPBCourseComment*)commentsAtIndex:(NSUInteger)index {
  return [resultFetchCourseCommentResponse commentsAtIndex:index];
}
- (TXPBFetchCourseCommentResponseBuilder *)addComments:(TXPBCourseComment*)value {
  if (resultFetchCourseCommentResponse.commentsArray == nil) {
    resultFetchCourseCommentResponse.commentsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCourseCommentResponse.commentsArray addObject:value];
  return self;
}
- (TXPBFetchCourseCommentResponseBuilder *)setCommentsArray:(NSArray *)array {
  resultFetchCourseCommentResponse.commentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCourseCommentResponseBuilder *)clearComments {
  resultFetchCourseCommentResponse.commentsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchCourseCommentResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchCourseCommentResponse.hasMore;
}
- (TXPBFetchCourseCommentResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchCourseCommentResponse.hasHasMore = YES;
  resultFetchCourseCommentResponse.hasMore = value;
  return self;
}
- (TXPBFetchCourseCommentResponseBuilder*) clearHasMore {
  resultFetchCourseCommentResponse.hasHasMore = NO;
  resultFetchCourseCommentResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBAddCourseCommentRequest ()
@property SInt64 courseId;
@property SInt32 score;
@property (strong) NSString* content;
@end

@implementation TXPBAddCourseCommentRequest

- (BOOL) hasCourseId {
  return !!hasCourseId_;
}
- (void) setHasCourseId:(BOOL) _value_ {
  hasCourseId_ = !!_value_;
}
@synthesize courseId;
- (BOOL) hasScore {
  return !!hasScore_;
}
- (void) setHasScore:(BOOL) _value_ {
  hasScore_ = !!_value_;
}
@synthesize score;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.courseId = 0L;
    self.score = 0;
    self.content = @"";
  }
  return self;
}
static TXPBAddCourseCommentRequest* defaultTXPBAddCourseCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBAddCourseCommentRequest class]) {
    defaultTXPBAddCourseCommentRequestInstance = [[TXPBAddCourseCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAddCourseCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAddCourseCommentRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCourseId) {
    return NO;
  }
  if (!self.hasScore) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCourseId) {
    [output writeInt64:1 value:self.courseId];
  }
  if (self.hasScore) {
    [output writeInt32:2 value:self.score];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCourseId) {
    size_ += computeInt64Size(1, self.courseId);
  }
  if (self.hasScore) {
    size_ += computeInt32Size(2, self.score);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAddCourseCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBAddCourseCommentRequest*)[[[TXPBAddCourseCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBAddCourseCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAddCourseCommentRequest*)[[[TXPBAddCourseCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAddCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAddCourseCommentRequest*)[[[TXPBAddCourseCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBAddCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAddCourseCommentRequest*)[[[TXPBAddCourseCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAddCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAddCourseCommentRequest*)[[[TXPBAddCourseCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAddCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAddCourseCommentRequest*)[[[TXPBAddCourseCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAddCourseCommentRequestBuilder*) builder {
  return [[TXPBAddCourseCommentRequestBuilder alloc] init];
}
+ (TXPBAddCourseCommentRequestBuilder*) builderWithPrototype:(TXPBAddCourseCommentRequest*) prototype {
  return [[TXPBAddCourseCommentRequest builder] mergeFrom:prototype];
}
- (TXPBAddCourseCommentRequestBuilder*) builder {
  return [TXPBAddCourseCommentRequest builder];
}
- (TXPBAddCourseCommentRequestBuilder*) toBuilder {
  return [TXPBAddCourseCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCourseId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseId", [NSNumber numberWithLongLong:self.courseId]];
  }
  if (self.hasScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"score", [NSNumber numberWithInteger:self.score]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCourseId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseId] forKey: @"courseId"];
  }
  if (self.hasScore) {
    [dictionary setObject: [NSNumber numberWithInteger:self.score] forKey: @"score"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAddCourseCommentRequest class]]) {
    return NO;
  }
  TXPBAddCourseCommentRequest *otherMessage = other;
  return
      self.hasCourseId == otherMessage.hasCourseId &&
      (!self.hasCourseId || self.courseId == otherMessage.courseId) &&
      self.hasScore == otherMessage.hasScore &&
      (!self.hasScore || self.score == otherMessage.score) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCourseId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseId] hash];
  }
  if (self.hasScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.score] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAddCourseCommentRequestBuilder()
@property (strong) TXPBAddCourseCommentRequest* resultAddCourseCommentRequest;
@end

@implementation TXPBAddCourseCommentRequestBuilder
@synthesize resultAddCourseCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAddCourseCommentRequest = [[TXPBAddCourseCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAddCourseCommentRequest;
}
- (TXPBAddCourseCommentRequestBuilder*) clear {
  self.resultAddCourseCommentRequest = [[TXPBAddCourseCommentRequest alloc] init];
  return self;
}
- (TXPBAddCourseCommentRequestBuilder*) clone {
  return [TXPBAddCourseCommentRequest builderWithPrototype:resultAddCourseCommentRequest];
}
- (TXPBAddCourseCommentRequest*) defaultInstance {
  return [TXPBAddCourseCommentRequest defaultInstance];
}
- (TXPBAddCourseCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAddCourseCommentRequest*) buildPartial {
  TXPBAddCourseCommentRequest* returnMe = resultAddCourseCommentRequest;
  self.resultAddCourseCommentRequest = nil;
  return returnMe;
}
- (TXPBAddCourseCommentRequestBuilder*) mergeFrom:(TXPBAddCourseCommentRequest*) other {
  if (other == [TXPBAddCourseCommentRequest defaultInstance]) {
    return self;
  }
  if (other.hasCourseId) {
    [self setCourseId:other.courseId];
  }
  if (other.hasScore) {
    [self setScore:other.score];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAddCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAddCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCourseId:[input readInt64]];
        break;
      }
      case 16: {
        [self setScore:[input readInt32]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCourseId {
  return resultAddCourseCommentRequest.hasCourseId;
}
- (SInt64) courseId {
  return resultAddCourseCommentRequest.courseId;
}
- (TXPBAddCourseCommentRequestBuilder*) setCourseId:(SInt64) value {
  resultAddCourseCommentRequest.hasCourseId = YES;
  resultAddCourseCommentRequest.courseId = value;
  return self;
}
- (TXPBAddCourseCommentRequestBuilder*) clearCourseId {
  resultAddCourseCommentRequest.hasCourseId = NO;
  resultAddCourseCommentRequest.courseId = 0L;
  return self;
}
- (BOOL) hasScore {
  return resultAddCourseCommentRequest.hasScore;
}
- (SInt32) score {
  return resultAddCourseCommentRequest.score;
}
- (TXPBAddCourseCommentRequestBuilder*) setScore:(SInt32) value {
  resultAddCourseCommentRequest.hasScore = YES;
  resultAddCourseCommentRequest.score = value;
  return self;
}
- (TXPBAddCourseCommentRequestBuilder*) clearScore {
  resultAddCourseCommentRequest.hasScore = NO;
  resultAddCourseCommentRequest.score = 0;
  return self;
}
- (BOOL) hasContent {
  return resultAddCourseCommentRequest.hasContent;
}
- (NSString*) content {
  return resultAddCourseCommentRequest.content;
}
- (TXPBAddCourseCommentRequestBuilder*) setContent:(NSString*) value {
  resultAddCourseCommentRequest.hasContent = YES;
  resultAddCourseCommentRequest.content = value;
  return self;
}
- (TXPBAddCourseCommentRequestBuilder*) clearContent {
  resultAddCourseCommentRequest.hasContent = NO;
  resultAddCourseCommentRequest.content = @"";
  return self;
}
@end

@interface TXPBAddCourseCommentResponse ()
@property SInt64 commentId;
@end

@implementation TXPBAddCourseCommentResponse

- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) _value_ {
  hasCommentId_ = !!_value_;
}
@synthesize commentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.commentId = 0L;
  }
  return self;
}
static TXPBAddCourseCommentResponse* defaultTXPBAddCourseCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBAddCourseCommentResponse class]) {
    defaultTXPBAddCourseCommentResponseInstance = [[TXPBAddCourseCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAddCourseCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAddCourseCommentResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommentId) {
    [output writeInt64:1 value:self.commentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCommentId) {
    size_ += computeInt64Size(1, self.commentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAddCourseCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBAddCourseCommentResponse*)[[[TXPBAddCourseCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBAddCourseCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAddCourseCommentResponse*)[[[TXPBAddCourseCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAddCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAddCourseCommentResponse*)[[[TXPBAddCourseCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBAddCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAddCourseCommentResponse*)[[[TXPBAddCourseCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAddCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAddCourseCommentResponse*)[[[TXPBAddCourseCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAddCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAddCourseCommentResponse*)[[[TXPBAddCourseCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAddCourseCommentResponseBuilder*) builder {
  return [[TXPBAddCourseCommentResponseBuilder alloc] init];
}
+ (TXPBAddCourseCommentResponseBuilder*) builderWithPrototype:(TXPBAddCourseCommentResponse*) prototype {
  return [[TXPBAddCourseCommentResponse builder] mergeFrom:prototype];
}
- (TXPBAddCourseCommentResponseBuilder*) builder {
  return [TXPBAddCourseCommentResponse builder];
}
- (TXPBAddCourseCommentResponseBuilder*) toBuilder {
  return [TXPBAddCourseCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCommentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentId", [NSNumber numberWithLongLong:self.commentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCommentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.commentId] forKey: @"commentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAddCourseCommentResponse class]]) {
    return NO;
  }
  TXPBAddCourseCommentResponse *otherMessage = other;
  return
      self.hasCommentId == otherMessage.hasCommentId &&
      (!self.hasCommentId || self.commentId == otherMessage.commentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCommentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.commentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAddCourseCommentResponseBuilder()
@property (strong) TXPBAddCourseCommentResponse* resultAddCourseCommentResponse;
@end

@implementation TXPBAddCourseCommentResponseBuilder
@synthesize resultAddCourseCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAddCourseCommentResponse = [[TXPBAddCourseCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAddCourseCommentResponse;
}
- (TXPBAddCourseCommentResponseBuilder*) clear {
  self.resultAddCourseCommentResponse = [[TXPBAddCourseCommentResponse alloc] init];
  return self;
}
- (TXPBAddCourseCommentResponseBuilder*) clone {
  return [TXPBAddCourseCommentResponse builderWithPrototype:resultAddCourseCommentResponse];
}
- (TXPBAddCourseCommentResponse*) defaultInstance {
  return [TXPBAddCourseCommentResponse defaultInstance];
}
- (TXPBAddCourseCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAddCourseCommentResponse*) buildPartial {
  TXPBAddCourseCommentResponse* returnMe = resultAddCourseCommentResponse;
  self.resultAddCourseCommentResponse = nil;
  return returnMe;
}
- (TXPBAddCourseCommentResponseBuilder*) mergeFrom:(TXPBAddCourseCommentResponse*) other {
  if (other == [TXPBAddCourseCommentResponse defaultInstance]) {
    return self;
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAddCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAddCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCommentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCommentId {
  return resultAddCourseCommentResponse.hasCommentId;
}
- (SInt64) commentId {
  return resultAddCourseCommentResponse.commentId;
}
- (TXPBAddCourseCommentResponseBuilder*) setCommentId:(SInt64) value {
  resultAddCourseCommentResponse.hasCommentId = YES;
  resultAddCourseCommentResponse.commentId = value;
  return self;
}
- (TXPBAddCourseCommentResponseBuilder*) clearCommentId {
  resultAddCourseCommentResponse.hasCommentId = NO;
  resultAddCourseCommentResponse.commentId = 0L;
  return self;
}
@end

@interface TXPBEditCourseCommentRequest ()
@property SInt64 commentId;
@property SInt32 score;
@property (strong) NSString* content;
@end

@implementation TXPBEditCourseCommentRequest

- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) _value_ {
  hasCommentId_ = !!_value_;
}
@synthesize commentId;
- (BOOL) hasScore {
  return !!hasScore_;
}
- (void) setHasScore:(BOOL) _value_ {
  hasScore_ = !!_value_;
}
@synthesize score;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.commentId = 0L;
    self.score = 0;
    self.content = @"";
  }
  return self;
}
static TXPBEditCourseCommentRequest* defaultTXPBEditCourseCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBEditCourseCommentRequest class]) {
    defaultTXPBEditCourseCommentRequestInstance = [[TXPBEditCourseCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBEditCourseCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBEditCourseCommentRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommentId) {
    return NO;
  }
  if (!self.hasScore) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommentId) {
    [output writeInt64:1 value:self.commentId];
  }
  if (self.hasScore) {
    [output writeInt32:2 value:self.score];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCommentId) {
    size_ += computeInt64Size(1, self.commentId);
  }
  if (self.hasScore) {
    size_ += computeInt32Size(2, self.score);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBEditCourseCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBEditCourseCommentRequest*)[[[TXPBEditCourseCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBEditCourseCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBEditCourseCommentRequest*)[[[TXPBEditCourseCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBEditCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBEditCourseCommentRequest*)[[[TXPBEditCourseCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBEditCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBEditCourseCommentRequest*)[[[TXPBEditCourseCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBEditCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBEditCourseCommentRequest*)[[[TXPBEditCourseCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBEditCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBEditCourseCommentRequest*)[[[TXPBEditCourseCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBEditCourseCommentRequestBuilder*) builder {
  return [[TXPBEditCourseCommentRequestBuilder alloc] init];
}
+ (TXPBEditCourseCommentRequestBuilder*) builderWithPrototype:(TXPBEditCourseCommentRequest*) prototype {
  return [[TXPBEditCourseCommentRequest builder] mergeFrom:prototype];
}
- (TXPBEditCourseCommentRequestBuilder*) builder {
  return [TXPBEditCourseCommentRequest builder];
}
- (TXPBEditCourseCommentRequestBuilder*) toBuilder {
  return [TXPBEditCourseCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCommentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentId", [NSNumber numberWithLongLong:self.commentId]];
  }
  if (self.hasScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"score", [NSNumber numberWithInteger:self.score]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCommentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.commentId] forKey: @"commentId"];
  }
  if (self.hasScore) {
    [dictionary setObject: [NSNumber numberWithInteger:self.score] forKey: @"score"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBEditCourseCommentRequest class]]) {
    return NO;
  }
  TXPBEditCourseCommentRequest *otherMessage = other;
  return
      self.hasCommentId == otherMessage.hasCommentId &&
      (!self.hasCommentId || self.commentId == otherMessage.commentId) &&
      self.hasScore == otherMessage.hasScore &&
      (!self.hasScore || self.score == otherMessage.score) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCommentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.commentId] hash];
  }
  if (self.hasScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.score] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBEditCourseCommentRequestBuilder()
@property (strong) TXPBEditCourseCommentRequest* resultEditCourseCommentRequest;
@end

@implementation TXPBEditCourseCommentRequestBuilder
@synthesize resultEditCourseCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultEditCourseCommentRequest = [[TXPBEditCourseCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultEditCourseCommentRequest;
}
- (TXPBEditCourseCommentRequestBuilder*) clear {
  self.resultEditCourseCommentRequest = [[TXPBEditCourseCommentRequest alloc] init];
  return self;
}
- (TXPBEditCourseCommentRequestBuilder*) clone {
  return [TXPBEditCourseCommentRequest builderWithPrototype:resultEditCourseCommentRequest];
}
- (TXPBEditCourseCommentRequest*) defaultInstance {
  return [TXPBEditCourseCommentRequest defaultInstance];
}
- (TXPBEditCourseCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBEditCourseCommentRequest*) buildPartial {
  TXPBEditCourseCommentRequest* returnMe = resultEditCourseCommentRequest;
  self.resultEditCourseCommentRequest = nil;
  return returnMe;
}
- (TXPBEditCourseCommentRequestBuilder*) mergeFrom:(TXPBEditCourseCommentRequest*) other {
  if (other == [TXPBEditCourseCommentRequest defaultInstance]) {
    return self;
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  if (other.hasScore) {
    [self setScore:other.score];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBEditCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBEditCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCommentId:[input readInt64]];
        break;
      }
      case 16: {
        [self setScore:[input readInt32]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCommentId {
  return resultEditCourseCommentRequest.hasCommentId;
}
- (SInt64) commentId {
  return resultEditCourseCommentRequest.commentId;
}
- (TXPBEditCourseCommentRequestBuilder*) setCommentId:(SInt64) value {
  resultEditCourseCommentRequest.hasCommentId = YES;
  resultEditCourseCommentRequest.commentId = value;
  return self;
}
- (TXPBEditCourseCommentRequestBuilder*) clearCommentId {
  resultEditCourseCommentRequest.hasCommentId = NO;
  resultEditCourseCommentRequest.commentId = 0L;
  return self;
}
- (BOOL) hasScore {
  return resultEditCourseCommentRequest.hasScore;
}
- (SInt32) score {
  return resultEditCourseCommentRequest.score;
}
- (TXPBEditCourseCommentRequestBuilder*) setScore:(SInt32) value {
  resultEditCourseCommentRequest.hasScore = YES;
  resultEditCourseCommentRequest.score = value;
  return self;
}
- (TXPBEditCourseCommentRequestBuilder*) clearScore {
  resultEditCourseCommentRequest.hasScore = NO;
  resultEditCourseCommentRequest.score = 0;
  return self;
}
- (BOOL) hasContent {
  return resultEditCourseCommentRequest.hasContent;
}
- (NSString*) content {
  return resultEditCourseCommentRequest.content;
}
- (TXPBEditCourseCommentRequestBuilder*) setContent:(NSString*) value {
  resultEditCourseCommentRequest.hasContent = YES;
  resultEditCourseCommentRequest.content = value;
  return self;
}
- (TXPBEditCourseCommentRequestBuilder*) clearContent {
  resultEditCourseCommentRequest.hasContent = NO;
  resultEditCourseCommentRequest.content = @"";
  return self;
}
@end

@interface TXPBEditCourseCommentResponse ()
@end

@implementation TXPBEditCourseCommentResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBEditCourseCommentResponse* defaultTXPBEditCourseCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBEditCourseCommentResponse class]) {
    defaultTXPBEditCourseCommentResponseInstance = [[TXPBEditCourseCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBEditCourseCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBEditCourseCommentResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBEditCourseCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBEditCourseCommentResponse*)[[[TXPBEditCourseCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBEditCourseCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBEditCourseCommentResponse*)[[[TXPBEditCourseCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBEditCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBEditCourseCommentResponse*)[[[TXPBEditCourseCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBEditCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBEditCourseCommentResponse*)[[[TXPBEditCourseCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBEditCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBEditCourseCommentResponse*)[[[TXPBEditCourseCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBEditCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBEditCourseCommentResponse*)[[[TXPBEditCourseCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBEditCourseCommentResponseBuilder*) builder {
  return [[TXPBEditCourseCommentResponseBuilder alloc] init];
}
+ (TXPBEditCourseCommentResponseBuilder*) builderWithPrototype:(TXPBEditCourseCommentResponse*) prototype {
  return [[TXPBEditCourseCommentResponse builder] mergeFrom:prototype];
}
- (TXPBEditCourseCommentResponseBuilder*) builder {
  return [TXPBEditCourseCommentResponse builder];
}
- (TXPBEditCourseCommentResponseBuilder*) toBuilder {
  return [TXPBEditCourseCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBEditCourseCommentResponse class]]) {
    return NO;
  }
  TXPBEditCourseCommentResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBEditCourseCommentResponseBuilder()
@property (strong) TXPBEditCourseCommentResponse* resultEditCourseCommentResponse;
@end

@implementation TXPBEditCourseCommentResponseBuilder
@synthesize resultEditCourseCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultEditCourseCommentResponse = [[TXPBEditCourseCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultEditCourseCommentResponse;
}
- (TXPBEditCourseCommentResponseBuilder*) clear {
  self.resultEditCourseCommentResponse = [[TXPBEditCourseCommentResponse alloc] init];
  return self;
}
- (TXPBEditCourseCommentResponseBuilder*) clone {
  return [TXPBEditCourseCommentResponse builderWithPrototype:resultEditCourseCommentResponse];
}
- (TXPBEditCourseCommentResponse*) defaultInstance {
  return [TXPBEditCourseCommentResponse defaultInstance];
}
- (TXPBEditCourseCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBEditCourseCommentResponse*) buildPartial {
  TXPBEditCourseCommentResponse* returnMe = resultEditCourseCommentResponse;
  self.resultEditCourseCommentResponse = nil;
  return returnMe;
}
- (TXPBEditCourseCommentResponseBuilder*) mergeFrom:(TXPBEditCourseCommentResponse*) other {
  if (other == [TXPBEditCourseCommentResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBEditCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBEditCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchUserCourseCommentRequest ()
@property SInt64 courseId;
@end

@implementation TXPBFetchUserCourseCommentRequest

- (BOOL) hasCourseId {
  return !!hasCourseId_;
}
- (void) setHasCourseId:(BOOL) _value_ {
  hasCourseId_ = !!_value_;
}
@synthesize courseId;
- (instancetype) init {
  if ((self = [super init])) {
    self.courseId = 0L;
  }
  return self;
}
static TXPBFetchUserCourseCommentRequest* defaultTXPBFetchUserCourseCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserCourseCommentRequest class]) {
    defaultTXPBFetchUserCourseCommentRequestInstance = [[TXPBFetchUserCourseCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserCourseCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserCourseCommentRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCourseId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCourseId) {
    [output writeInt64:1 value:self.courseId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCourseId) {
    size_ += computeInt64Size(1, self.courseId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserCourseCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchUserCourseCommentRequest*)[[[TXPBFetchUserCourseCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchUserCourseCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCourseCommentRequest*)[[[TXPBFetchUserCourseCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserCourseCommentRequest*)[[[TXPBFetchUserCourseCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserCourseCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCourseCommentRequest*)[[[TXPBFetchUserCourseCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserCourseCommentRequest*)[[[TXPBFetchUserCourseCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserCourseCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCourseCommentRequest*)[[[TXPBFetchUserCourseCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCourseCommentRequestBuilder*) builder {
  return [[TXPBFetchUserCourseCommentRequestBuilder alloc] init];
}
+ (TXPBFetchUserCourseCommentRequestBuilder*) builderWithPrototype:(TXPBFetchUserCourseCommentRequest*) prototype {
  return [[TXPBFetchUserCourseCommentRequest builder] mergeFrom:prototype];
}
- (TXPBFetchUserCourseCommentRequestBuilder*) builder {
  return [TXPBFetchUserCourseCommentRequest builder];
}
- (TXPBFetchUserCourseCommentRequestBuilder*) toBuilder {
  return [TXPBFetchUserCourseCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCourseId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseId", [NSNumber numberWithLongLong:self.courseId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCourseId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseId] forKey: @"courseId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserCourseCommentRequest class]]) {
    return NO;
  }
  TXPBFetchUserCourseCommentRequest *otherMessage = other;
  return
      self.hasCourseId == otherMessage.hasCourseId &&
      (!self.hasCourseId || self.courseId == otherMessage.courseId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCourseId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserCourseCommentRequestBuilder()
@property (strong) TXPBFetchUserCourseCommentRequest* resultFetchUserCourseCommentRequest;
@end

@implementation TXPBFetchUserCourseCommentRequestBuilder
@synthesize resultFetchUserCourseCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserCourseCommentRequest = [[TXPBFetchUserCourseCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserCourseCommentRequest;
}
- (TXPBFetchUserCourseCommentRequestBuilder*) clear {
  self.resultFetchUserCourseCommentRequest = [[TXPBFetchUserCourseCommentRequest alloc] init];
  return self;
}
- (TXPBFetchUserCourseCommentRequestBuilder*) clone {
  return [TXPBFetchUserCourseCommentRequest builderWithPrototype:resultFetchUserCourseCommentRequest];
}
- (TXPBFetchUserCourseCommentRequest*) defaultInstance {
  return [TXPBFetchUserCourseCommentRequest defaultInstance];
}
- (TXPBFetchUserCourseCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserCourseCommentRequest*) buildPartial {
  TXPBFetchUserCourseCommentRequest* returnMe = resultFetchUserCourseCommentRequest;
  self.resultFetchUserCourseCommentRequest = nil;
  return returnMe;
}
- (TXPBFetchUserCourseCommentRequestBuilder*) mergeFrom:(TXPBFetchUserCourseCommentRequest*) other {
  if (other == [TXPBFetchUserCourseCommentRequest defaultInstance]) {
    return self;
  }
  if (other.hasCourseId) {
    [self setCourseId:other.courseId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserCourseCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCourseId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCourseId {
  return resultFetchUserCourseCommentRequest.hasCourseId;
}
- (SInt64) courseId {
  return resultFetchUserCourseCommentRequest.courseId;
}
- (TXPBFetchUserCourseCommentRequestBuilder*) setCourseId:(SInt64) value {
  resultFetchUserCourseCommentRequest.hasCourseId = YES;
  resultFetchUserCourseCommentRequest.courseId = value;
  return self;
}
- (TXPBFetchUserCourseCommentRequestBuilder*) clearCourseId {
  resultFetchUserCourseCommentRequest.hasCourseId = NO;
  resultFetchUserCourseCommentRequest.courseId = 0L;
  return self;
}
@end

@interface TXPBFetchUserCourseCommentResponse ()
@property (strong) TXPBCourseComment* content;
@end

@implementation TXPBFetchUserCourseCommentResponse

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.content = [TXPBCourseComment defaultInstance];
  }
  return self;
}
static TXPBFetchUserCourseCommentResponse* defaultTXPBFetchUserCourseCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserCourseCommentResponse class]) {
    defaultTXPBFetchUserCourseCommentResponseInstance = [[TXPBFetchUserCourseCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserCourseCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserCourseCommentResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasContent) {
    if (!self.content.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeMessage:1 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContent) {
    size_ += computeMessageSize(1, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserCourseCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchUserCourseCommentResponse*)[[[TXPBFetchUserCourseCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchUserCourseCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCourseCommentResponse*)[[[TXPBFetchUserCourseCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserCourseCommentResponse*)[[[TXPBFetchUserCourseCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserCourseCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCourseCommentResponse*)[[[TXPBFetchUserCourseCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserCourseCommentResponse*)[[[TXPBFetchUserCourseCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserCourseCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCourseCommentResponse*)[[[TXPBFetchUserCourseCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCourseCommentResponseBuilder*) builder {
  return [[TXPBFetchUserCourseCommentResponseBuilder alloc] init];
}
+ (TXPBFetchUserCourseCommentResponseBuilder*) builderWithPrototype:(TXPBFetchUserCourseCommentResponse*) prototype {
  return [[TXPBFetchUserCourseCommentResponse builder] mergeFrom:prototype];
}
- (TXPBFetchUserCourseCommentResponseBuilder*) builder {
  return [TXPBFetchUserCourseCommentResponse builder];
}
- (TXPBFetchUserCourseCommentResponseBuilder*) toBuilder {
  return [TXPBFetchUserCourseCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContent) {
    [output appendFormat:@"%@%@ {\n", indent, @"content"];
    [self.content writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasContent) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.content storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserCourseCommentResponse class]]) {
    return NO;
  }
  TXPBFetchUserCourseCommentResponse *otherMessage = other;
  return
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserCourseCommentResponseBuilder()
@property (strong) TXPBFetchUserCourseCommentResponse* resultFetchUserCourseCommentResponse;
@end

@implementation TXPBFetchUserCourseCommentResponseBuilder
@synthesize resultFetchUserCourseCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserCourseCommentResponse = [[TXPBFetchUserCourseCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserCourseCommentResponse;
}
- (TXPBFetchUserCourseCommentResponseBuilder*) clear {
  self.resultFetchUserCourseCommentResponse = [[TXPBFetchUserCourseCommentResponse alloc] init];
  return self;
}
- (TXPBFetchUserCourseCommentResponseBuilder*) clone {
  return [TXPBFetchUserCourseCommentResponse builderWithPrototype:resultFetchUserCourseCommentResponse];
}
- (TXPBFetchUserCourseCommentResponse*) defaultInstance {
  return [TXPBFetchUserCourseCommentResponse defaultInstance];
}
- (TXPBFetchUserCourseCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserCourseCommentResponse*) buildPartial {
  TXPBFetchUserCourseCommentResponse* returnMe = resultFetchUserCourseCommentResponse;
  self.resultFetchUserCourseCommentResponse = nil;
  return returnMe;
}
- (TXPBFetchUserCourseCommentResponseBuilder*) mergeFrom:(TXPBFetchUserCourseCommentResponse*) other {
  if (other == [TXPBFetchUserCourseCommentResponse defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self mergeContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserCourseCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCourseCommentBuilder* subBuilder = [TXPBCourseComment builder];
        if (self.hasContent) {
          [subBuilder mergeFrom:self.content];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContent:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return resultFetchUserCourseCommentResponse.hasContent;
}
- (TXPBCourseComment*) content {
  return resultFetchUserCourseCommentResponse.content;
}
- (TXPBFetchUserCourseCommentResponseBuilder*) setContent:(TXPBCourseComment*) value {
  resultFetchUserCourseCommentResponse.hasContent = YES;
  resultFetchUserCourseCommentResponse.content = value;
  return self;
}
- (TXPBFetchUserCourseCommentResponseBuilder*) setContentBuilder:(TXPBCourseCommentBuilder*) builderForValue {
  return [self setContent:[builderForValue build]];
}
- (TXPBFetchUserCourseCommentResponseBuilder*) mergeContent:(TXPBCourseComment*) value {
  if (resultFetchUserCourseCommentResponse.hasContent &&
      resultFetchUserCourseCommentResponse.content != [TXPBCourseComment defaultInstance]) {
    resultFetchUserCourseCommentResponse.content =
      [[[TXPBCourseComment builderWithPrototype:resultFetchUserCourseCommentResponse.content] mergeFrom:value] buildPartial];
  } else {
    resultFetchUserCourseCommentResponse.content = value;
  }
  resultFetchUserCourseCommentResponse.hasContent = YES;
  return self;
}
- (TXPBFetchUserCourseCommentResponseBuilder*) clearContent {
  resultFetchUserCourseCommentResponse.hasContent = NO;
  resultFetchUserCourseCommentResponse.content = [TXPBCourseComment defaultInstance];
  return self;
}
@end

@interface TXPBPlayCourseLessonRequest ()
@property SInt64 courseLessonId;
@end

@implementation TXPBPlayCourseLessonRequest

- (BOOL) hasCourseLessonId {
  return !!hasCourseLessonId_;
}
- (void) setHasCourseLessonId:(BOOL) _value_ {
  hasCourseLessonId_ = !!_value_;
}
@synthesize courseLessonId;
- (instancetype) init {
  if ((self = [super init])) {
    self.courseLessonId = 0L;
  }
  return self;
}
static TXPBPlayCourseLessonRequest* defaultTXPBPlayCourseLessonRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBPlayCourseLessonRequest class]) {
    defaultTXPBPlayCourseLessonRequestInstance = [[TXPBPlayCourseLessonRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPlayCourseLessonRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPlayCourseLessonRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCourseLessonId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCourseLessonId) {
    [output writeInt64:1 value:self.courseLessonId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCourseLessonId) {
    size_ += computeInt64Size(1, self.courseLessonId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPlayCourseLessonRequest*) parseFromData:(NSData*) data {
  return (TXPBPlayCourseLessonRequest*)[[[TXPBPlayCourseLessonRequest builder] mergeFromData:data] build];
}
+ (TXPBPlayCourseLessonRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayCourseLessonRequest*)[[[TXPBPlayCourseLessonRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayCourseLessonRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPlayCourseLessonRequest*)[[[TXPBPlayCourseLessonRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBPlayCourseLessonRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayCourseLessonRequest*)[[[TXPBPlayCourseLessonRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayCourseLessonRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPlayCourseLessonRequest*)[[[TXPBPlayCourseLessonRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPlayCourseLessonRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayCourseLessonRequest*)[[[TXPBPlayCourseLessonRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayCourseLessonRequestBuilder*) builder {
  return [[TXPBPlayCourseLessonRequestBuilder alloc] init];
}
+ (TXPBPlayCourseLessonRequestBuilder*) builderWithPrototype:(TXPBPlayCourseLessonRequest*) prototype {
  return [[TXPBPlayCourseLessonRequest builder] mergeFrom:prototype];
}
- (TXPBPlayCourseLessonRequestBuilder*) builder {
  return [TXPBPlayCourseLessonRequest builder];
}
- (TXPBPlayCourseLessonRequestBuilder*) toBuilder {
  return [TXPBPlayCourseLessonRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCourseLessonId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"courseLessonId", [NSNumber numberWithLongLong:self.courseLessonId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCourseLessonId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.courseLessonId] forKey: @"courseLessonId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPlayCourseLessonRequest class]]) {
    return NO;
  }
  TXPBPlayCourseLessonRequest *otherMessage = other;
  return
      self.hasCourseLessonId == otherMessage.hasCourseLessonId &&
      (!self.hasCourseLessonId || self.courseLessonId == otherMessage.courseLessonId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCourseLessonId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.courseLessonId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPlayCourseLessonRequestBuilder()
@property (strong) TXPBPlayCourseLessonRequest* resultPlayCourseLessonRequest;
@end

@implementation TXPBPlayCourseLessonRequestBuilder
@synthesize resultPlayCourseLessonRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPlayCourseLessonRequest = [[TXPBPlayCourseLessonRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPlayCourseLessonRequest;
}
- (TXPBPlayCourseLessonRequestBuilder*) clear {
  self.resultPlayCourseLessonRequest = [[TXPBPlayCourseLessonRequest alloc] init];
  return self;
}
- (TXPBPlayCourseLessonRequestBuilder*) clone {
  return [TXPBPlayCourseLessonRequest builderWithPrototype:resultPlayCourseLessonRequest];
}
- (TXPBPlayCourseLessonRequest*) defaultInstance {
  return [TXPBPlayCourseLessonRequest defaultInstance];
}
- (TXPBPlayCourseLessonRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPlayCourseLessonRequest*) buildPartial {
  TXPBPlayCourseLessonRequest* returnMe = resultPlayCourseLessonRequest;
  self.resultPlayCourseLessonRequest = nil;
  return returnMe;
}
- (TXPBPlayCourseLessonRequestBuilder*) mergeFrom:(TXPBPlayCourseLessonRequest*) other {
  if (other == [TXPBPlayCourseLessonRequest defaultInstance]) {
    return self;
  }
  if (other.hasCourseLessonId) {
    [self setCourseLessonId:other.courseLessonId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPlayCourseLessonRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPlayCourseLessonRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCourseLessonId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCourseLessonId {
  return resultPlayCourseLessonRequest.hasCourseLessonId;
}
- (SInt64) courseLessonId {
  return resultPlayCourseLessonRequest.courseLessonId;
}
- (TXPBPlayCourseLessonRequestBuilder*) setCourseLessonId:(SInt64) value {
  resultPlayCourseLessonRequest.hasCourseLessonId = YES;
  resultPlayCourseLessonRequest.courseLessonId = value;
  return self;
}
- (TXPBPlayCourseLessonRequestBuilder*) clearCourseLessonId {
  resultPlayCourseLessonRequest.hasCourseLessonId = NO;
  resultPlayCourseLessonRequest.courseLessonId = 0L;
  return self;
}
@end

@interface TXPBPlayCourseLessonResponse ()
@end

@implementation TXPBPlayCourseLessonResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBPlayCourseLessonResponse* defaultTXPBPlayCourseLessonResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBPlayCourseLessonResponse class]) {
    defaultTXPBPlayCourseLessonResponseInstance = [[TXPBPlayCourseLessonResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPlayCourseLessonResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPlayCourseLessonResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPlayCourseLessonResponse*) parseFromData:(NSData*) data {
  return (TXPBPlayCourseLessonResponse*)[[[TXPBPlayCourseLessonResponse builder] mergeFromData:data] build];
}
+ (TXPBPlayCourseLessonResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayCourseLessonResponse*)[[[TXPBPlayCourseLessonResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayCourseLessonResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPlayCourseLessonResponse*)[[[TXPBPlayCourseLessonResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBPlayCourseLessonResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayCourseLessonResponse*)[[[TXPBPlayCourseLessonResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayCourseLessonResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPlayCourseLessonResponse*)[[[TXPBPlayCourseLessonResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPlayCourseLessonResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayCourseLessonResponse*)[[[TXPBPlayCourseLessonResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayCourseLessonResponseBuilder*) builder {
  return [[TXPBPlayCourseLessonResponseBuilder alloc] init];
}
+ (TXPBPlayCourseLessonResponseBuilder*) builderWithPrototype:(TXPBPlayCourseLessonResponse*) prototype {
  return [[TXPBPlayCourseLessonResponse builder] mergeFrom:prototype];
}
- (TXPBPlayCourseLessonResponseBuilder*) builder {
  return [TXPBPlayCourseLessonResponse builder];
}
- (TXPBPlayCourseLessonResponseBuilder*) toBuilder {
  return [TXPBPlayCourseLessonResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPlayCourseLessonResponse class]]) {
    return NO;
  }
  TXPBPlayCourseLessonResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPlayCourseLessonResponseBuilder()
@property (strong) TXPBPlayCourseLessonResponse* resultPlayCourseLessonResponse;
@end

@implementation TXPBPlayCourseLessonResponseBuilder
@synthesize resultPlayCourseLessonResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPlayCourseLessonResponse = [[TXPBPlayCourseLessonResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPlayCourseLessonResponse;
}
- (TXPBPlayCourseLessonResponseBuilder*) clear {
  self.resultPlayCourseLessonResponse = [[TXPBPlayCourseLessonResponse alloc] init];
  return self;
}
- (TXPBPlayCourseLessonResponseBuilder*) clone {
  return [TXPBPlayCourseLessonResponse builderWithPrototype:resultPlayCourseLessonResponse];
}
- (TXPBPlayCourseLessonResponse*) defaultInstance {
  return [TXPBPlayCourseLessonResponse defaultInstance];
}
- (TXPBPlayCourseLessonResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPlayCourseLessonResponse*) buildPartial {
  TXPBPlayCourseLessonResponse* returnMe = resultPlayCourseLessonResponse;
  self.resultPlayCourseLessonResponse = nil;
  return returnMe;
}
- (TXPBPlayCourseLessonResponseBuilder*) mergeFrom:(TXPBPlayCourseLessonResponse*) other {
  if (other == [TXPBPlayCourseLessonResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPlayCourseLessonResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPlayCourseLessonResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end


// @@protoc_insertion_point(global_scope)
