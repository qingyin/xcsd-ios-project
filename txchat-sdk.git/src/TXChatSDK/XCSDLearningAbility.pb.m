// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "XCSDLearningAbility.pb.h"
// @@protoc_insertion_point(imports)

@implementation XCSDPBXcsdlearningAbilityRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [XCSDPBXcsdlearningAbilityRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [XCSDPBXcsdhomeworkRoot registerAllExtensions:registry];
    [ObjectivecDescriptorRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL XCSDPBAbilityIsValidValue(XCSDPBAbility value) {
  switch (value) {
    case XCSDPBAbilityAttention:
    case XCSDPBAbilityMemory:
    case XCSDPBAbilityReaction:
    case XCSDPBAbilityReasoning:
    case XCSDPBAbilitySpatialThinking:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromXCSDPBAbility(XCSDPBAbility value) {
  switch (value) {
    case XCSDPBAbilityAttention:
      return @"XCSDPBAbilityAttention";
    case XCSDPBAbilityMemory:
      return @"XCSDPBAbilityMemory";
    case XCSDPBAbilityReaction:
      return @"XCSDPBAbilityReaction";
    case XCSDPBAbilityReasoning:
      return @"XCSDPBAbilityReasoning";
    case XCSDPBAbilitySpatialThinking:
      return @"XCSDPBAbilitySpatialThinking";
    default:
      return nil;
  }
}

@interface XCSDPBAbilityValue ()
@property XCSDPBAbility ability;
@property SInt32 value;
@end

@implementation XCSDPBAbilityValue

- (BOOL) hasAbility {
  return !!hasAbility_;
}
- (void) setHasAbility:(BOOL) _value_ {
  hasAbility_ = !!_value_;
}
@synthesize ability;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) _value_ {
  hasValue_ = !!_value_;
}
@synthesize value;
- (instancetype) init {
  if ((self = [super init])) {
    self.ability = XCSDPBAbilityAttention;
    self.value = 0;
  }
  return self;
}
static XCSDPBAbilityValue* defaultXCSDPBAbilityValueInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBAbilityValue class]) {
    defaultXCSDPBAbilityValueInstance = [[XCSDPBAbilityValue alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBAbilityValueInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBAbilityValueInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAbility) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAbility) {
    [output writeEnum:1 value:self.ability];
  }
  if (self.hasValue) {
    [output writeInt32:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAbility) {
    size_ += computeEnumSize(1, self.ability);
  }
  if (self.hasValue) {
    size_ += computeInt32Size(2, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBAbilityValue*) parseFromData:(NSData*) data {
  return (XCSDPBAbilityValue*)[[[XCSDPBAbilityValue builder] mergeFromData:data] build];
}
+ (XCSDPBAbilityValue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBAbilityValue*)[[[XCSDPBAbilityValue builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBAbilityValue*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBAbilityValue*)[[[XCSDPBAbilityValue builder] mergeFromInputStream:input] build];
}
+ (XCSDPBAbilityValue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBAbilityValue*)[[[XCSDPBAbilityValue builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBAbilityValue*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBAbilityValue*)[[[XCSDPBAbilityValue builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBAbilityValue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBAbilityValue*)[[[XCSDPBAbilityValue builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBAbilityValueBuilder*) builder {
  return [[XCSDPBAbilityValueBuilder alloc] init];
}
+ (XCSDPBAbilityValueBuilder*) builderWithPrototype:(XCSDPBAbilityValue*) prototype {
  return [[XCSDPBAbilityValue builder] mergeFrom:prototype];
}
- (XCSDPBAbilityValueBuilder*) builder {
  return [XCSDPBAbilityValue builder];
}
- (XCSDPBAbilityValueBuilder*) toBuilder {
  return [XCSDPBAbilityValue builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAbility) {
    [output appendFormat:@"%@%@: %@\n", indent, @"ability", NSStringFromXCSDPBAbility(self.ability)];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", [NSNumber numberWithInteger:self.value]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAbility) {
    [dictionary setObject: @(self.ability) forKey: @"ability"];
  }
  if (self.hasValue) {
    [dictionary setObject: [NSNumber numberWithInteger:self.value] forKey: @"value"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBAbilityValue class]]) {
    return NO;
  }
  XCSDPBAbilityValue *otherMessage = other;
  return
      self.hasAbility == otherMessage.hasAbility &&
      (!self.hasAbility || self.ability == otherMessage.ability) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || self.value == otherMessage.value) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAbility) {
    hashCode = hashCode * 31 + self.ability;
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.value] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBAbilityValueBuilder()
@property (strong) XCSDPBAbilityValue* resultAbilityValue;
@end

@implementation XCSDPBAbilityValueBuilder
@synthesize resultAbilityValue;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAbilityValue = [[XCSDPBAbilityValue alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAbilityValue;
}
- (XCSDPBAbilityValueBuilder*) clear {
  self.resultAbilityValue = [[XCSDPBAbilityValue alloc] init];
  return self;
}
- (XCSDPBAbilityValueBuilder*) clone {
  return [XCSDPBAbilityValue builderWithPrototype:resultAbilityValue];
}
- (XCSDPBAbilityValue*) defaultInstance {
  return [XCSDPBAbilityValue defaultInstance];
}
- (XCSDPBAbilityValue*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBAbilityValue*) buildPartial {
  XCSDPBAbilityValue* returnMe = resultAbilityValue;
  self.resultAbilityValue = nil;
  return returnMe;
}
- (XCSDPBAbilityValueBuilder*) mergeFrom:(XCSDPBAbilityValue*) other {
  if (other == [XCSDPBAbilityValue defaultInstance]) {
    return self;
  }
  if (other.hasAbility) {
    [self setAbility:other.ability];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBAbilityValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBAbilityValueBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        XCSDPBAbility value = (XCSDPBAbility)[input readEnum];
        if (XCSDPBAbilityIsValidValue(value)) {
          [self setAbility:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setValue:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAbility {
  return resultAbilityValue.hasAbility;
}
- (XCSDPBAbility) ability {
  return resultAbilityValue.ability;
}
- (XCSDPBAbilityValueBuilder*) setAbility:(XCSDPBAbility) value {
  resultAbilityValue.hasAbility = YES;
  resultAbilityValue.ability = value;
  return self;
}
- (XCSDPBAbilityValueBuilder*) clearAbility {
  resultAbilityValue.hasAbility = NO;
  resultAbilityValue.ability = XCSDPBAbilityAttention;
  return self;
}
- (BOOL) hasValue {
  return resultAbilityValue.hasValue;
}
- (SInt32) value {
  return resultAbilityValue.value;
}
- (XCSDPBAbilityValueBuilder*) setValue:(SInt32) value {
  resultAbilityValue.hasValue = YES;
  resultAbilityValue.value = value;
  return self;
}
- (XCSDPBAbilityValueBuilder*) clearValue {
  resultAbilityValue.hasValue = NO;
  resultAbilityValue.value = 0;
  return self;
}
@end

@interface XCSDPBClassAbilityRankingRequest ()
@property SInt64 classId;
@end

@implementation XCSDPBClassAbilityRankingRequest

- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (instancetype) init {
  if ((self = [super init])) {
    self.classId = 0L;
  }
  return self;
}
static XCSDPBClassAbilityRankingRequest* defaultXCSDPBClassAbilityRankingRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBClassAbilityRankingRequest class]) {
    defaultXCSDPBClassAbilityRankingRequestInstance = [[XCSDPBClassAbilityRankingRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBClassAbilityRankingRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBClassAbilityRankingRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasClassId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClassId) {
    [output writeInt64:1 value:self.classId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClassId) {
    size_ += computeInt64Size(1, self.classId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBClassAbilityRankingRequest*) parseFromData:(NSData*) data {
  return (XCSDPBClassAbilityRankingRequest*)[[[XCSDPBClassAbilityRankingRequest builder] mergeFromData:data] build];
}
+ (XCSDPBClassAbilityRankingRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassAbilityRankingRequest*)[[[XCSDPBClassAbilityRankingRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassAbilityRankingRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBClassAbilityRankingRequest*)[[[XCSDPBClassAbilityRankingRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBClassAbilityRankingRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassAbilityRankingRequest*)[[[XCSDPBClassAbilityRankingRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassAbilityRankingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBClassAbilityRankingRequest*)[[[XCSDPBClassAbilityRankingRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBClassAbilityRankingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassAbilityRankingRequest*)[[[XCSDPBClassAbilityRankingRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassAbilityRankingRequestBuilder*) builder {
  return [[XCSDPBClassAbilityRankingRequestBuilder alloc] init];
}
+ (XCSDPBClassAbilityRankingRequestBuilder*) builderWithPrototype:(XCSDPBClassAbilityRankingRequest*) prototype {
  return [[XCSDPBClassAbilityRankingRequest builder] mergeFrom:prototype];
}
- (XCSDPBClassAbilityRankingRequestBuilder*) builder {
  return [XCSDPBClassAbilityRankingRequest builder];
}
- (XCSDPBClassAbilityRankingRequestBuilder*) toBuilder {
  return [XCSDPBClassAbilityRankingRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBClassAbilityRankingRequest class]]) {
    return NO;
  }
  XCSDPBClassAbilityRankingRequest *otherMessage = other;
  return
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBClassAbilityRankingRequestBuilder()
@property (strong) XCSDPBClassAbilityRankingRequest* resultClassAbilityRankingRequest;
@end

@implementation XCSDPBClassAbilityRankingRequestBuilder
@synthesize resultClassAbilityRankingRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClassAbilityRankingRequest = [[XCSDPBClassAbilityRankingRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClassAbilityRankingRequest;
}
- (XCSDPBClassAbilityRankingRequestBuilder*) clear {
  self.resultClassAbilityRankingRequest = [[XCSDPBClassAbilityRankingRequest alloc] init];
  return self;
}
- (XCSDPBClassAbilityRankingRequestBuilder*) clone {
  return [XCSDPBClassAbilityRankingRequest builderWithPrototype:resultClassAbilityRankingRequest];
}
- (XCSDPBClassAbilityRankingRequest*) defaultInstance {
  return [XCSDPBClassAbilityRankingRequest defaultInstance];
}
- (XCSDPBClassAbilityRankingRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBClassAbilityRankingRequest*) buildPartial {
  XCSDPBClassAbilityRankingRequest* returnMe = resultClassAbilityRankingRequest;
  self.resultClassAbilityRankingRequest = nil;
  return returnMe;
}
- (XCSDPBClassAbilityRankingRequestBuilder*) mergeFrom:(XCSDPBClassAbilityRankingRequest*) other {
  if (other == [XCSDPBClassAbilityRankingRequest defaultInstance]) {
    return self;
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBClassAbilityRankingRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBClassAbilityRankingRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClassId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasClassId {
  return resultClassAbilityRankingRequest.hasClassId;
}
- (SInt64) classId {
  return resultClassAbilityRankingRequest.classId;
}
- (XCSDPBClassAbilityRankingRequestBuilder*) setClassId:(SInt64) value {
  resultClassAbilityRankingRequest.hasClassId = YES;
  resultClassAbilityRankingRequest.classId = value;
  return self;
}
- (XCSDPBClassAbilityRankingRequestBuilder*) clearClassId {
  resultClassAbilityRankingRequest.hasClassId = NO;
  resultClassAbilityRankingRequest.classId = 0L;
  return self;
}
@end

@interface XCSDPBClassAbilityRankingResponse ()
@property (strong) NSMutableArray * rankListArray;
@end

@implementation XCSDPBClassAbilityRankingResponse

@synthesize rankListArray;
@dynamic rankList;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static XCSDPBClassAbilityRankingResponse* defaultXCSDPBClassAbilityRankingResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBClassAbilityRankingResponse class]) {
    defaultXCSDPBClassAbilityRankingResponseInstance = [[XCSDPBClassAbilityRankingResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBClassAbilityRankingResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBClassAbilityRankingResponseInstance;
}
- (NSArray *)rankList {
  return rankListArray;
}
- (XCSDPBUserRank*)rankListAtIndex:(NSUInteger)index {
  return [rankListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitrankList = YES;
   [self.rankList enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitrankList = NO;
      *stop = YES;
    }
  }];
  if (!isInitrankList) return isInitrankList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBClassAbilityRankingResponse*) parseFromData:(NSData*) data {
  return (XCSDPBClassAbilityRankingResponse*)[[[XCSDPBClassAbilityRankingResponse builder] mergeFromData:data] build];
}
+ (XCSDPBClassAbilityRankingResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassAbilityRankingResponse*)[[[XCSDPBClassAbilityRankingResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassAbilityRankingResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBClassAbilityRankingResponse*)[[[XCSDPBClassAbilityRankingResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBClassAbilityRankingResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassAbilityRankingResponse*)[[[XCSDPBClassAbilityRankingResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassAbilityRankingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBClassAbilityRankingResponse*)[[[XCSDPBClassAbilityRankingResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBClassAbilityRankingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassAbilityRankingResponse*)[[[XCSDPBClassAbilityRankingResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassAbilityRankingResponseBuilder*) builder {
  return [[XCSDPBClassAbilityRankingResponseBuilder alloc] init];
}
+ (XCSDPBClassAbilityRankingResponseBuilder*) builderWithPrototype:(XCSDPBClassAbilityRankingResponse*) prototype {
  return [[XCSDPBClassAbilityRankingResponse builder] mergeFrom:prototype];
}
- (XCSDPBClassAbilityRankingResponseBuilder*) builder {
  return [XCSDPBClassAbilityRankingResponse builder];
}
- (XCSDPBClassAbilityRankingResponseBuilder*) toBuilder {
  return [XCSDPBClassAbilityRankingResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"rankList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (XCSDPBUserRank* element in self.rankListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"rankList"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBClassAbilityRankingResponse class]]) {
    return NO;
  }
  XCSDPBClassAbilityRankingResponse *otherMessage = other;
  return
      [self.rankListArray isEqualToArray:otherMessage.rankListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBClassAbilityRankingResponseBuilder()
@property (strong) XCSDPBClassAbilityRankingResponse* resultClassAbilityRankingResponse;
@end

@implementation XCSDPBClassAbilityRankingResponseBuilder
@synthesize resultClassAbilityRankingResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClassAbilityRankingResponse = [[XCSDPBClassAbilityRankingResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClassAbilityRankingResponse;
}
- (XCSDPBClassAbilityRankingResponseBuilder*) clear {
  self.resultClassAbilityRankingResponse = [[XCSDPBClassAbilityRankingResponse alloc] init];
  return self;
}
- (XCSDPBClassAbilityRankingResponseBuilder*) clone {
  return [XCSDPBClassAbilityRankingResponse builderWithPrototype:resultClassAbilityRankingResponse];
}
- (XCSDPBClassAbilityRankingResponse*) defaultInstance {
  return [XCSDPBClassAbilityRankingResponse defaultInstance];
}
- (XCSDPBClassAbilityRankingResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBClassAbilityRankingResponse*) buildPartial {
  XCSDPBClassAbilityRankingResponse* returnMe = resultClassAbilityRankingResponse;
  self.resultClassAbilityRankingResponse = nil;
  return returnMe;
}
- (XCSDPBClassAbilityRankingResponseBuilder*) mergeFrom:(XCSDPBClassAbilityRankingResponse*) other {
  if (other == [XCSDPBClassAbilityRankingResponse defaultInstance]) {
    return self;
  }
  if (other.rankListArray.count > 0) {
    if (resultClassAbilityRankingResponse.rankListArray == nil) {
      resultClassAbilityRankingResponse.rankListArray = [[NSMutableArray alloc] initWithArray:other.rankListArray];
    } else {
      [resultClassAbilityRankingResponse.rankListArray addObjectsFromArray:other.rankListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBClassAbilityRankingResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBClassAbilityRankingResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        XCSDPBUserRankBuilder* subBuilder = [XCSDPBUserRank builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRankList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)rankList {
  return resultClassAbilityRankingResponse.rankListArray;
}
- (XCSDPBUserRank*)rankListAtIndex:(NSUInteger)index {
  return [resultClassAbilityRankingResponse rankListAtIndex:index];
}
- (XCSDPBClassAbilityRankingResponseBuilder *)addRankList:(XCSDPBUserRank*)value {
  if (resultClassAbilityRankingResponse.rankListArray == nil) {
    resultClassAbilityRankingResponse.rankListArray = [[NSMutableArray alloc]init];
  }
  [resultClassAbilityRankingResponse.rankListArray addObject:value];
  return self;
}
- (XCSDPBClassAbilityRankingResponseBuilder *)setRankListArray:(NSArray *)array {
  resultClassAbilityRankingResponse.rankListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (XCSDPBClassAbilityRankingResponseBuilder *)clearRankList {
  resultClassAbilityRankingResponse.rankListArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
