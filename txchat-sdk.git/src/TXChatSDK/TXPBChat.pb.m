// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "TXPBChat.pb.h"
// @@protoc_insertion_point(imports)

@implementation TXPBTxpbchatRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TXPBTxpbchatRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ObjectivecDescriptorRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL TXPBParentTypeIsValidValue(TXPBParentType value) {
  switch (value) {
    case TXPBParentTypeFather:
    case TXPBParentTypeMother:
    case TXPBParentTypeFathersfather:
    case TXPBParentTypeFathersmother:
    case TXPBParentTypeMothersfather:
    case TXPBParentTypeMothersmother:
    case TXPBParentTypeOtherparenttype:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBParentType(TXPBParentType value) {
  switch (value) {
    case TXPBParentTypeFather:
      return @"TXPBParentTypeFather";
    case TXPBParentTypeMother:
      return @"TXPBParentTypeMother";
    case TXPBParentTypeFathersfather:
      return @"TXPBParentTypeFathersfather";
    case TXPBParentTypeFathersmother:
      return @"TXPBParentTypeFathersmother";
    case TXPBParentTypeMothersfather:
      return @"TXPBParentTypeMothersfather";
    case TXPBParentTypeMothersmother:
      return @"TXPBParentTypeMothersmother";
    case TXPBParentTypeOtherparenttype:
      return @"TXPBParentTypeOtherparenttype";
    default:
      return nil;
  }
}

BOOL TXPBUserTypeIsValidValue(TXPBUserType value) {
  switch (value) {
    case TXPBUserTypeChild:
    case TXPBUserTypeParent:
    case TXPBUserTypeTeacher:
    case TXPBUserTypePartner:
    case TXPBUserTypeExpert:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBUserType(TXPBUserType value) {
  switch (value) {
    case TXPBUserTypeChild:
      return @"TXPBUserTypeChild";
    case TXPBUserTypeParent:
      return @"TXPBUserTypeParent";
    case TXPBUserTypeTeacher:
      return @"TXPBUserTypeTeacher";
    case TXPBUserTypePartner:
      return @"TXPBUserTypePartner";
    case TXPBUserTypeExpert:
      return @"TXPBUserTypeExpert";
    default:
      return nil;
  }
}

BOOL TXPBDepartmentTypeIsValidValue(TXPBDepartmentType value) {
  switch (value) {
    case TXPBDepartmentTypeGarden:
    case TXPBDepartmentTypeClazz:
    case TXPBDepartmentTypeGroupGarden:
    case TXPBDepartmentTypeEducation:
    case TXPBDepartmentTypeOtherdepartmenttype:
    case TXPBDepartmentTypeDepartment:
    case TXPBDepartmentTypeInterestClazz:
    case TXPBDepartmentTypeSchool:
    case TXPBDepartmentTypeGrade:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBDepartmentType(TXPBDepartmentType value) {
  switch (value) {
    case TXPBDepartmentTypeGarden:
      return @"TXPBDepartmentTypeGarden";
    case TXPBDepartmentTypeClazz:
      return @"TXPBDepartmentTypeClazz";
    case TXPBDepartmentTypeGroupGarden:
      return @"TXPBDepartmentTypeGroupGarden";
    case TXPBDepartmentTypeEducation:
      return @"TXPBDepartmentTypeEducation";
    case TXPBDepartmentTypeOtherdepartmenttype:
      return @"TXPBDepartmentTypeOtherdepartmenttype";
    case TXPBDepartmentTypeDepartment:
      return @"TXPBDepartmentTypeDepartment";
    case TXPBDepartmentTypeInterestClazz:
      return @"TXPBDepartmentTypeInterestClazz";
    case TXPBDepartmentTypeSchool:
      return @"TXPBDepartmentTypeSchool";
    case TXPBDepartmentTypeGrade:
      return @"TXPBDepartmentTypeGrade";
    default:
      return nil;
  }
}

BOOL TXPBActionTypeIsValidValue(TXPBActionType value) {
  switch (value) {
    case TXPBActionTypeAdd:
    case TXPBActionTypeUpdate:
    case TXPBActionTypeAddOrUpdate:
    case TXPBActionTypeDelete:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBActionType(TXPBActionType value) {
  switch (value) {
    case TXPBActionTypeAdd:
      return @"TXPBActionTypeAdd";
    case TXPBActionTypeUpdate:
      return @"TXPBActionTypeUpdate";
    case TXPBActionTypeAddOrUpdate:
      return @"TXPBActionTypeAddOrUpdate";
    case TXPBActionTypeDelete:
      return @"TXPBActionTypeDelete";
    default:
      return nil;
  }
}

BOOL TXPBAttachTypeIsValidValue(TXPBAttachType value) {
  switch (value) {
    case TXPBAttachTypePic:
    case TXPBAttachTypeAudio:
    case TXPBAttachTypeVedio:
    case TXPBAttachTypeOtherattachtype:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBAttachType(TXPBAttachType value) {
  switch (value) {
    case TXPBAttachTypePic:
      return @"TXPBAttachTypePic";
    case TXPBAttachTypeAudio:
      return @"TXPBAttachTypeAudio";
    case TXPBAttachTypeVedio:
      return @"TXPBAttachTypeVedio";
    case TXPBAttachTypeOtherattachtype:
      return @"TXPBAttachTypeOtherattachtype";
    default:
      return nil;
  }
}

BOOL TXPBExemptDisturbTypeIsValidValue(TXPBExemptDisturbType value) {
  switch (value) {
    case TXPBExemptDisturbTypeClose:
    case TXPBExemptDisturbTypeNight:
    case TXPBExemptDisturbTypeAll:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBExemptDisturbType(TXPBExemptDisturbType value) {
  switch (value) {
    case TXPBExemptDisturbTypeClose:
      return @"TXPBExemptDisturbTypeClose";
    case TXPBExemptDisturbTypeNight:
      return @"TXPBExemptDisturbTypeNight";
    case TXPBExemptDisturbTypeAll:
      return @"TXPBExemptDisturbTypeAll";
    default:
      return nil;
  }
}

BOOL TXPBSexTypeIsValidValue(TXPBSexType value) {
  switch (value) {
    case TXPBSexTypeFemale:
    case TXPBSexTypeMale:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBSexType(TXPBSexType value) {
  switch (value) {
    case TXPBSexTypeFemale:
      return @"TXPBSexTypeFemale";
    case TXPBSexTypeMale:
      return @"TXPBSexTypeMale";
    default:
      return nil;
  }
}

BOOL TXPBPositionTypeIsValidValue(TXPBPositionType value) {
  switch (value) {
    case TXPBPositionTypePrincipal:
    case TXPBPositionTypeVicePrincipal:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBPositionType(TXPBPositionType value) {
  switch (value) {
    case TXPBPositionTypePrincipal:
      return @"TXPBPositionTypePrincipal";
    case TXPBPositionTypeVicePrincipal:
      return @"TXPBPositionTypeVicePrincipal";
    default:
      return nil;
  }
}

BOOL TXPBErrorCodeIsValidValue(TXPBErrorCode value) {
  switch (value) {
    case TXPBErrorCodeSuc:
    case TXPBErrorCodeNotfound:
    case TXPBErrorCodeNotallow:
    case TXPBErrorCodeError:
    case TXPBErrorCodeKickoff:
    case TXPBErrorCodeTokenExpired:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBErrorCode(TXPBErrorCode value) {
  switch (value) {
    case TXPBErrorCodeSuc:
      return @"TXPBErrorCodeSuc";
    case TXPBErrorCodeNotfound:
      return @"TXPBErrorCodeNotfound";
    case TXPBErrorCodeNotallow:
      return @"TXPBErrorCodeNotallow";
    case TXPBErrorCodeError:
      return @"TXPBErrorCodeError";
    case TXPBErrorCodeKickoff:
      return @"TXPBErrorCodeKickoff";
    case TXPBErrorCodeTokenExpired:
      return @"TXPBErrorCodeTokenExpired";
    default:
      return nil;
  }
}

BOOL TXPBPushTypeIsValidValue(TXPBPushType value) {
  switch (value) {
    case TXPBPushTypeNotice:
    case TXPBPushTypeCheckin:
    case TXPBPushTypeGakuen:
    case TXPBPushTypeMedicine:
    case TXPBPushTypeVoicecode:
    case TXPBPushTypePushLerngarden:
    case TXPBPushTypePushRest:
    case TXPBPushTypePushApprove:
    case TXPBPushTypePushCommunion:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBPushType(TXPBPushType value) {
  switch (value) {
    case TXPBPushTypeNotice:
      return @"TXPBPushTypeNotice";
    case TXPBPushTypeCheckin:
      return @"TXPBPushTypeCheckin";
    case TXPBPushTypeGakuen:
      return @"TXPBPushTypeGakuen";
    case TXPBPushTypeMedicine:
      return @"TXPBPushTypeMedicine";
    case TXPBPushTypeVoicecode:
      return @"TXPBPushTypeVoicecode";
    case TXPBPushTypePushLerngarden:
      return @"TXPBPushTypePushLerngarden";
    case TXPBPushTypePushRest:
      return @"TXPBPushTypePushRest";
    case TXPBPushTypePushApprove:
      return @"TXPBPushTypePushApprove";
    case TXPBPushTypePushCommunion:
      return @"TXPBPushTypePushCommunion";
    default:
      return nil;
  }
}

BOOL TXPBPlatformTypeIsValidValue(TXPBPlatformType value) {
  switch (value) {
    case TXPBPlatformTypeIos:
    case TXPBPlatformTypeAndroid:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBPlatformType(TXPBPlatformType value) {
  switch (value) {
    case TXPBPlatformTypeIos:
      return @"TXPBPlatformTypeIos";
    case TXPBPlatformTypeAndroid:
      return @"TXPBPlatformTypeAndroid";
    default:
      return nil;
  }
}

BOOL TXPBSendSmsCodeTypeIsValidValue(TXPBSendSmsCodeType value) {
  switch (value) {
    case TXPBSendSmsCodeTypeForgetPassword:
    case TXPBSendSmsCodeTypeActivate:
    case TXPBSendSmsCodeTypeInvitationActivate:
    case TXPBSendSmsCodeTypeUpdateMobile:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBSendSmsCodeType(TXPBSendSmsCodeType value) {
  switch (value) {
    case TXPBSendSmsCodeTypeForgetPassword:
      return @"TXPBSendSmsCodeTypeForgetPassword";
    case TXPBSendSmsCodeTypeActivate:
      return @"TXPBSendSmsCodeTypeActivate";
    case TXPBSendSmsCodeTypeInvitationActivate:
      return @"TXPBSendSmsCodeTypeInvitationActivate";
    case TXPBSendSmsCodeTypeUpdateMobile:
      return @"TXPBSendSmsCodeTypeUpdateMobile";
    default:
      return nil;
  }
}

BOOL TXPBAttendanceStatusIsValidValue(TXPBAttendanceStatus value) {
  switch (value) {
    case TXPBAttendanceStatusAbsence:
    case TXPBAttendanceStatusPresent:
    case TXPBAttendanceStatusLeave:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBAttendanceStatus(TXPBAttendanceStatus value) {
  switch (value) {
    case TXPBAttendanceStatusAbsence:
      return @"TXPBAttendanceStatusAbsence";
    case TXPBAttendanceStatusPresent:
      return @"TXPBAttendanceStatusPresent";
    case TXPBAttendanceStatusLeave:
      return @"TXPBAttendanceStatusLeave";
    default:
      return nil;
  }
}

BOOL TXPBCommentTypeIsValidValue(TXPBCommentType value) {
  switch (value) {
    case TXPBCommentTypeLike:
    case TXPBCommentTypeReply:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBCommentType(TXPBCommentType value) {
  switch (value) {
    case TXPBCommentTypeLike:
      return @"TXPBCommentTypeLike";
    case TXPBCommentTypeReply:
      return @"TXPBCommentTypeReply";
    default:
      return nil;
  }
}

BOOL TXPBTargetTypeIsValidValue(TXPBTargetType value) {
  switch (value) {
    case TXPBTargetTypeFeed:
    case TXPBTargetTypeGardenMail:
    case TXPBTargetTypeFeedMedicinTask:
    case TXPBTargetTypeAnswer:
    case TXPBTargetTypeKnowledge:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBTargetType(TXPBTargetType value) {
  switch (value) {
    case TXPBTargetTypeFeed:
      return @"TXPBTargetTypeFeed";
    case TXPBTargetTypeGardenMail:
      return @"TXPBTargetTypeGardenMail";
    case TXPBTargetTypeFeedMedicinTask:
      return @"TXPBTargetTypeFeedMedicinTask";
    case TXPBTargetTypeAnswer:
      return @"TXPBTargetTypeAnswer";
    case TXPBTargetTypeKnowledge:
      return @"TXPBTargetTypeKnowledge";
    default:
      return nil;
  }
}

BOOL TXPBPostTypeIsValidValue(TXPBPostType value) {
  switch (value) {
    case TXPBPostTypeActivity:
    case TXPBPostTypeAnnouncement:
    case TXPBPostTypeLerngarden:
    case TXPBPostTypeIntro:
    case TXPBPostTypeRecipes:
    case TXPBPostTypeAgreement:
    case TXPBPostTypeSyllabus:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBPostType(TXPBPostType value) {
  switch (value) {
    case TXPBPostTypeActivity:
      return @"TXPBPostTypeActivity";
    case TXPBPostTypeAnnouncement:
      return @"TXPBPostTypeAnnouncement";
    case TXPBPostTypeLerngarden:
      return @"TXPBPostTypeLerngarden";
    case TXPBPostTypeIntro:
      return @"TXPBPostTypeIntro";
    case TXPBPostTypeRecipes:
      return @"TXPBPostTypeRecipes";
    case TXPBPostTypeAgreement:
      return @"TXPBPostTypeAgreement";
    case TXPBPostTypeSyllabus:
      return @"TXPBPostTypeSyllabus";
    default:
      return nil;
  }
}

BOOL TXPBMuteTypeIsValidValue(TXPBMuteType value) {
  switch (value) {
    case TXPBMuteTypeMuteChat:
    case TXPBMuteTypeMuteFeed:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBMuteType(TXPBMuteType value) {
  switch (value) {
    case TXPBMuteTypeMuteChat:
      return @"TXPBMuteTypeMuteChat";
    case TXPBMuteTypeMuteFeed:
      return @"TXPBMuteTypeMuteFeed";
    default:
      return nil;
  }
}

BOOL TXPBLeaveStatusIsValidValue(TXPBLeaveStatus value) {
  switch (value) {
    case TXPBLeaveStatusApplied:
    case TXPBLeaveStatusApproved:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBLeaveStatus(TXPBLeaveStatus value) {
  switch (value) {
    case TXPBLeaveStatusApplied:
      return @"TXPBLeaveStatusApplied";
    case TXPBLeaveStatusApproved:
      return @"TXPBLeaveStatusApproved";
    default:
      return nil;
  }
}

BOOL TXPBLeaveTypeIsValidValue(TXPBLeaveType value) {
  switch (value) {
    case TXPBLeaveTypeSck:
    case TXPBLeaveTypeUnp:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBLeaveType(TXPBLeaveType value) {
  switch (value) {
    case TXPBLeaveTypeSck:
      return @"TXPBLeaveTypeSck";
    case TXPBLeaveTypeUnp:
      return @"TXPBLeaveTypeUnp";
    default:
      return nil;
  }
}

@interface TXPBUser ()
@property SInt64 userId;
@property (strong) NSString* userName;
@property (strong) NSString* nickname;
@property (strong) NSString* avatar;
@property SInt64 childUserId;
@property (strong) NSString* mobile;
@property (strong) NSString* sign;
@property TXPBUserType userType;
@property TXPBActionType actionType;
@property (strong) NSString* firstLetter;
@property TXPBSexType sexType;
@property SInt64 birthday;
@property (strong) NSString* address;
@property (strong) NSString* realname;
@property (strong) NSString* gardenName;
@property (strong) NSString* className;
@property TXPBParentType parentType;
@property SInt64 gardenId;
@property SInt64 classId;
@property SInt64 positionId;
@property (strong) NSString* positionName;
@property (strong) NSString* guarder;
@property BOOL activated;
@property (strong) NSString* customName;
@property (strong) NSMutableArray * childsArray;
@property (strong) NSString* combinedNickname;
@end

@implementation TXPBUser

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value_ {
  hasNickname_ = !!_value_;
}
@synthesize nickname;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasChildUserId {
  return !!hasChildUserId_;
}
- (void) setHasChildUserId:(BOOL) _value_ {
  hasChildUserId_ = !!_value_;
}
@synthesize childUserId;
- (BOOL) hasMobile {
  return !!hasMobile_;
}
- (void) setHasMobile:(BOOL) _value_ {
  hasMobile_ = !!_value_;
}
@synthesize mobile;
- (BOOL) hasSign {
  return !!hasSign_;
}
- (void) setHasSign:(BOOL) _value_ {
  hasSign_ = !!_value_;
}
@synthesize sign;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) _value_ {
  hasUserType_ = !!_value_;
}
@synthesize userType;
- (BOOL) hasActionType {
  return !!hasActionType_;
}
- (void) setHasActionType:(BOOL) _value_ {
  hasActionType_ = !!_value_;
}
@synthesize actionType;
- (BOOL) hasFirstLetter {
  return !!hasFirstLetter_;
}
- (void) setHasFirstLetter:(BOOL) _value_ {
  hasFirstLetter_ = !!_value_;
}
@synthesize firstLetter;
- (BOOL) hasSexType {
  return !!hasSexType_;
}
- (void) setHasSexType:(BOOL) _value_ {
  hasSexType_ = !!_value_;
}
@synthesize sexType;
- (BOOL) hasBirthday {
  return !!hasBirthday_;
}
- (void) setHasBirthday:(BOOL) _value_ {
  hasBirthday_ = !!_value_;
}
@synthesize birthday;
- (BOOL) hasAddress {
  return !!hasAddress_;
}
- (void) setHasAddress:(BOOL) _value_ {
  hasAddress_ = !!_value_;
}
@synthesize address;
- (BOOL) hasRealname {
  return !!hasRealname_;
}
- (void) setHasRealname:(BOOL) _value_ {
  hasRealname_ = !!_value_;
}
@synthesize realname;
- (BOOL) hasGardenName {
  return !!hasGardenName_;
}
- (void) setHasGardenName:(BOOL) _value_ {
  hasGardenName_ = !!_value_;
}
@synthesize gardenName;
- (BOOL) hasClassName {
  return !!hasClassName_;
}
- (void) setHasClassName:(BOOL) _value_ {
  hasClassName_ = !!_value_;
}
@synthesize className;
- (BOOL) hasParentType {
  return !!hasParentType_;
}
- (void) setHasParentType:(BOOL) _value_ {
  hasParentType_ = !!_value_;
}
@synthesize parentType;
- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (BOOL) hasPositionId {
  return !!hasPositionId_;
}
- (void) setHasPositionId:(BOOL) _value_ {
  hasPositionId_ = !!_value_;
}
@synthesize positionId;
- (BOOL) hasPositionName {
  return !!hasPositionName_;
}
- (void) setHasPositionName:(BOOL) _value_ {
  hasPositionName_ = !!_value_;
}
@synthesize positionName;
- (BOOL) hasGuarder {
  return !!hasGuarder_;
}
- (void) setHasGuarder:(BOOL) _value_ {
  hasGuarder_ = !!_value_;
}
@synthesize guarder;
- (BOOL) hasActivated {
  return !!hasActivated_;
}
- (void) setHasActivated:(BOOL) _value_ {
  hasActivated_ = !!_value_;
}
- (BOOL) activated {
  return !!activated_;
}
- (void) setActivated:(BOOL) _value_ {
  activated_ = !!_value_;
}
- (BOOL) hasCustomName {
  return !!hasCustomName_;
}
- (void) setHasCustomName:(BOOL) _value_ {
  hasCustomName_ = !!_value_;
}
@synthesize customName;
@synthesize childsArray;
@dynamic childs;
- (BOOL) hasCombinedNickname {
  return !!hasCombinedNickname_;
}
- (void) setHasCombinedNickname:(BOOL) _value_ {
  hasCombinedNickname_ = !!_value_;
}
@synthesize combinedNickname;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.userName = @"";
    self.nickname = @"";
    self.avatar = @"";
    self.childUserId = 0L;
    self.mobile = @"";
    self.sign = @"";
    self.userType = TXPBUserTypeChild;
    self.actionType = TXPBActionTypeAdd;
    self.firstLetter = @"";
    self.sexType = TXPBSexTypeFemale;
    self.birthday = 0L;
    self.address = @"";
    self.realname = @"";
    self.gardenName = @"";
    self.className = @"";
    self.parentType = TXPBParentTypeFather;
    self.gardenId = 0L;
    self.classId = 0L;
    self.positionId = 0L;
    self.positionName = @"";
    self.guarder = @"";
    self.activated = NO;
    self.customName = @"";
    self.combinedNickname = @"";
  }
  return self;
}
static TXPBUser* defaultTXPBUserInstance = nil;
+ (void) initialize {
  if (self == [TXPBUser class]) {
    defaultTXPBUserInstance = [[TXPBUser alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUserInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUserInstance;
}
- (NSArray *)childs {
  return childsArray;
}
- (TXPBChild*)childsAtIndex:(NSUInteger)index {
  return [childsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  __block BOOL isInitchilds = YES;
   [self.childs enumerateObjectsUsingBlock:^(TXPBChild *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitchilds = NO;
      *stop = YES;
    }
  }];
  if (!isInitchilds) return isInitchilds;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt64:1 value:self.userId];
  }
  if (self.hasUserName) {
    [output writeString:2 value:self.userName];
  }
  if (self.hasNickname) {
    [output writeString:3 value:self.nickname];
  }
  if (self.hasAvatar) {
    [output writeString:4 value:self.avatar];
  }
  if (self.hasChildUserId) {
    [output writeInt64:5 value:self.childUserId];
  }
  if (self.hasMobile) {
    [output writeString:6 value:self.mobile];
  }
  if (self.hasSign) {
    [output writeString:7 value:self.sign];
  }
  if (self.hasUserType) {
    [output writeEnum:8 value:self.userType];
  }
  if (self.hasActionType) {
    [output writeEnum:9 value:self.actionType];
  }
  if (self.hasFirstLetter) {
    [output writeString:10 value:self.firstLetter];
  }
  if (self.hasSexType) {
    [output writeEnum:11 value:self.sexType];
  }
  if (self.hasBirthday) {
    [output writeInt64:12 value:self.birthday];
  }
  if (self.hasAddress) {
    [output writeString:13 value:self.address];
  }
  if (self.hasRealname) {
    [output writeString:14 value:self.realname];
  }
  if (self.hasGardenName) {
    [output writeString:15 value:self.gardenName];
  }
  if (self.hasClassName) {
    [output writeString:16 value:self.className];
  }
  if (self.hasParentType) {
    [output writeEnum:17 value:self.parentType];
  }
  if (self.hasGardenId) {
    [output writeInt64:18 value:self.gardenId];
  }
  if (self.hasClassId) {
    [output writeInt64:19 value:self.classId];
  }
  if (self.hasPositionId) {
    [output writeInt64:20 value:self.positionId];
  }
  if (self.hasPositionName) {
    [output writeString:21 value:self.positionName];
  }
  if (self.hasGuarder) {
    [output writeString:22 value:self.guarder];
  }
  if (self.hasActivated) {
    [output writeBool:23 value:self.activated];
  }
  if (self.hasCustomName) {
    [output writeString:24 value:self.customName];
  }
  [self.childsArray enumerateObjectsUsingBlock:^(TXPBChild *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:25 value:element];
  }];
  if (self.hasCombinedNickname) {
    [output writeString:26 value:self.combinedNickname];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt64Size(1, self.userId);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(2, self.userName);
  }
  if (self.hasNickname) {
    size_ += computeStringSize(3, self.nickname);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(4, self.avatar);
  }
  if (self.hasChildUserId) {
    size_ += computeInt64Size(5, self.childUserId);
  }
  if (self.hasMobile) {
    size_ += computeStringSize(6, self.mobile);
  }
  if (self.hasSign) {
    size_ += computeStringSize(7, self.sign);
  }
  if (self.hasUserType) {
    size_ += computeEnumSize(8, self.userType);
  }
  if (self.hasActionType) {
    size_ += computeEnumSize(9, self.actionType);
  }
  if (self.hasFirstLetter) {
    size_ += computeStringSize(10, self.firstLetter);
  }
  if (self.hasSexType) {
    size_ += computeEnumSize(11, self.sexType);
  }
  if (self.hasBirthday) {
    size_ += computeInt64Size(12, self.birthday);
  }
  if (self.hasAddress) {
    size_ += computeStringSize(13, self.address);
  }
  if (self.hasRealname) {
    size_ += computeStringSize(14, self.realname);
  }
  if (self.hasGardenName) {
    size_ += computeStringSize(15, self.gardenName);
  }
  if (self.hasClassName) {
    size_ += computeStringSize(16, self.className);
  }
  if (self.hasParentType) {
    size_ += computeEnumSize(17, self.parentType);
  }
  if (self.hasGardenId) {
    size_ += computeInt64Size(18, self.gardenId);
  }
  if (self.hasClassId) {
    size_ += computeInt64Size(19, self.classId);
  }
  if (self.hasPositionId) {
    size_ += computeInt64Size(20, self.positionId);
  }
  if (self.hasPositionName) {
    size_ += computeStringSize(21, self.positionName);
  }
  if (self.hasGuarder) {
    size_ += computeStringSize(22, self.guarder);
  }
  if (self.hasActivated) {
    size_ += computeBoolSize(23, self.activated);
  }
  if (self.hasCustomName) {
    size_ += computeStringSize(24, self.customName);
  }
  [self.childsArray enumerateObjectsUsingBlock:^(TXPBChild *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(25, element);
  }];
  if (self.hasCombinedNickname) {
    size_ += computeStringSize(26, self.combinedNickname);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUser*) parseFromData:(NSData*) data {
  return (TXPBUser*)[[[TXPBUser builder] mergeFromData:data] build];
}
+ (TXPBUser*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUser*)[[[TXPBUser builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUser*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUser*)[[[TXPBUser builder] mergeFromInputStream:input] build];
}
+ (TXPBUser*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUser*)[[[TXPBUser builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUser*)[[[TXPBUser builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUser*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUser*)[[[TXPBUser builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserBuilder*) builder {
  return [[TXPBUserBuilder alloc] init];
}
+ (TXPBUserBuilder*) builderWithPrototype:(TXPBUser*) prototype {
  return [[TXPBUser builder] mergeFrom:prototype];
}
- (TXPBUserBuilder*) builder {
  return [TXPBUser builder];
}
- (TXPBUserBuilder*) toBuilder {
  return [TXPBUser builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasNickname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickname", self.nickname];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasChildUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserId", [NSNumber numberWithLongLong:self.childUserId]];
  }
  if (self.hasMobile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobile", self.mobile];
  }
  if (self.hasSign) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sign", self.sign];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userType", NSStringFromTXPBUserType(self.userType)];
  }
  if (self.hasActionType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"actionType", NSStringFromTXPBActionType(self.actionType)];
  }
  if (self.hasFirstLetter) {
    [output appendFormat:@"%@%@: %@\n", indent, @"firstLetter", self.firstLetter];
  }
  if (self.hasSexType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sexType", NSStringFromTXPBSexType(self.sexType)];
  }
  if (self.hasBirthday) {
    [output appendFormat:@"%@%@: %@\n", indent, @"birthday", [NSNumber numberWithLongLong:self.birthday]];
  }
  if (self.hasAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"address", self.address];
  }
  if (self.hasRealname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"realname", self.realname];
  }
  if (self.hasGardenName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenName", self.gardenName];
  }
  if (self.hasClassName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"className", self.className];
  }
  if (self.hasParentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentType", NSStringFromTXPBParentType(self.parentType)];
  }
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  if (self.hasPositionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"positionId", [NSNumber numberWithLongLong:self.positionId]];
  }
  if (self.hasPositionName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"positionName", self.positionName];
  }
  if (self.hasGuarder) {
    [output appendFormat:@"%@%@: %@\n", indent, @"guarder", self.guarder];
  }
  if (self.hasActivated) {
    [output appendFormat:@"%@%@: %@\n", indent, @"activated", [NSNumber numberWithBool:self.activated]];
  }
  if (self.hasCustomName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"customName", self.customName];
  }
  [self.childsArray enumerateObjectsUsingBlock:^(TXPBChild *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"childs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasCombinedNickname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"combinedNickname", self.combinedNickname];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  if (self.hasNickname) {
    [dictionary setObject: self.nickname forKey: @"nickname"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasChildUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.childUserId] forKey: @"childUserId"];
  }
  if (self.hasMobile) {
    [dictionary setObject: self.mobile forKey: @"mobile"];
  }
  if (self.hasSign) {
    [dictionary setObject: self.sign forKey: @"sign"];
  }
  if (self.hasUserType) {
    [dictionary setObject: @(self.userType) forKey: @"userType"];
  }
  if (self.hasActionType) {
    [dictionary setObject: @(self.actionType) forKey: @"actionType"];
  }
  if (self.hasFirstLetter) {
    [dictionary setObject: self.firstLetter forKey: @"firstLetter"];
  }
  if (self.hasSexType) {
    [dictionary setObject: @(self.sexType) forKey: @"sexType"];
  }
  if (self.hasBirthday) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.birthday] forKey: @"birthday"];
  }
  if (self.hasAddress) {
    [dictionary setObject: self.address forKey: @"address"];
  }
  if (self.hasRealname) {
    [dictionary setObject: self.realname forKey: @"realname"];
  }
  if (self.hasGardenName) {
    [dictionary setObject: self.gardenName forKey: @"gardenName"];
  }
  if (self.hasClassName) {
    [dictionary setObject: self.className forKey: @"className"];
  }
  if (self.hasParentType) {
    [dictionary setObject: @(self.parentType) forKey: @"parentType"];
  }
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  if (self.hasPositionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.positionId] forKey: @"positionId"];
  }
  if (self.hasPositionName) {
    [dictionary setObject: self.positionName forKey: @"positionName"];
  }
  if (self.hasGuarder) {
    [dictionary setObject: self.guarder forKey: @"guarder"];
  }
  if (self.hasActivated) {
    [dictionary setObject: [NSNumber numberWithBool:self.activated] forKey: @"activated"];
  }
  if (self.hasCustomName) {
    [dictionary setObject: self.customName forKey: @"customName"];
  }
  for (TXPBChild* element in self.childsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"childs"];
  }
  if (self.hasCombinedNickname) {
    [dictionary setObject: self.combinedNickname forKey: @"combinedNickname"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUser class]]) {
    return NO;
  }
  TXPBUser *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasNickname == otherMessage.hasNickname &&
      (!self.hasNickname || [self.nickname isEqual:otherMessage.nickname]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasChildUserId == otherMessage.hasChildUserId &&
      (!self.hasChildUserId || self.childUserId == otherMessage.childUserId) &&
      self.hasMobile == otherMessage.hasMobile &&
      (!self.hasMobile || [self.mobile isEqual:otherMessage.mobile]) &&
      self.hasSign == otherMessage.hasSign &&
      (!self.hasSign || [self.sign isEqual:otherMessage.sign]) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      self.hasActionType == otherMessage.hasActionType &&
      (!self.hasActionType || self.actionType == otherMessage.actionType) &&
      self.hasFirstLetter == otherMessage.hasFirstLetter &&
      (!self.hasFirstLetter || [self.firstLetter isEqual:otherMessage.firstLetter]) &&
      self.hasSexType == otherMessage.hasSexType &&
      (!self.hasSexType || self.sexType == otherMessage.sexType) &&
      self.hasBirthday == otherMessage.hasBirthday &&
      (!self.hasBirthday || self.birthday == otherMessage.birthday) &&
      self.hasAddress == otherMessage.hasAddress &&
      (!self.hasAddress || [self.address isEqual:otherMessage.address]) &&
      self.hasRealname == otherMessage.hasRealname &&
      (!self.hasRealname || [self.realname isEqual:otherMessage.realname]) &&
      self.hasGardenName == otherMessage.hasGardenName &&
      (!self.hasGardenName || [self.gardenName isEqual:otherMessage.gardenName]) &&
      self.hasClassName == otherMessage.hasClassName &&
      (!self.hasClassName || [self.className isEqual:otherMessage.className]) &&
      self.hasParentType == otherMessage.hasParentType &&
      (!self.hasParentType || self.parentType == otherMessage.parentType) &&
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      self.hasPositionId == otherMessage.hasPositionId &&
      (!self.hasPositionId || self.positionId == otherMessage.positionId) &&
      self.hasPositionName == otherMessage.hasPositionName &&
      (!self.hasPositionName || [self.positionName isEqual:otherMessage.positionName]) &&
      self.hasGuarder == otherMessage.hasGuarder &&
      (!self.hasGuarder || [self.guarder isEqual:otherMessage.guarder]) &&
      self.hasActivated == otherMessage.hasActivated &&
      (!self.hasActivated || self.activated == otherMessage.activated) &&
      self.hasCustomName == otherMessage.hasCustomName &&
      (!self.hasCustomName || [self.customName isEqual:otherMessage.customName]) &&
      [self.childsArray isEqualToArray:otherMessage.childsArray] &&
      self.hasCombinedNickname == otherMessage.hasCombinedNickname &&
      (!self.hasCombinedNickname || [self.combinedNickname isEqual:otherMessage.combinedNickname]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasNickname) {
    hashCode = hashCode * 31 + [self.nickname hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasChildUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.childUserId] hash];
  }
  if (self.hasMobile) {
    hashCode = hashCode * 31 + [self.mobile hash];
  }
  if (self.hasSign) {
    hashCode = hashCode * 31 + [self.sign hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + self.userType;
  }
  if (self.hasActionType) {
    hashCode = hashCode * 31 + self.actionType;
  }
  if (self.hasFirstLetter) {
    hashCode = hashCode * 31 + [self.firstLetter hash];
  }
  if (self.hasSexType) {
    hashCode = hashCode * 31 + self.sexType;
  }
  if (self.hasBirthday) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.birthday] hash];
  }
  if (self.hasAddress) {
    hashCode = hashCode * 31 + [self.address hash];
  }
  if (self.hasRealname) {
    hashCode = hashCode * 31 + [self.realname hash];
  }
  if (self.hasGardenName) {
    hashCode = hashCode * 31 + [self.gardenName hash];
  }
  if (self.hasClassName) {
    hashCode = hashCode * 31 + [self.className hash];
  }
  if (self.hasParentType) {
    hashCode = hashCode * 31 + self.parentType;
  }
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  if (self.hasPositionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.positionId] hash];
  }
  if (self.hasPositionName) {
    hashCode = hashCode * 31 + [self.positionName hash];
  }
  if (self.hasGuarder) {
    hashCode = hashCode * 31 + [self.guarder hash];
  }
  if (self.hasActivated) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.activated] hash];
  }
  if (self.hasCustomName) {
    hashCode = hashCode * 31 + [self.customName hash];
  }
  [self.childsArray enumerateObjectsUsingBlock:^(TXPBChild *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasCombinedNickname) {
    hashCode = hashCode * 31 + [self.combinedNickname hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUserBuilder()
@property (strong) TXPBUser* resultUser;
@end

@implementation TXPBUserBuilder
@synthesize resultUser;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUser = [[TXPBUser alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUser;
}
- (TXPBUserBuilder*) clear {
  self.resultUser = [[TXPBUser alloc] init];
  return self;
}
- (TXPBUserBuilder*) clone {
  return [TXPBUser builderWithPrototype:resultUser];
}
- (TXPBUser*) defaultInstance {
  return [TXPBUser defaultInstance];
}
- (TXPBUser*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUser*) buildPartial {
  TXPBUser* returnMe = resultUser;
  self.resultUser = nil;
  return returnMe;
}
- (TXPBUserBuilder*) mergeFrom:(TXPBUser*) other {
  if (other == [TXPBUser defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasChildUserId) {
    [self setChildUserId:other.childUserId];
  }
  if (other.hasMobile) {
    [self setMobile:other.mobile];
  }
  if (other.hasSign) {
    [self setSign:other.sign];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasActionType) {
    [self setActionType:other.actionType];
  }
  if (other.hasFirstLetter) {
    [self setFirstLetter:other.firstLetter];
  }
  if (other.hasSexType) {
    [self setSexType:other.sexType];
  }
  if (other.hasBirthday) {
    [self setBirthday:other.birthday];
  }
  if (other.hasAddress) {
    [self setAddress:other.address];
  }
  if (other.hasRealname) {
    [self setRealname:other.realname];
  }
  if (other.hasGardenName) {
    [self setGardenName:other.gardenName];
  }
  if (other.hasClassName) {
    [self setClassName:other.className];
  }
  if (other.hasParentType) {
    [self setParentType:other.parentType];
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  if (other.hasPositionId) {
    [self setPositionId:other.positionId];
  }
  if (other.hasPositionName) {
    [self setPositionName:other.positionName];
  }
  if (other.hasGuarder) {
    [self setGuarder:other.guarder];
  }
  if (other.hasActivated) {
    [self setActivated:other.activated];
  }
  if (other.hasCustomName) {
    [self setCustomName:other.customName];
  }
  if (other.childsArray.count > 0) {
    if (resultUser.childsArray == nil) {
      resultUser.childsArray = [[NSMutableArray alloc] initWithArray:other.childsArray];
    } else {
      [resultUser.childsArray addObjectsFromArray:other.childsArray];
    }
  }
  if (other.hasCombinedNickname) {
    [self setCombinedNickname:other.combinedNickname];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUserBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 18: {
        [self setUserName:[input readString]];
        break;
      }
      case 26: {
        [self setNickname:[input readString]];
        break;
      }
      case 34: {
        [self setAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setChildUserId:[input readInt64]];
        break;
      }
      case 50: {
        [self setMobile:[input readString]];
        break;
      }
      case 58: {
        [self setSign:[input readString]];
        break;
      }
      case 64: {
        TXPBUserType value = (TXPBUserType)[input readEnum];
        if (TXPBUserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 72: {
        TXPBActionType value = (TXPBActionType)[input readEnum];
        if (TXPBActionTypeIsValidValue(value)) {
          [self setActionType:value];
        } else {
          [unknownFields mergeVarintField:9 value:value];
        }
        break;
      }
      case 82: {
        [self setFirstLetter:[input readString]];
        break;
      }
      case 88: {
        TXPBSexType value = (TXPBSexType)[input readEnum];
        if (TXPBSexTypeIsValidValue(value)) {
          [self setSexType:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
      case 96: {
        [self setBirthday:[input readInt64]];
        break;
      }
      case 106: {
        [self setAddress:[input readString]];
        break;
      }
      case 114: {
        [self setRealname:[input readString]];
        break;
      }
      case 122: {
        [self setGardenName:[input readString]];
        break;
      }
      case 130: {
        [self setClassName:[input readString]];
        break;
      }
      case 136: {
        TXPBParentType value = (TXPBParentType)[input readEnum];
        if (TXPBParentTypeIsValidValue(value)) {
          [self setParentType:value];
        } else {
          [unknownFields mergeVarintField:17 value:value];
        }
        break;
      }
      case 144: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 152: {
        [self setClassId:[input readInt64]];
        break;
      }
      case 160: {
        [self setPositionId:[input readInt64]];
        break;
      }
      case 170: {
        [self setPositionName:[input readString]];
        break;
      }
      case 178: {
        [self setGuarder:[input readString]];
        break;
      }
      case 184: {
        [self setActivated:[input readBool]];
        break;
      }
      case 194: {
        [self setCustomName:[input readString]];
        break;
      }
      case 202: {
        TXPBChildBuilder* subBuilder = [TXPBChild builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addChilds:[subBuilder buildPartial]];
        break;
      }
      case 210: {
        [self setCombinedNickname:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultUser.hasUserId;
}
- (SInt64) userId {
  return resultUser.userId;
}
- (TXPBUserBuilder*) setUserId:(SInt64) value {
  resultUser.hasUserId = YES;
  resultUser.userId = value;
  return self;
}
- (TXPBUserBuilder*) clearUserId {
  resultUser.hasUserId = NO;
  resultUser.userId = 0L;
  return self;
}
- (BOOL) hasUserName {
  return resultUser.hasUserName;
}
- (NSString*) userName {
  return resultUser.userName;
}
- (TXPBUserBuilder*) setUserName:(NSString*) value {
  resultUser.hasUserName = YES;
  resultUser.userName = value;
  return self;
}
- (TXPBUserBuilder*) clearUserName {
  resultUser.hasUserName = NO;
  resultUser.userName = @"";
  return self;
}
- (BOOL) hasNickname {
  return resultUser.hasNickname;
}
- (NSString*) nickname {
  return resultUser.nickname;
}
- (TXPBUserBuilder*) setNickname:(NSString*) value {
  resultUser.hasNickname = YES;
  resultUser.nickname = value;
  return self;
}
- (TXPBUserBuilder*) clearNickname {
  resultUser.hasNickname = NO;
  resultUser.nickname = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultUser.hasAvatar;
}
- (NSString*) avatar {
  return resultUser.avatar;
}
- (TXPBUserBuilder*) setAvatar:(NSString*) value {
  resultUser.hasAvatar = YES;
  resultUser.avatar = value;
  return self;
}
- (TXPBUserBuilder*) clearAvatar {
  resultUser.hasAvatar = NO;
  resultUser.avatar = @"";
  return self;
}
- (BOOL) hasChildUserId {
  return resultUser.hasChildUserId;
}
- (SInt64) childUserId {
  return resultUser.childUserId;
}
- (TXPBUserBuilder*) setChildUserId:(SInt64) value {
  resultUser.hasChildUserId = YES;
  resultUser.childUserId = value;
  return self;
}
- (TXPBUserBuilder*) clearChildUserId {
  resultUser.hasChildUserId = NO;
  resultUser.childUserId = 0L;
  return self;
}
- (BOOL) hasMobile {
  return resultUser.hasMobile;
}
- (NSString*) mobile {
  return resultUser.mobile;
}
- (TXPBUserBuilder*) setMobile:(NSString*) value {
  resultUser.hasMobile = YES;
  resultUser.mobile = value;
  return self;
}
- (TXPBUserBuilder*) clearMobile {
  resultUser.hasMobile = NO;
  resultUser.mobile = @"";
  return self;
}
- (BOOL) hasSign {
  return resultUser.hasSign;
}
- (NSString*) sign {
  return resultUser.sign;
}
- (TXPBUserBuilder*) setSign:(NSString*) value {
  resultUser.hasSign = YES;
  resultUser.sign = value;
  return self;
}
- (TXPBUserBuilder*) clearSign {
  resultUser.hasSign = NO;
  resultUser.sign = @"";
  return self;
}
- (BOOL) hasUserType {
  return resultUser.hasUserType;
}
- (TXPBUserType) userType {
  return resultUser.userType;
}
- (TXPBUserBuilder*) setUserType:(TXPBUserType) value {
  resultUser.hasUserType = YES;
  resultUser.userType = value;
  return self;
}
- (TXPBUserBuilder*) clearUserType {
  resultUser.hasUserType = NO;
  resultUser.userType = TXPBUserTypeChild;
  return self;
}
- (BOOL) hasActionType {
  return resultUser.hasActionType;
}
- (TXPBActionType) actionType {
  return resultUser.actionType;
}
- (TXPBUserBuilder*) setActionType:(TXPBActionType) value {
  resultUser.hasActionType = YES;
  resultUser.actionType = value;
  return self;
}
- (TXPBUserBuilder*) clearActionType {
  resultUser.hasActionType = NO;
  resultUser.actionType = TXPBActionTypeAdd;
  return self;
}
- (BOOL) hasFirstLetter {
  return resultUser.hasFirstLetter;
}
- (NSString*) firstLetter {
  return resultUser.firstLetter;
}
- (TXPBUserBuilder*) setFirstLetter:(NSString*) value {
  resultUser.hasFirstLetter = YES;
  resultUser.firstLetter = value;
  return self;
}
- (TXPBUserBuilder*) clearFirstLetter {
  resultUser.hasFirstLetter = NO;
  resultUser.firstLetter = @"";
  return self;
}
- (BOOL) hasSexType {
  return resultUser.hasSexType;
}
- (TXPBSexType) sexType {
  return resultUser.sexType;
}
- (TXPBUserBuilder*) setSexType:(TXPBSexType) value {
  resultUser.hasSexType = YES;
  resultUser.sexType = value;
  return self;
}
- (TXPBUserBuilder*) clearSexType {
  resultUser.hasSexType = NO;
  resultUser.sexType = TXPBSexTypeFemale;
  return self;
}
- (BOOL) hasBirthday {
  return resultUser.hasBirthday;
}
- (SInt64) birthday {
  return resultUser.birthday;
}
- (TXPBUserBuilder*) setBirthday:(SInt64) value {
  resultUser.hasBirthday = YES;
  resultUser.birthday = value;
  return self;
}
- (TXPBUserBuilder*) clearBirthday {
  resultUser.hasBirthday = NO;
  resultUser.birthday = 0L;
  return self;
}
- (BOOL) hasAddress {
  return resultUser.hasAddress;
}
- (NSString*) address {
  return resultUser.address;
}
- (TXPBUserBuilder*) setAddress:(NSString*) value {
  resultUser.hasAddress = YES;
  resultUser.address = value;
  return self;
}
- (TXPBUserBuilder*) clearAddress {
  resultUser.hasAddress = NO;
  resultUser.address = @"";
  return self;
}
- (BOOL) hasRealname {
  return resultUser.hasRealname;
}
- (NSString*) realname {
  return resultUser.realname;
}
- (TXPBUserBuilder*) setRealname:(NSString*) value {
  resultUser.hasRealname = YES;
  resultUser.realname = value;
  return self;
}
- (TXPBUserBuilder*) clearRealname {
  resultUser.hasRealname = NO;
  resultUser.realname = @"";
  return self;
}
- (BOOL) hasGardenName {
  return resultUser.hasGardenName;
}
- (NSString*) gardenName {
  return resultUser.gardenName;
}
- (TXPBUserBuilder*) setGardenName:(NSString*) value {
  resultUser.hasGardenName = YES;
  resultUser.gardenName = value;
  return self;
}
- (TXPBUserBuilder*) clearGardenName {
  resultUser.hasGardenName = NO;
  resultUser.gardenName = @"";
  return self;
}
- (BOOL) hasClassName {
  return resultUser.hasClassName;
}
- (NSString*) className {
  return resultUser.className;
}
- (TXPBUserBuilder*) setClassName:(NSString*) value {
  resultUser.hasClassName = YES;
  resultUser.className = value;
  return self;
}
- (TXPBUserBuilder*) clearClassName {
  resultUser.hasClassName = NO;
  resultUser.className = @"";
  return self;
}
- (BOOL) hasParentType {
  return resultUser.hasParentType;
}
- (TXPBParentType) parentType {
  return resultUser.parentType;
}
- (TXPBUserBuilder*) setParentType:(TXPBParentType) value {
  resultUser.hasParentType = YES;
  resultUser.parentType = value;
  return self;
}
- (TXPBUserBuilder*) clearParentType {
  resultUser.hasParentType = NO;
  resultUser.parentType = TXPBParentTypeFather;
  return self;
}
- (BOOL) hasGardenId {
  return resultUser.hasGardenId;
}
- (SInt64) gardenId {
  return resultUser.gardenId;
}
- (TXPBUserBuilder*) setGardenId:(SInt64) value {
  resultUser.hasGardenId = YES;
  resultUser.gardenId = value;
  return self;
}
- (TXPBUserBuilder*) clearGardenId {
  resultUser.hasGardenId = NO;
  resultUser.gardenId = 0L;
  return self;
}
- (BOOL) hasClassId {
  return resultUser.hasClassId;
}
- (SInt64) classId {
  return resultUser.classId;
}
- (TXPBUserBuilder*) setClassId:(SInt64) value {
  resultUser.hasClassId = YES;
  resultUser.classId = value;
  return self;
}
- (TXPBUserBuilder*) clearClassId {
  resultUser.hasClassId = NO;
  resultUser.classId = 0L;
  return self;
}
- (BOOL) hasPositionId {
  return resultUser.hasPositionId;
}
- (SInt64) positionId {
  return resultUser.positionId;
}
- (TXPBUserBuilder*) setPositionId:(SInt64) value {
  resultUser.hasPositionId = YES;
  resultUser.positionId = value;
  return self;
}
- (TXPBUserBuilder*) clearPositionId {
  resultUser.hasPositionId = NO;
  resultUser.positionId = 0L;
  return self;
}
- (BOOL) hasPositionName {
  return resultUser.hasPositionName;
}
- (NSString*) positionName {
  return resultUser.positionName;
}
- (TXPBUserBuilder*) setPositionName:(NSString*) value {
  resultUser.hasPositionName = YES;
  resultUser.positionName = value;
  return self;
}
- (TXPBUserBuilder*) clearPositionName {
  resultUser.hasPositionName = NO;
  resultUser.positionName = @"";
  return self;
}
- (BOOL) hasGuarder {
  return resultUser.hasGuarder;
}
- (NSString*) guarder {
  return resultUser.guarder;
}
- (TXPBUserBuilder*) setGuarder:(NSString*) value {
  resultUser.hasGuarder = YES;
  resultUser.guarder = value;
  return self;
}
- (TXPBUserBuilder*) clearGuarder {
  resultUser.hasGuarder = NO;
  resultUser.guarder = @"";
  return self;
}
- (BOOL) hasActivated {
  return resultUser.hasActivated;
}
- (BOOL) activated {
  return resultUser.activated;
}
- (TXPBUserBuilder*) setActivated:(BOOL) value {
  resultUser.hasActivated = YES;
  resultUser.activated = value;
  return self;
}
- (TXPBUserBuilder*) clearActivated {
  resultUser.hasActivated = NO;
  resultUser.activated = NO;
  return self;
}
- (BOOL) hasCustomName {
  return resultUser.hasCustomName;
}
- (NSString*) customName {
  return resultUser.customName;
}
- (TXPBUserBuilder*) setCustomName:(NSString*) value {
  resultUser.hasCustomName = YES;
  resultUser.customName = value;
  return self;
}
- (TXPBUserBuilder*) clearCustomName {
  resultUser.hasCustomName = NO;
  resultUser.customName = @"";
  return self;
}
- (NSMutableArray *)childs {
  return resultUser.childsArray;
}
- (TXPBChild*)childsAtIndex:(NSUInteger)index {
  return [resultUser childsAtIndex:index];
}
- (TXPBUserBuilder *)addChilds:(TXPBChild*)value {
  if (resultUser.childsArray == nil) {
    resultUser.childsArray = [[NSMutableArray alloc]init];
  }
  [resultUser.childsArray addObject:value];
  return self;
}
- (TXPBUserBuilder *)setChildsArray:(NSArray *)array {
  resultUser.childsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBUserBuilder *)clearChilds {
  resultUser.childsArray = nil;
  return self;
}
- (BOOL) hasCombinedNickname {
  return resultUser.hasCombinedNickname;
}
- (NSString*) combinedNickname {
  return resultUser.combinedNickname;
}
- (TXPBUserBuilder*) setCombinedNickname:(NSString*) value {
  resultUser.hasCombinedNickname = YES;
  resultUser.combinedNickname = value;
  return self;
}
- (TXPBUserBuilder*) clearCombinedNickname {
  resultUser.hasCombinedNickname = NO;
  resultUser.combinedNickname = @"";
  return self;
}
@end

@interface TXPBChild ()
@property SInt64 userId;
@property TXPBParentType parentType;
@property BOOL isMaster;
@end

@implementation TXPBChild

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasParentType {
  return !!hasParentType_;
}
- (void) setHasParentType:(BOOL) _value_ {
  hasParentType_ = !!_value_;
}
@synthesize parentType;
- (BOOL) hasIsMaster {
  return !!hasIsMaster_;
}
- (void) setHasIsMaster:(BOOL) _value_ {
  hasIsMaster_ = !!_value_;
}
- (BOOL) isMaster {
  return !!isMaster_;
}
- (void) setIsMaster:(BOOL) _value_ {
  isMaster_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.parentType = TXPBParentTypeFather;
    self.isMaster = NO;
  }
  return self;
}
static TXPBChild* defaultTXPBChildInstance = nil;
+ (void) initialize {
  if (self == [TXPBChild class]) {
    defaultTXPBChildInstance = [[TXPBChild alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBChildInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBChildInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt64:1 value:self.userId];
  }
  if (self.hasParentType) {
    [output writeEnum:2 value:self.parentType];
  }
  if (self.hasIsMaster) {
    [output writeBool:3 value:self.isMaster];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt64Size(1, self.userId);
  }
  if (self.hasParentType) {
    size_ += computeEnumSize(2, self.parentType);
  }
  if (self.hasIsMaster) {
    size_ += computeBoolSize(3, self.isMaster);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBChild*) parseFromData:(NSData*) data {
  return (TXPBChild*)[[[TXPBChild builder] mergeFromData:data] build];
}
+ (TXPBChild*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChild*)[[[TXPBChild builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBChild*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBChild*)[[[TXPBChild builder] mergeFromInputStream:input] build];
}
+ (TXPBChild*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChild*)[[[TXPBChild builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBChild*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBChild*)[[[TXPBChild builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBChild*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChild*)[[[TXPBChild builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBChildBuilder*) builder {
  return [[TXPBChildBuilder alloc] init];
}
+ (TXPBChildBuilder*) builderWithPrototype:(TXPBChild*) prototype {
  return [[TXPBChild builder] mergeFrom:prototype];
}
- (TXPBChildBuilder*) builder {
  return [TXPBChild builder];
}
- (TXPBChildBuilder*) toBuilder {
  return [TXPBChild builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasParentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentType", NSStringFromTXPBParentType(self.parentType)];
  }
  if (self.hasIsMaster) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isMaster", [NSNumber numberWithBool:self.isMaster]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasParentType) {
    [dictionary setObject: @(self.parentType) forKey: @"parentType"];
  }
  if (self.hasIsMaster) {
    [dictionary setObject: [NSNumber numberWithBool:self.isMaster] forKey: @"isMaster"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBChild class]]) {
    return NO;
  }
  TXPBChild *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasParentType == otherMessage.hasParentType &&
      (!self.hasParentType || self.parentType == otherMessage.parentType) &&
      self.hasIsMaster == otherMessage.hasIsMaster &&
      (!self.hasIsMaster || self.isMaster == otherMessage.isMaster) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasParentType) {
    hashCode = hashCode * 31 + self.parentType;
  }
  if (self.hasIsMaster) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isMaster] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBChildBuilder()
@property (strong) TXPBChild* resultChild;
@end

@implementation TXPBChildBuilder
@synthesize resultChild;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultChild = [[TXPBChild alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultChild;
}
- (TXPBChildBuilder*) clear {
  self.resultChild = [[TXPBChild alloc] init];
  return self;
}
- (TXPBChildBuilder*) clone {
  return [TXPBChild builderWithPrototype:resultChild];
}
- (TXPBChild*) defaultInstance {
  return [TXPBChild defaultInstance];
}
- (TXPBChild*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBChild*) buildPartial {
  TXPBChild* returnMe = resultChild;
  self.resultChild = nil;
  return returnMe;
}
- (TXPBChildBuilder*) mergeFrom:(TXPBChild*) other {
  if (other == [TXPBChild defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasParentType) {
    [self setParentType:other.parentType];
  }
  if (other.hasIsMaster) {
    [self setIsMaster:other.isMaster];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBChildBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBChildBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBParentType value = (TXPBParentType)[input readEnum];
        if (TXPBParentTypeIsValidValue(value)) {
          [self setParentType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setIsMaster:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultChild.hasUserId;
}
- (SInt64) userId {
  return resultChild.userId;
}
- (TXPBChildBuilder*) setUserId:(SInt64) value {
  resultChild.hasUserId = YES;
  resultChild.userId = value;
  return self;
}
- (TXPBChildBuilder*) clearUserId {
  resultChild.hasUserId = NO;
  resultChild.userId = 0L;
  return self;
}
- (BOOL) hasParentType {
  return resultChild.hasParentType;
}
- (TXPBParentType) parentType {
  return resultChild.parentType;
}
- (TXPBChildBuilder*) setParentType:(TXPBParentType) value {
  resultChild.hasParentType = YES;
  resultChild.parentType = value;
  return self;
}
- (TXPBChildBuilder*) clearParentType {
  resultChild.hasParentType = NO;
  resultChild.parentType = TXPBParentTypeFather;
  return self;
}
- (BOOL) hasIsMaster {
  return resultChild.hasIsMaster;
}
- (BOOL) isMaster {
  return resultChild.isMaster;
}
- (TXPBChildBuilder*) setIsMaster:(BOOL) value {
  resultChild.hasIsMaster = YES;
  resultChild.isMaster = value;
  return self;
}
- (TXPBChildBuilder*) clearIsMaster {
  resultChild.hasIsMaster = NO;
  resultChild.isMaster = NO;
  return self;
}
@end

@interface TXPBDepartment ()
@property SInt64 id;
@property (strong) NSString* name;
@property SInt64 parentId;
@property (strong) NSString* groupId;
@property TXPBDepartmentType type;
@property TXPBActionType actionType;
@property (strong) NSString* classPhoto;
@property BOOL showParent;
@end

@implementation TXPBDepartment

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) _value_ {
  hasParentId_ = !!_value_;
}
@synthesize parentId;
- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasActionType {
  return !!hasActionType_;
}
- (void) setHasActionType:(BOOL) _value_ {
  hasActionType_ = !!_value_;
}
@synthesize actionType;
- (BOOL) hasClassPhoto {
  return !!hasClassPhoto_;
}
- (void) setHasClassPhoto:(BOOL) _value_ {
  hasClassPhoto_ = !!_value_;
}
@synthesize classPhoto;
- (BOOL) hasShowParent {
  return !!hasShowParent_;
}
- (void) setHasShowParent:(BOOL) _value_ {
  hasShowParent_ = !!_value_;
}
- (BOOL) showParent {
  return !!showParent_;
}
- (void) setShowParent:(BOOL) _value_ {
  showParent_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.parentId = 0L;
    self.groupId = @"";
    self.type = TXPBDepartmentTypeGarden;
    self.actionType = TXPBActionTypeAdd;
    self.classPhoto = @"";
    self.showParent = NO;
  }
  return self;
}
static TXPBDepartment* defaultTXPBDepartmentInstance = nil;
+ (void) initialize {
  if (self == [TXPBDepartment class]) {
    defaultTXPBDepartmentInstance = [[TXPBDepartment alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDepartmentInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDepartmentInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasParentId) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasActionType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasParentId) {
    [output writeInt64:3 value:self.parentId];
  }
  if (self.hasGroupId) {
    [output writeString:4 value:self.groupId];
  }
  if (self.hasType) {
    [output writeEnum:5 value:self.type];
  }
  if (self.hasActionType) {
    [output writeEnum:6 value:self.actionType];
  }
  if (self.hasClassPhoto) {
    [output writeString:7 value:self.classPhoto];
  }
  if (self.hasShowParent) {
    [output writeBool:8 value:self.showParent];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasParentId) {
    size_ += computeInt64Size(3, self.parentId);
  }
  if (self.hasGroupId) {
    size_ += computeStringSize(4, self.groupId);
  }
  if (self.hasType) {
    size_ += computeEnumSize(5, self.type);
  }
  if (self.hasActionType) {
    size_ += computeEnumSize(6, self.actionType);
  }
  if (self.hasClassPhoto) {
    size_ += computeStringSize(7, self.classPhoto);
  }
  if (self.hasShowParent) {
    size_ += computeBoolSize(8, self.showParent);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDepartment*) parseFromData:(NSData*) data {
  return (TXPBDepartment*)[[[TXPBDepartment builder] mergeFromData:data] build];
}
+ (TXPBDepartment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDepartment*)[[[TXPBDepartment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDepartment*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDepartment*)[[[TXPBDepartment builder] mergeFromInputStream:input] build];
}
+ (TXPBDepartment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDepartment*)[[[TXPBDepartment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDepartment*)[[[TXPBDepartment builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDepartment*)[[[TXPBDepartment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDepartmentBuilder*) builder {
  return [[TXPBDepartmentBuilder alloc] init];
}
+ (TXPBDepartmentBuilder*) builderWithPrototype:(TXPBDepartment*) prototype {
  return [[TXPBDepartment builder] mergeFrom:prototype];
}
- (TXPBDepartmentBuilder*) builder {
  return [TXPBDepartment builder];
}
- (TXPBDepartmentBuilder*) toBuilder {
  return [TXPBDepartment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithLongLong:self.parentId]];
  }
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBDepartmentType(self.type)];
  }
  if (self.hasActionType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"actionType", NSStringFromTXPBActionType(self.actionType)];
  }
  if (self.hasClassPhoto) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classPhoto", self.classPhoto];
  }
  if (self.hasShowParent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"showParent", [NSNumber numberWithBool:self.showParent]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasParentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentId] forKey: @"parentId"];
  }
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasActionType) {
    [dictionary setObject: @(self.actionType) forKey: @"actionType"];
  }
  if (self.hasClassPhoto) {
    [dictionary setObject: self.classPhoto forKey: @"classPhoto"];
  }
  if (self.hasShowParent) {
    [dictionary setObject: [NSNumber numberWithBool:self.showParent] forKey: @"showParent"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDepartment class]]) {
    return NO;
  }
  TXPBDepartment *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasActionType == otherMessage.hasActionType &&
      (!self.hasActionType || self.actionType == otherMessage.actionType) &&
      self.hasClassPhoto == otherMessage.hasClassPhoto &&
      (!self.hasClassPhoto || [self.classPhoto isEqual:otherMessage.classPhoto]) &&
      self.hasShowParent == otherMessage.hasShowParent &&
      (!self.hasShowParent || self.showParent == otherMessage.showParent) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentId] hash];
  }
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasActionType) {
    hashCode = hashCode * 31 + self.actionType;
  }
  if (self.hasClassPhoto) {
    hashCode = hashCode * 31 + [self.classPhoto hash];
  }
  if (self.hasShowParent) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.showParent] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDepartmentBuilder()
@property (strong) TXPBDepartment* resultDepartment;
@end

@implementation TXPBDepartmentBuilder
@synthesize resultDepartment;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDepartment = [[TXPBDepartment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDepartment;
}
- (TXPBDepartmentBuilder*) clear {
  self.resultDepartment = [[TXPBDepartment alloc] init];
  return self;
}
- (TXPBDepartmentBuilder*) clone {
  return [TXPBDepartment builderWithPrototype:resultDepartment];
}
- (TXPBDepartment*) defaultInstance {
  return [TXPBDepartment defaultInstance];
}
- (TXPBDepartment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDepartment*) buildPartial {
  TXPBDepartment* returnMe = resultDepartment;
  self.resultDepartment = nil;
  return returnMe;
}
- (TXPBDepartmentBuilder*) mergeFrom:(TXPBDepartment*) other {
  if (other == [TXPBDepartment defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasActionType) {
    [self setActionType:other.actionType];
  }
  if (other.hasClassPhoto) {
    [self setClassPhoto:other.classPhoto];
  }
  if (other.hasShowParent) {
    [self setShowParent:other.showParent];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setParentId:[input readInt64]];
        break;
      }
      case 34: {
        [self setGroupId:[input readString]];
        break;
      }
      case 40: {
        TXPBDepartmentType value = (TXPBDepartmentType)[input readEnum];
        if (TXPBDepartmentTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        TXPBActionType value = (TXPBActionType)[input readEnum];
        if (TXPBActionTypeIsValidValue(value)) {
          [self setActionType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 58: {
        [self setClassPhoto:[input readString]];
        break;
      }
      case 64: {
        [self setShowParent:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultDepartment.hasId;
}
- (SInt64) id {
  return resultDepartment.id;
}
- (TXPBDepartmentBuilder*) setId:(SInt64) value {
  resultDepartment.hasId = YES;
  resultDepartment.id = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearId {
  resultDepartment.hasId = NO;
  resultDepartment.id = 0L;
  return self;
}
- (BOOL) hasName {
  return resultDepartment.hasName;
}
- (NSString*) name {
  return resultDepartment.name;
}
- (TXPBDepartmentBuilder*) setName:(NSString*) value {
  resultDepartment.hasName = YES;
  resultDepartment.name = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearName {
  resultDepartment.hasName = NO;
  resultDepartment.name = @"";
  return self;
}
- (BOOL) hasParentId {
  return resultDepartment.hasParentId;
}
- (SInt64) parentId {
  return resultDepartment.parentId;
}
- (TXPBDepartmentBuilder*) setParentId:(SInt64) value {
  resultDepartment.hasParentId = YES;
  resultDepartment.parentId = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearParentId {
  resultDepartment.hasParentId = NO;
  resultDepartment.parentId = 0L;
  return self;
}
- (BOOL) hasGroupId {
  return resultDepartment.hasGroupId;
}
- (NSString*) groupId {
  return resultDepartment.groupId;
}
- (TXPBDepartmentBuilder*) setGroupId:(NSString*) value {
  resultDepartment.hasGroupId = YES;
  resultDepartment.groupId = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearGroupId {
  resultDepartment.hasGroupId = NO;
  resultDepartment.groupId = @"";
  return self;
}
- (BOOL) hasType {
  return resultDepartment.hasType;
}
- (TXPBDepartmentType) type {
  return resultDepartment.type;
}
- (TXPBDepartmentBuilder*) setType:(TXPBDepartmentType) value {
  resultDepartment.hasType = YES;
  resultDepartment.type = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearType {
  resultDepartment.hasType = NO;
  resultDepartment.type = TXPBDepartmentTypeGarden;
  return self;
}
- (BOOL) hasActionType {
  return resultDepartment.hasActionType;
}
- (TXPBActionType) actionType {
  return resultDepartment.actionType;
}
- (TXPBDepartmentBuilder*) setActionType:(TXPBActionType) value {
  resultDepartment.hasActionType = YES;
  resultDepartment.actionType = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearActionType {
  resultDepartment.hasActionType = NO;
  resultDepartment.actionType = TXPBActionTypeAdd;
  return self;
}
- (BOOL) hasClassPhoto {
  return resultDepartment.hasClassPhoto;
}
- (NSString*) classPhoto {
  return resultDepartment.classPhoto;
}
- (TXPBDepartmentBuilder*) setClassPhoto:(NSString*) value {
  resultDepartment.hasClassPhoto = YES;
  resultDepartment.classPhoto = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearClassPhoto {
  resultDepartment.hasClassPhoto = NO;
  resultDepartment.classPhoto = @"";
  return self;
}
- (BOOL) hasShowParent {
  return resultDepartment.hasShowParent;
}
- (BOOL) showParent {
  return resultDepartment.showParent;
}
- (TXPBDepartmentBuilder*) setShowParent:(BOOL) value {
  resultDepartment.hasShowParent = YES;
  resultDepartment.showParent = value;
  return self;
}
- (TXPBDepartmentBuilder*) clearShowParent {
  resultDepartment.hasShowParent = NO;
  resultDepartment.showParent = NO;
  return self;
}
@end

@interface TXPBNotice ()
@property SInt64 id;
@property (strong) NSString* content;
@property (strong) NSMutableArray * attachesArray;
@property SInt64 sendUserId;
@property SInt64 sendTime;
@property BOOL isRead;
@property (strong) NSString* senderName;
@property (strong) NSString* senderAvatar;
@end

@implementation TXPBNotice

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
@synthesize attachesArray;
@dynamic attaches;
- (BOOL) hasSendUserId {
  return !!hasSendUserId_;
}
- (void) setHasSendUserId:(BOOL) _value_ {
  hasSendUserId_ = !!_value_;
}
@synthesize sendUserId;
- (BOOL) hasSendTime {
  return !!hasSendTime_;
}
- (void) setHasSendTime:(BOOL) _value_ {
  hasSendTime_ = !!_value_;
}
@synthesize sendTime;
- (BOOL) hasIsRead {
  return !!hasIsRead_;
}
- (void) setHasIsRead:(BOOL) _value_ {
  hasIsRead_ = !!_value_;
}
- (BOOL) isRead {
  return !!isRead_;
}
- (void) setIsRead:(BOOL) _value_ {
  isRead_ = !!_value_;
}
- (BOOL) hasSenderName {
  return !!hasSenderName_;
}
- (void) setHasSenderName:(BOOL) _value_ {
  hasSenderName_ = !!_value_;
}
@synthesize senderName;
- (BOOL) hasSenderAvatar {
  return !!hasSenderAvatar_;
}
- (void) setHasSenderAvatar:(BOOL) _value_ {
  hasSenderAvatar_ = !!_value_;
}
@synthesize senderAvatar;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.content = @"";
    self.sendUserId = 0L;
    self.sendTime = 0L;
    self.isRead = NO;
    self.senderName = @"";
    self.senderAvatar = @"";
  }
  return self;
}
static TXPBNotice* defaultTXPBNoticeInstance = nil;
+ (void) initialize {
  if (self == [TXPBNotice class]) {
    defaultTXPBNoticeInstance = [[TXPBNotice alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBNoticeInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBNoticeInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasSendUserId) {
    return NO;
  }
  if (!self.hasSendTime) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasSendUserId) {
    [output writeInt64:4 value:self.sendUserId];
  }
  if (self.hasSendTime) {
    [output writeInt64:5 value:self.sendTime];
  }
  if (self.hasIsRead) {
    [output writeBool:6 value:self.isRead];
  }
  if (self.hasSenderName) {
    [output writeString:7 value:self.senderName];
  }
  if (self.hasSenderAvatar) {
    [output writeString:8 value:self.senderAvatar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasSendUserId) {
    size_ += computeInt64Size(4, self.sendUserId);
  }
  if (self.hasSendTime) {
    size_ += computeInt64Size(5, self.sendTime);
  }
  if (self.hasIsRead) {
    size_ += computeBoolSize(6, self.isRead);
  }
  if (self.hasSenderName) {
    size_ += computeStringSize(7, self.senderName);
  }
  if (self.hasSenderAvatar) {
    size_ += computeStringSize(8, self.senderAvatar);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBNotice*) parseFromData:(NSData*) data {
  return (TXPBNotice*)[[[TXPBNotice builder] mergeFromData:data] build];
}
+ (TXPBNotice*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNotice*)[[[TXPBNotice builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBNotice*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBNotice*)[[[TXPBNotice builder] mergeFromInputStream:input] build];
}
+ (TXPBNotice*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNotice*)[[[TXPBNotice builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBNotice*)[[[TXPBNotice builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBNotice*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNotice*)[[[TXPBNotice builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBNoticeBuilder*) builder {
  return [[TXPBNoticeBuilder alloc] init];
}
+ (TXPBNoticeBuilder*) builderWithPrototype:(TXPBNotice*) prototype {
  return [[TXPBNotice builder] mergeFrom:prototype];
}
- (TXPBNoticeBuilder*) builder {
  return [TXPBNotice builder];
}
- (TXPBNoticeBuilder*) toBuilder {
  return [TXPBNotice builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasSendUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendUserId", [NSNumber numberWithLongLong:self.sendUserId]];
  }
  if (self.hasSendTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendTime", [NSNumber numberWithLongLong:self.sendTime]];
  }
  if (self.hasIsRead) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isRead", [NSNumber numberWithBool:self.isRead]];
  }
  if (self.hasSenderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderName", self.senderName];
  }
  if (self.hasSenderAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderAvatar", self.senderAvatar];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  if (self.hasSendUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sendUserId] forKey: @"sendUserId"];
  }
  if (self.hasSendTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sendTime] forKey: @"sendTime"];
  }
  if (self.hasIsRead) {
    [dictionary setObject: [NSNumber numberWithBool:self.isRead] forKey: @"isRead"];
  }
  if (self.hasSenderName) {
    [dictionary setObject: self.senderName forKey: @"senderName"];
  }
  if (self.hasSenderAvatar) {
    [dictionary setObject: self.senderAvatar forKey: @"senderAvatar"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBNotice class]]) {
    return NO;
  }
  TXPBNotice *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      self.hasSendUserId == otherMessage.hasSendUserId &&
      (!self.hasSendUserId || self.sendUserId == otherMessage.sendUserId) &&
      self.hasSendTime == otherMessage.hasSendTime &&
      (!self.hasSendTime || self.sendTime == otherMessage.sendTime) &&
      self.hasIsRead == otherMessage.hasIsRead &&
      (!self.hasIsRead || self.isRead == otherMessage.isRead) &&
      self.hasSenderName == otherMessage.hasSenderName &&
      (!self.hasSenderName || [self.senderName isEqual:otherMessage.senderName]) &&
      self.hasSenderAvatar == otherMessage.hasSenderAvatar &&
      (!self.hasSenderAvatar || [self.senderAvatar isEqual:otherMessage.senderAvatar]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasSendUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sendUserId] hash];
  }
  if (self.hasSendTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sendTime] hash];
  }
  if (self.hasIsRead) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isRead] hash];
  }
  if (self.hasSenderName) {
    hashCode = hashCode * 31 + [self.senderName hash];
  }
  if (self.hasSenderAvatar) {
    hashCode = hashCode * 31 + [self.senderAvatar hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBNoticeBuilder()
@property (strong) TXPBNotice* resultNotice;
@end

@implementation TXPBNoticeBuilder
@synthesize resultNotice;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultNotice = [[TXPBNotice alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultNotice;
}
- (TXPBNoticeBuilder*) clear {
  self.resultNotice = [[TXPBNotice alloc] init];
  return self;
}
- (TXPBNoticeBuilder*) clone {
  return [TXPBNotice builderWithPrototype:resultNotice];
}
- (TXPBNotice*) defaultInstance {
  return [TXPBNotice defaultInstance];
}
- (TXPBNotice*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBNotice*) buildPartial {
  TXPBNotice* returnMe = resultNotice;
  self.resultNotice = nil;
  return returnMe;
}
- (TXPBNoticeBuilder*) mergeFrom:(TXPBNotice*) other {
  if (other == [TXPBNotice defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.attachesArray.count > 0) {
    if (resultNotice.attachesArray == nil) {
      resultNotice.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultNotice.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  if (other.hasSendUserId) {
    [self setSendUserId:other.sendUserId];
  }
  if (other.hasSendTime) {
    [self setSendTime:other.sendTime];
  }
  if (other.hasIsRead) {
    [self setIsRead:other.isRead];
  }
  if (other.hasSenderName) {
    [self setSenderName:other.senderName];
  }
  if (other.hasSenderAvatar) {
    [self setSenderAvatar:other.senderAvatar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBNoticeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBNoticeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 26: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setSendUserId:[input readInt64]];
        break;
      }
      case 40: {
        [self setSendTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setIsRead:[input readBool]];
        break;
      }
      case 58: {
        [self setSenderName:[input readString]];
        break;
      }
      case 66: {
        [self setSenderAvatar:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultNotice.hasId;
}
- (SInt64) id {
  return resultNotice.id;
}
- (TXPBNoticeBuilder*) setId:(SInt64) value {
  resultNotice.hasId = YES;
  resultNotice.id = value;
  return self;
}
- (TXPBNoticeBuilder*) clearId {
  resultNotice.hasId = NO;
  resultNotice.id = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultNotice.hasContent;
}
- (NSString*) content {
  return resultNotice.content;
}
- (TXPBNoticeBuilder*) setContent:(NSString*) value {
  resultNotice.hasContent = YES;
  resultNotice.content = value;
  return self;
}
- (TXPBNoticeBuilder*) clearContent {
  resultNotice.hasContent = NO;
  resultNotice.content = @"";
  return self;
}
- (NSMutableArray *)attaches {
  return resultNotice.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultNotice attachesAtIndex:index];
}
- (TXPBNoticeBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultNotice.attachesArray == nil) {
    resultNotice.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultNotice.attachesArray addObject:value];
  return self;
}
- (TXPBNoticeBuilder *)setAttachesArray:(NSArray *)array {
  resultNotice.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBNoticeBuilder *)clearAttaches {
  resultNotice.attachesArray = nil;
  return self;
}
- (BOOL) hasSendUserId {
  return resultNotice.hasSendUserId;
}
- (SInt64) sendUserId {
  return resultNotice.sendUserId;
}
- (TXPBNoticeBuilder*) setSendUserId:(SInt64) value {
  resultNotice.hasSendUserId = YES;
  resultNotice.sendUserId = value;
  return self;
}
- (TXPBNoticeBuilder*) clearSendUserId {
  resultNotice.hasSendUserId = NO;
  resultNotice.sendUserId = 0L;
  return self;
}
- (BOOL) hasSendTime {
  return resultNotice.hasSendTime;
}
- (SInt64) sendTime {
  return resultNotice.sendTime;
}
- (TXPBNoticeBuilder*) setSendTime:(SInt64) value {
  resultNotice.hasSendTime = YES;
  resultNotice.sendTime = value;
  return self;
}
- (TXPBNoticeBuilder*) clearSendTime {
  resultNotice.hasSendTime = NO;
  resultNotice.sendTime = 0L;
  return self;
}
- (BOOL) hasIsRead {
  return resultNotice.hasIsRead;
}
- (BOOL) isRead {
  return resultNotice.isRead;
}
- (TXPBNoticeBuilder*) setIsRead:(BOOL) value {
  resultNotice.hasIsRead = YES;
  resultNotice.isRead = value;
  return self;
}
- (TXPBNoticeBuilder*) clearIsRead {
  resultNotice.hasIsRead = NO;
  resultNotice.isRead = NO;
  return self;
}
- (BOOL) hasSenderName {
  return resultNotice.hasSenderName;
}
- (NSString*) senderName {
  return resultNotice.senderName;
}
- (TXPBNoticeBuilder*) setSenderName:(NSString*) value {
  resultNotice.hasSenderName = YES;
  resultNotice.senderName = value;
  return self;
}
- (TXPBNoticeBuilder*) clearSenderName {
  resultNotice.hasSenderName = NO;
  resultNotice.senderName = @"";
  return self;
}
- (BOOL) hasSenderAvatar {
  return resultNotice.hasSenderAvatar;
}
- (NSString*) senderAvatar {
  return resultNotice.senderAvatar;
}
- (TXPBNoticeBuilder*) setSenderAvatar:(NSString*) value {
  resultNotice.hasSenderAvatar = YES;
  resultNotice.senderAvatar = value;
  return self;
}
- (TXPBNoticeBuilder*) clearSenderAvatar {
  resultNotice.hasSenderAvatar = NO;
  resultNotice.senderAvatar = @"";
  return self;
}
@end

@interface TXPBAttach ()
@property (strong) NSString* fileurl;
@property TXPBAttachType attachType;
@end

@implementation TXPBAttach

- (BOOL) hasFileurl {
  return !!hasFileurl_;
}
- (void) setHasFileurl:(BOOL) _value_ {
  hasFileurl_ = !!_value_;
}
@synthesize fileurl;
- (BOOL) hasAttachType {
  return !!hasAttachType_;
}
- (void) setHasAttachType:(BOOL) _value_ {
  hasAttachType_ = !!_value_;
}
@synthesize attachType;
- (instancetype) init {
  if ((self = [super init])) {
    self.fileurl = @"";
    self.attachType = TXPBAttachTypePic;
  }
  return self;
}
static TXPBAttach* defaultTXPBAttachInstance = nil;
+ (void) initialize {
  if (self == [TXPBAttach class]) {
    defaultTXPBAttachInstance = [[TXPBAttach alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAttachInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAttachInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFileurl) {
    return NO;
  }
  if (!self.hasAttachType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFileurl) {
    [output writeString:1 value:self.fileurl];
  }
  if (self.hasAttachType) {
    [output writeEnum:2 value:self.attachType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFileurl) {
    size_ += computeStringSize(1, self.fileurl);
  }
  if (self.hasAttachType) {
    size_ += computeEnumSize(2, self.attachType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAttach*) parseFromData:(NSData*) data {
  return (TXPBAttach*)[[[TXPBAttach builder] mergeFromData:data] build];
}
+ (TXPBAttach*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAttach*)[[[TXPBAttach builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAttach*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAttach*)[[[TXPBAttach builder] mergeFromInputStream:input] build];
}
+ (TXPBAttach*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAttach*)[[[TXPBAttach builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAttach*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAttach*)[[[TXPBAttach builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAttach*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAttach*)[[[TXPBAttach builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAttachBuilder*) builder {
  return [[TXPBAttachBuilder alloc] init];
}
+ (TXPBAttachBuilder*) builderWithPrototype:(TXPBAttach*) prototype {
  return [[TXPBAttach builder] mergeFrom:prototype];
}
- (TXPBAttachBuilder*) builder {
  return [TXPBAttach builder];
}
- (TXPBAttachBuilder*) toBuilder {
  return [TXPBAttach builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFileurl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fileurl", self.fileurl];
  }
  if (self.hasAttachType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachType", NSStringFromTXPBAttachType(self.attachType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFileurl) {
    [dictionary setObject: self.fileurl forKey: @"fileurl"];
  }
  if (self.hasAttachType) {
    [dictionary setObject: @(self.attachType) forKey: @"attachType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAttach class]]) {
    return NO;
  }
  TXPBAttach *otherMessage = other;
  return
      self.hasFileurl == otherMessage.hasFileurl &&
      (!self.hasFileurl || [self.fileurl isEqual:otherMessage.fileurl]) &&
      self.hasAttachType == otherMessage.hasAttachType &&
      (!self.hasAttachType || self.attachType == otherMessage.attachType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFileurl) {
    hashCode = hashCode * 31 + [self.fileurl hash];
  }
  if (self.hasAttachType) {
    hashCode = hashCode * 31 + self.attachType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAttachBuilder()
@property (strong) TXPBAttach* resultAttach;
@end

@implementation TXPBAttachBuilder
@synthesize resultAttach;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAttach = [[TXPBAttach alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAttach;
}
- (TXPBAttachBuilder*) clear {
  self.resultAttach = [[TXPBAttach alloc] init];
  return self;
}
- (TXPBAttachBuilder*) clone {
  return [TXPBAttach builderWithPrototype:resultAttach];
}
- (TXPBAttach*) defaultInstance {
  return [TXPBAttach defaultInstance];
}
- (TXPBAttach*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAttach*) buildPartial {
  TXPBAttach* returnMe = resultAttach;
  self.resultAttach = nil;
  return returnMe;
}
- (TXPBAttachBuilder*) mergeFrom:(TXPBAttach*) other {
  if (other == [TXPBAttach defaultInstance]) {
    return self;
  }
  if (other.hasFileurl) {
    [self setFileurl:other.fileurl];
  }
  if (other.hasAttachType) {
    [self setAttachType:other.attachType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAttachBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAttachBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFileurl:[input readString]];
        break;
      }
      case 16: {
        TXPBAttachType value = (TXPBAttachType)[input readEnum];
        if (TXPBAttachTypeIsValidValue(value)) {
          [self setAttachType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasFileurl {
  return resultAttach.hasFileurl;
}
- (NSString*) fileurl {
  return resultAttach.fileurl;
}
- (TXPBAttachBuilder*) setFileurl:(NSString*) value {
  resultAttach.hasFileurl = YES;
  resultAttach.fileurl = value;
  return self;
}
- (TXPBAttachBuilder*) clearFileurl {
  resultAttach.hasFileurl = NO;
  resultAttach.fileurl = @"";
  return self;
}
- (BOOL) hasAttachType {
  return resultAttach.hasAttachType;
}
- (TXPBAttachType) attachType {
  return resultAttach.attachType;
}
- (TXPBAttachBuilder*) setAttachType:(TXPBAttachType) value {
  resultAttach.hasAttachType = YES;
  resultAttach.attachType = value;
  return self;
}
- (TXPBAttachBuilder*) clearAttachType {
  resultAttach.hasAttachType = NO;
  resultAttach.attachType = TXPBAttachTypePic;
  return self;
}
@end

@interface TXPBNoticeDepartment ()
@property SInt64 id;
@property SInt64 noticeId;
@property SInt64 departmentId;
@property SInt32 memberCount;
@property SInt32 readedCount;
@property (strong) PBAppendableArray * memberUserIdsArray;
@property BOOL all;
@end

@implementation TXPBNoticeDepartment

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasNoticeId {
  return !!hasNoticeId_;
}
- (void) setHasNoticeId:(BOOL) _value_ {
  hasNoticeId_ = !!_value_;
}
@synthesize noticeId;
- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (BOOL) hasMemberCount {
  return !!hasMemberCount_;
}
- (void) setHasMemberCount:(BOOL) _value_ {
  hasMemberCount_ = !!_value_;
}
@synthesize memberCount;
- (BOOL) hasReadedCount {
  return !!hasReadedCount_;
}
- (void) setHasReadedCount:(BOOL) _value_ {
  hasReadedCount_ = !!_value_;
}
@synthesize readedCount;
@synthesize memberUserIdsArray;
@dynamic memberUserIds;
- (BOOL) hasAll {
  return !!hasAll_;
}
- (void) setHasAll:(BOOL) _value_ {
  hasAll_ = !!_value_;
}
- (BOOL) all {
  return !!all_;
}
- (void) setAll:(BOOL) _value_ {
  all_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.noticeId = 0L;
    self.departmentId = 0L;
    self.memberCount = 0;
    self.readedCount = 0;
    self.all = NO;
  }
  return self;
}
static TXPBNoticeDepartment* defaultTXPBNoticeDepartmentInstance = nil;
+ (void) initialize {
  if (self == [TXPBNoticeDepartment class]) {
    defaultTXPBNoticeDepartmentInstance = [[TXPBNoticeDepartment alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBNoticeDepartmentInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBNoticeDepartmentInstance;
}
- (PBArray *)memberUserIds {
  return memberUserIdsArray;
}
- (SInt64)memberUserIdsAtIndex:(NSUInteger)index {
  return [memberUserIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasDepartmentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasNoticeId) {
    [output writeInt64:2 value:self.noticeId];
  }
  if (self.hasDepartmentId) {
    [output writeInt64:3 value:self.departmentId];
  }
  if (self.hasMemberCount) {
    [output writeInt32:4 value:self.memberCount];
  }
  if (self.hasReadedCount) {
    [output writeInt32:5 value:self.readedCount];
  }
  const NSUInteger memberUserIdsArrayCount = self.memberUserIdsArray.count;
  if (memberUserIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.memberUserIdsArray.data;
    for (NSUInteger i = 0; i < memberUserIdsArrayCount; ++i) {
      [output writeInt64:6 value:values[i]];
    }
  }
  if (self.hasAll) {
    [output writeBool:7 value:self.all];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasNoticeId) {
    size_ += computeInt64Size(2, self.noticeId);
  }
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(3, self.departmentId);
  }
  if (self.hasMemberCount) {
    size_ += computeInt32Size(4, self.memberCount);
  }
  if (self.hasReadedCount) {
    size_ += computeInt32Size(5, self.readedCount);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.memberUserIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.memberUserIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasAll) {
    size_ += computeBoolSize(7, self.all);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBNoticeDepartment*) parseFromData:(NSData*) data {
  return (TXPBNoticeDepartment*)[[[TXPBNoticeDepartment builder] mergeFromData:data] build];
}
+ (TXPBNoticeDepartment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNoticeDepartment*)[[[TXPBNoticeDepartment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBNoticeDepartment*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBNoticeDepartment*)[[[TXPBNoticeDepartment builder] mergeFromInputStream:input] build];
}
+ (TXPBNoticeDepartment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNoticeDepartment*)[[[TXPBNoticeDepartment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBNoticeDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBNoticeDepartment*)[[[TXPBNoticeDepartment builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBNoticeDepartment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNoticeDepartment*)[[[TXPBNoticeDepartment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBNoticeDepartmentBuilder*) builder {
  return [[TXPBNoticeDepartmentBuilder alloc] init];
}
+ (TXPBNoticeDepartmentBuilder*) builderWithPrototype:(TXPBNoticeDepartment*) prototype {
  return [[TXPBNoticeDepartment builder] mergeFrom:prototype];
}
- (TXPBNoticeDepartmentBuilder*) builder {
  return [TXPBNoticeDepartment builder];
}
- (TXPBNoticeDepartmentBuilder*) toBuilder {
  return [TXPBNoticeDepartment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasNoticeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"noticeId", [NSNumber numberWithLongLong:self.noticeId]];
  }
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  if (self.hasMemberCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"memberCount", [NSNumber numberWithInteger:self.memberCount]];
  }
  if (self.hasReadedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"readedCount", [NSNumber numberWithInteger:self.readedCount]];
  }
  [self.memberUserIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"memberUserIds", obj];
  }];
  if (self.hasAll) {
    [output appendFormat:@"%@%@: %@\n", indent, @"all", [NSNumber numberWithBool:self.all]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasNoticeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.noticeId] forKey: @"noticeId"];
  }
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  if (self.hasMemberCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.memberCount] forKey: @"memberCount"];
  }
  if (self.hasReadedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.readedCount] forKey: @"readedCount"];
  }
  NSMutableArray * memberUserIdsArrayArray = [NSMutableArray new];
  NSUInteger memberUserIdsArrayCount=self.memberUserIdsArray.count;
  for(int i=0;i<memberUserIdsArrayCount;i++){
    [memberUserIdsArrayArray addObject: @([self.memberUserIdsArray int64AtIndex:i])];
  }
  [dictionary setObject: memberUserIdsArrayArray forKey: @"memberUserIds"];
  if (self.hasAll) {
    [dictionary setObject: [NSNumber numberWithBool:self.all] forKey: @"all"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBNoticeDepartment class]]) {
    return NO;
  }
  TXPBNoticeDepartment *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasNoticeId == otherMessage.hasNoticeId &&
      (!self.hasNoticeId || self.noticeId == otherMessage.noticeId) &&
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      self.hasMemberCount == otherMessage.hasMemberCount &&
      (!self.hasMemberCount || self.memberCount == otherMessage.memberCount) &&
      self.hasReadedCount == otherMessage.hasReadedCount &&
      (!self.hasReadedCount || self.readedCount == otherMessage.readedCount) &&
      [self.memberUserIdsArray isEqualToArray:otherMessage.memberUserIdsArray] &&
      self.hasAll == otherMessage.hasAll &&
      (!self.hasAll || self.all == otherMessage.all) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasNoticeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.noticeId] hash];
  }
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  if (self.hasMemberCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.memberCount] hash];
  }
  if (self.hasReadedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.readedCount] hash];
  }
  [self.memberUserIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasAll) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.all] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBNoticeDepartmentBuilder()
@property (strong) TXPBNoticeDepartment* resultNoticeDepartment;
@end

@implementation TXPBNoticeDepartmentBuilder
@synthesize resultNoticeDepartment;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultNoticeDepartment = [[TXPBNoticeDepartment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultNoticeDepartment;
}
- (TXPBNoticeDepartmentBuilder*) clear {
  self.resultNoticeDepartment = [[TXPBNoticeDepartment alloc] init];
  return self;
}
- (TXPBNoticeDepartmentBuilder*) clone {
  return [TXPBNoticeDepartment builderWithPrototype:resultNoticeDepartment];
}
- (TXPBNoticeDepartment*) defaultInstance {
  return [TXPBNoticeDepartment defaultInstance];
}
- (TXPBNoticeDepartment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBNoticeDepartment*) buildPartial {
  TXPBNoticeDepartment* returnMe = resultNoticeDepartment;
  self.resultNoticeDepartment = nil;
  return returnMe;
}
- (TXPBNoticeDepartmentBuilder*) mergeFrom:(TXPBNoticeDepartment*) other {
  if (other == [TXPBNoticeDepartment defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasNoticeId) {
    [self setNoticeId:other.noticeId];
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  if (other.hasMemberCount) {
    [self setMemberCount:other.memberCount];
  }
  if (other.hasReadedCount) {
    [self setReadedCount:other.readedCount];
  }
  if (other.memberUserIdsArray.count > 0) {
    if (resultNoticeDepartment.memberUserIdsArray == nil) {
      resultNoticeDepartment.memberUserIdsArray = [other.memberUserIdsArray copy];
    } else {
      [resultNoticeDepartment.memberUserIdsArray appendArray:other.memberUserIdsArray];
    }
  }
  if (other.hasAll) {
    [self setAll:other.all];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBNoticeDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBNoticeDepartmentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setNoticeId:[input readInt64]];
        break;
      }
      case 24: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
      case 32: {
        [self setMemberCount:[input readInt32]];
        break;
      }
      case 40: {
        [self setReadedCount:[input readInt32]];
        break;
      }
      case 48: {
        [self addMemberUserIds:[input readInt64]];
        break;
      }
      case 56: {
        [self setAll:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultNoticeDepartment.hasId;
}
- (SInt64) id {
  return resultNoticeDepartment.id;
}
- (TXPBNoticeDepartmentBuilder*) setId:(SInt64) value {
  resultNoticeDepartment.hasId = YES;
  resultNoticeDepartment.id = value;
  return self;
}
- (TXPBNoticeDepartmentBuilder*) clearId {
  resultNoticeDepartment.hasId = NO;
  resultNoticeDepartment.id = 0L;
  return self;
}
- (BOOL) hasNoticeId {
  return resultNoticeDepartment.hasNoticeId;
}
- (SInt64) noticeId {
  return resultNoticeDepartment.noticeId;
}
- (TXPBNoticeDepartmentBuilder*) setNoticeId:(SInt64) value {
  resultNoticeDepartment.hasNoticeId = YES;
  resultNoticeDepartment.noticeId = value;
  return self;
}
- (TXPBNoticeDepartmentBuilder*) clearNoticeId {
  resultNoticeDepartment.hasNoticeId = NO;
  resultNoticeDepartment.noticeId = 0L;
  return self;
}
- (BOOL) hasDepartmentId {
  return resultNoticeDepartment.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultNoticeDepartment.departmentId;
}
- (TXPBNoticeDepartmentBuilder*) setDepartmentId:(SInt64) value {
  resultNoticeDepartment.hasDepartmentId = YES;
  resultNoticeDepartment.departmentId = value;
  return self;
}
- (TXPBNoticeDepartmentBuilder*) clearDepartmentId {
  resultNoticeDepartment.hasDepartmentId = NO;
  resultNoticeDepartment.departmentId = 0L;
  return self;
}
- (BOOL) hasMemberCount {
  return resultNoticeDepartment.hasMemberCount;
}
- (SInt32) memberCount {
  return resultNoticeDepartment.memberCount;
}
- (TXPBNoticeDepartmentBuilder*) setMemberCount:(SInt32) value {
  resultNoticeDepartment.hasMemberCount = YES;
  resultNoticeDepartment.memberCount = value;
  return self;
}
- (TXPBNoticeDepartmentBuilder*) clearMemberCount {
  resultNoticeDepartment.hasMemberCount = NO;
  resultNoticeDepartment.memberCount = 0;
  return self;
}
- (BOOL) hasReadedCount {
  return resultNoticeDepartment.hasReadedCount;
}
- (SInt32) readedCount {
  return resultNoticeDepartment.readedCount;
}
- (TXPBNoticeDepartmentBuilder*) setReadedCount:(SInt32) value {
  resultNoticeDepartment.hasReadedCount = YES;
  resultNoticeDepartment.readedCount = value;
  return self;
}
- (TXPBNoticeDepartmentBuilder*) clearReadedCount {
  resultNoticeDepartment.hasReadedCount = NO;
  resultNoticeDepartment.readedCount = 0;
  return self;
}
- (PBAppendableArray *)memberUserIds {
  return resultNoticeDepartment.memberUserIdsArray;
}
- (SInt64)memberUserIdsAtIndex:(NSUInteger)index {
  return [resultNoticeDepartment memberUserIdsAtIndex:index];
}
- (TXPBNoticeDepartmentBuilder *)addMemberUserIds:(SInt64)value {
  if (resultNoticeDepartment.memberUserIdsArray == nil) {
    resultNoticeDepartment.memberUserIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultNoticeDepartment.memberUserIdsArray addInt64:value];
  return self;
}
- (TXPBNoticeDepartmentBuilder *)setMemberUserIdsArray:(NSArray *)array {
  resultNoticeDepartment.memberUserIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBNoticeDepartmentBuilder *)setMemberUserIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  resultNoticeDepartment.memberUserIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBNoticeDepartmentBuilder *)clearMemberUserIds {
  resultNoticeDepartment.memberUserIdsArray = nil;
  return self;
}
- (BOOL) hasAll {
  return resultNoticeDepartment.hasAll;
}
- (BOOL) all {
  return resultNoticeDepartment.all;
}
- (TXPBNoticeDepartmentBuilder*) setAll:(BOOL) value {
  resultNoticeDepartment.hasAll = YES;
  resultNoticeDepartment.all = value;
  return self;
}
- (TXPBNoticeDepartmentBuilder*) clearAll {
  resultNoticeDepartment.hasAll = NO;
  resultNoticeDepartment.all = NO;
  return self;
}
@end

@interface TXPBNoticeMember ()
@property SInt64 id;
@property SInt64 userId;
@property (strong) NSString* nickname;
@property BOOL isRead;
@property (strong) NSString* avatar;
@end

@implementation TXPBNoticeMember

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value_ {
  hasNickname_ = !!_value_;
}
@synthesize nickname;
- (BOOL) hasIsRead {
  return !!hasIsRead_;
}
- (void) setHasIsRead:(BOOL) _value_ {
  hasIsRead_ = !!_value_;
}
- (BOOL) isRead {
  return !!isRead_;
}
- (void) setIsRead:(BOOL) _value_ {
  isRead_ = !!_value_;
}
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.userId = 0L;
    self.nickname = @"";
    self.isRead = NO;
    self.avatar = @"";
  }
  return self;
}
static TXPBNoticeMember* defaultTXPBNoticeMemberInstance = nil;
+ (void) initialize {
  if (self == [TXPBNoticeMember class]) {
    defaultTXPBNoticeMemberInstance = [[TXPBNoticeMember alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBNoticeMemberInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBNoticeMemberInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasUserId) {
    [output writeInt64:2 value:self.userId];
  }
  if (self.hasNickname) {
    [output writeString:3 value:self.nickname];
  }
  if (self.hasIsRead) {
    [output writeBool:4 value:self.isRead];
  }
  if (self.hasAvatar) {
    [output writeString:5 value:self.avatar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(2, self.userId);
  }
  if (self.hasNickname) {
    size_ += computeStringSize(3, self.nickname);
  }
  if (self.hasIsRead) {
    size_ += computeBoolSize(4, self.isRead);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(5, self.avatar);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBNoticeMember*) parseFromData:(NSData*) data {
  return (TXPBNoticeMember*)[[[TXPBNoticeMember builder] mergeFromData:data] build];
}
+ (TXPBNoticeMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNoticeMember*)[[[TXPBNoticeMember builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBNoticeMember*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBNoticeMember*)[[[TXPBNoticeMember builder] mergeFromInputStream:input] build];
}
+ (TXPBNoticeMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNoticeMember*)[[[TXPBNoticeMember builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBNoticeMember*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBNoticeMember*)[[[TXPBNoticeMember builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBNoticeMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBNoticeMember*)[[[TXPBNoticeMember builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBNoticeMemberBuilder*) builder {
  return [[TXPBNoticeMemberBuilder alloc] init];
}
+ (TXPBNoticeMemberBuilder*) builderWithPrototype:(TXPBNoticeMember*) prototype {
  return [[TXPBNoticeMember builder] mergeFrom:prototype];
}
- (TXPBNoticeMemberBuilder*) builder {
  return [TXPBNoticeMember builder];
}
- (TXPBNoticeMemberBuilder*) toBuilder {
  return [TXPBNoticeMember builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasNickname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickname", self.nickname];
  }
  if (self.hasIsRead) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isRead", [NSNumber numberWithBool:self.isRead]];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasNickname) {
    [dictionary setObject: self.nickname forKey: @"nickname"];
  }
  if (self.hasIsRead) {
    [dictionary setObject: [NSNumber numberWithBool:self.isRead] forKey: @"isRead"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBNoticeMember class]]) {
    return NO;
  }
  TXPBNoticeMember *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasNickname == otherMessage.hasNickname &&
      (!self.hasNickname || [self.nickname isEqual:otherMessage.nickname]) &&
      self.hasIsRead == otherMessage.hasIsRead &&
      (!self.hasIsRead || self.isRead == otherMessage.isRead) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasNickname) {
    hashCode = hashCode * 31 + [self.nickname hash];
  }
  if (self.hasIsRead) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isRead] hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBNoticeMemberBuilder()
@property (strong) TXPBNoticeMember* resultNoticeMember;
@end

@implementation TXPBNoticeMemberBuilder
@synthesize resultNoticeMember;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultNoticeMember = [[TXPBNoticeMember alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultNoticeMember;
}
- (TXPBNoticeMemberBuilder*) clear {
  self.resultNoticeMember = [[TXPBNoticeMember alloc] init];
  return self;
}
- (TXPBNoticeMemberBuilder*) clone {
  return [TXPBNoticeMember builderWithPrototype:resultNoticeMember];
}
- (TXPBNoticeMember*) defaultInstance {
  return [TXPBNoticeMember defaultInstance];
}
- (TXPBNoticeMember*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBNoticeMember*) buildPartial {
  TXPBNoticeMember* returnMe = resultNoticeMember;
  self.resultNoticeMember = nil;
  return returnMe;
}
- (TXPBNoticeMemberBuilder*) mergeFrom:(TXPBNoticeMember*) other {
  if (other == [TXPBNoticeMember defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasIsRead) {
    [self setIsRead:other.isRead];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBNoticeMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBNoticeMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 26: {
        [self setNickname:[input readString]];
        break;
      }
      case 32: {
        [self setIsRead:[input readBool]];
        break;
      }
      case 42: {
        [self setAvatar:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultNoticeMember.hasId;
}
- (SInt64) id {
  return resultNoticeMember.id;
}
- (TXPBNoticeMemberBuilder*) setId:(SInt64) value {
  resultNoticeMember.hasId = YES;
  resultNoticeMember.id = value;
  return self;
}
- (TXPBNoticeMemberBuilder*) clearId {
  resultNoticeMember.hasId = NO;
  resultNoticeMember.id = 0L;
  return self;
}
- (BOOL) hasUserId {
  return resultNoticeMember.hasUserId;
}
- (SInt64) userId {
  return resultNoticeMember.userId;
}
- (TXPBNoticeMemberBuilder*) setUserId:(SInt64) value {
  resultNoticeMember.hasUserId = YES;
  resultNoticeMember.userId = value;
  return self;
}
- (TXPBNoticeMemberBuilder*) clearUserId {
  resultNoticeMember.hasUserId = NO;
  resultNoticeMember.userId = 0L;
  return self;
}
- (BOOL) hasNickname {
  return resultNoticeMember.hasNickname;
}
- (NSString*) nickname {
  return resultNoticeMember.nickname;
}
- (TXPBNoticeMemberBuilder*) setNickname:(NSString*) value {
  resultNoticeMember.hasNickname = YES;
  resultNoticeMember.nickname = value;
  return self;
}
- (TXPBNoticeMemberBuilder*) clearNickname {
  resultNoticeMember.hasNickname = NO;
  resultNoticeMember.nickname = @"";
  return self;
}
- (BOOL) hasIsRead {
  return resultNoticeMember.hasIsRead;
}
- (BOOL) isRead {
  return resultNoticeMember.isRead;
}
- (TXPBNoticeMemberBuilder*) setIsRead:(BOOL) value {
  resultNoticeMember.hasIsRead = YES;
  resultNoticeMember.isRead = value;
  return self;
}
- (TXPBNoticeMemberBuilder*) clearIsRead {
  resultNoticeMember.hasIsRead = NO;
  resultNoticeMember.isRead = NO;
  return self;
}
- (BOOL) hasAvatar {
  return resultNoticeMember.hasAvatar;
}
- (NSString*) avatar {
  return resultNoticeMember.avatar;
}
- (TXPBNoticeMemberBuilder*) setAvatar:(NSString*) value {
  resultNoticeMember.hasAvatar = YES;
  resultNoticeMember.avatar = value;
  return self;
}
- (TXPBNoticeMemberBuilder*) clearAvatar {
  resultNoticeMember.hasAvatar = NO;
  resultNoticeMember.avatar = @"";
  return self;
}
@end

@interface TXPBUserCard ()
@property SInt64 id;
@property SInt64 userId;
@property SInt64 parentUserId;
@property (strong) NSString* cardCode;
@property (strong) NSString* userName;
@property (strong) NSString* parentName;
@property TXPBActionType actionType;
@property TXPBUserType usertype;
@property (strong) NSString* positionName;
@property (strong) NSString* departmentName;
@property (strong) NSString* userNameUnison;
@end

@implementation TXPBUserCard

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasParentUserId {
  return !!hasParentUserId_;
}
- (void) setHasParentUserId:(BOOL) _value_ {
  hasParentUserId_ = !!_value_;
}
@synthesize parentUserId;
- (BOOL) hasCardCode {
  return !!hasCardCode_;
}
- (void) setHasCardCode:(BOOL) _value_ {
  hasCardCode_ = !!_value_;
}
@synthesize cardCode;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasParentName {
  return !!hasParentName_;
}
- (void) setHasParentName:(BOOL) _value_ {
  hasParentName_ = !!_value_;
}
@synthesize parentName;
- (BOOL) hasActionType {
  return !!hasActionType_;
}
- (void) setHasActionType:(BOOL) _value_ {
  hasActionType_ = !!_value_;
}
@synthesize actionType;
- (BOOL) hasUsertype {
  return !!hasUsertype_;
}
- (void) setHasUsertype:(BOOL) _value_ {
  hasUsertype_ = !!_value_;
}
@synthesize usertype;
- (BOOL) hasPositionName {
  return !!hasPositionName_;
}
- (void) setHasPositionName:(BOOL) _value_ {
  hasPositionName_ = !!_value_;
}
@synthesize positionName;
- (BOOL) hasDepartmentName {
  return !!hasDepartmentName_;
}
- (void) setHasDepartmentName:(BOOL) _value_ {
  hasDepartmentName_ = !!_value_;
}
@synthesize departmentName;
- (BOOL) hasUserNameUnison {
  return !!hasUserNameUnison_;
}
- (void) setHasUserNameUnison:(BOOL) _value_ {
  hasUserNameUnison_ = !!_value_;
}
@synthesize userNameUnison;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.userId = 0L;
    self.parentUserId = 0L;
    self.cardCode = @"";
    self.userName = @"";
    self.parentName = @"";
    self.actionType = TXPBActionTypeAdd;
    self.usertype = TXPBUserTypeChild;
    self.positionName = @"";
    self.departmentName = @"";
    self.userNameUnison = @"";
  }
  return self;
}
static TXPBUserCard* defaultTXPBUserCardInstance = nil;
+ (void) initialize {
  if (self == [TXPBUserCard class]) {
    defaultTXPBUserCardInstance = [[TXPBUserCard alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUserCardInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUserCardInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasCardCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasUserId) {
    [output writeInt64:2 value:self.userId];
  }
  if (self.hasParentUserId) {
    [output writeInt64:3 value:self.parentUserId];
  }
  if (self.hasCardCode) {
    [output writeString:4 value:self.cardCode];
  }
  if (self.hasUserName) {
    [output writeString:5 value:self.userName];
  }
  if (self.hasParentName) {
    [output writeString:6 value:self.parentName];
  }
  if (self.hasActionType) {
    [output writeEnum:7 value:self.actionType];
  }
  if (self.hasUsertype) {
    [output writeEnum:8 value:self.usertype];
  }
  if (self.hasPositionName) {
    [output writeString:9 value:self.positionName];
  }
  if (self.hasDepartmentName) {
    [output writeString:10 value:self.departmentName];
  }
  if (self.hasUserNameUnison) {
    [output writeString:11 value:self.userNameUnison];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(2, self.userId);
  }
  if (self.hasParentUserId) {
    size_ += computeInt64Size(3, self.parentUserId);
  }
  if (self.hasCardCode) {
    size_ += computeStringSize(4, self.cardCode);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(5, self.userName);
  }
  if (self.hasParentName) {
    size_ += computeStringSize(6, self.parentName);
  }
  if (self.hasActionType) {
    size_ += computeEnumSize(7, self.actionType);
  }
  if (self.hasUsertype) {
    size_ += computeEnumSize(8, self.usertype);
  }
  if (self.hasPositionName) {
    size_ += computeStringSize(9, self.positionName);
  }
  if (self.hasDepartmentName) {
    size_ += computeStringSize(10, self.departmentName);
  }
  if (self.hasUserNameUnison) {
    size_ += computeStringSize(11, self.userNameUnison);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUserCard*) parseFromData:(NSData*) data {
  return (TXPBUserCard*)[[[TXPBUserCard builder] mergeFromData:data] build];
}
+ (TXPBUserCard*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCard*)[[[TXPBUserCard builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCard*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUserCard*)[[[TXPBUserCard builder] mergeFromInputStream:input] build];
}
+ (TXPBUserCard*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCard*)[[[TXPBUserCard builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCard*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUserCard*)[[[TXPBUserCard builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUserCard*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCard*)[[[TXPBUserCard builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCardBuilder*) builder {
  return [[TXPBUserCardBuilder alloc] init];
}
+ (TXPBUserCardBuilder*) builderWithPrototype:(TXPBUserCard*) prototype {
  return [[TXPBUserCard builder] mergeFrom:prototype];
}
- (TXPBUserCardBuilder*) builder {
  return [TXPBUserCard builder];
}
- (TXPBUserCardBuilder*) toBuilder {
  return [TXPBUserCard builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasParentUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentUserId", [NSNumber numberWithLongLong:self.parentUserId]];
  }
  if (self.hasCardCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardCode", self.cardCode];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasParentName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentName", self.parentName];
  }
  if (self.hasActionType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"actionType", NSStringFromTXPBActionType(self.actionType)];
  }
  if (self.hasUsertype) {
    [output appendFormat:@"%@%@: %@\n", indent, @"usertype", NSStringFromTXPBUserType(self.usertype)];
  }
  if (self.hasPositionName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"positionName", self.positionName];
  }
  if (self.hasDepartmentName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentName", self.departmentName];
  }
  if (self.hasUserNameUnison) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userNameUnison", self.userNameUnison];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasParentUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentUserId] forKey: @"parentUserId"];
  }
  if (self.hasCardCode) {
    [dictionary setObject: self.cardCode forKey: @"cardCode"];
  }
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  if (self.hasParentName) {
    [dictionary setObject: self.parentName forKey: @"parentName"];
  }
  if (self.hasActionType) {
    [dictionary setObject: @(self.actionType) forKey: @"actionType"];
  }
  if (self.hasUsertype) {
    [dictionary setObject: @(self.usertype) forKey: @"usertype"];
  }
  if (self.hasPositionName) {
    [dictionary setObject: self.positionName forKey: @"positionName"];
  }
  if (self.hasDepartmentName) {
    [dictionary setObject: self.departmentName forKey: @"departmentName"];
  }
  if (self.hasUserNameUnison) {
    [dictionary setObject: self.userNameUnison forKey: @"userNameUnison"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUserCard class]]) {
    return NO;
  }
  TXPBUserCard *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasParentUserId == otherMessage.hasParentUserId &&
      (!self.hasParentUserId || self.parentUserId == otherMessage.parentUserId) &&
      self.hasCardCode == otherMessage.hasCardCode &&
      (!self.hasCardCode || [self.cardCode isEqual:otherMessage.cardCode]) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasParentName == otherMessage.hasParentName &&
      (!self.hasParentName || [self.parentName isEqual:otherMessage.parentName]) &&
      self.hasActionType == otherMessage.hasActionType &&
      (!self.hasActionType || self.actionType == otherMessage.actionType) &&
      self.hasUsertype == otherMessage.hasUsertype &&
      (!self.hasUsertype || self.usertype == otherMessage.usertype) &&
      self.hasPositionName == otherMessage.hasPositionName &&
      (!self.hasPositionName || [self.positionName isEqual:otherMessage.positionName]) &&
      self.hasDepartmentName == otherMessage.hasDepartmentName &&
      (!self.hasDepartmentName || [self.departmentName isEqual:otherMessage.departmentName]) &&
      self.hasUserNameUnison == otherMessage.hasUserNameUnison &&
      (!self.hasUserNameUnison || [self.userNameUnison isEqual:otherMessage.userNameUnison]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasParentUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentUserId] hash];
  }
  if (self.hasCardCode) {
    hashCode = hashCode * 31 + [self.cardCode hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasParentName) {
    hashCode = hashCode * 31 + [self.parentName hash];
  }
  if (self.hasActionType) {
    hashCode = hashCode * 31 + self.actionType;
  }
  if (self.hasUsertype) {
    hashCode = hashCode * 31 + self.usertype;
  }
  if (self.hasPositionName) {
    hashCode = hashCode * 31 + [self.positionName hash];
  }
  if (self.hasDepartmentName) {
    hashCode = hashCode * 31 + [self.departmentName hash];
  }
  if (self.hasUserNameUnison) {
    hashCode = hashCode * 31 + [self.userNameUnison hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUserCardBuilder()
@property (strong) TXPBUserCard* resultUserCard;
@end

@implementation TXPBUserCardBuilder
@synthesize resultUserCard;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserCard = [[TXPBUserCard alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserCard;
}
- (TXPBUserCardBuilder*) clear {
  self.resultUserCard = [[TXPBUserCard alloc] init];
  return self;
}
- (TXPBUserCardBuilder*) clone {
  return [TXPBUserCard builderWithPrototype:resultUserCard];
}
- (TXPBUserCard*) defaultInstance {
  return [TXPBUserCard defaultInstance];
}
- (TXPBUserCard*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUserCard*) buildPartial {
  TXPBUserCard* returnMe = resultUserCard;
  self.resultUserCard = nil;
  return returnMe;
}
- (TXPBUserCardBuilder*) mergeFrom:(TXPBUserCard*) other {
  if (other == [TXPBUserCard defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasParentUserId) {
    [self setParentUserId:other.parentUserId];
  }
  if (other.hasCardCode) {
    [self setCardCode:other.cardCode];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasParentName) {
    [self setParentName:other.parentName];
  }
  if (other.hasActionType) {
    [self setActionType:other.actionType];
  }
  if (other.hasUsertype) {
    [self setUsertype:other.usertype];
  }
  if (other.hasPositionName) {
    [self setPositionName:other.positionName];
  }
  if (other.hasDepartmentName) {
    [self setDepartmentName:other.departmentName];
  }
  if (other.hasUserNameUnison) {
    [self setUserNameUnison:other.userNameUnison];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUserCardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUserCardBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 24: {
        [self setParentUserId:[input readInt64]];
        break;
      }
      case 34: {
        [self setCardCode:[input readString]];
        break;
      }
      case 42: {
        [self setUserName:[input readString]];
        break;
      }
      case 50: {
        [self setParentName:[input readString]];
        break;
      }
      case 56: {
        TXPBActionType value = (TXPBActionType)[input readEnum];
        if (TXPBActionTypeIsValidValue(value)) {
          [self setActionType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        TXPBUserType value = (TXPBUserType)[input readEnum];
        if (TXPBUserTypeIsValidValue(value)) {
          [self setUsertype:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 74: {
        [self setPositionName:[input readString]];
        break;
      }
      case 82: {
        [self setDepartmentName:[input readString]];
        break;
      }
      case 90: {
        [self setUserNameUnison:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultUserCard.hasId;
}
- (SInt64) id {
  return resultUserCard.id;
}
- (TXPBUserCardBuilder*) setId:(SInt64) value {
  resultUserCard.hasId = YES;
  resultUserCard.id = value;
  return self;
}
- (TXPBUserCardBuilder*) clearId {
  resultUserCard.hasId = NO;
  resultUserCard.id = 0L;
  return self;
}
- (BOOL) hasUserId {
  return resultUserCard.hasUserId;
}
- (SInt64) userId {
  return resultUserCard.userId;
}
- (TXPBUserCardBuilder*) setUserId:(SInt64) value {
  resultUserCard.hasUserId = YES;
  resultUserCard.userId = value;
  return self;
}
- (TXPBUserCardBuilder*) clearUserId {
  resultUserCard.hasUserId = NO;
  resultUserCard.userId = 0L;
  return self;
}
- (BOOL) hasParentUserId {
  return resultUserCard.hasParentUserId;
}
- (SInt64) parentUserId {
  return resultUserCard.parentUserId;
}
- (TXPBUserCardBuilder*) setParentUserId:(SInt64) value {
  resultUserCard.hasParentUserId = YES;
  resultUserCard.parentUserId = value;
  return self;
}
- (TXPBUserCardBuilder*) clearParentUserId {
  resultUserCard.hasParentUserId = NO;
  resultUserCard.parentUserId = 0L;
  return self;
}
- (BOOL) hasCardCode {
  return resultUserCard.hasCardCode;
}
- (NSString*) cardCode {
  return resultUserCard.cardCode;
}
- (TXPBUserCardBuilder*) setCardCode:(NSString*) value {
  resultUserCard.hasCardCode = YES;
  resultUserCard.cardCode = value;
  return self;
}
- (TXPBUserCardBuilder*) clearCardCode {
  resultUserCard.hasCardCode = NO;
  resultUserCard.cardCode = @"";
  return self;
}
- (BOOL) hasUserName {
  return resultUserCard.hasUserName;
}
- (NSString*) userName {
  return resultUserCard.userName;
}
- (TXPBUserCardBuilder*) setUserName:(NSString*) value {
  resultUserCard.hasUserName = YES;
  resultUserCard.userName = value;
  return self;
}
- (TXPBUserCardBuilder*) clearUserName {
  resultUserCard.hasUserName = NO;
  resultUserCard.userName = @"";
  return self;
}
- (BOOL) hasParentName {
  return resultUserCard.hasParentName;
}
- (NSString*) parentName {
  return resultUserCard.parentName;
}
- (TXPBUserCardBuilder*) setParentName:(NSString*) value {
  resultUserCard.hasParentName = YES;
  resultUserCard.parentName = value;
  return self;
}
- (TXPBUserCardBuilder*) clearParentName {
  resultUserCard.hasParentName = NO;
  resultUserCard.parentName = @"";
  return self;
}
- (BOOL) hasActionType {
  return resultUserCard.hasActionType;
}
- (TXPBActionType) actionType {
  return resultUserCard.actionType;
}
- (TXPBUserCardBuilder*) setActionType:(TXPBActionType) value {
  resultUserCard.hasActionType = YES;
  resultUserCard.actionType = value;
  return self;
}
- (TXPBUserCardBuilder*) clearActionType {
  resultUserCard.hasActionType = NO;
  resultUserCard.actionType = TXPBActionTypeAdd;
  return self;
}
- (BOOL) hasUsertype {
  return resultUserCard.hasUsertype;
}
- (TXPBUserType) usertype {
  return resultUserCard.usertype;
}
- (TXPBUserCardBuilder*) setUsertype:(TXPBUserType) value {
  resultUserCard.hasUsertype = YES;
  resultUserCard.usertype = value;
  return self;
}
- (TXPBUserCardBuilder*) clearUsertype {
  resultUserCard.hasUsertype = NO;
  resultUserCard.usertype = TXPBUserTypeChild;
  return self;
}
- (BOOL) hasPositionName {
  return resultUserCard.hasPositionName;
}
- (NSString*) positionName {
  return resultUserCard.positionName;
}
- (TXPBUserCardBuilder*) setPositionName:(NSString*) value {
  resultUserCard.hasPositionName = YES;
  resultUserCard.positionName = value;
  return self;
}
- (TXPBUserCardBuilder*) clearPositionName {
  resultUserCard.hasPositionName = NO;
  resultUserCard.positionName = @"";
  return self;
}
- (BOOL) hasDepartmentName {
  return resultUserCard.hasDepartmentName;
}
- (NSString*) departmentName {
  return resultUserCard.departmentName;
}
- (TXPBUserCardBuilder*) setDepartmentName:(NSString*) value {
  resultUserCard.hasDepartmentName = YES;
  resultUserCard.departmentName = value;
  return self;
}
- (TXPBUserCardBuilder*) clearDepartmentName {
  resultUserCard.hasDepartmentName = NO;
  resultUserCard.departmentName = @"";
  return self;
}
- (BOOL) hasUserNameUnison {
  return resultUserCard.hasUserNameUnison;
}
- (NSString*) userNameUnison {
  return resultUserCard.userNameUnison;
}
- (TXPBUserCardBuilder*) setUserNameUnison:(NSString*) value {
  resultUserCard.hasUserNameUnison = YES;
  resultUserCard.userNameUnison = value;
  return self;
}
- (TXPBUserCardBuilder*) clearUserNameUnison {
  resultUserCard.hasUserNameUnison = NO;
  resultUserCard.userNameUnison = @"";
  return self;
}
@end

@interface TXPBCheckin ()
@property SInt64 id;
@property (strong) NSString* cardCode;
@property (strong) TXPBAttach* attach;
@property SInt64 userId;
@property SInt64 checkinTime;
@property SInt64 gardenId;
@property (strong) NSString* userName;
@property (strong) NSString* parentName;
@property (strong) NSString* className;
@end

@implementation TXPBCheckin

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasCardCode {
  return !!hasCardCode_;
}
- (void) setHasCardCode:(BOOL) _value_ {
  hasCardCode_ = !!_value_;
}
@synthesize cardCode;
- (BOOL) hasAttach {
  return !!hasAttach_;
}
- (void) setHasAttach:(BOOL) _value_ {
  hasAttach_ = !!_value_;
}
@synthesize attach;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasCheckinTime {
  return !!hasCheckinTime_;
}
- (void) setHasCheckinTime:(BOOL) _value_ {
  hasCheckinTime_ = !!_value_;
}
@synthesize checkinTime;
- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasParentName {
  return !!hasParentName_;
}
- (void) setHasParentName:(BOOL) _value_ {
  hasParentName_ = !!_value_;
}
@synthesize parentName;
- (BOOL) hasClassName {
  return !!hasClassName_;
}
- (void) setHasClassName:(BOOL) _value_ {
  hasClassName_ = !!_value_;
}
@synthesize className;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.cardCode = @"";
    self.attach = [TXPBAttach defaultInstance];
    self.userId = 0L;
    self.checkinTime = 0L;
    self.gardenId = 0L;
    self.userName = @"";
    self.parentName = @"";
    self.className = @"";
  }
  return self;
}
static TXPBCheckin* defaultTXPBCheckinInstance = nil;
+ (void) initialize {
  if (self == [TXPBCheckin class]) {
    defaultTXPBCheckinInstance = [[TXPBCheckin alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCheckinInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCheckinInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCardCode) {
    return NO;
  }
  if (!self.hasAttach) {
    return NO;
  }
  if (!self.hasCheckinTime) {
    return NO;
  }
  if (!self.attach.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasCardCode) {
    [output writeString:2 value:self.cardCode];
  }
  if (self.hasAttach) {
    [output writeMessage:3 value:self.attach];
  }
  if (self.hasUserId) {
    [output writeInt64:4 value:self.userId];
  }
  if (self.hasCheckinTime) {
    [output writeInt64:5 value:self.checkinTime];
  }
  if (self.hasGardenId) {
    [output writeInt64:6 value:self.gardenId];
  }
  if (self.hasUserName) {
    [output writeString:7 value:self.userName];
  }
  if (self.hasParentName) {
    [output writeString:8 value:self.parentName];
  }
  if (self.hasClassName) {
    [output writeString:9 value:self.className];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasCardCode) {
    size_ += computeStringSize(2, self.cardCode);
  }
  if (self.hasAttach) {
    size_ += computeMessageSize(3, self.attach);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(4, self.userId);
  }
  if (self.hasCheckinTime) {
    size_ += computeInt64Size(5, self.checkinTime);
  }
  if (self.hasGardenId) {
    size_ += computeInt64Size(6, self.gardenId);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(7, self.userName);
  }
  if (self.hasParentName) {
    size_ += computeStringSize(8, self.parentName);
  }
  if (self.hasClassName) {
    size_ += computeStringSize(9, self.className);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCheckin*) parseFromData:(NSData*) data {
  return (TXPBCheckin*)[[[TXPBCheckin builder] mergeFromData:data] build];
}
+ (TXPBCheckin*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckin*)[[[TXPBCheckin builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckin*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCheckin*)[[[TXPBCheckin builder] mergeFromInputStream:input] build];
}
+ (TXPBCheckin*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckin*)[[[TXPBCheckin builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckin*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCheckin*)[[[TXPBCheckin builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCheckin*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckin*)[[[TXPBCheckin builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckinBuilder*) builder {
  return [[TXPBCheckinBuilder alloc] init];
}
+ (TXPBCheckinBuilder*) builderWithPrototype:(TXPBCheckin*) prototype {
  return [[TXPBCheckin builder] mergeFrom:prototype];
}
- (TXPBCheckinBuilder*) builder {
  return [TXPBCheckin builder];
}
- (TXPBCheckinBuilder*) toBuilder {
  return [TXPBCheckin builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasCardCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardCode", self.cardCode];
  }
  if (self.hasAttach) {
    [output appendFormat:@"%@%@ {\n", indent, @"attach"];
    [self.attach writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasCheckinTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"checkinTime", [NSNumber numberWithLongLong:self.checkinTime]];
  }
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasParentName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentName", self.parentName];
  }
  if (self.hasClassName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"className", self.className];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasCardCode) {
    [dictionary setObject: self.cardCode forKey: @"cardCode"];
  }
  if (self.hasAttach) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.attach storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"attach"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasCheckinTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.checkinTime] forKey: @"checkinTime"];
  }
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  if (self.hasParentName) {
    [dictionary setObject: self.parentName forKey: @"parentName"];
  }
  if (self.hasClassName) {
    [dictionary setObject: self.className forKey: @"className"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCheckin class]]) {
    return NO;
  }
  TXPBCheckin *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasCardCode == otherMessage.hasCardCode &&
      (!self.hasCardCode || [self.cardCode isEqual:otherMessage.cardCode]) &&
      self.hasAttach == otherMessage.hasAttach &&
      (!self.hasAttach || [self.attach isEqual:otherMessage.attach]) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasCheckinTime == otherMessage.hasCheckinTime &&
      (!self.hasCheckinTime || self.checkinTime == otherMessage.checkinTime) &&
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasParentName == otherMessage.hasParentName &&
      (!self.hasParentName || [self.parentName isEqual:otherMessage.parentName]) &&
      self.hasClassName == otherMessage.hasClassName &&
      (!self.hasClassName || [self.className isEqual:otherMessage.className]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasCardCode) {
    hashCode = hashCode * 31 + [self.cardCode hash];
  }
  if (self.hasAttach) {
    hashCode = hashCode * 31 + [self.attach hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasCheckinTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.checkinTime] hash];
  }
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasParentName) {
    hashCode = hashCode * 31 + [self.parentName hash];
  }
  if (self.hasClassName) {
    hashCode = hashCode * 31 + [self.className hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCheckinBuilder()
@property (strong) TXPBCheckin* resultCheckin;
@end

@implementation TXPBCheckinBuilder
@synthesize resultCheckin;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCheckin = [[TXPBCheckin alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCheckin;
}
- (TXPBCheckinBuilder*) clear {
  self.resultCheckin = [[TXPBCheckin alloc] init];
  return self;
}
- (TXPBCheckinBuilder*) clone {
  return [TXPBCheckin builderWithPrototype:resultCheckin];
}
- (TXPBCheckin*) defaultInstance {
  return [TXPBCheckin defaultInstance];
}
- (TXPBCheckin*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCheckin*) buildPartial {
  TXPBCheckin* returnMe = resultCheckin;
  self.resultCheckin = nil;
  return returnMe;
}
- (TXPBCheckinBuilder*) mergeFrom:(TXPBCheckin*) other {
  if (other == [TXPBCheckin defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasCardCode) {
    [self setCardCode:other.cardCode];
  }
  if (other.hasAttach) {
    [self mergeAttach:other.attach];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasCheckinTime) {
    [self setCheckinTime:other.checkinTime];
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasParentName) {
    [self setParentName:other.parentName];
  }
  if (other.hasClassName) {
    [self setClassName:other.className];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCheckinBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCheckinBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setCardCode:[input readString]];
        break;
      }
      case 26: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        if (self.hasAttach) {
          [subBuilder mergeFrom:self.attach];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAttach:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 40: {
        [self setCheckinTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 58: {
        [self setUserName:[input readString]];
        break;
      }
      case 66: {
        [self setParentName:[input readString]];
        break;
      }
      case 74: {
        [self setClassName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultCheckin.hasId;
}
- (SInt64) id {
  return resultCheckin.id;
}
- (TXPBCheckinBuilder*) setId:(SInt64) value {
  resultCheckin.hasId = YES;
  resultCheckin.id = value;
  return self;
}
- (TXPBCheckinBuilder*) clearId {
  resultCheckin.hasId = NO;
  resultCheckin.id = 0L;
  return self;
}
- (BOOL) hasCardCode {
  return resultCheckin.hasCardCode;
}
- (NSString*) cardCode {
  return resultCheckin.cardCode;
}
- (TXPBCheckinBuilder*) setCardCode:(NSString*) value {
  resultCheckin.hasCardCode = YES;
  resultCheckin.cardCode = value;
  return self;
}
- (TXPBCheckinBuilder*) clearCardCode {
  resultCheckin.hasCardCode = NO;
  resultCheckin.cardCode = @"";
  return self;
}
- (BOOL) hasAttach {
  return resultCheckin.hasAttach;
}
- (TXPBAttach*) attach {
  return resultCheckin.attach;
}
- (TXPBCheckinBuilder*) setAttach:(TXPBAttach*) value {
  resultCheckin.hasAttach = YES;
  resultCheckin.attach = value;
  return self;
}
- (TXPBCheckinBuilder*) setAttachBuilder:(TXPBAttachBuilder*) builderForValue {
  return [self setAttach:[builderForValue build]];
}
- (TXPBCheckinBuilder*) mergeAttach:(TXPBAttach*) value {
  if (resultCheckin.hasAttach &&
      resultCheckin.attach != [TXPBAttach defaultInstance]) {
    resultCheckin.attach =
      [[[TXPBAttach builderWithPrototype:resultCheckin.attach] mergeFrom:value] buildPartial];
  } else {
    resultCheckin.attach = value;
  }
  resultCheckin.hasAttach = YES;
  return self;
}
- (TXPBCheckinBuilder*) clearAttach {
  resultCheckin.hasAttach = NO;
  resultCheckin.attach = [TXPBAttach defaultInstance];
  return self;
}
- (BOOL) hasUserId {
  return resultCheckin.hasUserId;
}
- (SInt64) userId {
  return resultCheckin.userId;
}
- (TXPBCheckinBuilder*) setUserId:(SInt64) value {
  resultCheckin.hasUserId = YES;
  resultCheckin.userId = value;
  return self;
}
- (TXPBCheckinBuilder*) clearUserId {
  resultCheckin.hasUserId = NO;
  resultCheckin.userId = 0L;
  return self;
}
- (BOOL) hasCheckinTime {
  return resultCheckin.hasCheckinTime;
}
- (SInt64) checkinTime {
  return resultCheckin.checkinTime;
}
- (TXPBCheckinBuilder*) setCheckinTime:(SInt64) value {
  resultCheckin.hasCheckinTime = YES;
  resultCheckin.checkinTime = value;
  return self;
}
- (TXPBCheckinBuilder*) clearCheckinTime {
  resultCheckin.hasCheckinTime = NO;
  resultCheckin.checkinTime = 0L;
  return self;
}
- (BOOL) hasGardenId {
  return resultCheckin.hasGardenId;
}
- (SInt64) gardenId {
  return resultCheckin.gardenId;
}
- (TXPBCheckinBuilder*) setGardenId:(SInt64) value {
  resultCheckin.hasGardenId = YES;
  resultCheckin.gardenId = value;
  return self;
}
- (TXPBCheckinBuilder*) clearGardenId {
  resultCheckin.hasGardenId = NO;
  resultCheckin.gardenId = 0L;
  return self;
}
- (BOOL) hasUserName {
  return resultCheckin.hasUserName;
}
- (NSString*) userName {
  return resultCheckin.userName;
}
- (TXPBCheckinBuilder*) setUserName:(NSString*) value {
  resultCheckin.hasUserName = YES;
  resultCheckin.userName = value;
  return self;
}
- (TXPBCheckinBuilder*) clearUserName {
  resultCheckin.hasUserName = NO;
  resultCheckin.userName = @"";
  return self;
}
- (BOOL) hasParentName {
  return resultCheckin.hasParentName;
}
- (NSString*) parentName {
  return resultCheckin.parentName;
}
- (TXPBCheckinBuilder*) setParentName:(NSString*) value {
  resultCheckin.hasParentName = YES;
  resultCheckin.parentName = value;
  return self;
}
- (TXPBCheckinBuilder*) clearParentName {
  resultCheckin.hasParentName = NO;
  resultCheckin.parentName = @"";
  return self;
}
- (BOOL) hasClassName {
  return resultCheckin.hasClassName;
}
- (NSString*) className {
  return resultCheckin.className;
}
- (TXPBCheckinBuilder*) setClassName:(NSString*) value {
  resultCheckin.hasClassName = YES;
  resultCheckin.className = value;
  return self;
}
- (TXPBCheckinBuilder*) clearClassName {
  resultCheckin.hasClassName = NO;
  resultCheckin.className = @"";
  return self;
}
@end

@interface TXPBLoginRequest ()
@property (strong) NSString* username;
@property (strong) NSString* password;
@end

@implementation TXPBLoginRequest

- (BOOL) hasUsername {
  return !!hasUsername_;
}
- (void) setHasUsername:(BOOL) _value_ {
  hasUsername_ = !!_value_;
}
@synthesize username;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (instancetype) init {
  if ((self = [super init])) {
    self.username = @"";
    self.password = @"";
  }
  return self;
}
static TXPBLoginRequest* defaultTXPBLoginRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBLoginRequest class]) {
    defaultTXPBLoginRequestInstance = [[TXPBLoginRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBLoginRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBLoginRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUsername) {
    return NO;
  }
  if (!self.hasPassword) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUsername) {
    [output writeString:1 value:self.username];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUsername) {
    size_ += computeStringSize(1, self.username);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBLoginRequest*) parseFromData:(NSData*) data {
  return (TXPBLoginRequest*)[[[TXPBLoginRequest builder] mergeFromData:data] build];
}
+ (TXPBLoginRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLoginRequest*)[[[TXPBLoginRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBLoginRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBLoginRequest*)[[[TXPBLoginRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBLoginRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLoginRequest*)[[[TXPBLoginRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLoginRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBLoginRequest*)[[[TXPBLoginRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBLoginRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLoginRequest*)[[[TXPBLoginRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLoginRequestBuilder*) builder {
  return [[TXPBLoginRequestBuilder alloc] init];
}
+ (TXPBLoginRequestBuilder*) builderWithPrototype:(TXPBLoginRequest*) prototype {
  return [[TXPBLoginRequest builder] mergeFrom:prototype];
}
- (TXPBLoginRequestBuilder*) builder {
  return [TXPBLoginRequest builder];
}
- (TXPBLoginRequestBuilder*) toBuilder {
  return [TXPBLoginRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUsername) {
    [output appendFormat:@"%@%@: %@\n", indent, @"username", self.username];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUsername) {
    [dictionary setObject: self.username forKey: @"username"];
  }
  if (self.hasPassword) {
    [dictionary setObject: self.password forKey: @"password"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBLoginRequest class]]) {
    return NO;
  }
  TXPBLoginRequest *otherMessage = other;
  return
      self.hasUsername == otherMessage.hasUsername &&
      (!self.hasUsername || [self.username isEqual:otherMessage.username]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUsername) {
    hashCode = hashCode * 31 + [self.username hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBLoginRequestBuilder()
@property (strong) TXPBLoginRequest* resultLoginRequest;
@end

@implementation TXPBLoginRequestBuilder
@synthesize resultLoginRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginRequest = [[TXPBLoginRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginRequest;
}
- (TXPBLoginRequestBuilder*) clear {
  self.resultLoginRequest = [[TXPBLoginRequest alloc] init];
  return self;
}
- (TXPBLoginRequestBuilder*) clone {
  return [TXPBLoginRequest builderWithPrototype:resultLoginRequest];
}
- (TXPBLoginRequest*) defaultInstance {
  return [TXPBLoginRequest defaultInstance];
}
- (TXPBLoginRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBLoginRequest*) buildPartial {
  TXPBLoginRequest* returnMe = resultLoginRequest;
  self.resultLoginRequest = nil;
  return returnMe;
}
- (TXPBLoginRequestBuilder*) mergeFrom:(TXPBLoginRequest*) other {
  if (other == [TXPBLoginRequest defaultInstance]) {
    return self;
  }
  if (other.hasUsername) {
    [self setUsername:other.username];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBLoginRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBLoginRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setUsername:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasUsername {
  return resultLoginRequest.hasUsername;
}
- (NSString*) username {
  return resultLoginRequest.username;
}
- (TXPBLoginRequestBuilder*) setUsername:(NSString*) value {
  resultLoginRequest.hasUsername = YES;
  resultLoginRequest.username = value;
  return self;
}
- (TXPBLoginRequestBuilder*) clearUsername {
  resultLoginRequest.hasUsername = NO;
  resultLoginRequest.username = @"";
  return self;
}
- (BOOL) hasPassword {
  return resultLoginRequest.hasPassword;
}
- (NSString*) password {
  return resultLoginRequest.password;
}
- (TXPBLoginRequestBuilder*) setPassword:(NSString*) value {
  resultLoginRequest.hasPassword = YES;
  resultLoginRequest.password = value;
  return self;
}
- (TXPBLoginRequestBuilder*) clearPassword {
  resultLoginRequest.hasPassword = NO;
  resultLoginRequest.password = @"";
  return self;
}
@end

@interface TXPBLoginResponse ()
@property BOOL isInit;
@property (strong) NSString* token;
@property (strong) TXPBUser* user;
@property (strong) NSMutableArray * userProfilesArray;
@end

@implementation TXPBLoginResponse

- (BOOL) hasIsInit {
  return !!hasIsInit_;
}
- (void) setHasIsInit:(BOOL) _value_ {
  hasIsInit_ = !!_value_;
}
- (BOOL) isInit {
  return !!isInit_;
}
- (void) setIsInit:(BOOL) _value_ {
  isInit_ = !!_value_;
}
- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
@synthesize userProfilesArray;
@dynamic userProfiles;
- (instancetype) init {
  if ((self = [super init])) {
    self.isInit = NO;
    self.token = @"";
    self.user = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBLoginResponse* defaultTXPBLoginResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBLoginResponse class]) {
    defaultTXPBLoginResponseInstance = [[TXPBLoginResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBLoginResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBLoginResponseInstance;
}
- (NSArray *)userProfiles {
  return userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [userProfilesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasIsInit) {
    return NO;
  }
  if (!self.hasToken) {
    return NO;
  }
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  __block BOOL isInituserProfiles = YES;
   [self.userProfiles enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserProfiles = NO;
      *stop = YES;
    }
  }];
  if (!isInituserProfiles) return isInituserProfiles;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsInit) {
    [output writeBool:1 value:self.isInit];
  }
  if (self.hasToken) {
    [output writeString:2 value:self.token];
  }
  if (self.hasUser) {
    [output writeMessage:3 value:self.user];
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIsInit) {
    size_ += computeBoolSize(1, self.isInit);
  }
  if (self.hasToken) {
    size_ += computeStringSize(2, self.token);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(3, self.user);
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBLoginResponse*) parseFromData:(NSData*) data {
  return (TXPBLoginResponse*)[[[TXPBLoginResponse builder] mergeFromData:data] build];
}
+ (TXPBLoginResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLoginResponse*)[[[TXPBLoginResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBLoginResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBLoginResponse*)[[[TXPBLoginResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBLoginResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLoginResponse*)[[[TXPBLoginResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBLoginResponse*)[[[TXPBLoginResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBLoginResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLoginResponse*)[[[TXPBLoginResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLoginResponseBuilder*) builder {
  return [[TXPBLoginResponseBuilder alloc] init];
}
+ (TXPBLoginResponseBuilder*) builderWithPrototype:(TXPBLoginResponse*) prototype {
  return [[TXPBLoginResponse builder] mergeFrom:prototype];
}
- (TXPBLoginResponseBuilder*) builder {
  return [TXPBLoginResponse builder];
}
- (TXPBLoginResponseBuilder*) toBuilder {
  return [TXPBLoginResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIsInit) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isInit", [NSNumber numberWithBool:self.isInit]];
  }
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userProfiles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasIsInit) {
    [dictionary setObject: [NSNumber numberWithBool:self.isInit] forKey: @"isInit"];
  }
  if (self.hasToken) {
    [dictionary setObject: self.token forKey: @"token"];
  }
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  for (TXPBUserProfile* element in self.userProfilesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"userProfiles"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBLoginResponse class]]) {
    return NO;
  }
  TXPBLoginResponse *otherMessage = other;
  return
      self.hasIsInit == otherMessage.hasIsInit &&
      (!self.hasIsInit || self.isInit == otherMessage.isInit) &&
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      [self.userProfilesArray isEqualToArray:otherMessage.userProfilesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasIsInit) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isInit] hash];
  }
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBLoginResponseBuilder()
@property (strong) TXPBLoginResponse* resultLoginResponse;
@end

@implementation TXPBLoginResponseBuilder
@synthesize resultLoginResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLoginResponse = [[TXPBLoginResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLoginResponse;
}
- (TXPBLoginResponseBuilder*) clear {
  self.resultLoginResponse = [[TXPBLoginResponse alloc] init];
  return self;
}
- (TXPBLoginResponseBuilder*) clone {
  return [TXPBLoginResponse builderWithPrototype:resultLoginResponse];
}
- (TXPBLoginResponse*) defaultInstance {
  return [TXPBLoginResponse defaultInstance];
}
- (TXPBLoginResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBLoginResponse*) buildPartial {
  TXPBLoginResponse* returnMe = resultLoginResponse;
  self.resultLoginResponse = nil;
  return returnMe;
}
- (TXPBLoginResponseBuilder*) mergeFrom:(TXPBLoginResponse*) other {
  if (other == [TXPBLoginResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsInit) {
    [self setIsInit:other.isInit];
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.userProfilesArray.count > 0) {
    if (resultLoginResponse.userProfilesArray == nil) {
      resultLoginResponse.userProfilesArray = [[NSMutableArray alloc] initWithArray:other.userProfilesArray];
    } else {
      [resultLoginResponse.userProfilesArray addObjectsFromArray:other.userProfilesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBLoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBLoginResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsInit:[input readBool]];
        break;
      }
      case 18: {
        [self setToken:[input readString]];
        break;
      }
      case 26: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        TXPBUserProfileBuilder* subBuilder = [TXPBUserProfile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserProfiles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsInit {
  return resultLoginResponse.hasIsInit;
}
- (BOOL) isInit {
  return resultLoginResponse.isInit;
}
- (TXPBLoginResponseBuilder*) setIsInit:(BOOL) value {
  resultLoginResponse.hasIsInit = YES;
  resultLoginResponse.isInit = value;
  return self;
}
- (TXPBLoginResponseBuilder*) clearIsInit {
  resultLoginResponse.hasIsInit = NO;
  resultLoginResponse.isInit = NO;
  return self;
}
- (BOOL) hasToken {
  return resultLoginResponse.hasToken;
}
- (NSString*) token {
  return resultLoginResponse.token;
}
- (TXPBLoginResponseBuilder*) setToken:(NSString*) value {
  resultLoginResponse.hasToken = YES;
  resultLoginResponse.token = value;
  return self;
}
- (TXPBLoginResponseBuilder*) clearToken {
  resultLoginResponse.hasToken = NO;
  resultLoginResponse.token = @"";
  return self;
}
- (BOOL) hasUser {
  return resultLoginResponse.hasUser;
}
- (TXPBUser*) user {
  return resultLoginResponse.user;
}
- (TXPBLoginResponseBuilder*) setUser:(TXPBUser*) value {
  resultLoginResponse.hasUser = YES;
  resultLoginResponse.user = value;
  return self;
}
- (TXPBLoginResponseBuilder*) setUserBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (TXPBLoginResponseBuilder*) mergeUser:(TXPBUser*) value {
  if (resultLoginResponse.hasUser &&
      resultLoginResponse.user != [TXPBUser defaultInstance]) {
    resultLoginResponse.user =
      [[[TXPBUser builderWithPrototype:resultLoginResponse.user] mergeFrom:value] buildPartial];
  } else {
    resultLoginResponse.user = value;
  }
  resultLoginResponse.hasUser = YES;
  return self;
}
- (TXPBLoginResponseBuilder*) clearUser {
  resultLoginResponse.hasUser = NO;
  resultLoginResponse.user = [TXPBUser defaultInstance];
  return self;
}
- (NSMutableArray *)userProfiles {
  return resultLoginResponse.userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [resultLoginResponse userProfilesAtIndex:index];
}
- (TXPBLoginResponseBuilder *)addUserProfiles:(TXPBUserProfile*)value {
  if (resultLoginResponse.userProfilesArray == nil) {
    resultLoginResponse.userProfilesArray = [[NSMutableArray alloc]init];
  }
  [resultLoginResponse.userProfilesArray addObject:value];
  return self;
}
- (TXPBLoginResponseBuilder *)setUserProfilesArray:(NSArray *)array {
  resultLoginResponse.userProfilesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBLoginResponseBuilder *)clearUserProfiles {
  resultLoginResponse.userProfilesArray = nil;
  return self;
}
@end

@interface TXPBFetchContactsRequest ()
@property SInt64 lastModifiedSince;
@end

@implementation TXPBFetchContactsRequest

- (BOOL) hasLastModifiedSince {
  return !!hasLastModifiedSince_;
}
- (void) setHasLastModifiedSince:(BOOL) _value_ {
  hasLastModifiedSince_ = !!_value_;
}
@synthesize lastModifiedSince;
- (instancetype) init {
  if ((self = [super init])) {
    self.lastModifiedSince = 0L;
  }
  return self;
}
static TXPBFetchContactsRequest* defaultTXPBFetchContactsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchContactsRequest class]) {
    defaultTXPBFetchContactsRequestInstance = [[TXPBFetchContactsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchContactsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchContactsRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLastModifiedSince) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLastModifiedSince) {
    [output writeInt64:1 value:self.lastModifiedSince];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLastModifiedSince) {
    size_ += computeInt64Size(1, self.lastModifiedSince);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchContactsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchContactsRequest*)[[[TXPBFetchContactsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchContactsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchContactsRequest*)[[[TXPBFetchContactsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchContactsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchContactsRequest*)[[[TXPBFetchContactsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchContactsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchContactsRequest*)[[[TXPBFetchContactsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchContactsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchContactsRequest*)[[[TXPBFetchContactsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchContactsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchContactsRequest*)[[[TXPBFetchContactsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchContactsRequestBuilder*) builder {
  return [[TXPBFetchContactsRequestBuilder alloc] init];
}
+ (TXPBFetchContactsRequestBuilder*) builderWithPrototype:(TXPBFetchContactsRequest*) prototype {
  return [[TXPBFetchContactsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchContactsRequestBuilder*) builder {
  return [TXPBFetchContactsRequest builder];
}
- (TXPBFetchContactsRequestBuilder*) toBuilder {
  return [TXPBFetchContactsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLastModifiedSince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastModifiedSince", [NSNumber numberWithLongLong:self.lastModifiedSince]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasLastModifiedSince) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastModifiedSince] forKey: @"lastModifiedSince"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchContactsRequest class]]) {
    return NO;
  }
  TXPBFetchContactsRequest *otherMessage = other;
  return
      self.hasLastModifiedSince == otherMessage.hasLastModifiedSince &&
      (!self.hasLastModifiedSince || self.lastModifiedSince == otherMessage.lastModifiedSince) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLastModifiedSince) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastModifiedSince] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchContactsRequestBuilder()
@property (strong) TXPBFetchContactsRequest* resultFetchContactsRequest;
@end

@implementation TXPBFetchContactsRequestBuilder
@synthesize resultFetchContactsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchContactsRequest = [[TXPBFetchContactsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchContactsRequest;
}
- (TXPBFetchContactsRequestBuilder*) clear {
  self.resultFetchContactsRequest = [[TXPBFetchContactsRequest alloc] init];
  return self;
}
- (TXPBFetchContactsRequestBuilder*) clone {
  return [TXPBFetchContactsRequest builderWithPrototype:resultFetchContactsRequest];
}
- (TXPBFetchContactsRequest*) defaultInstance {
  return [TXPBFetchContactsRequest defaultInstance];
}
- (TXPBFetchContactsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchContactsRequest*) buildPartial {
  TXPBFetchContactsRequest* returnMe = resultFetchContactsRequest;
  self.resultFetchContactsRequest = nil;
  return returnMe;
}
- (TXPBFetchContactsRequestBuilder*) mergeFrom:(TXPBFetchContactsRequest*) other {
  if (other == [TXPBFetchContactsRequest defaultInstance]) {
    return self;
  }
  if (other.hasLastModifiedSince) {
    [self setLastModifiedSince:other.lastModifiedSince];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchContactsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchContactsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLastModifiedSince:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasLastModifiedSince {
  return resultFetchContactsRequest.hasLastModifiedSince;
}
- (SInt64) lastModifiedSince {
  return resultFetchContactsRequest.lastModifiedSince;
}
- (TXPBFetchContactsRequestBuilder*) setLastModifiedSince:(SInt64) value {
  resultFetchContactsRequest.hasLastModifiedSince = YES;
  resultFetchContactsRequest.lastModifiedSince = value;
  return self;
}
- (TXPBFetchContactsRequestBuilder*) clearLastModifiedSince {
  resultFetchContactsRequest.hasLastModifiedSince = NO;
  resultFetchContactsRequest.lastModifiedSince = 0L;
  return self;
}
@end

@interface TXPBFetchContactsResponse ()
@property (strong) NSMutableArray * departmentsArray;
@property SInt64 fetchTime;
@end

@implementation TXPBFetchContactsResponse

@synthesize departmentsArray;
@dynamic departments;
- (BOOL) hasFetchTime {
  return !!hasFetchTime_;
}
- (void) setHasFetchTime:(BOOL) _value_ {
  hasFetchTime_ = !!_value_;
}
@synthesize fetchTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.fetchTime = 0L;
  }
  return self;
}
static TXPBFetchContactsResponse* defaultTXPBFetchContactsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchContactsResponse class]) {
    defaultTXPBFetchContactsResponseInstance = [[TXPBFetchContactsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchContactsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchContactsResponseInstance;
}
- (NSArray *)departments {
  return departmentsArray;
}
- (TXPBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [departmentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasFetchTime) {
    return NO;
  }
  __block BOOL isInitdepartments = YES;
   [self.departments enumerateObjectsUsingBlock:^(TXPBDepartment *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitdepartments = NO;
      *stop = YES;
    }
  }];
  if (!isInitdepartments) return isInitdepartments;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.departmentsArray enumerateObjectsUsingBlock:^(TXPBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasFetchTime) {
    [output writeInt64:2 value:self.fetchTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.departmentsArray enumerateObjectsUsingBlock:^(TXPBDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasFetchTime) {
    size_ += computeInt64Size(2, self.fetchTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchContactsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchContactsResponse*)[[[TXPBFetchContactsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchContactsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchContactsResponse*)[[[TXPBFetchContactsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchContactsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchContactsResponse*)[[[TXPBFetchContactsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchContactsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchContactsResponse*)[[[TXPBFetchContactsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchContactsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchContactsResponse*)[[[TXPBFetchContactsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchContactsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchContactsResponse*)[[[TXPBFetchContactsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchContactsResponseBuilder*) builder {
  return [[TXPBFetchContactsResponseBuilder alloc] init];
}
+ (TXPBFetchContactsResponseBuilder*) builderWithPrototype:(TXPBFetchContactsResponse*) prototype {
  return [[TXPBFetchContactsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchContactsResponseBuilder*) builder {
  return [TXPBFetchContactsResponse builder];
}
- (TXPBFetchContactsResponseBuilder*) toBuilder {
  return [TXPBFetchContactsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.departmentsArray enumerateObjectsUsingBlock:^(TXPBDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"departments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fetchTime", [NSNumber numberWithLongLong:self.fetchTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBDepartment* element in self.departmentsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"departments"];
  }
  if (self.hasFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.fetchTime] forKey: @"fetchTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchContactsResponse class]]) {
    return NO;
  }
  TXPBFetchContactsResponse *otherMessage = other;
  return
      [self.departmentsArray isEqualToArray:otherMessage.departmentsArray] &&
      self.hasFetchTime == otherMessage.hasFetchTime &&
      (!self.hasFetchTime || self.fetchTime == otherMessage.fetchTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.departmentsArray enumerateObjectsUsingBlock:^(TXPBDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fetchTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchContactsResponseBuilder()
@property (strong) TXPBFetchContactsResponse* resultFetchContactsResponse;
@end

@implementation TXPBFetchContactsResponseBuilder
@synthesize resultFetchContactsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchContactsResponse = [[TXPBFetchContactsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchContactsResponse;
}
- (TXPBFetchContactsResponseBuilder*) clear {
  self.resultFetchContactsResponse = [[TXPBFetchContactsResponse alloc] init];
  return self;
}
- (TXPBFetchContactsResponseBuilder*) clone {
  return [TXPBFetchContactsResponse builderWithPrototype:resultFetchContactsResponse];
}
- (TXPBFetchContactsResponse*) defaultInstance {
  return [TXPBFetchContactsResponse defaultInstance];
}
- (TXPBFetchContactsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchContactsResponse*) buildPartial {
  TXPBFetchContactsResponse* returnMe = resultFetchContactsResponse;
  self.resultFetchContactsResponse = nil;
  return returnMe;
}
- (TXPBFetchContactsResponseBuilder*) mergeFrom:(TXPBFetchContactsResponse*) other {
  if (other == [TXPBFetchContactsResponse defaultInstance]) {
    return self;
  }
  if (other.departmentsArray.count > 0) {
    if (resultFetchContactsResponse.departmentsArray == nil) {
      resultFetchContactsResponse.departmentsArray = [[NSMutableArray alloc] initWithArray:other.departmentsArray];
    } else {
      [resultFetchContactsResponse.departmentsArray addObjectsFromArray:other.departmentsArray];
    }
  }
  if (other.hasFetchTime) {
    [self setFetchTime:other.fetchTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchContactsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchContactsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBDepartmentBuilder* subBuilder = [TXPBDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addDepartments:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setFetchTime:[input readInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)departments {
  return resultFetchContactsResponse.departmentsArray;
}
- (TXPBDepartment*)departmentsAtIndex:(NSUInteger)index {
  return [resultFetchContactsResponse departmentsAtIndex:index];
}
- (TXPBFetchContactsResponseBuilder *)addDepartments:(TXPBDepartment*)value {
  if (resultFetchContactsResponse.departmentsArray == nil) {
    resultFetchContactsResponse.departmentsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchContactsResponse.departmentsArray addObject:value];
  return self;
}
- (TXPBFetchContactsResponseBuilder *)setDepartmentsArray:(NSArray *)array {
  resultFetchContactsResponse.departmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchContactsResponseBuilder *)clearDepartments {
  resultFetchContactsResponse.departmentsArray = nil;
  return self;
}
- (BOOL) hasFetchTime {
  return resultFetchContactsResponse.hasFetchTime;
}
- (SInt64) fetchTime {
  return resultFetchContactsResponse.fetchTime;
}
- (TXPBFetchContactsResponseBuilder*) setFetchTime:(SInt64) value {
  resultFetchContactsResponse.hasFetchTime = YES;
  resultFetchContactsResponse.fetchTime = value;
  return self;
}
- (TXPBFetchContactsResponseBuilder*) clearFetchTime {
  resultFetchContactsResponse.hasFetchTime = NO;
  resultFetchContactsResponse.fetchTime = 0L;
  return self;
}
@end

@interface TXPBFetchDepartmentMembersRequest ()
@property SInt64 departmentId;
@property SInt64 lastFetchTime;
@end

@implementation TXPBFetchDepartmentMembersRequest

- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (BOOL) hasLastFetchTime {
  return !!hasLastFetchTime_;
}
- (void) setHasLastFetchTime:(BOOL) _value_ {
  hasLastFetchTime_ = !!_value_;
}
@synthesize lastFetchTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.departmentId = 0L;
    self.lastFetchTime = 0L;
  }
  return self;
}
static TXPBFetchDepartmentMembersRequest* defaultTXPBFetchDepartmentMembersRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentMembersRequest class]) {
    defaultTXPBFetchDepartmentMembersRequestInstance = [[TXPBFetchDepartmentMembersRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentMembersRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentMembersRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDepartmentId) {
    return NO;
  }
  if (!self.hasLastFetchTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartmentId) {
    [output writeInt64:1 value:self.departmentId];
  }
  if (self.hasLastFetchTime) {
    [output writeInt64:2 value:self.lastFetchTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(1, self.departmentId);
  }
  if (self.hasLastFetchTime) {
    size_ += computeInt64Size(2, self.lastFetchTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentMembersRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentMembersRequest*)[[[TXPBFetchDepartmentMembersRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentMembersRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentMembersRequest*)[[[TXPBFetchDepartmentMembersRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentMembersRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentMembersRequest*)[[[TXPBFetchDepartmentMembersRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentMembersRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentMembersRequest*)[[[TXPBFetchDepartmentMembersRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentMembersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentMembersRequest*)[[[TXPBFetchDepartmentMembersRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentMembersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentMembersRequest*)[[[TXPBFetchDepartmentMembersRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentMembersRequestBuilder*) builder {
  return [[TXPBFetchDepartmentMembersRequestBuilder alloc] init];
}
+ (TXPBFetchDepartmentMembersRequestBuilder*) builderWithPrototype:(TXPBFetchDepartmentMembersRequest*) prototype {
  return [[TXPBFetchDepartmentMembersRequest builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentMembersRequestBuilder*) builder {
  return [TXPBFetchDepartmentMembersRequest builder];
}
- (TXPBFetchDepartmentMembersRequestBuilder*) toBuilder {
  return [TXPBFetchDepartmentMembersRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  if (self.hasLastFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastFetchTime", [NSNumber numberWithLongLong:self.lastFetchTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  if (self.hasLastFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastFetchTime] forKey: @"lastFetchTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentMembersRequest class]]) {
    return NO;
  }
  TXPBFetchDepartmentMembersRequest *otherMessage = other;
  return
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      self.hasLastFetchTime == otherMessage.hasLastFetchTime &&
      (!self.hasLastFetchTime || self.lastFetchTime == otherMessage.lastFetchTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  if (self.hasLastFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastFetchTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentMembersRequestBuilder()
@property (strong) TXPBFetchDepartmentMembersRequest* resultFetchDepartmentMembersRequest;
@end

@implementation TXPBFetchDepartmentMembersRequestBuilder
@synthesize resultFetchDepartmentMembersRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentMembersRequest = [[TXPBFetchDepartmentMembersRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentMembersRequest;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) clear {
  self.resultFetchDepartmentMembersRequest = [[TXPBFetchDepartmentMembersRequest alloc] init];
  return self;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) clone {
  return [TXPBFetchDepartmentMembersRequest builderWithPrototype:resultFetchDepartmentMembersRequest];
}
- (TXPBFetchDepartmentMembersRequest*) defaultInstance {
  return [TXPBFetchDepartmentMembersRequest defaultInstance];
}
- (TXPBFetchDepartmentMembersRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentMembersRequest*) buildPartial {
  TXPBFetchDepartmentMembersRequest* returnMe = resultFetchDepartmentMembersRequest;
  self.resultFetchDepartmentMembersRequest = nil;
  return returnMe;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) mergeFrom:(TXPBFetchDepartmentMembersRequest*) other {
  if (other == [TXPBFetchDepartmentMembersRequest defaultInstance]) {
    return self;
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  if (other.hasLastFetchTime) {
    [self setLastFetchTime:other.lastFetchTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentMembersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
      case 16: {
        [self setLastFetchTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasDepartmentId {
  return resultFetchDepartmentMembersRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultFetchDepartmentMembersRequest.departmentId;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) setDepartmentId:(SInt64) value {
  resultFetchDepartmentMembersRequest.hasDepartmentId = YES;
  resultFetchDepartmentMembersRequest.departmentId = value;
  return self;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) clearDepartmentId {
  resultFetchDepartmentMembersRequest.hasDepartmentId = NO;
  resultFetchDepartmentMembersRequest.departmentId = 0L;
  return self;
}
- (BOOL) hasLastFetchTime {
  return resultFetchDepartmentMembersRequest.hasLastFetchTime;
}
- (SInt64) lastFetchTime {
  return resultFetchDepartmentMembersRequest.lastFetchTime;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) setLastFetchTime:(SInt64) value {
  resultFetchDepartmentMembersRequest.hasLastFetchTime = YES;
  resultFetchDepartmentMembersRequest.lastFetchTime = value;
  return self;
}
- (TXPBFetchDepartmentMembersRequestBuilder*) clearLastFetchTime {
  resultFetchDepartmentMembersRequest.hasLastFetchTime = NO;
  resultFetchDepartmentMembersRequest.lastFetchTime = 0L;
  return self;
}
@end

@interface TXPBFetchDepartmentMembersResponse ()
@property (strong) NSMutableArray * membersArray;
@property SInt64 lastFetchTime;
@property BOOL hasMore;
@end

@implementation TXPBFetchDepartmentMembersResponse

@synthesize membersArray;
@dynamic members;
- (BOOL) hasLastFetchTime {
  return !!hasLastFetchTime_;
}
- (void) setHasLastFetchTime:(BOOL) _value_ {
  hasLastFetchTime_ = !!_value_;
}
@synthesize lastFetchTime;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.lastFetchTime = 0L;
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchDepartmentMembersResponse* defaultTXPBFetchDepartmentMembersResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentMembersResponse class]) {
    defaultTXPBFetchDepartmentMembersResponseInstance = [[TXPBFetchDepartmentMembersResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentMembersResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentMembersResponseInstance;
}
- (NSArray *)members {
  return membersArray;
}
- (TXPBUser*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasLastFetchTime) {
    return NO;
  }
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitmembers = YES;
   [self.members enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmembers = NO;
      *stop = YES;
    }
  }];
  if (!isInitmembers) return isInitmembers;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.membersArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasLastFetchTime) {
    [output writeInt64:4 value:self.lastFetchTime];
  }
  if (self.hasHasMore) {
    [output writeBool:5 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.membersArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasLastFetchTime) {
    size_ += computeInt64Size(4, self.lastFetchTime);
  }
  if (self.hasHasMore) {
    size_ += computeBoolSize(5, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentMembersResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentMembersResponse*)[[[TXPBFetchDepartmentMembersResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentMembersResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentMembersResponse*)[[[TXPBFetchDepartmentMembersResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentMembersResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentMembersResponse*)[[[TXPBFetchDepartmentMembersResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentMembersResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentMembersResponse*)[[[TXPBFetchDepartmentMembersResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentMembersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentMembersResponse*)[[[TXPBFetchDepartmentMembersResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentMembersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentMembersResponse*)[[[TXPBFetchDepartmentMembersResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentMembersResponseBuilder*) builder {
  return [[TXPBFetchDepartmentMembersResponseBuilder alloc] init];
}
+ (TXPBFetchDepartmentMembersResponseBuilder*) builderWithPrototype:(TXPBFetchDepartmentMembersResponse*) prototype {
  return [[TXPBFetchDepartmentMembersResponse builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentMembersResponseBuilder*) builder {
  return [TXPBFetchDepartmentMembersResponse builder];
}
- (TXPBFetchDepartmentMembersResponseBuilder*) toBuilder {
  return [TXPBFetchDepartmentMembersResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.membersArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasLastFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastFetchTime", [NSNumber numberWithLongLong:self.lastFetchTime]];
  }
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBUser* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  if (self.hasLastFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastFetchTime] forKey: @"lastFetchTime"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentMembersResponse class]]) {
    return NO;
  }
  TXPBFetchDepartmentMembersResponse *otherMessage = other;
  return
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      self.hasLastFetchTime == otherMessage.hasLastFetchTime &&
      (!self.hasLastFetchTime || self.lastFetchTime == otherMessage.lastFetchTime) &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.membersArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasLastFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastFetchTime] hash];
  }
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentMembersResponseBuilder()
@property (strong) TXPBFetchDepartmentMembersResponse* resultFetchDepartmentMembersResponse;
@end

@implementation TXPBFetchDepartmentMembersResponseBuilder
@synthesize resultFetchDepartmentMembersResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentMembersResponse = [[TXPBFetchDepartmentMembersResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentMembersResponse;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) clear {
  self.resultFetchDepartmentMembersResponse = [[TXPBFetchDepartmentMembersResponse alloc] init];
  return self;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) clone {
  return [TXPBFetchDepartmentMembersResponse builderWithPrototype:resultFetchDepartmentMembersResponse];
}
- (TXPBFetchDepartmentMembersResponse*) defaultInstance {
  return [TXPBFetchDepartmentMembersResponse defaultInstance];
}
- (TXPBFetchDepartmentMembersResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentMembersResponse*) buildPartial {
  TXPBFetchDepartmentMembersResponse* returnMe = resultFetchDepartmentMembersResponse;
  self.resultFetchDepartmentMembersResponse = nil;
  return returnMe;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) mergeFrom:(TXPBFetchDepartmentMembersResponse*) other {
  if (other == [TXPBFetchDepartmentMembersResponse defaultInstance]) {
    return self;
  }
  if (other.membersArray.count > 0) {
    if (resultFetchDepartmentMembersResponse.membersArray == nil) {
      resultFetchDepartmentMembersResponse.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultFetchDepartmentMembersResponse.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  if (other.hasLastFetchTime) {
    [self setLastFetchTime:other.lastFetchTime];
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentMembersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setLastFetchTime:[input readInt64]];
        break;
      }
      case 40: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)members {
  return resultFetchDepartmentMembersResponse.membersArray;
}
- (TXPBUser*)membersAtIndex:(NSUInteger)index {
  return [resultFetchDepartmentMembersResponse membersAtIndex:index];
}
- (TXPBFetchDepartmentMembersResponseBuilder *)addMembers:(TXPBUser*)value {
  if (resultFetchDepartmentMembersResponse.membersArray == nil) {
    resultFetchDepartmentMembersResponse.membersArray = [[NSMutableArray alloc]init];
  }
  [resultFetchDepartmentMembersResponse.membersArray addObject:value];
  return self;
}
- (TXPBFetchDepartmentMembersResponseBuilder *)setMembersArray:(NSArray *)array {
  resultFetchDepartmentMembersResponse.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchDepartmentMembersResponseBuilder *)clearMembers {
  resultFetchDepartmentMembersResponse.membersArray = nil;
  return self;
}
- (BOOL) hasLastFetchTime {
  return resultFetchDepartmentMembersResponse.hasLastFetchTime;
}
- (SInt64) lastFetchTime {
  return resultFetchDepartmentMembersResponse.lastFetchTime;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) setLastFetchTime:(SInt64) value {
  resultFetchDepartmentMembersResponse.hasLastFetchTime = YES;
  resultFetchDepartmentMembersResponse.lastFetchTime = value;
  return self;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) clearLastFetchTime {
  resultFetchDepartmentMembersResponse.hasLastFetchTime = NO;
  resultFetchDepartmentMembersResponse.lastFetchTime = 0L;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchDepartmentMembersResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchDepartmentMembersResponse.hasMore;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchDepartmentMembersResponse.hasHasMore = YES;
  resultFetchDepartmentMembersResponse.hasMore = value;
  return self;
}
- (TXPBFetchDepartmentMembersResponseBuilder*) clearHasMore {
  resultFetchDepartmentMembersResponse.hasHasMore = NO;
  resultFetchDepartmentMembersResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchUserinfoRequest ()
@property SInt64 uid;
@end

@implementation TXPBFetchUserinfoRequest

- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) _value_ {
  hasUid_ = !!_value_;
}
@synthesize uid;
- (instancetype) init {
  if ((self = [super init])) {
    self.uid = 0L;
  }
  return self;
}
static TXPBFetchUserinfoRequest* defaultTXPBFetchUserinfoRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserinfoRequest class]) {
    defaultTXPBFetchUserinfoRequestInstance = [[TXPBFetchUserinfoRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserinfoRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserinfoRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUid) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUid) {
    [output writeInt64:1 value:self.uid];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUid) {
    size_ += computeInt64Size(1, self.uid);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserinfoRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchUserinfoRequest*)[[[TXPBFetchUserinfoRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchUserinfoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserinfoRequest*)[[[TXPBFetchUserinfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserinfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserinfoRequest*)[[[TXPBFetchUserinfoRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserinfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserinfoRequest*)[[[TXPBFetchUserinfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserinfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserinfoRequest*)[[[TXPBFetchUserinfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserinfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserinfoRequest*)[[[TXPBFetchUserinfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserinfoRequestBuilder*) builder {
  return [[TXPBFetchUserinfoRequestBuilder alloc] init];
}
+ (TXPBFetchUserinfoRequestBuilder*) builderWithPrototype:(TXPBFetchUserinfoRequest*) prototype {
  return [[TXPBFetchUserinfoRequest builder] mergeFrom:prototype];
}
- (TXPBFetchUserinfoRequestBuilder*) builder {
  return [TXPBFetchUserinfoRequest builder];
}
- (TXPBFetchUserinfoRequestBuilder*) toBuilder {
  return [TXPBFetchUserinfoRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUid) {
    [output appendFormat:@"%@%@: %@\n", indent, @"uid", [NSNumber numberWithLongLong:self.uid]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUid) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.uid] forKey: @"uid"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserinfoRequest class]]) {
    return NO;
  }
  TXPBFetchUserinfoRequest *otherMessage = other;
  return
      self.hasUid == otherMessage.hasUid &&
      (!self.hasUid || self.uid == otherMessage.uid) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUid) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.uid] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserinfoRequestBuilder()
@property (strong) TXPBFetchUserinfoRequest* resultFetchUserinfoRequest;
@end

@implementation TXPBFetchUserinfoRequestBuilder
@synthesize resultFetchUserinfoRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserinfoRequest = [[TXPBFetchUserinfoRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserinfoRequest;
}
- (TXPBFetchUserinfoRequestBuilder*) clear {
  self.resultFetchUserinfoRequest = [[TXPBFetchUserinfoRequest alloc] init];
  return self;
}
- (TXPBFetchUserinfoRequestBuilder*) clone {
  return [TXPBFetchUserinfoRequest builderWithPrototype:resultFetchUserinfoRequest];
}
- (TXPBFetchUserinfoRequest*) defaultInstance {
  return [TXPBFetchUserinfoRequest defaultInstance];
}
- (TXPBFetchUserinfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserinfoRequest*) buildPartial {
  TXPBFetchUserinfoRequest* returnMe = resultFetchUserinfoRequest;
  self.resultFetchUserinfoRequest = nil;
  return returnMe;
}
- (TXPBFetchUserinfoRequestBuilder*) mergeFrom:(TXPBFetchUserinfoRequest*) other {
  if (other == [TXPBFetchUserinfoRequest defaultInstance]) {
    return self;
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserinfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserinfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUid:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUid {
  return resultFetchUserinfoRequest.hasUid;
}
- (SInt64) uid {
  return resultFetchUserinfoRequest.uid;
}
- (TXPBFetchUserinfoRequestBuilder*) setUid:(SInt64) value {
  resultFetchUserinfoRequest.hasUid = YES;
  resultFetchUserinfoRequest.uid = value;
  return self;
}
- (TXPBFetchUserinfoRequestBuilder*) clearUid {
  resultFetchUserinfoRequest.hasUid = NO;
  resultFetchUserinfoRequest.uid = 0L;
  return self;
}
@end

@interface TXPBFetchUserinfoResponse ()
@property (strong) TXPBUser* user;
@end

@implementation TXPBFetchUserinfoResponse

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (instancetype) init {
  if ((self = [super init])) {
    self.user = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBFetchUserinfoResponse* defaultTXPBFetchUserinfoResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserinfoResponse class]) {
    defaultTXPBFetchUserinfoResponseInstance = [[TXPBFetchUserinfoResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserinfoResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserinfoResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserinfoResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchUserinfoResponse*)[[[TXPBFetchUserinfoResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchUserinfoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserinfoResponse*)[[[TXPBFetchUserinfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserinfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserinfoResponse*)[[[TXPBFetchUserinfoResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserinfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserinfoResponse*)[[[TXPBFetchUserinfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserinfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserinfoResponse*)[[[TXPBFetchUserinfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserinfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserinfoResponse*)[[[TXPBFetchUserinfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserinfoResponseBuilder*) builder {
  return [[TXPBFetchUserinfoResponseBuilder alloc] init];
}
+ (TXPBFetchUserinfoResponseBuilder*) builderWithPrototype:(TXPBFetchUserinfoResponse*) prototype {
  return [[TXPBFetchUserinfoResponse builder] mergeFrom:prototype];
}
- (TXPBFetchUserinfoResponseBuilder*) builder {
  return [TXPBFetchUserinfoResponse builder];
}
- (TXPBFetchUserinfoResponseBuilder*) toBuilder {
  return [TXPBFetchUserinfoResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserinfoResponse class]]) {
    return NO;
  }
  TXPBFetchUserinfoResponse *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserinfoResponseBuilder()
@property (strong) TXPBFetchUserinfoResponse* resultFetchUserinfoResponse;
@end

@implementation TXPBFetchUserinfoResponseBuilder
@synthesize resultFetchUserinfoResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserinfoResponse = [[TXPBFetchUserinfoResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserinfoResponse;
}
- (TXPBFetchUserinfoResponseBuilder*) clear {
  self.resultFetchUserinfoResponse = [[TXPBFetchUserinfoResponse alloc] init];
  return self;
}
- (TXPBFetchUserinfoResponseBuilder*) clone {
  return [TXPBFetchUserinfoResponse builderWithPrototype:resultFetchUserinfoResponse];
}
- (TXPBFetchUserinfoResponse*) defaultInstance {
  return [TXPBFetchUserinfoResponse defaultInstance];
}
- (TXPBFetchUserinfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserinfoResponse*) buildPartial {
  TXPBFetchUserinfoResponse* returnMe = resultFetchUserinfoResponse;
  self.resultFetchUserinfoResponse = nil;
  return returnMe;
}
- (TXPBFetchUserinfoResponseBuilder*) mergeFrom:(TXPBFetchUserinfoResponse*) other {
  if (other == [TXPBFetchUserinfoResponse defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserinfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserinfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return resultFetchUserinfoResponse.hasUser;
}
- (TXPBUser*) user {
  return resultFetchUserinfoResponse.user;
}
- (TXPBFetchUserinfoResponseBuilder*) setUser:(TXPBUser*) value {
  resultFetchUserinfoResponse.hasUser = YES;
  resultFetchUserinfoResponse.user = value;
  return self;
}
- (TXPBFetchUserinfoResponseBuilder*) setUserBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (TXPBFetchUserinfoResponseBuilder*) mergeUser:(TXPBUser*) value {
  if (resultFetchUserinfoResponse.hasUser &&
      resultFetchUserinfoResponse.user != [TXPBUser defaultInstance]) {
    resultFetchUserinfoResponse.user =
      [[[TXPBUser builderWithPrototype:resultFetchUserinfoResponse.user] mergeFrom:value] buildPartial];
  } else {
    resultFetchUserinfoResponse.user = value;
  }
  resultFetchUserinfoResponse.hasUser = YES;
  return self;
}
- (TXPBFetchUserinfoResponseBuilder*) clearUser {
  resultFetchUserinfoResponse.hasUser = NO;
  resultFetchUserinfoResponse.user = [TXPBUser defaultInstance];
  return self;
}
@end

@interface TXPBFetchDepartmentinfoRequest ()
@property SInt64 departmentId;
@end

@implementation TXPBFetchDepartmentinfoRequest

- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.departmentId = 0L;
  }
  return self;
}
static TXPBFetchDepartmentinfoRequest* defaultTXPBFetchDepartmentinfoRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentinfoRequest class]) {
    defaultTXPBFetchDepartmentinfoRequestInstance = [[TXPBFetchDepartmentinfoRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentinfoRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentinfoRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDepartmentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartmentId) {
    [output writeInt64:1 value:self.departmentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(1, self.departmentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentinfoRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentinfoRequest*)[[[TXPBFetchDepartmentinfoRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentinfoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentinfoRequest*)[[[TXPBFetchDepartmentinfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentinfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentinfoRequest*)[[[TXPBFetchDepartmentinfoRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentinfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentinfoRequest*)[[[TXPBFetchDepartmentinfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentinfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentinfoRequest*)[[[TXPBFetchDepartmentinfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentinfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentinfoRequest*)[[[TXPBFetchDepartmentinfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentinfoRequestBuilder*) builder {
  return [[TXPBFetchDepartmentinfoRequestBuilder alloc] init];
}
+ (TXPBFetchDepartmentinfoRequestBuilder*) builderWithPrototype:(TXPBFetchDepartmentinfoRequest*) prototype {
  return [[TXPBFetchDepartmentinfoRequest builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentinfoRequestBuilder*) builder {
  return [TXPBFetchDepartmentinfoRequest builder];
}
- (TXPBFetchDepartmentinfoRequestBuilder*) toBuilder {
  return [TXPBFetchDepartmentinfoRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentinfoRequest class]]) {
    return NO;
  }
  TXPBFetchDepartmentinfoRequest *otherMessage = other;
  return
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentinfoRequestBuilder()
@property (strong) TXPBFetchDepartmentinfoRequest* resultFetchDepartmentinfoRequest;
@end

@implementation TXPBFetchDepartmentinfoRequestBuilder
@synthesize resultFetchDepartmentinfoRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentinfoRequest = [[TXPBFetchDepartmentinfoRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentinfoRequest;
}
- (TXPBFetchDepartmentinfoRequestBuilder*) clear {
  self.resultFetchDepartmentinfoRequest = [[TXPBFetchDepartmentinfoRequest alloc] init];
  return self;
}
- (TXPBFetchDepartmentinfoRequestBuilder*) clone {
  return [TXPBFetchDepartmentinfoRequest builderWithPrototype:resultFetchDepartmentinfoRequest];
}
- (TXPBFetchDepartmentinfoRequest*) defaultInstance {
  return [TXPBFetchDepartmentinfoRequest defaultInstance];
}
- (TXPBFetchDepartmentinfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentinfoRequest*) buildPartial {
  TXPBFetchDepartmentinfoRequest* returnMe = resultFetchDepartmentinfoRequest;
  self.resultFetchDepartmentinfoRequest = nil;
  return returnMe;
}
- (TXPBFetchDepartmentinfoRequestBuilder*) mergeFrom:(TXPBFetchDepartmentinfoRequest*) other {
  if (other == [TXPBFetchDepartmentinfoRequest defaultInstance]) {
    return self;
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentinfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentinfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasDepartmentId {
  return resultFetchDepartmentinfoRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultFetchDepartmentinfoRequest.departmentId;
}
- (TXPBFetchDepartmentinfoRequestBuilder*) setDepartmentId:(SInt64) value {
  resultFetchDepartmentinfoRequest.hasDepartmentId = YES;
  resultFetchDepartmentinfoRequest.departmentId = value;
  return self;
}
- (TXPBFetchDepartmentinfoRequestBuilder*) clearDepartmentId {
  resultFetchDepartmentinfoRequest.hasDepartmentId = NO;
  resultFetchDepartmentinfoRequest.departmentId = 0L;
  return self;
}
@end

@interface TXPBFetchDepartmentinfoResponse ()
@property (strong) TXPBDepartment* department;
@end

@implementation TXPBFetchDepartmentinfoResponse

- (BOOL) hasDepartment {
  return !!hasDepartment_;
}
- (void) setHasDepartment:(BOOL) _value_ {
  hasDepartment_ = !!_value_;
}
@synthesize department;
- (instancetype) init {
  if ((self = [super init])) {
    self.department = [TXPBDepartment defaultInstance];
  }
  return self;
}
static TXPBFetchDepartmentinfoResponse* defaultTXPBFetchDepartmentinfoResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentinfoResponse class]) {
    defaultTXPBFetchDepartmentinfoResponseInstance = [[TXPBFetchDepartmentinfoResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentinfoResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentinfoResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDepartment) {
    return NO;
  }
  if (!self.department.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartment) {
    [output writeMessage:1 value:self.department];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartment) {
    size_ += computeMessageSize(1, self.department);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentinfoResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentinfoResponse*)[[[TXPBFetchDepartmentinfoResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentinfoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentinfoResponse*)[[[TXPBFetchDepartmentinfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentinfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentinfoResponse*)[[[TXPBFetchDepartmentinfoResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentinfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentinfoResponse*)[[[TXPBFetchDepartmentinfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentinfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentinfoResponse*)[[[TXPBFetchDepartmentinfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentinfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentinfoResponse*)[[[TXPBFetchDepartmentinfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentinfoResponseBuilder*) builder {
  return [[TXPBFetchDepartmentinfoResponseBuilder alloc] init];
}
+ (TXPBFetchDepartmentinfoResponseBuilder*) builderWithPrototype:(TXPBFetchDepartmentinfoResponse*) prototype {
  return [[TXPBFetchDepartmentinfoResponse builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentinfoResponseBuilder*) builder {
  return [TXPBFetchDepartmentinfoResponse builder];
}
- (TXPBFetchDepartmentinfoResponseBuilder*) toBuilder {
  return [TXPBFetchDepartmentinfoResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartment) {
    [output appendFormat:@"%@%@ {\n", indent, @"department"];
    [self.department writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartment) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.department storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"department"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentinfoResponse class]]) {
    return NO;
  }
  TXPBFetchDepartmentinfoResponse *otherMessage = other;
  return
      self.hasDepartment == otherMessage.hasDepartment &&
      (!self.hasDepartment || [self.department isEqual:otherMessage.department]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartment) {
    hashCode = hashCode * 31 + [self.department hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentinfoResponseBuilder()
@property (strong) TXPBFetchDepartmentinfoResponse* resultFetchDepartmentinfoResponse;
@end

@implementation TXPBFetchDepartmentinfoResponseBuilder
@synthesize resultFetchDepartmentinfoResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentinfoResponse = [[TXPBFetchDepartmentinfoResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentinfoResponse;
}
- (TXPBFetchDepartmentinfoResponseBuilder*) clear {
  self.resultFetchDepartmentinfoResponse = [[TXPBFetchDepartmentinfoResponse alloc] init];
  return self;
}
- (TXPBFetchDepartmentinfoResponseBuilder*) clone {
  return [TXPBFetchDepartmentinfoResponse builderWithPrototype:resultFetchDepartmentinfoResponse];
}
- (TXPBFetchDepartmentinfoResponse*) defaultInstance {
  return [TXPBFetchDepartmentinfoResponse defaultInstance];
}
- (TXPBFetchDepartmentinfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentinfoResponse*) buildPartial {
  TXPBFetchDepartmentinfoResponse* returnMe = resultFetchDepartmentinfoResponse;
  self.resultFetchDepartmentinfoResponse = nil;
  return returnMe;
}
- (TXPBFetchDepartmentinfoResponseBuilder*) mergeFrom:(TXPBFetchDepartmentinfoResponse*) other {
  if (other == [TXPBFetchDepartmentinfoResponse defaultInstance]) {
    return self;
  }
  if (other.hasDepartment) {
    [self mergeDepartment:other.department];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentinfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentinfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBDepartmentBuilder* subBuilder = [TXPBDepartment builder];
        if (self.hasDepartment) {
          [subBuilder mergeFrom:self.department];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDepartment:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDepartment {
  return resultFetchDepartmentinfoResponse.hasDepartment;
}
- (TXPBDepartment*) department {
  return resultFetchDepartmentinfoResponse.department;
}
- (TXPBFetchDepartmentinfoResponseBuilder*) setDepartment:(TXPBDepartment*) value {
  resultFetchDepartmentinfoResponse.hasDepartment = YES;
  resultFetchDepartmentinfoResponse.department = value;
  return self;
}
- (TXPBFetchDepartmentinfoResponseBuilder*) setDepartmentBuilder:(TXPBDepartmentBuilder*) builderForValue {
  return [self setDepartment:[builderForValue build]];
}
- (TXPBFetchDepartmentinfoResponseBuilder*) mergeDepartment:(TXPBDepartment*) value {
  if (resultFetchDepartmentinfoResponse.hasDepartment &&
      resultFetchDepartmentinfoResponse.department != [TXPBDepartment defaultInstance]) {
    resultFetchDepartmentinfoResponse.department =
      [[[TXPBDepartment builderWithPrototype:resultFetchDepartmentinfoResponse.department] mergeFrom:value] buildPartial];
  } else {
    resultFetchDepartmentinfoResponse.department = value;
  }
  resultFetchDepartmentinfoResponse.hasDepartment = YES;
  return self;
}
- (TXPBFetchDepartmentinfoResponseBuilder*) clearDepartment {
  resultFetchDepartmentinfoResponse.hasDepartment = NO;
  resultFetchDepartmentinfoResponse.department = [TXPBDepartment defaultInstance];
  return self;
}
@end

@interface TXPBFetchDepartmentByGroupIdRequest ()
@property (strong) NSString* groupId;
@end

@implementation TXPBFetchDepartmentByGroupIdRequest

- (BOOL) hasGroupId {
  return !!hasGroupId_;
}
- (void) setHasGroupId:(BOOL) _value_ {
  hasGroupId_ = !!_value_;
}
@synthesize groupId;
- (instancetype) init {
  if ((self = [super init])) {
    self.groupId = @"";
  }
  return self;
}
static TXPBFetchDepartmentByGroupIdRequest* defaultTXPBFetchDepartmentByGroupIdRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentByGroupIdRequest class]) {
    defaultTXPBFetchDepartmentByGroupIdRequestInstance = [[TXPBFetchDepartmentByGroupIdRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentByGroupIdRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentByGroupIdRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGroupId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGroupId) {
    [output writeString:1 value:self.groupId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGroupId) {
    size_ += computeStringSize(1, self.groupId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentByGroupIdRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentByGroupIdRequest*)[[[TXPBFetchDepartmentByGroupIdRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentByGroupIdRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentByGroupIdRequest*)[[[TXPBFetchDepartmentByGroupIdRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentByGroupIdRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentByGroupIdRequest*)[[[TXPBFetchDepartmentByGroupIdRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentByGroupIdRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentByGroupIdRequest*)[[[TXPBFetchDepartmentByGroupIdRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentByGroupIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentByGroupIdRequest*)[[[TXPBFetchDepartmentByGroupIdRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentByGroupIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentByGroupIdRequest*)[[[TXPBFetchDepartmentByGroupIdRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentByGroupIdRequestBuilder*) builder {
  return [[TXPBFetchDepartmentByGroupIdRequestBuilder alloc] init];
}
+ (TXPBFetchDepartmentByGroupIdRequestBuilder*) builderWithPrototype:(TXPBFetchDepartmentByGroupIdRequest*) prototype {
  return [[TXPBFetchDepartmentByGroupIdRequest builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) builder {
  return [TXPBFetchDepartmentByGroupIdRequest builder];
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) toBuilder {
  return [TXPBFetchDepartmentByGroupIdRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGroupId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"groupId", self.groupId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGroupId) {
    [dictionary setObject: self.groupId forKey: @"groupId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentByGroupIdRequest class]]) {
    return NO;
  }
  TXPBFetchDepartmentByGroupIdRequest *otherMessage = other;
  return
      self.hasGroupId == otherMessage.hasGroupId &&
      (!self.hasGroupId || [self.groupId isEqual:otherMessage.groupId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGroupId) {
    hashCode = hashCode * 31 + [self.groupId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentByGroupIdRequestBuilder()
@property (strong) TXPBFetchDepartmentByGroupIdRequest* resultFetchDepartmentByGroupIdRequest;
@end

@implementation TXPBFetchDepartmentByGroupIdRequestBuilder
@synthesize resultFetchDepartmentByGroupIdRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentByGroupIdRequest = [[TXPBFetchDepartmentByGroupIdRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentByGroupIdRequest;
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) clear {
  self.resultFetchDepartmentByGroupIdRequest = [[TXPBFetchDepartmentByGroupIdRequest alloc] init];
  return self;
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) clone {
  return [TXPBFetchDepartmentByGroupIdRequest builderWithPrototype:resultFetchDepartmentByGroupIdRequest];
}
- (TXPBFetchDepartmentByGroupIdRequest*) defaultInstance {
  return [TXPBFetchDepartmentByGroupIdRequest defaultInstance];
}
- (TXPBFetchDepartmentByGroupIdRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentByGroupIdRequest*) buildPartial {
  TXPBFetchDepartmentByGroupIdRequest* returnMe = resultFetchDepartmentByGroupIdRequest;
  self.resultFetchDepartmentByGroupIdRequest = nil;
  return returnMe;
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) mergeFrom:(TXPBFetchDepartmentByGroupIdRequest*) other {
  if (other == [TXPBFetchDepartmentByGroupIdRequest defaultInstance]) {
    return self;
  }
  if (other.hasGroupId) {
    [self setGroupId:other.groupId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setGroupId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGroupId {
  return resultFetchDepartmentByGroupIdRequest.hasGroupId;
}
- (NSString*) groupId {
  return resultFetchDepartmentByGroupIdRequest.groupId;
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) setGroupId:(NSString*) value {
  resultFetchDepartmentByGroupIdRequest.hasGroupId = YES;
  resultFetchDepartmentByGroupIdRequest.groupId = value;
  return self;
}
- (TXPBFetchDepartmentByGroupIdRequestBuilder*) clearGroupId {
  resultFetchDepartmentByGroupIdRequest.hasGroupId = NO;
  resultFetchDepartmentByGroupIdRequest.groupId = @"";
  return self;
}
@end

@interface TXPBFetchDepartmentByGroupIdResponse ()
@property (strong) TXPBDepartment* department;
@end

@implementation TXPBFetchDepartmentByGroupIdResponse

- (BOOL) hasDepartment {
  return !!hasDepartment_;
}
- (void) setHasDepartment:(BOOL) _value_ {
  hasDepartment_ = !!_value_;
}
@synthesize department;
- (instancetype) init {
  if ((self = [super init])) {
    self.department = [TXPBDepartment defaultInstance];
  }
  return self;
}
static TXPBFetchDepartmentByGroupIdResponse* defaultTXPBFetchDepartmentByGroupIdResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentByGroupIdResponse class]) {
    defaultTXPBFetchDepartmentByGroupIdResponseInstance = [[TXPBFetchDepartmentByGroupIdResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentByGroupIdResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentByGroupIdResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDepartment) {
    return NO;
  }
  if (!self.department.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartment) {
    [output writeMessage:1 value:self.department];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartment) {
    size_ += computeMessageSize(1, self.department);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentByGroupIdResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentByGroupIdResponse*)[[[TXPBFetchDepartmentByGroupIdResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentByGroupIdResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentByGroupIdResponse*)[[[TXPBFetchDepartmentByGroupIdResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentByGroupIdResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentByGroupIdResponse*)[[[TXPBFetchDepartmentByGroupIdResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentByGroupIdResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentByGroupIdResponse*)[[[TXPBFetchDepartmentByGroupIdResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentByGroupIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentByGroupIdResponse*)[[[TXPBFetchDepartmentByGroupIdResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentByGroupIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentByGroupIdResponse*)[[[TXPBFetchDepartmentByGroupIdResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentByGroupIdResponseBuilder*) builder {
  return [[TXPBFetchDepartmentByGroupIdResponseBuilder alloc] init];
}
+ (TXPBFetchDepartmentByGroupIdResponseBuilder*) builderWithPrototype:(TXPBFetchDepartmentByGroupIdResponse*) prototype {
  return [[TXPBFetchDepartmentByGroupIdResponse builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) builder {
  return [TXPBFetchDepartmentByGroupIdResponse builder];
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) toBuilder {
  return [TXPBFetchDepartmentByGroupIdResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartment) {
    [output appendFormat:@"%@%@ {\n", indent, @"department"];
    [self.department writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartment) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.department storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"department"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentByGroupIdResponse class]]) {
    return NO;
  }
  TXPBFetchDepartmentByGroupIdResponse *otherMessage = other;
  return
      self.hasDepartment == otherMessage.hasDepartment &&
      (!self.hasDepartment || [self.department isEqual:otherMessage.department]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartment) {
    hashCode = hashCode * 31 + [self.department hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentByGroupIdResponseBuilder()
@property (strong) TXPBFetchDepartmentByGroupIdResponse* resultFetchDepartmentByGroupIdResponse;
@end

@implementation TXPBFetchDepartmentByGroupIdResponseBuilder
@synthesize resultFetchDepartmentByGroupIdResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentByGroupIdResponse = [[TXPBFetchDepartmentByGroupIdResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentByGroupIdResponse;
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) clear {
  self.resultFetchDepartmentByGroupIdResponse = [[TXPBFetchDepartmentByGroupIdResponse alloc] init];
  return self;
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) clone {
  return [TXPBFetchDepartmentByGroupIdResponse builderWithPrototype:resultFetchDepartmentByGroupIdResponse];
}
- (TXPBFetchDepartmentByGroupIdResponse*) defaultInstance {
  return [TXPBFetchDepartmentByGroupIdResponse defaultInstance];
}
- (TXPBFetchDepartmentByGroupIdResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentByGroupIdResponse*) buildPartial {
  TXPBFetchDepartmentByGroupIdResponse* returnMe = resultFetchDepartmentByGroupIdResponse;
  self.resultFetchDepartmentByGroupIdResponse = nil;
  return returnMe;
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) mergeFrom:(TXPBFetchDepartmentByGroupIdResponse*) other {
  if (other == [TXPBFetchDepartmentByGroupIdResponse defaultInstance]) {
    return self;
  }
  if (other.hasDepartment) {
    [self mergeDepartment:other.department];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBDepartmentBuilder* subBuilder = [TXPBDepartment builder];
        if (self.hasDepartment) {
          [subBuilder mergeFrom:self.department];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setDepartment:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasDepartment {
  return resultFetchDepartmentByGroupIdResponse.hasDepartment;
}
- (TXPBDepartment*) department {
  return resultFetchDepartmentByGroupIdResponse.department;
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) setDepartment:(TXPBDepartment*) value {
  resultFetchDepartmentByGroupIdResponse.hasDepartment = YES;
  resultFetchDepartmentByGroupIdResponse.department = value;
  return self;
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) setDepartmentBuilder:(TXPBDepartmentBuilder*) builderForValue {
  return [self setDepartment:[builderForValue build]];
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) mergeDepartment:(TXPBDepartment*) value {
  if (resultFetchDepartmentByGroupIdResponse.hasDepartment &&
      resultFetchDepartmentByGroupIdResponse.department != [TXPBDepartment defaultInstance]) {
    resultFetchDepartmentByGroupIdResponse.department =
      [[[TXPBDepartment builderWithPrototype:resultFetchDepartmentByGroupIdResponse.department] mergeFrom:value] buildPartial];
  } else {
    resultFetchDepartmentByGroupIdResponse.department = value;
  }
  resultFetchDepartmentByGroupIdResponse.hasDepartment = YES;
  return self;
}
- (TXPBFetchDepartmentByGroupIdResponseBuilder*) clearDepartment {
  resultFetchDepartmentByGroupIdResponse.hasDepartment = NO;
  resultFetchDepartmentByGroupIdResponse.department = [TXPBDepartment defaultInstance];
  return self;
}
@end

@interface TXPBSendNoticeRequest ()
@property (strong) NSString* content;
@property (strong) NSMutableArray * attchesArray;
@property (strong) NSMutableArray * noticeDepartmentsArray;
@end

@implementation TXPBSendNoticeRequest

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
@synthesize attchesArray;
@dynamic attches;
@synthesize noticeDepartmentsArray;
@dynamic noticeDepartments;
- (instancetype) init {
  if ((self = [super init])) {
    self.content = @"";
  }
  return self;
}
static TXPBSendNoticeRequest* defaultTXPBSendNoticeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendNoticeRequest class]) {
    defaultTXPBSendNoticeRequestInstance = [[TXPBSendNoticeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendNoticeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendNoticeRequestInstance;
}
- (NSArray *)attches {
  return attchesArray;
}
- (TXPBAttach*)attchesAtIndex:(NSUInteger)index {
  return [attchesArray objectAtIndex:index];
}
- (NSArray *)noticeDepartments {
  return noticeDepartmentsArray;
}
- (TXPBNoticeDepartment*)noticeDepartmentsAtIndex:(NSUInteger)index {
  return [noticeDepartmentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasContent) {
    return NO;
  }
  __block BOOL isInitattches = YES;
   [self.attches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattches) return isInitattches;
  __block BOOL isInitnoticeDepartments = YES;
   [self.noticeDepartments enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitnoticeDepartments = NO;
      *stop = YES;
    }
  }];
  if (!isInitnoticeDepartments) return isInitnoticeDepartments;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeString:1 value:self.content];
  }
  [self.attchesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContent) {
    size_ += computeStringSize(1, self.content);
  }
  [self.attchesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendNoticeRequest*) parseFromData:(NSData*) data {
  return (TXPBSendNoticeRequest*)[[[TXPBSendNoticeRequest builder] mergeFromData:data] build];
}
+ (TXPBSendNoticeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendNoticeRequest*)[[[TXPBSendNoticeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendNoticeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendNoticeRequest*)[[[TXPBSendNoticeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSendNoticeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendNoticeRequest*)[[[TXPBSendNoticeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendNoticeRequest*)[[[TXPBSendNoticeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendNoticeRequest*)[[[TXPBSendNoticeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendNoticeRequestBuilder*) builder {
  return [[TXPBSendNoticeRequestBuilder alloc] init];
}
+ (TXPBSendNoticeRequestBuilder*) builderWithPrototype:(TXPBSendNoticeRequest*) prototype {
  return [[TXPBSendNoticeRequest builder] mergeFrom:prototype];
}
- (TXPBSendNoticeRequestBuilder*) builder {
  return [TXPBSendNoticeRequest builder];
}
- (TXPBSendNoticeRequestBuilder*) toBuilder {
  return [TXPBSendNoticeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.attchesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"noticeDepartments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  for (TXPBAttach* element in self.attchesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attches"];
  }
  for (TXPBNoticeDepartment* element in self.noticeDepartmentsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"noticeDepartments"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendNoticeRequest class]]) {
    return NO;
  }
  TXPBSendNoticeRequest *otherMessage = other;
  return
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      [self.attchesArray isEqualToArray:otherMessage.attchesArray] &&
      [self.noticeDepartmentsArray isEqualToArray:otherMessage.noticeDepartmentsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  [self.attchesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendNoticeRequestBuilder()
@property (strong) TXPBSendNoticeRequest* resultSendNoticeRequest;
@end

@implementation TXPBSendNoticeRequestBuilder
@synthesize resultSendNoticeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendNoticeRequest = [[TXPBSendNoticeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendNoticeRequest;
}
- (TXPBSendNoticeRequestBuilder*) clear {
  self.resultSendNoticeRequest = [[TXPBSendNoticeRequest alloc] init];
  return self;
}
- (TXPBSendNoticeRequestBuilder*) clone {
  return [TXPBSendNoticeRequest builderWithPrototype:resultSendNoticeRequest];
}
- (TXPBSendNoticeRequest*) defaultInstance {
  return [TXPBSendNoticeRequest defaultInstance];
}
- (TXPBSendNoticeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendNoticeRequest*) buildPartial {
  TXPBSendNoticeRequest* returnMe = resultSendNoticeRequest;
  self.resultSendNoticeRequest = nil;
  return returnMe;
}
- (TXPBSendNoticeRequestBuilder*) mergeFrom:(TXPBSendNoticeRequest*) other {
  if (other == [TXPBSendNoticeRequest defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.attchesArray.count > 0) {
    if (resultSendNoticeRequest.attchesArray == nil) {
      resultSendNoticeRequest.attchesArray = [[NSMutableArray alloc] initWithArray:other.attchesArray];
    } else {
      [resultSendNoticeRequest.attchesArray addObjectsFromArray:other.attchesArray];
    }
  }
  if (other.noticeDepartmentsArray.count > 0) {
    if (resultSendNoticeRequest.noticeDepartmentsArray == nil) {
      resultSendNoticeRequest.noticeDepartmentsArray = [[NSMutableArray alloc] initWithArray:other.noticeDepartmentsArray];
    } else {
      [resultSendNoticeRequest.noticeDepartmentsArray addObjectsFromArray:other.noticeDepartmentsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContent:[input readString]];
        break;
      }
      case 18: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttches:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TXPBNoticeDepartmentBuilder* subBuilder = [TXPBNoticeDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNoticeDepartments:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return resultSendNoticeRequest.hasContent;
}
- (NSString*) content {
  return resultSendNoticeRequest.content;
}
- (TXPBSendNoticeRequestBuilder*) setContent:(NSString*) value {
  resultSendNoticeRequest.hasContent = YES;
  resultSendNoticeRequest.content = value;
  return self;
}
- (TXPBSendNoticeRequestBuilder*) clearContent {
  resultSendNoticeRequest.hasContent = NO;
  resultSendNoticeRequest.content = @"";
  return self;
}
- (NSMutableArray *)attches {
  return resultSendNoticeRequest.attchesArray;
}
- (TXPBAttach*)attchesAtIndex:(NSUInteger)index {
  return [resultSendNoticeRequest attchesAtIndex:index];
}
- (TXPBSendNoticeRequestBuilder *)addAttches:(TXPBAttach*)value {
  if (resultSendNoticeRequest.attchesArray == nil) {
    resultSendNoticeRequest.attchesArray = [[NSMutableArray alloc]init];
  }
  [resultSendNoticeRequest.attchesArray addObject:value];
  return self;
}
- (TXPBSendNoticeRequestBuilder *)setAttchesArray:(NSArray *)array {
  resultSendNoticeRequest.attchesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSendNoticeRequestBuilder *)clearAttches {
  resultSendNoticeRequest.attchesArray = nil;
  return self;
}
- (NSMutableArray *)noticeDepartments {
  return resultSendNoticeRequest.noticeDepartmentsArray;
}
- (TXPBNoticeDepartment*)noticeDepartmentsAtIndex:(NSUInteger)index {
  return [resultSendNoticeRequest noticeDepartmentsAtIndex:index];
}
- (TXPBSendNoticeRequestBuilder *)addNoticeDepartments:(TXPBNoticeDepartment*)value {
  if (resultSendNoticeRequest.noticeDepartmentsArray == nil) {
    resultSendNoticeRequest.noticeDepartmentsArray = [[NSMutableArray alloc]init];
  }
  [resultSendNoticeRequest.noticeDepartmentsArray addObject:value];
  return self;
}
- (TXPBSendNoticeRequestBuilder *)setNoticeDepartmentsArray:(NSArray *)array {
  resultSendNoticeRequest.noticeDepartmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSendNoticeRequestBuilder *)clearNoticeDepartments {
  resultSendNoticeRequest.noticeDepartmentsArray = nil;
  return self;
}
@end

@interface TXPBSendNoticeResponse ()
@property SInt64 noticeId;
@property SInt32 bonus;
@end

@implementation TXPBSendNoticeResponse

- (BOOL) hasNoticeId {
  return !!hasNoticeId_;
}
- (void) setHasNoticeId:(BOOL) _value_ {
  hasNoticeId_ = !!_value_;
}
@synthesize noticeId;
- (BOOL) hasBonus {
  return !!hasBonus_;
}
- (void) setHasBonus:(BOOL) _value_ {
  hasBonus_ = !!_value_;
}
@synthesize bonus;
- (instancetype) init {
  if ((self = [super init])) {
    self.noticeId = 0L;
    self.bonus = 0;
  }
  return self;
}
static TXPBSendNoticeResponse* defaultTXPBSendNoticeResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendNoticeResponse class]) {
    defaultTXPBSendNoticeResponseInstance = [[TXPBSendNoticeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendNoticeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendNoticeResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNoticeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNoticeId) {
    [output writeInt64:1 value:self.noticeId];
  }
  if (self.hasBonus) {
    [output writeInt32:2 value:self.bonus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNoticeId) {
    size_ += computeInt64Size(1, self.noticeId);
  }
  if (self.hasBonus) {
    size_ += computeInt32Size(2, self.bonus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendNoticeResponse*) parseFromData:(NSData*) data {
  return (TXPBSendNoticeResponse*)[[[TXPBSendNoticeResponse builder] mergeFromData:data] build];
}
+ (TXPBSendNoticeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendNoticeResponse*)[[[TXPBSendNoticeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendNoticeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendNoticeResponse*)[[[TXPBSendNoticeResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSendNoticeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendNoticeResponse*)[[[TXPBSendNoticeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendNoticeResponse*)[[[TXPBSendNoticeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendNoticeResponse*)[[[TXPBSendNoticeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendNoticeResponseBuilder*) builder {
  return [[TXPBSendNoticeResponseBuilder alloc] init];
}
+ (TXPBSendNoticeResponseBuilder*) builderWithPrototype:(TXPBSendNoticeResponse*) prototype {
  return [[TXPBSendNoticeResponse builder] mergeFrom:prototype];
}
- (TXPBSendNoticeResponseBuilder*) builder {
  return [TXPBSendNoticeResponse builder];
}
- (TXPBSendNoticeResponseBuilder*) toBuilder {
  return [TXPBSendNoticeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNoticeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"noticeId", [NSNumber numberWithLongLong:self.noticeId]];
  }
  if (self.hasBonus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bonus", [NSNumber numberWithInteger:self.bonus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNoticeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.noticeId] forKey: @"noticeId"];
  }
  if (self.hasBonus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bonus] forKey: @"bonus"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendNoticeResponse class]]) {
    return NO;
  }
  TXPBSendNoticeResponse *otherMessage = other;
  return
      self.hasNoticeId == otherMessage.hasNoticeId &&
      (!self.hasNoticeId || self.noticeId == otherMessage.noticeId) &&
      self.hasBonus == otherMessage.hasBonus &&
      (!self.hasBonus || self.bonus == otherMessage.bonus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNoticeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.noticeId] hash];
  }
  if (self.hasBonus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bonus] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendNoticeResponseBuilder()
@property (strong) TXPBSendNoticeResponse* resultSendNoticeResponse;
@end

@implementation TXPBSendNoticeResponseBuilder
@synthesize resultSendNoticeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendNoticeResponse = [[TXPBSendNoticeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendNoticeResponse;
}
- (TXPBSendNoticeResponseBuilder*) clear {
  self.resultSendNoticeResponse = [[TXPBSendNoticeResponse alloc] init];
  return self;
}
- (TXPBSendNoticeResponseBuilder*) clone {
  return [TXPBSendNoticeResponse builderWithPrototype:resultSendNoticeResponse];
}
- (TXPBSendNoticeResponse*) defaultInstance {
  return [TXPBSendNoticeResponse defaultInstance];
}
- (TXPBSendNoticeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendNoticeResponse*) buildPartial {
  TXPBSendNoticeResponse* returnMe = resultSendNoticeResponse;
  self.resultSendNoticeResponse = nil;
  return returnMe;
}
- (TXPBSendNoticeResponseBuilder*) mergeFrom:(TXPBSendNoticeResponse*) other {
  if (other == [TXPBSendNoticeResponse defaultInstance]) {
    return self;
  }
  if (other.hasNoticeId) {
    [self setNoticeId:other.noticeId];
  }
  if (other.hasBonus) {
    [self setBonus:other.bonus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNoticeId:[input readInt64]];
        break;
      }
      case 16: {
        [self setBonus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasNoticeId {
  return resultSendNoticeResponse.hasNoticeId;
}
- (SInt64) noticeId {
  return resultSendNoticeResponse.noticeId;
}
- (TXPBSendNoticeResponseBuilder*) setNoticeId:(SInt64) value {
  resultSendNoticeResponse.hasNoticeId = YES;
  resultSendNoticeResponse.noticeId = value;
  return self;
}
- (TXPBSendNoticeResponseBuilder*) clearNoticeId {
  resultSendNoticeResponse.hasNoticeId = NO;
  resultSendNoticeResponse.noticeId = 0L;
  return self;
}
- (BOOL) hasBonus {
  return resultSendNoticeResponse.hasBonus;
}
- (SInt32) bonus {
  return resultSendNoticeResponse.bonus;
}
- (TXPBSendNoticeResponseBuilder*) setBonus:(SInt32) value {
  resultSendNoticeResponse.hasBonus = YES;
  resultSendNoticeResponse.bonus = value;
  return self;
}
- (TXPBSendNoticeResponseBuilder*) clearBonus {
  resultSendNoticeResponse.hasBonus = NO;
  resultSendNoticeResponse.bonus = 0;
  return self;
}
@end

@interface TXPBFetchNoticeRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@property BOOL isInbox;
@end

@implementation TXPBFetchNoticeRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasIsInbox {
  return !!hasIsInbox_;
}
- (void) setHasIsInbox:(BOOL) _value_ {
  hasIsInbox_ = !!_value_;
}
- (BOOL) isInbox {
  return !!isInbox_;
}
- (void) setIsInbox:(BOOL) _value_ {
  isInbox_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
    self.isInbox = NO;
  }
  return self;
}
static TXPBFetchNoticeRequest* defaultTXPBFetchNoticeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNoticeRequest class]) {
    defaultTXPBFetchNoticeRequestInstance = [[TXPBFetchNoticeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIsInbox) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasIsInbox) {
    [output writeBool:3 value:self.isInbox];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasIsInbox) {
    size_ += computeBoolSize(3, self.isInbox);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNoticeRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchNoticeRequest*)[[[TXPBFetchNoticeRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchNoticeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeRequest*)[[[TXPBFetchNoticeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNoticeRequest*)[[[TXPBFetchNoticeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNoticeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeRequest*)[[[TXPBFetchNoticeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNoticeRequest*)[[[TXPBFetchNoticeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeRequest*)[[[TXPBFetchNoticeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeRequestBuilder*) builder {
  return [[TXPBFetchNoticeRequestBuilder alloc] init];
}
+ (TXPBFetchNoticeRequestBuilder*) builderWithPrototype:(TXPBFetchNoticeRequest*) prototype {
  return [[TXPBFetchNoticeRequest builder] mergeFrom:prototype];
}
- (TXPBFetchNoticeRequestBuilder*) builder {
  return [TXPBFetchNoticeRequest builder];
}
- (TXPBFetchNoticeRequestBuilder*) toBuilder {
  return [TXPBFetchNoticeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasIsInbox) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isInbox", [NSNumber numberWithBool:self.isInbox]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasIsInbox) {
    [dictionary setObject: [NSNumber numberWithBool:self.isInbox] forKey: @"isInbox"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNoticeRequest class]]) {
    return NO;
  }
  TXPBFetchNoticeRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasIsInbox == otherMessage.hasIsInbox &&
      (!self.hasIsInbox || self.isInbox == otherMessage.isInbox) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasIsInbox) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isInbox] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNoticeRequestBuilder()
@property (strong) TXPBFetchNoticeRequest* resultFetchNoticeRequest;
@end

@implementation TXPBFetchNoticeRequestBuilder
@synthesize resultFetchNoticeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNoticeRequest = [[TXPBFetchNoticeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNoticeRequest;
}
- (TXPBFetchNoticeRequestBuilder*) clear {
  self.resultFetchNoticeRequest = [[TXPBFetchNoticeRequest alloc] init];
  return self;
}
- (TXPBFetchNoticeRequestBuilder*) clone {
  return [TXPBFetchNoticeRequest builderWithPrototype:resultFetchNoticeRequest];
}
- (TXPBFetchNoticeRequest*) defaultInstance {
  return [TXPBFetchNoticeRequest defaultInstance];
}
- (TXPBFetchNoticeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNoticeRequest*) buildPartial {
  TXPBFetchNoticeRequest* returnMe = resultFetchNoticeRequest;
  self.resultFetchNoticeRequest = nil;
  return returnMe;
}
- (TXPBFetchNoticeRequestBuilder*) mergeFrom:(TXPBFetchNoticeRequest*) other {
  if (other == [TXPBFetchNoticeRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasIsInbox) {
    [self setIsInbox:other.isInbox];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setIsInbox:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchNoticeRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchNoticeRequest.maxId;
}
- (TXPBFetchNoticeRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchNoticeRequest.hasMaxId = YES;
  resultFetchNoticeRequest.maxId = value;
  return self;
}
- (TXPBFetchNoticeRequestBuilder*) clearMaxId {
  resultFetchNoticeRequest.hasMaxId = NO;
  resultFetchNoticeRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchNoticeRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchNoticeRequest.sinceId;
}
- (TXPBFetchNoticeRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchNoticeRequest.hasSinceId = YES;
  resultFetchNoticeRequest.sinceId = value;
  return self;
}
- (TXPBFetchNoticeRequestBuilder*) clearSinceId {
  resultFetchNoticeRequest.hasSinceId = NO;
  resultFetchNoticeRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasIsInbox {
  return resultFetchNoticeRequest.hasIsInbox;
}
- (BOOL) isInbox {
  return resultFetchNoticeRequest.isInbox;
}
- (TXPBFetchNoticeRequestBuilder*) setIsInbox:(BOOL) value {
  resultFetchNoticeRequest.hasIsInbox = YES;
  resultFetchNoticeRequest.isInbox = value;
  return self;
}
- (TXPBFetchNoticeRequestBuilder*) clearIsInbox {
  resultFetchNoticeRequest.hasIsInbox = NO;
  resultFetchNoticeRequest.isInbox = NO;
  return self;
}
@end

@interface TXPBFetchNoticeResponse ()
@property (strong) NSMutableArray * noticesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchNoticeResponse

@synthesize noticesArray;
@dynamic notices;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchNoticeResponse* defaultTXPBFetchNoticeResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNoticeResponse class]) {
    defaultTXPBFetchNoticeResponseInstance = [[TXPBFetchNoticeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeResponseInstance;
}
- (NSArray *)notices {
  return noticesArray;
}
- (TXPBNotice*)noticesAtIndex:(NSUInteger)index {
  return [noticesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitnotices = YES;
   [self.notices enumerateObjectsUsingBlock:^(TXPBNotice *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitnotices = NO;
      *stop = YES;
    }
  }];
  if (!isInitnotices) return isInitnotices;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.noticesArray enumerateObjectsUsingBlock:^(TXPBNotice *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.noticesArray enumerateObjectsUsingBlock:^(TXPBNotice *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNoticeResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchNoticeResponse*)[[[TXPBFetchNoticeResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchNoticeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeResponse*)[[[TXPBFetchNoticeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNoticeResponse*)[[[TXPBFetchNoticeResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNoticeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeResponse*)[[[TXPBFetchNoticeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNoticeResponse*)[[[TXPBFetchNoticeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeResponse*)[[[TXPBFetchNoticeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeResponseBuilder*) builder {
  return [[TXPBFetchNoticeResponseBuilder alloc] init];
}
+ (TXPBFetchNoticeResponseBuilder*) builderWithPrototype:(TXPBFetchNoticeResponse*) prototype {
  return [[TXPBFetchNoticeResponse builder] mergeFrom:prototype];
}
- (TXPBFetchNoticeResponseBuilder*) builder {
  return [TXPBFetchNoticeResponse builder];
}
- (TXPBFetchNoticeResponseBuilder*) toBuilder {
  return [TXPBFetchNoticeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.noticesArray enumerateObjectsUsingBlock:^(TXPBNotice *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"notices"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBNotice* element in self.noticesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"notices"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNoticeResponse class]]) {
    return NO;
  }
  TXPBFetchNoticeResponse *otherMessage = other;
  return
      [self.noticesArray isEqualToArray:otherMessage.noticesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.noticesArray enumerateObjectsUsingBlock:^(TXPBNotice *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNoticeResponseBuilder()
@property (strong) TXPBFetchNoticeResponse* resultFetchNoticeResponse;
@end

@implementation TXPBFetchNoticeResponseBuilder
@synthesize resultFetchNoticeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNoticeResponse = [[TXPBFetchNoticeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNoticeResponse;
}
- (TXPBFetchNoticeResponseBuilder*) clear {
  self.resultFetchNoticeResponse = [[TXPBFetchNoticeResponse alloc] init];
  return self;
}
- (TXPBFetchNoticeResponseBuilder*) clone {
  return [TXPBFetchNoticeResponse builderWithPrototype:resultFetchNoticeResponse];
}
- (TXPBFetchNoticeResponse*) defaultInstance {
  return [TXPBFetchNoticeResponse defaultInstance];
}
- (TXPBFetchNoticeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNoticeResponse*) buildPartial {
  TXPBFetchNoticeResponse* returnMe = resultFetchNoticeResponse;
  self.resultFetchNoticeResponse = nil;
  return returnMe;
}
- (TXPBFetchNoticeResponseBuilder*) mergeFrom:(TXPBFetchNoticeResponse*) other {
  if (other == [TXPBFetchNoticeResponse defaultInstance]) {
    return self;
  }
  if (other.noticesArray.count > 0) {
    if (resultFetchNoticeResponse.noticesArray == nil) {
      resultFetchNoticeResponse.noticesArray = [[NSMutableArray alloc] initWithArray:other.noticesArray];
    } else {
      [resultFetchNoticeResponse.noticesArray addObjectsFromArray:other.noticesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBNoticeBuilder* subBuilder = [TXPBNotice builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNotices:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)notices {
  return resultFetchNoticeResponse.noticesArray;
}
- (TXPBNotice*)noticesAtIndex:(NSUInteger)index {
  return [resultFetchNoticeResponse noticesAtIndex:index];
}
- (TXPBFetchNoticeResponseBuilder *)addNotices:(TXPBNotice*)value {
  if (resultFetchNoticeResponse.noticesArray == nil) {
    resultFetchNoticeResponse.noticesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchNoticeResponse.noticesArray addObject:value];
  return self;
}
- (TXPBFetchNoticeResponseBuilder *)setNoticesArray:(NSArray *)array {
  resultFetchNoticeResponse.noticesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchNoticeResponseBuilder *)clearNotices {
  resultFetchNoticeResponse.noticesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchNoticeResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchNoticeResponse.hasMore;
}
- (TXPBFetchNoticeResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchNoticeResponse.hasHasMore = YES;
  resultFetchNoticeResponse.hasMore = value;
  return self;
}
- (TXPBFetchNoticeResponseBuilder*) clearHasMore {
  resultFetchNoticeResponse.hasHasMore = NO;
  resultFetchNoticeResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchNoticeDepartmentsRequest ()
@property SInt64 noticeId;
@end

@implementation TXPBFetchNoticeDepartmentsRequest

- (BOOL) hasNoticeId {
  return !!hasNoticeId_;
}
- (void) setHasNoticeId:(BOOL) _value_ {
  hasNoticeId_ = !!_value_;
}
@synthesize noticeId;
- (instancetype) init {
  if ((self = [super init])) {
    self.noticeId = 0L;
  }
  return self;
}
static TXPBFetchNoticeDepartmentsRequest* defaultTXPBFetchNoticeDepartmentsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNoticeDepartmentsRequest class]) {
    defaultTXPBFetchNoticeDepartmentsRequestInstance = [[TXPBFetchNoticeDepartmentsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeDepartmentsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeDepartmentsRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNoticeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNoticeId) {
    [output writeInt64:1 value:self.noticeId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNoticeId) {
    size_ += computeInt64Size(1, self.noticeId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNoticeDepartmentsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchNoticeDepartmentsRequest*)[[[TXPBFetchNoticeDepartmentsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchNoticeDepartmentsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeDepartmentsRequest*)[[[TXPBFetchNoticeDepartmentsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeDepartmentsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNoticeDepartmentsRequest*)[[[TXPBFetchNoticeDepartmentsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNoticeDepartmentsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeDepartmentsRequest*)[[[TXPBFetchNoticeDepartmentsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeDepartmentsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNoticeDepartmentsRequest*)[[[TXPBFetchNoticeDepartmentsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNoticeDepartmentsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeDepartmentsRequest*)[[[TXPBFetchNoticeDepartmentsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeDepartmentsRequestBuilder*) builder {
  return [[TXPBFetchNoticeDepartmentsRequestBuilder alloc] init];
}
+ (TXPBFetchNoticeDepartmentsRequestBuilder*) builderWithPrototype:(TXPBFetchNoticeDepartmentsRequest*) prototype {
  return [[TXPBFetchNoticeDepartmentsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) builder {
  return [TXPBFetchNoticeDepartmentsRequest builder];
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) toBuilder {
  return [TXPBFetchNoticeDepartmentsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNoticeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"noticeId", [NSNumber numberWithLongLong:self.noticeId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNoticeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.noticeId] forKey: @"noticeId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNoticeDepartmentsRequest class]]) {
    return NO;
  }
  TXPBFetchNoticeDepartmentsRequest *otherMessage = other;
  return
      self.hasNoticeId == otherMessage.hasNoticeId &&
      (!self.hasNoticeId || self.noticeId == otherMessage.noticeId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNoticeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.noticeId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNoticeDepartmentsRequestBuilder()
@property (strong) TXPBFetchNoticeDepartmentsRequest* resultFetchNoticeDepartmentsRequest;
@end

@implementation TXPBFetchNoticeDepartmentsRequestBuilder
@synthesize resultFetchNoticeDepartmentsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNoticeDepartmentsRequest = [[TXPBFetchNoticeDepartmentsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNoticeDepartmentsRequest;
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) clear {
  self.resultFetchNoticeDepartmentsRequest = [[TXPBFetchNoticeDepartmentsRequest alloc] init];
  return self;
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) clone {
  return [TXPBFetchNoticeDepartmentsRequest builderWithPrototype:resultFetchNoticeDepartmentsRequest];
}
- (TXPBFetchNoticeDepartmentsRequest*) defaultInstance {
  return [TXPBFetchNoticeDepartmentsRequest defaultInstance];
}
- (TXPBFetchNoticeDepartmentsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNoticeDepartmentsRequest*) buildPartial {
  TXPBFetchNoticeDepartmentsRequest* returnMe = resultFetchNoticeDepartmentsRequest;
  self.resultFetchNoticeDepartmentsRequest = nil;
  return returnMe;
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) mergeFrom:(TXPBFetchNoticeDepartmentsRequest*) other {
  if (other == [TXPBFetchNoticeDepartmentsRequest defaultInstance]) {
    return self;
  }
  if (other.hasNoticeId) {
    [self setNoticeId:other.noticeId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNoticeId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasNoticeId {
  return resultFetchNoticeDepartmentsRequest.hasNoticeId;
}
- (SInt64) noticeId {
  return resultFetchNoticeDepartmentsRequest.noticeId;
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) setNoticeId:(SInt64) value {
  resultFetchNoticeDepartmentsRequest.hasNoticeId = YES;
  resultFetchNoticeDepartmentsRequest.noticeId = value;
  return self;
}
- (TXPBFetchNoticeDepartmentsRequestBuilder*) clearNoticeId {
  resultFetchNoticeDepartmentsRequest.hasNoticeId = NO;
  resultFetchNoticeDepartmentsRequest.noticeId = 0L;
  return self;
}
@end

@interface TXPBFetchNoticeDepartmentsResponse ()
@property (strong) NSMutableArray * noticeDepartmentsArray;
@end

@implementation TXPBFetchNoticeDepartmentsResponse

@synthesize noticeDepartmentsArray;
@dynamic noticeDepartments;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchNoticeDepartmentsResponse* defaultTXPBFetchNoticeDepartmentsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNoticeDepartmentsResponse class]) {
    defaultTXPBFetchNoticeDepartmentsResponseInstance = [[TXPBFetchNoticeDepartmentsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeDepartmentsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeDepartmentsResponseInstance;
}
- (NSArray *)noticeDepartments {
  return noticeDepartmentsArray;
}
- (TXPBNoticeDepartment*)noticeDepartmentsAtIndex:(NSUInteger)index {
  return [noticeDepartmentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitnoticeDepartments = YES;
   [self.noticeDepartments enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitnoticeDepartments = NO;
      *stop = YES;
    }
  }];
  if (!isInitnoticeDepartments) return isInitnoticeDepartments;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNoticeDepartmentsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchNoticeDepartmentsResponse*)[[[TXPBFetchNoticeDepartmentsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchNoticeDepartmentsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeDepartmentsResponse*)[[[TXPBFetchNoticeDepartmentsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeDepartmentsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNoticeDepartmentsResponse*)[[[TXPBFetchNoticeDepartmentsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNoticeDepartmentsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeDepartmentsResponse*)[[[TXPBFetchNoticeDepartmentsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeDepartmentsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNoticeDepartmentsResponse*)[[[TXPBFetchNoticeDepartmentsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNoticeDepartmentsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeDepartmentsResponse*)[[[TXPBFetchNoticeDepartmentsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeDepartmentsResponseBuilder*) builder {
  return [[TXPBFetchNoticeDepartmentsResponseBuilder alloc] init];
}
+ (TXPBFetchNoticeDepartmentsResponseBuilder*) builderWithPrototype:(TXPBFetchNoticeDepartmentsResponse*) prototype {
  return [[TXPBFetchNoticeDepartmentsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchNoticeDepartmentsResponseBuilder*) builder {
  return [TXPBFetchNoticeDepartmentsResponse builder];
}
- (TXPBFetchNoticeDepartmentsResponseBuilder*) toBuilder {
  return [TXPBFetchNoticeDepartmentsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"noticeDepartments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBNoticeDepartment* element in self.noticeDepartmentsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"noticeDepartments"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNoticeDepartmentsResponse class]]) {
    return NO;
  }
  TXPBFetchNoticeDepartmentsResponse *otherMessage = other;
  return
      [self.noticeDepartmentsArray isEqualToArray:otherMessage.noticeDepartmentsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.noticeDepartmentsArray enumerateObjectsUsingBlock:^(TXPBNoticeDepartment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNoticeDepartmentsResponseBuilder()
@property (strong) TXPBFetchNoticeDepartmentsResponse* resultFetchNoticeDepartmentsResponse;
@end

@implementation TXPBFetchNoticeDepartmentsResponseBuilder
@synthesize resultFetchNoticeDepartmentsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNoticeDepartmentsResponse = [[TXPBFetchNoticeDepartmentsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNoticeDepartmentsResponse;
}
- (TXPBFetchNoticeDepartmentsResponseBuilder*) clear {
  self.resultFetchNoticeDepartmentsResponse = [[TXPBFetchNoticeDepartmentsResponse alloc] init];
  return self;
}
- (TXPBFetchNoticeDepartmentsResponseBuilder*) clone {
  return [TXPBFetchNoticeDepartmentsResponse builderWithPrototype:resultFetchNoticeDepartmentsResponse];
}
- (TXPBFetchNoticeDepartmentsResponse*) defaultInstance {
  return [TXPBFetchNoticeDepartmentsResponse defaultInstance];
}
- (TXPBFetchNoticeDepartmentsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNoticeDepartmentsResponse*) buildPartial {
  TXPBFetchNoticeDepartmentsResponse* returnMe = resultFetchNoticeDepartmentsResponse;
  self.resultFetchNoticeDepartmentsResponse = nil;
  return returnMe;
}
- (TXPBFetchNoticeDepartmentsResponseBuilder*) mergeFrom:(TXPBFetchNoticeDepartmentsResponse*) other {
  if (other == [TXPBFetchNoticeDepartmentsResponse defaultInstance]) {
    return self;
  }
  if (other.noticeDepartmentsArray.count > 0) {
    if (resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray == nil) {
      resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray = [[NSMutableArray alloc] initWithArray:other.noticeDepartmentsArray];
    } else {
      [resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray addObjectsFromArray:other.noticeDepartmentsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNoticeDepartmentsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNoticeDepartmentsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBNoticeDepartmentBuilder* subBuilder = [TXPBNoticeDepartment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNoticeDepartments:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)noticeDepartments {
  return resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray;
}
- (TXPBNoticeDepartment*)noticeDepartmentsAtIndex:(NSUInteger)index {
  return [resultFetchNoticeDepartmentsResponse noticeDepartmentsAtIndex:index];
}
- (TXPBFetchNoticeDepartmentsResponseBuilder *)addNoticeDepartments:(TXPBNoticeDepartment*)value {
  if (resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray == nil) {
    resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray addObject:value];
  return self;
}
- (TXPBFetchNoticeDepartmentsResponseBuilder *)setNoticeDepartmentsArray:(NSArray *)array {
  resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchNoticeDepartmentsResponseBuilder *)clearNoticeDepartments {
  resultFetchNoticeDepartmentsResponse.noticeDepartmentsArray = nil;
  return self;
}
@end

@interface TXPBFetchNoticeMembersRequest ()
@property SInt64 noticeId;
@property SInt64 departmentId;
@end

@implementation TXPBFetchNoticeMembersRequest

- (BOOL) hasNoticeId {
  return !!hasNoticeId_;
}
- (void) setHasNoticeId:(BOOL) _value_ {
  hasNoticeId_ = !!_value_;
}
@synthesize noticeId;
- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.noticeId = 0L;
    self.departmentId = 0L;
  }
  return self;
}
static TXPBFetchNoticeMembersRequest* defaultTXPBFetchNoticeMembersRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNoticeMembersRequest class]) {
    defaultTXPBFetchNoticeMembersRequestInstance = [[TXPBFetchNoticeMembersRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeMembersRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeMembersRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNoticeId) {
    return NO;
  }
  if (!self.hasDepartmentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNoticeId) {
    [output writeInt64:1 value:self.noticeId];
  }
  if (self.hasDepartmentId) {
    [output writeInt64:2 value:self.departmentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNoticeId) {
    size_ += computeInt64Size(1, self.noticeId);
  }
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(2, self.departmentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNoticeMembersRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchNoticeMembersRequest*)[[[TXPBFetchNoticeMembersRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchNoticeMembersRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeMembersRequest*)[[[TXPBFetchNoticeMembersRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeMembersRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNoticeMembersRequest*)[[[TXPBFetchNoticeMembersRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNoticeMembersRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeMembersRequest*)[[[TXPBFetchNoticeMembersRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeMembersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNoticeMembersRequest*)[[[TXPBFetchNoticeMembersRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNoticeMembersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeMembersRequest*)[[[TXPBFetchNoticeMembersRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeMembersRequestBuilder*) builder {
  return [[TXPBFetchNoticeMembersRequestBuilder alloc] init];
}
+ (TXPBFetchNoticeMembersRequestBuilder*) builderWithPrototype:(TXPBFetchNoticeMembersRequest*) prototype {
  return [[TXPBFetchNoticeMembersRequest builder] mergeFrom:prototype];
}
- (TXPBFetchNoticeMembersRequestBuilder*) builder {
  return [TXPBFetchNoticeMembersRequest builder];
}
- (TXPBFetchNoticeMembersRequestBuilder*) toBuilder {
  return [TXPBFetchNoticeMembersRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNoticeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"noticeId", [NSNumber numberWithLongLong:self.noticeId]];
  }
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNoticeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.noticeId] forKey: @"noticeId"];
  }
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNoticeMembersRequest class]]) {
    return NO;
  }
  TXPBFetchNoticeMembersRequest *otherMessage = other;
  return
      self.hasNoticeId == otherMessage.hasNoticeId &&
      (!self.hasNoticeId || self.noticeId == otherMessage.noticeId) &&
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNoticeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.noticeId] hash];
  }
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNoticeMembersRequestBuilder()
@property (strong) TXPBFetchNoticeMembersRequest* resultFetchNoticeMembersRequest;
@end

@implementation TXPBFetchNoticeMembersRequestBuilder
@synthesize resultFetchNoticeMembersRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNoticeMembersRequest = [[TXPBFetchNoticeMembersRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNoticeMembersRequest;
}
- (TXPBFetchNoticeMembersRequestBuilder*) clear {
  self.resultFetchNoticeMembersRequest = [[TXPBFetchNoticeMembersRequest alloc] init];
  return self;
}
- (TXPBFetchNoticeMembersRequestBuilder*) clone {
  return [TXPBFetchNoticeMembersRequest builderWithPrototype:resultFetchNoticeMembersRequest];
}
- (TXPBFetchNoticeMembersRequest*) defaultInstance {
  return [TXPBFetchNoticeMembersRequest defaultInstance];
}
- (TXPBFetchNoticeMembersRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNoticeMembersRequest*) buildPartial {
  TXPBFetchNoticeMembersRequest* returnMe = resultFetchNoticeMembersRequest;
  self.resultFetchNoticeMembersRequest = nil;
  return returnMe;
}
- (TXPBFetchNoticeMembersRequestBuilder*) mergeFrom:(TXPBFetchNoticeMembersRequest*) other {
  if (other == [TXPBFetchNoticeMembersRequest defaultInstance]) {
    return self;
  }
  if (other.hasNoticeId) {
    [self setNoticeId:other.noticeId];
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNoticeMembersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNoticeMembersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNoticeId:[input readInt64]];
        break;
      }
      case 16: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasNoticeId {
  return resultFetchNoticeMembersRequest.hasNoticeId;
}
- (SInt64) noticeId {
  return resultFetchNoticeMembersRequest.noticeId;
}
- (TXPBFetchNoticeMembersRequestBuilder*) setNoticeId:(SInt64) value {
  resultFetchNoticeMembersRequest.hasNoticeId = YES;
  resultFetchNoticeMembersRequest.noticeId = value;
  return self;
}
- (TXPBFetchNoticeMembersRequestBuilder*) clearNoticeId {
  resultFetchNoticeMembersRequest.hasNoticeId = NO;
  resultFetchNoticeMembersRequest.noticeId = 0L;
  return self;
}
- (BOOL) hasDepartmentId {
  return resultFetchNoticeMembersRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultFetchNoticeMembersRequest.departmentId;
}
- (TXPBFetchNoticeMembersRequestBuilder*) setDepartmentId:(SInt64) value {
  resultFetchNoticeMembersRequest.hasDepartmentId = YES;
  resultFetchNoticeMembersRequest.departmentId = value;
  return self;
}
- (TXPBFetchNoticeMembersRequestBuilder*) clearDepartmentId {
  resultFetchNoticeMembersRequest.hasDepartmentId = NO;
  resultFetchNoticeMembersRequest.departmentId = 0L;
  return self;
}
@end

@interface TXPBFetchNoticeMembersResponse ()
@property (strong) NSMutableArray * noticeMembersArray;
@end

@implementation TXPBFetchNoticeMembersResponse

@synthesize noticeMembersArray;
@dynamic noticeMembers;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchNoticeMembersResponse* defaultTXPBFetchNoticeMembersResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNoticeMembersResponse class]) {
    defaultTXPBFetchNoticeMembersResponseInstance = [[TXPBFetchNoticeMembersResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeMembersResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNoticeMembersResponseInstance;
}
- (NSArray *)noticeMembers {
  return noticeMembersArray;
}
- (TXPBNoticeMember*)noticeMembersAtIndex:(NSUInteger)index {
  return [noticeMembersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitnoticeMembers = YES;
   [self.noticeMembers enumerateObjectsUsingBlock:^(TXPBNoticeMember *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitnoticeMembers = NO;
      *stop = YES;
    }
  }];
  if (!isInitnoticeMembers) return isInitnoticeMembers;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.noticeMembersArray enumerateObjectsUsingBlock:^(TXPBNoticeMember *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.noticeMembersArray enumerateObjectsUsingBlock:^(TXPBNoticeMember *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNoticeMembersResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchNoticeMembersResponse*)[[[TXPBFetchNoticeMembersResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchNoticeMembersResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeMembersResponse*)[[[TXPBFetchNoticeMembersResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeMembersResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNoticeMembersResponse*)[[[TXPBFetchNoticeMembersResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNoticeMembersResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeMembersResponse*)[[[TXPBFetchNoticeMembersResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeMembersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNoticeMembersResponse*)[[[TXPBFetchNoticeMembersResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNoticeMembersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNoticeMembersResponse*)[[[TXPBFetchNoticeMembersResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNoticeMembersResponseBuilder*) builder {
  return [[TXPBFetchNoticeMembersResponseBuilder alloc] init];
}
+ (TXPBFetchNoticeMembersResponseBuilder*) builderWithPrototype:(TXPBFetchNoticeMembersResponse*) prototype {
  return [[TXPBFetchNoticeMembersResponse builder] mergeFrom:prototype];
}
- (TXPBFetchNoticeMembersResponseBuilder*) builder {
  return [TXPBFetchNoticeMembersResponse builder];
}
- (TXPBFetchNoticeMembersResponseBuilder*) toBuilder {
  return [TXPBFetchNoticeMembersResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.noticeMembersArray enumerateObjectsUsingBlock:^(TXPBNoticeMember *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"noticeMembers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBNoticeMember* element in self.noticeMembersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"noticeMembers"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNoticeMembersResponse class]]) {
    return NO;
  }
  TXPBFetchNoticeMembersResponse *otherMessage = other;
  return
      [self.noticeMembersArray isEqualToArray:otherMessage.noticeMembersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.noticeMembersArray enumerateObjectsUsingBlock:^(TXPBNoticeMember *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNoticeMembersResponseBuilder()
@property (strong) TXPBFetchNoticeMembersResponse* resultFetchNoticeMembersResponse;
@end

@implementation TXPBFetchNoticeMembersResponseBuilder
@synthesize resultFetchNoticeMembersResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNoticeMembersResponse = [[TXPBFetchNoticeMembersResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNoticeMembersResponse;
}
- (TXPBFetchNoticeMembersResponseBuilder*) clear {
  self.resultFetchNoticeMembersResponse = [[TXPBFetchNoticeMembersResponse alloc] init];
  return self;
}
- (TXPBFetchNoticeMembersResponseBuilder*) clone {
  return [TXPBFetchNoticeMembersResponse builderWithPrototype:resultFetchNoticeMembersResponse];
}
- (TXPBFetchNoticeMembersResponse*) defaultInstance {
  return [TXPBFetchNoticeMembersResponse defaultInstance];
}
- (TXPBFetchNoticeMembersResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNoticeMembersResponse*) buildPartial {
  TXPBFetchNoticeMembersResponse* returnMe = resultFetchNoticeMembersResponse;
  self.resultFetchNoticeMembersResponse = nil;
  return returnMe;
}
- (TXPBFetchNoticeMembersResponseBuilder*) mergeFrom:(TXPBFetchNoticeMembersResponse*) other {
  if (other == [TXPBFetchNoticeMembersResponse defaultInstance]) {
    return self;
  }
  if (other.noticeMembersArray.count > 0) {
    if (resultFetchNoticeMembersResponse.noticeMembersArray == nil) {
      resultFetchNoticeMembersResponse.noticeMembersArray = [[NSMutableArray alloc] initWithArray:other.noticeMembersArray];
    } else {
      [resultFetchNoticeMembersResponse.noticeMembersArray addObjectsFromArray:other.noticeMembersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNoticeMembersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNoticeMembersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBNoticeMemberBuilder* subBuilder = [TXPBNoticeMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNoticeMembers:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)noticeMembers {
  return resultFetchNoticeMembersResponse.noticeMembersArray;
}
- (TXPBNoticeMember*)noticeMembersAtIndex:(NSUInteger)index {
  return [resultFetchNoticeMembersResponse noticeMembersAtIndex:index];
}
- (TXPBFetchNoticeMembersResponseBuilder *)addNoticeMembers:(TXPBNoticeMember*)value {
  if (resultFetchNoticeMembersResponse.noticeMembersArray == nil) {
    resultFetchNoticeMembersResponse.noticeMembersArray = [[NSMutableArray alloc]init];
  }
  [resultFetchNoticeMembersResponse.noticeMembersArray addObject:value];
  return self;
}
- (TXPBFetchNoticeMembersResponseBuilder *)setNoticeMembersArray:(NSArray *)array {
  resultFetchNoticeMembersResponse.noticeMembersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchNoticeMembersResponseBuilder *)clearNoticeMembers {
  resultFetchNoticeMembersResponse.noticeMembersArray = nil;
  return self;
}
@end

@interface TXPBReadNoticeRequest ()
@property SInt64 noticeId;
@end

@implementation TXPBReadNoticeRequest

- (BOOL) hasNoticeId {
  return !!hasNoticeId_;
}
- (void) setHasNoticeId:(BOOL) _value_ {
  hasNoticeId_ = !!_value_;
}
@synthesize noticeId;
- (instancetype) init {
  if ((self = [super init])) {
    self.noticeId = 0L;
  }
  return self;
}
static TXPBReadNoticeRequest* defaultTXPBReadNoticeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBReadNoticeRequest class]) {
    defaultTXPBReadNoticeRequestInstance = [[TXPBReadNoticeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReadNoticeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReadNoticeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasNoticeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasNoticeId) {
    [output writeInt64:1 value:self.noticeId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasNoticeId) {
    size_ += computeInt64Size(1, self.noticeId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReadNoticeRequest*) parseFromData:(NSData*) data {
  return (TXPBReadNoticeRequest*)[[[TXPBReadNoticeRequest builder] mergeFromData:data] build];
}
+ (TXPBReadNoticeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadNoticeRequest*)[[[TXPBReadNoticeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadNoticeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReadNoticeRequest*)[[[TXPBReadNoticeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBReadNoticeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadNoticeRequest*)[[[TXPBReadNoticeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReadNoticeRequest*)[[[TXPBReadNoticeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReadNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadNoticeRequest*)[[[TXPBReadNoticeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadNoticeRequestBuilder*) builder {
  return [[TXPBReadNoticeRequestBuilder alloc] init];
}
+ (TXPBReadNoticeRequestBuilder*) builderWithPrototype:(TXPBReadNoticeRequest*) prototype {
  return [[TXPBReadNoticeRequest builder] mergeFrom:prototype];
}
- (TXPBReadNoticeRequestBuilder*) builder {
  return [TXPBReadNoticeRequest builder];
}
- (TXPBReadNoticeRequestBuilder*) toBuilder {
  return [TXPBReadNoticeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasNoticeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"noticeId", [NSNumber numberWithLongLong:self.noticeId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasNoticeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.noticeId] forKey: @"noticeId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReadNoticeRequest class]]) {
    return NO;
  }
  TXPBReadNoticeRequest *otherMessage = other;
  return
      self.hasNoticeId == otherMessage.hasNoticeId &&
      (!self.hasNoticeId || self.noticeId == otherMessage.noticeId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasNoticeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.noticeId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReadNoticeRequestBuilder()
@property (strong) TXPBReadNoticeRequest* resultReadNoticeRequest;
@end

@implementation TXPBReadNoticeRequestBuilder
@synthesize resultReadNoticeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadNoticeRequest = [[TXPBReadNoticeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadNoticeRequest;
}
- (TXPBReadNoticeRequestBuilder*) clear {
  self.resultReadNoticeRequest = [[TXPBReadNoticeRequest alloc] init];
  return self;
}
- (TXPBReadNoticeRequestBuilder*) clone {
  return [TXPBReadNoticeRequest builderWithPrototype:resultReadNoticeRequest];
}
- (TXPBReadNoticeRequest*) defaultInstance {
  return [TXPBReadNoticeRequest defaultInstance];
}
- (TXPBReadNoticeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReadNoticeRequest*) buildPartial {
  TXPBReadNoticeRequest* returnMe = resultReadNoticeRequest;
  self.resultReadNoticeRequest = nil;
  return returnMe;
}
- (TXPBReadNoticeRequestBuilder*) mergeFrom:(TXPBReadNoticeRequest*) other {
  if (other == [TXPBReadNoticeRequest defaultInstance]) {
    return self;
  }
  if (other.hasNoticeId) {
    [self setNoticeId:other.noticeId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReadNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReadNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setNoticeId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasNoticeId {
  return resultReadNoticeRequest.hasNoticeId;
}
- (SInt64) noticeId {
  return resultReadNoticeRequest.noticeId;
}
- (TXPBReadNoticeRequestBuilder*) setNoticeId:(SInt64) value {
  resultReadNoticeRequest.hasNoticeId = YES;
  resultReadNoticeRequest.noticeId = value;
  return self;
}
- (TXPBReadNoticeRequestBuilder*) clearNoticeId {
  resultReadNoticeRequest.hasNoticeId = NO;
  resultReadNoticeRequest.noticeId = 0L;
  return self;
}
@end

@interface TXPBReadNoticeResponse ()
@end

@implementation TXPBReadNoticeResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBReadNoticeResponse* defaultTXPBReadNoticeResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBReadNoticeResponse class]) {
    defaultTXPBReadNoticeResponseInstance = [[TXPBReadNoticeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReadNoticeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReadNoticeResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReadNoticeResponse*) parseFromData:(NSData*) data {
  return (TXPBReadNoticeResponse*)[[[TXPBReadNoticeResponse builder] mergeFromData:data] build];
}
+ (TXPBReadNoticeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadNoticeResponse*)[[[TXPBReadNoticeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadNoticeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReadNoticeResponse*)[[[TXPBReadNoticeResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBReadNoticeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadNoticeResponse*)[[[TXPBReadNoticeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReadNoticeResponse*)[[[TXPBReadNoticeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReadNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadNoticeResponse*)[[[TXPBReadNoticeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadNoticeResponseBuilder*) builder {
  return [[TXPBReadNoticeResponseBuilder alloc] init];
}
+ (TXPBReadNoticeResponseBuilder*) builderWithPrototype:(TXPBReadNoticeResponse*) prototype {
  return [[TXPBReadNoticeResponse builder] mergeFrom:prototype];
}
- (TXPBReadNoticeResponseBuilder*) builder {
  return [TXPBReadNoticeResponse builder];
}
- (TXPBReadNoticeResponseBuilder*) toBuilder {
  return [TXPBReadNoticeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReadNoticeResponse class]]) {
    return NO;
  }
  TXPBReadNoticeResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReadNoticeResponseBuilder()
@property (strong) TXPBReadNoticeResponse* resultReadNoticeResponse;
@end

@implementation TXPBReadNoticeResponseBuilder
@synthesize resultReadNoticeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadNoticeResponse = [[TXPBReadNoticeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadNoticeResponse;
}
- (TXPBReadNoticeResponseBuilder*) clear {
  self.resultReadNoticeResponse = [[TXPBReadNoticeResponse alloc] init];
  return self;
}
- (TXPBReadNoticeResponseBuilder*) clone {
  return [TXPBReadNoticeResponse builderWithPrototype:resultReadNoticeResponse];
}
- (TXPBReadNoticeResponse*) defaultInstance {
  return [TXPBReadNoticeResponse defaultInstance];
}
- (TXPBReadNoticeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReadNoticeResponse*) buildPartial {
  TXPBReadNoticeResponse* returnMe = resultReadNoticeResponse;
  self.resultReadNoticeResponse = nil;
  return returnMe;
}
- (TXPBReadNoticeResponseBuilder*) mergeFrom:(TXPBReadNoticeResponse*) other {
  if (other == [TXPBReadNoticeResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReadNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReadNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetUserUnreadNoticeCntRequest ()
@end

@implementation TXPBGetUserUnreadNoticeCntRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetUserUnreadNoticeCntRequest* defaultTXPBGetUserUnreadNoticeCntRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetUserUnreadNoticeCntRequest class]) {
    defaultTXPBGetUserUnreadNoticeCntRequestInstance = [[TXPBGetUserUnreadNoticeCntRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetUserUnreadNoticeCntRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetUserUnreadNoticeCntRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetUserUnreadNoticeCntRequest*) parseFromData:(NSData*) data {
  return (TXPBGetUserUnreadNoticeCntRequest*)[[[TXPBGetUserUnreadNoticeCntRequest builder] mergeFromData:data] build];
}
+ (TXPBGetUserUnreadNoticeCntRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUserUnreadNoticeCntRequest*)[[[TXPBGetUserUnreadNoticeCntRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUserUnreadNoticeCntRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetUserUnreadNoticeCntRequest*)[[[TXPBGetUserUnreadNoticeCntRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBGetUserUnreadNoticeCntRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUserUnreadNoticeCntRequest*)[[[TXPBGetUserUnreadNoticeCntRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUserUnreadNoticeCntRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetUserUnreadNoticeCntRequest*)[[[TXPBGetUserUnreadNoticeCntRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetUserUnreadNoticeCntRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUserUnreadNoticeCntRequest*)[[[TXPBGetUserUnreadNoticeCntRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUserUnreadNoticeCntRequestBuilder*) builder {
  return [[TXPBGetUserUnreadNoticeCntRequestBuilder alloc] init];
}
+ (TXPBGetUserUnreadNoticeCntRequestBuilder*) builderWithPrototype:(TXPBGetUserUnreadNoticeCntRequest*) prototype {
  return [[TXPBGetUserUnreadNoticeCntRequest builder] mergeFrom:prototype];
}
- (TXPBGetUserUnreadNoticeCntRequestBuilder*) builder {
  return [TXPBGetUserUnreadNoticeCntRequest builder];
}
- (TXPBGetUserUnreadNoticeCntRequestBuilder*) toBuilder {
  return [TXPBGetUserUnreadNoticeCntRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetUserUnreadNoticeCntRequest class]]) {
    return NO;
  }
  TXPBGetUserUnreadNoticeCntRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetUserUnreadNoticeCntRequestBuilder()
@property (strong) TXPBGetUserUnreadNoticeCntRequest* resultGetUserUnreadNoticeCntRequest;
@end

@implementation TXPBGetUserUnreadNoticeCntRequestBuilder
@synthesize resultGetUserUnreadNoticeCntRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetUserUnreadNoticeCntRequest = [[TXPBGetUserUnreadNoticeCntRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetUserUnreadNoticeCntRequest;
}
- (TXPBGetUserUnreadNoticeCntRequestBuilder*) clear {
  self.resultGetUserUnreadNoticeCntRequest = [[TXPBGetUserUnreadNoticeCntRequest alloc] init];
  return self;
}
- (TXPBGetUserUnreadNoticeCntRequestBuilder*) clone {
  return [TXPBGetUserUnreadNoticeCntRequest builderWithPrototype:resultGetUserUnreadNoticeCntRequest];
}
- (TXPBGetUserUnreadNoticeCntRequest*) defaultInstance {
  return [TXPBGetUserUnreadNoticeCntRequest defaultInstance];
}
- (TXPBGetUserUnreadNoticeCntRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetUserUnreadNoticeCntRequest*) buildPartial {
  TXPBGetUserUnreadNoticeCntRequest* returnMe = resultGetUserUnreadNoticeCntRequest;
  self.resultGetUserUnreadNoticeCntRequest = nil;
  return returnMe;
}
- (TXPBGetUserUnreadNoticeCntRequestBuilder*) mergeFrom:(TXPBGetUserUnreadNoticeCntRequest*) other {
  if (other == [TXPBGetUserUnreadNoticeCntRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetUserUnreadNoticeCntRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetUserUnreadNoticeCntRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetUserUnreadNoticeCntResponse ()
@property SInt32 unreadNoticeCnt;
@end

@implementation TXPBGetUserUnreadNoticeCntResponse

- (BOOL) hasUnreadNoticeCnt {
  return !!hasUnreadNoticeCnt_;
}
- (void) setHasUnreadNoticeCnt:(BOOL) _value_ {
  hasUnreadNoticeCnt_ = !!_value_;
}
@synthesize unreadNoticeCnt;
- (instancetype) init {
  if ((self = [super init])) {
    self.unreadNoticeCnt = 0;
  }
  return self;
}
static TXPBGetUserUnreadNoticeCntResponse* defaultTXPBGetUserUnreadNoticeCntResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetUserUnreadNoticeCntResponse class]) {
    defaultTXPBGetUserUnreadNoticeCntResponseInstance = [[TXPBGetUserUnreadNoticeCntResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetUserUnreadNoticeCntResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetUserUnreadNoticeCntResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUnreadNoticeCnt) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUnreadNoticeCnt) {
    [output writeInt32:1 value:self.unreadNoticeCnt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUnreadNoticeCnt) {
    size_ += computeInt32Size(1, self.unreadNoticeCnt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetUserUnreadNoticeCntResponse*) parseFromData:(NSData*) data {
  return (TXPBGetUserUnreadNoticeCntResponse*)[[[TXPBGetUserUnreadNoticeCntResponse builder] mergeFromData:data] build];
}
+ (TXPBGetUserUnreadNoticeCntResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUserUnreadNoticeCntResponse*)[[[TXPBGetUserUnreadNoticeCntResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUserUnreadNoticeCntResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetUserUnreadNoticeCntResponse*)[[[TXPBGetUserUnreadNoticeCntResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBGetUserUnreadNoticeCntResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUserUnreadNoticeCntResponse*)[[[TXPBGetUserUnreadNoticeCntResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUserUnreadNoticeCntResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetUserUnreadNoticeCntResponse*)[[[TXPBGetUserUnreadNoticeCntResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetUserUnreadNoticeCntResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUserUnreadNoticeCntResponse*)[[[TXPBGetUserUnreadNoticeCntResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUserUnreadNoticeCntResponseBuilder*) builder {
  return [[TXPBGetUserUnreadNoticeCntResponseBuilder alloc] init];
}
+ (TXPBGetUserUnreadNoticeCntResponseBuilder*) builderWithPrototype:(TXPBGetUserUnreadNoticeCntResponse*) prototype {
  return [[TXPBGetUserUnreadNoticeCntResponse builder] mergeFrom:prototype];
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) builder {
  return [TXPBGetUserUnreadNoticeCntResponse builder];
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) toBuilder {
  return [TXPBGetUserUnreadNoticeCntResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUnreadNoticeCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unreadNoticeCnt", [NSNumber numberWithInteger:self.unreadNoticeCnt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUnreadNoticeCnt) {
    [dictionary setObject: [NSNumber numberWithInteger:self.unreadNoticeCnt] forKey: @"unreadNoticeCnt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetUserUnreadNoticeCntResponse class]]) {
    return NO;
  }
  TXPBGetUserUnreadNoticeCntResponse *otherMessage = other;
  return
      self.hasUnreadNoticeCnt == otherMessage.hasUnreadNoticeCnt &&
      (!self.hasUnreadNoticeCnt || self.unreadNoticeCnt == otherMessage.unreadNoticeCnt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUnreadNoticeCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unreadNoticeCnt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetUserUnreadNoticeCntResponseBuilder()
@property (strong) TXPBGetUserUnreadNoticeCntResponse* resultGetUserUnreadNoticeCntResponse;
@end

@implementation TXPBGetUserUnreadNoticeCntResponseBuilder
@synthesize resultGetUserUnreadNoticeCntResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetUserUnreadNoticeCntResponse = [[TXPBGetUserUnreadNoticeCntResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetUserUnreadNoticeCntResponse;
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) clear {
  self.resultGetUserUnreadNoticeCntResponse = [[TXPBGetUserUnreadNoticeCntResponse alloc] init];
  return self;
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) clone {
  return [TXPBGetUserUnreadNoticeCntResponse builderWithPrototype:resultGetUserUnreadNoticeCntResponse];
}
- (TXPBGetUserUnreadNoticeCntResponse*) defaultInstance {
  return [TXPBGetUserUnreadNoticeCntResponse defaultInstance];
}
- (TXPBGetUserUnreadNoticeCntResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetUserUnreadNoticeCntResponse*) buildPartial {
  TXPBGetUserUnreadNoticeCntResponse* returnMe = resultGetUserUnreadNoticeCntResponse;
  self.resultGetUserUnreadNoticeCntResponse = nil;
  return returnMe;
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) mergeFrom:(TXPBGetUserUnreadNoticeCntResponse*) other {
  if (other == [TXPBGetUserUnreadNoticeCntResponse defaultInstance]) {
    return self;
  }
  if (other.hasUnreadNoticeCnt) {
    [self setUnreadNoticeCnt:other.unreadNoticeCnt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUnreadNoticeCnt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasUnreadNoticeCnt {
  return resultGetUserUnreadNoticeCntResponse.hasUnreadNoticeCnt;
}
- (SInt32) unreadNoticeCnt {
  return resultGetUserUnreadNoticeCntResponse.unreadNoticeCnt;
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) setUnreadNoticeCnt:(SInt32) value {
  resultGetUserUnreadNoticeCntResponse.hasUnreadNoticeCnt = YES;
  resultGetUserUnreadNoticeCntResponse.unreadNoticeCnt = value;
  return self;
}
- (TXPBGetUserUnreadNoticeCntResponseBuilder*) clearUnreadNoticeCnt {
  resultGetUserUnreadNoticeCntResponse.hasUnreadNoticeCnt = NO;
  resultGetUserUnreadNoticeCntResponse.unreadNoticeCnt = 0;
  return self;
}
@end

@interface TXPBBindCardRequest ()
@property (strong) NSString* cardCode;
@property SInt64 userId;
@end

@implementation TXPBBindCardRequest

- (BOOL) hasCardCode {
  return !!hasCardCode_;
}
- (void) setHasCardCode:(BOOL) _value_ {
  hasCardCode_ = !!_value_;
}
@synthesize cardCode;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (instancetype) init {
  if ((self = [super init])) {
    self.cardCode = @"";
    self.userId = 0L;
  }
  return self;
}
static TXPBBindCardRequest* defaultTXPBBindCardRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBBindCardRequest class]) {
    defaultTXPBBindCardRequestInstance = [[TXPBBindCardRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBBindCardRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBBindCardRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCardCode) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCardCode) {
    [output writeString:1 value:self.cardCode];
  }
  if (self.hasUserId) {
    [output writeInt64:2 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCardCode) {
    size_ += computeStringSize(1, self.cardCode);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(2, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBBindCardRequest*) parseFromData:(NSData*) data {
  return (TXPBBindCardRequest*)[[[TXPBBindCardRequest builder] mergeFromData:data] build];
}
+ (TXPBBindCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindCardRequest*)[[[TXPBBindCardRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindCardRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBBindCardRequest*)[[[TXPBBindCardRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBBindCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindCardRequest*)[[[TXPBBindCardRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBBindCardRequest*)[[[TXPBBindCardRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBBindCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindCardRequest*)[[[TXPBBindCardRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindCardRequestBuilder*) builder {
  return [[TXPBBindCardRequestBuilder alloc] init];
}
+ (TXPBBindCardRequestBuilder*) builderWithPrototype:(TXPBBindCardRequest*) prototype {
  return [[TXPBBindCardRequest builder] mergeFrom:prototype];
}
- (TXPBBindCardRequestBuilder*) builder {
  return [TXPBBindCardRequest builder];
}
- (TXPBBindCardRequestBuilder*) toBuilder {
  return [TXPBBindCardRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCardCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardCode", self.cardCode];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCardCode) {
    [dictionary setObject: self.cardCode forKey: @"cardCode"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBBindCardRequest class]]) {
    return NO;
  }
  TXPBBindCardRequest *otherMessage = other;
  return
      self.hasCardCode == otherMessage.hasCardCode &&
      (!self.hasCardCode || [self.cardCode isEqual:otherMessage.cardCode]) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCardCode) {
    hashCode = hashCode * 31 + [self.cardCode hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBBindCardRequestBuilder()
@property (strong) TXPBBindCardRequest* resultBindCardRequest;
@end

@implementation TXPBBindCardRequestBuilder
@synthesize resultBindCardRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBindCardRequest = [[TXPBBindCardRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBindCardRequest;
}
- (TXPBBindCardRequestBuilder*) clear {
  self.resultBindCardRequest = [[TXPBBindCardRequest alloc] init];
  return self;
}
- (TXPBBindCardRequestBuilder*) clone {
  return [TXPBBindCardRequest builderWithPrototype:resultBindCardRequest];
}
- (TXPBBindCardRequest*) defaultInstance {
  return [TXPBBindCardRequest defaultInstance];
}
- (TXPBBindCardRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBBindCardRequest*) buildPartial {
  TXPBBindCardRequest* returnMe = resultBindCardRequest;
  self.resultBindCardRequest = nil;
  return returnMe;
}
- (TXPBBindCardRequestBuilder*) mergeFrom:(TXPBBindCardRequest*) other {
  if (other == [TXPBBindCardRequest defaultInstance]) {
    return self;
  }
  if (other.hasCardCode) {
    [self setCardCode:other.cardCode];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBBindCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBBindCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCardCode:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCardCode {
  return resultBindCardRequest.hasCardCode;
}
- (NSString*) cardCode {
  return resultBindCardRequest.cardCode;
}
- (TXPBBindCardRequestBuilder*) setCardCode:(NSString*) value {
  resultBindCardRequest.hasCardCode = YES;
  resultBindCardRequest.cardCode = value;
  return self;
}
- (TXPBBindCardRequestBuilder*) clearCardCode {
  resultBindCardRequest.hasCardCode = NO;
  resultBindCardRequest.cardCode = @"";
  return self;
}
- (BOOL) hasUserId {
  return resultBindCardRequest.hasUserId;
}
- (SInt64) userId {
  return resultBindCardRequest.userId;
}
- (TXPBBindCardRequestBuilder*) setUserId:(SInt64) value {
  resultBindCardRequest.hasUserId = YES;
  resultBindCardRequest.userId = value;
  return self;
}
- (TXPBBindCardRequestBuilder*) clearUserId {
  resultBindCardRequest.hasUserId = NO;
  resultBindCardRequest.userId = 0L;
  return self;
}
@end

@interface TXPBFetchChildBindCardRequest ()
@property (strong) NSMutableArray * userCardsArray;
@end

@implementation TXPBFetchChildBindCardRequest

@synthesize userCardsArray;
@dynamic userCards;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchChildBindCardRequest* defaultTXPBFetchChildBindCardRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchChildBindCardRequest class]) {
    defaultTXPBFetchChildBindCardRequestInstance = [[TXPBFetchChildBindCardRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchChildBindCardRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchChildBindCardRequestInstance;
}
- (NSArray *)userCards {
  return userCardsArray;
}
- (TXPBUserCard*)userCardsAtIndex:(NSUInteger)index {
  return [userCardsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInituserCards = YES;
   [self.userCards enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserCards = NO;
      *stop = YES;
    }
  }];
  if (!isInituserCards) return isInituserCards;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.userCardsArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.userCardsArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchChildBindCardRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchChildBindCardRequest*)[[[TXPBFetchChildBindCardRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchChildBindCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildBindCardRequest*)[[[TXPBFetchChildBindCardRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildBindCardRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchChildBindCardRequest*)[[[TXPBFetchChildBindCardRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchChildBindCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildBindCardRequest*)[[[TXPBFetchChildBindCardRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildBindCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchChildBindCardRequest*)[[[TXPBFetchChildBindCardRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchChildBindCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildBindCardRequest*)[[[TXPBFetchChildBindCardRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildBindCardRequestBuilder*) builder {
  return [[TXPBFetchChildBindCardRequestBuilder alloc] init];
}
+ (TXPBFetchChildBindCardRequestBuilder*) builderWithPrototype:(TXPBFetchChildBindCardRequest*) prototype {
  return [[TXPBFetchChildBindCardRequest builder] mergeFrom:prototype];
}
- (TXPBFetchChildBindCardRequestBuilder*) builder {
  return [TXPBFetchChildBindCardRequest builder];
}
- (TXPBFetchChildBindCardRequestBuilder*) toBuilder {
  return [TXPBFetchChildBindCardRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.userCardsArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userCards"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBUserCard* element in self.userCardsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"userCards"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchChildBindCardRequest class]]) {
    return NO;
  }
  TXPBFetchChildBindCardRequest *otherMessage = other;
  return
      [self.userCardsArray isEqualToArray:otherMessage.userCardsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.userCardsArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchChildBindCardRequestBuilder()
@property (strong) TXPBFetchChildBindCardRequest* resultFetchChildBindCardRequest;
@end

@implementation TXPBFetchChildBindCardRequestBuilder
@synthesize resultFetchChildBindCardRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchChildBindCardRequest = [[TXPBFetchChildBindCardRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchChildBindCardRequest;
}
- (TXPBFetchChildBindCardRequestBuilder*) clear {
  self.resultFetchChildBindCardRequest = [[TXPBFetchChildBindCardRequest alloc] init];
  return self;
}
- (TXPBFetchChildBindCardRequestBuilder*) clone {
  return [TXPBFetchChildBindCardRequest builderWithPrototype:resultFetchChildBindCardRequest];
}
- (TXPBFetchChildBindCardRequest*) defaultInstance {
  return [TXPBFetchChildBindCardRequest defaultInstance];
}
- (TXPBFetchChildBindCardRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchChildBindCardRequest*) buildPartial {
  TXPBFetchChildBindCardRequest* returnMe = resultFetchChildBindCardRequest;
  self.resultFetchChildBindCardRequest = nil;
  return returnMe;
}
- (TXPBFetchChildBindCardRequestBuilder*) mergeFrom:(TXPBFetchChildBindCardRequest*) other {
  if (other == [TXPBFetchChildBindCardRequest defaultInstance]) {
    return self;
  }
  if (other.userCardsArray.count > 0) {
    if (resultFetchChildBindCardRequest.userCardsArray == nil) {
      resultFetchChildBindCardRequest.userCardsArray = [[NSMutableArray alloc] initWithArray:other.userCardsArray];
    } else {
      [resultFetchChildBindCardRequest.userCardsArray addObjectsFromArray:other.userCardsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchChildBindCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchChildBindCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserCardBuilder* subBuilder = [TXPBUserCard builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserCards:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)userCards {
  return resultFetchChildBindCardRequest.userCardsArray;
}
- (TXPBUserCard*)userCardsAtIndex:(NSUInteger)index {
  return [resultFetchChildBindCardRequest userCardsAtIndex:index];
}
- (TXPBFetchChildBindCardRequestBuilder *)addUserCards:(TXPBUserCard*)value {
  if (resultFetchChildBindCardRequest.userCardsArray == nil) {
    resultFetchChildBindCardRequest.userCardsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchChildBindCardRequest.userCardsArray addObject:value];
  return self;
}
- (TXPBFetchChildBindCardRequestBuilder *)setUserCardsArray:(NSArray *)array {
  resultFetchChildBindCardRequest.userCardsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchChildBindCardRequestBuilder *)clearUserCards {
  resultFetchChildBindCardRequest.userCardsArray = nil;
  return self;
}
@end

@interface TXPBReportLossCardRequest ()
@property (strong) NSString* cardCode;
@end

@implementation TXPBReportLossCardRequest

- (BOOL) hasCardCode {
  return !!hasCardCode_;
}
- (void) setHasCardCode:(BOOL) _value_ {
  hasCardCode_ = !!_value_;
}
@synthesize cardCode;
- (instancetype) init {
  if ((self = [super init])) {
    self.cardCode = @"";
  }
  return self;
}
static TXPBReportLossCardRequest* defaultTXPBReportLossCardRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBReportLossCardRequest class]) {
    defaultTXPBReportLossCardRequestInstance = [[TXPBReportLossCardRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReportLossCardRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReportLossCardRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCardCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCardCode) {
    [output writeString:1 value:self.cardCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCardCode) {
    size_ += computeStringSize(1, self.cardCode);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReportLossCardRequest*) parseFromData:(NSData*) data {
  return (TXPBReportLossCardRequest*)[[[TXPBReportLossCardRequest builder] mergeFromData:data] build];
}
+ (TXPBReportLossCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReportLossCardRequest*)[[[TXPBReportLossCardRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReportLossCardRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReportLossCardRequest*)[[[TXPBReportLossCardRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBReportLossCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReportLossCardRequest*)[[[TXPBReportLossCardRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReportLossCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReportLossCardRequest*)[[[TXPBReportLossCardRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReportLossCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReportLossCardRequest*)[[[TXPBReportLossCardRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReportLossCardRequestBuilder*) builder {
  return [[TXPBReportLossCardRequestBuilder alloc] init];
}
+ (TXPBReportLossCardRequestBuilder*) builderWithPrototype:(TXPBReportLossCardRequest*) prototype {
  return [[TXPBReportLossCardRequest builder] mergeFrom:prototype];
}
- (TXPBReportLossCardRequestBuilder*) builder {
  return [TXPBReportLossCardRequest builder];
}
- (TXPBReportLossCardRequestBuilder*) toBuilder {
  return [TXPBReportLossCardRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCardCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardCode", self.cardCode];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCardCode) {
    [dictionary setObject: self.cardCode forKey: @"cardCode"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReportLossCardRequest class]]) {
    return NO;
  }
  TXPBReportLossCardRequest *otherMessage = other;
  return
      self.hasCardCode == otherMessage.hasCardCode &&
      (!self.hasCardCode || [self.cardCode isEqual:otherMessage.cardCode]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCardCode) {
    hashCode = hashCode * 31 + [self.cardCode hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReportLossCardRequestBuilder()
@property (strong) TXPBReportLossCardRequest* resultReportLossCardRequest;
@end

@implementation TXPBReportLossCardRequestBuilder
@synthesize resultReportLossCardRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReportLossCardRequest = [[TXPBReportLossCardRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReportLossCardRequest;
}
- (TXPBReportLossCardRequestBuilder*) clear {
  self.resultReportLossCardRequest = [[TXPBReportLossCardRequest alloc] init];
  return self;
}
- (TXPBReportLossCardRequestBuilder*) clone {
  return [TXPBReportLossCardRequest builderWithPrototype:resultReportLossCardRequest];
}
- (TXPBReportLossCardRequest*) defaultInstance {
  return [TXPBReportLossCardRequest defaultInstance];
}
- (TXPBReportLossCardRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReportLossCardRequest*) buildPartial {
  TXPBReportLossCardRequest* returnMe = resultReportLossCardRequest;
  self.resultReportLossCardRequest = nil;
  return returnMe;
}
- (TXPBReportLossCardRequestBuilder*) mergeFrom:(TXPBReportLossCardRequest*) other {
  if (other == [TXPBReportLossCardRequest defaultInstance]) {
    return self;
  }
  if (other.hasCardCode) {
    [self setCardCode:other.cardCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReportLossCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReportLossCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCardCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCardCode {
  return resultReportLossCardRequest.hasCardCode;
}
- (NSString*) cardCode {
  return resultReportLossCardRequest.cardCode;
}
- (TXPBReportLossCardRequestBuilder*) setCardCode:(NSString*) value {
  resultReportLossCardRequest.hasCardCode = YES;
  resultReportLossCardRequest.cardCode = value;
  return self;
}
- (TXPBReportLossCardRequestBuilder*) clearCardCode {
  resultReportLossCardRequest.hasCardCode = NO;
  resultReportLossCardRequest.cardCode = @"";
  return self;
}
@end

@interface TXPBCheckinRequest ()
@property (strong) NSString* machineId;
@property (strong) NSMutableArray * checkinArray;
@end

@implementation TXPBCheckinRequest

- (BOOL) hasMachineId {
  return !!hasMachineId_;
}
- (void) setHasMachineId:(BOOL) _value_ {
  hasMachineId_ = !!_value_;
}
@synthesize machineId;
@synthesize checkinArray;
@dynamic checkin;
- (instancetype) init {
  if ((self = [super init])) {
    self.machineId = @"";
  }
  return self;
}
static TXPBCheckinRequest* defaultTXPBCheckinRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBCheckinRequest class]) {
    defaultTXPBCheckinRequestInstance = [[TXPBCheckinRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCheckinRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCheckinRequestInstance;
}
- (NSArray *)checkin {
  return checkinArray;
}
- (TXPBCheckin*)checkinAtIndex:(NSUInteger)index {
  return [checkinArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasMachineId) {
    return NO;
  }
  __block BOOL isInitcheckin = YES;
   [self.checkin enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcheckin = NO;
      *stop = YES;
    }
  }];
  if (!isInitcheckin) return isInitcheckin;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMachineId) {
    [output writeString:1 value:self.machineId];
  }
  [self.checkinArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMachineId) {
    size_ += computeStringSize(1, self.machineId);
  }
  [self.checkinArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCheckinRequest*) parseFromData:(NSData*) data {
  return (TXPBCheckinRequest*)[[[TXPBCheckinRequest builder] mergeFromData:data] build];
}
+ (TXPBCheckinRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckinRequest*)[[[TXPBCheckinRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckinRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCheckinRequest*)[[[TXPBCheckinRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBCheckinRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckinRequest*)[[[TXPBCheckinRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckinRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCheckinRequest*)[[[TXPBCheckinRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCheckinRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckinRequest*)[[[TXPBCheckinRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckinRequestBuilder*) builder {
  return [[TXPBCheckinRequestBuilder alloc] init];
}
+ (TXPBCheckinRequestBuilder*) builderWithPrototype:(TXPBCheckinRequest*) prototype {
  return [[TXPBCheckinRequest builder] mergeFrom:prototype];
}
- (TXPBCheckinRequestBuilder*) builder {
  return [TXPBCheckinRequest builder];
}
- (TXPBCheckinRequestBuilder*) toBuilder {
  return [TXPBCheckinRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMachineId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"machineId", self.machineId];
  }
  [self.checkinArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"checkin"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMachineId) {
    [dictionary setObject: self.machineId forKey: @"machineId"];
  }
  for (TXPBCheckin* element in self.checkinArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"checkin"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCheckinRequest class]]) {
    return NO;
  }
  TXPBCheckinRequest *otherMessage = other;
  return
      self.hasMachineId == otherMessage.hasMachineId &&
      (!self.hasMachineId || [self.machineId isEqual:otherMessage.machineId]) &&
      [self.checkinArray isEqualToArray:otherMessage.checkinArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMachineId) {
    hashCode = hashCode * 31 + [self.machineId hash];
  }
  [self.checkinArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCheckinRequestBuilder()
@property (strong) TXPBCheckinRequest* resultCheckinRequest;
@end

@implementation TXPBCheckinRequestBuilder
@synthesize resultCheckinRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCheckinRequest = [[TXPBCheckinRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCheckinRequest;
}
- (TXPBCheckinRequestBuilder*) clear {
  self.resultCheckinRequest = [[TXPBCheckinRequest alloc] init];
  return self;
}
- (TXPBCheckinRequestBuilder*) clone {
  return [TXPBCheckinRequest builderWithPrototype:resultCheckinRequest];
}
- (TXPBCheckinRequest*) defaultInstance {
  return [TXPBCheckinRequest defaultInstance];
}
- (TXPBCheckinRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCheckinRequest*) buildPartial {
  TXPBCheckinRequest* returnMe = resultCheckinRequest;
  self.resultCheckinRequest = nil;
  return returnMe;
}
- (TXPBCheckinRequestBuilder*) mergeFrom:(TXPBCheckinRequest*) other {
  if (other == [TXPBCheckinRequest defaultInstance]) {
    return self;
  }
  if (other.hasMachineId) {
    [self setMachineId:other.machineId];
  }
  if (other.checkinArray.count > 0) {
    if (resultCheckinRequest.checkinArray == nil) {
      resultCheckinRequest.checkinArray = [[NSMutableArray alloc] initWithArray:other.checkinArray];
    } else {
      [resultCheckinRequest.checkinArray addObjectsFromArray:other.checkinArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCheckinRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCheckinRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMachineId:[input readString]];
        break;
      }
      case 18: {
        TXPBCheckinBuilder* subBuilder = [TXPBCheckin builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCheckin:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasMachineId {
  return resultCheckinRequest.hasMachineId;
}
- (NSString*) machineId {
  return resultCheckinRequest.machineId;
}
- (TXPBCheckinRequestBuilder*) setMachineId:(NSString*) value {
  resultCheckinRequest.hasMachineId = YES;
  resultCheckinRequest.machineId = value;
  return self;
}
- (TXPBCheckinRequestBuilder*) clearMachineId {
  resultCheckinRequest.hasMachineId = NO;
  resultCheckinRequest.machineId = @"";
  return self;
}
- (NSMutableArray *)checkin {
  return resultCheckinRequest.checkinArray;
}
- (TXPBCheckin*)checkinAtIndex:(NSUInteger)index {
  return [resultCheckinRequest checkinAtIndex:index];
}
- (TXPBCheckinRequestBuilder *)addCheckin:(TXPBCheckin*)value {
  if (resultCheckinRequest.checkinArray == nil) {
    resultCheckinRequest.checkinArray = [[NSMutableArray alloc]init];
  }
  [resultCheckinRequest.checkinArray addObject:value];
  return self;
}
- (TXPBCheckinRequestBuilder *)setCheckinArray:(NSArray *)array {
  resultCheckinRequest.checkinArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBCheckinRequestBuilder *)clearCheckin {
  resultCheckinRequest.checkinArray = nil;
  return self;
}
@end

@interface TXPBCheckinResponse ()
@end

@implementation TXPBCheckinResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBCheckinResponse* defaultTXPBCheckinResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBCheckinResponse class]) {
    defaultTXPBCheckinResponseInstance = [[TXPBCheckinResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCheckinResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCheckinResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCheckinResponse*) parseFromData:(NSData*) data {
  return (TXPBCheckinResponse*)[[[TXPBCheckinResponse builder] mergeFromData:data] build];
}
+ (TXPBCheckinResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckinResponse*)[[[TXPBCheckinResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckinResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCheckinResponse*)[[[TXPBCheckinResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBCheckinResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckinResponse*)[[[TXPBCheckinResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCheckinResponse*)[[[TXPBCheckinResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCheckinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckinResponse*)[[[TXPBCheckinResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckinResponseBuilder*) builder {
  return [[TXPBCheckinResponseBuilder alloc] init];
}
+ (TXPBCheckinResponseBuilder*) builderWithPrototype:(TXPBCheckinResponse*) prototype {
  return [[TXPBCheckinResponse builder] mergeFrom:prototype];
}
- (TXPBCheckinResponseBuilder*) builder {
  return [TXPBCheckinResponse builder];
}
- (TXPBCheckinResponseBuilder*) toBuilder {
  return [TXPBCheckinResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCheckinResponse class]]) {
    return NO;
  }
  TXPBCheckinResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCheckinResponseBuilder()
@property (strong) TXPBCheckinResponse* resultCheckinResponse;
@end

@implementation TXPBCheckinResponseBuilder
@synthesize resultCheckinResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCheckinResponse = [[TXPBCheckinResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCheckinResponse;
}
- (TXPBCheckinResponseBuilder*) clear {
  self.resultCheckinResponse = [[TXPBCheckinResponse alloc] init];
  return self;
}
- (TXPBCheckinResponseBuilder*) clone {
  return [TXPBCheckinResponse builderWithPrototype:resultCheckinResponse];
}
- (TXPBCheckinResponse*) defaultInstance {
  return [TXPBCheckinResponse defaultInstance];
}
- (TXPBCheckinResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCheckinResponse*) buildPartial {
  TXPBCheckinResponse* returnMe = resultCheckinResponse;
  self.resultCheckinResponse = nil;
  return returnMe;
}
- (TXPBCheckinResponseBuilder*) mergeFrom:(TXPBCheckinResponse*) other {
  if (other == [TXPBCheckinResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCheckinResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCheckinResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBRegisterCheckinMachineRequest ()
@property SInt64 oaId;
@property SInt64 gardenId;
@property (strong) NSString* machineId;
@property (strong) NSString* macAddress;
@end

@implementation TXPBRegisterCheckinMachineRequest

- (BOOL) hasOaId {
  return !!hasOaId_;
}
- (void) setHasOaId:(BOOL) _value_ {
  hasOaId_ = !!_value_;
}
@synthesize oaId;
- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasMachineId {
  return !!hasMachineId_;
}
- (void) setHasMachineId:(BOOL) _value_ {
  hasMachineId_ = !!_value_;
}
@synthesize machineId;
- (BOOL) hasMacAddress {
  return !!hasMacAddress_;
}
- (void) setHasMacAddress:(BOOL) _value_ {
  hasMacAddress_ = !!_value_;
}
@synthesize macAddress;
- (instancetype) init {
  if ((self = [super init])) {
    self.oaId = 0L;
    self.gardenId = 0L;
    self.machineId = @"";
    self.macAddress = @"";
  }
  return self;
}
static TXPBRegisterCheckinMachineRequest* defaultTXPBRegisterCheckinMachineRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBRegisterCheckinMachineRequest class]) {
    defaultTXPBRegisterCheckinMachineRequestInstance = [[TXPBRegisterCheckinMachineRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBRegisterCheckinMachineRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBRegisterCheckinMachineRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMachineId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOaId) {
    [output writeInt64:1 value:self.oaId];
  }
  if (self.hasGardenId) {
    [output writeInt64:2 value:self.gardenId];
  }
  if (self.hasMachineId) {
    [output writeString:3 value:self.machineId];
  }
  if (self.hasMacAddress) {
    [output writeString:4 value:self.macAddress];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOaId) {
    size_ += computeInt64Size(1, self.oaId);
  }
  if (self.hasGardenId) {
    size_ += computeInt64Size(2, self.gardenId);
  }
  if (self.hasMachineId) {
    size_ += computeStringSize(3, self.machineId);
  }
  if (self.hasMacAddress) {
    size_ += computeStringSize(4, self.macAddress);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBRegisterCheckinMachineRequest*) parseFromData:(NSData*) data {
  return (TXPBRegisterCheckinMachineRequest*)[[[TXPBRegisterCheckinMachineRequest builder] mergeFromData:data] build];
}
+ (TXPBRegisterCheckinMachineRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRegisterCheckinMachineRequest*)[[[TXPBRegisterCheckinMachineRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBRegisterCheckinMachineRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBRegisterCheckinMachineRequest*)[[[TXPBRegisterCheckinMachineRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBRegisterCheckinMachineRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRegisterCheckinMachineRequest*)[[[TXPBRegisterCheckinMachineRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRegisterCheckinMachineRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBRegisterCheckinMachineRequest*)[[[TXPBRegisterCheckinMachineRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBRegisterCheckinMachineRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRegisterCheckinMachineRequest*)[[[TXPBRegisterCheckinMachineRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRegisterCheckinMachineRequestBuilder*) builder {
  return [[TXPBRegisterCheckinMachineRequestBuilder alloc] init];
}
+ (TXPBRegisterCheckinMachineRequestBuilder*) builderWithPrototype:(TXPBRegisterCheckinMachineRequest*) prototype {
  return [[TXPBRegisterCheckinMachineRequest builder] mergeFrom:prototype];
}
- (TXPBRegisterCheckinMachineRequestBuilder*) builder {
  return [TXPBRegisterCheckinMachineRequest builder];
}
- (TXPBRegisterCheckinMachineRequestBuilder*) toBuilder {
  return [TXPBRegisterCheckinMachineRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOaId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oaId", [NSNumber numberWithLongLong:self.oaId]];
  }
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasMachineId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"machineId", self.machineId];
  }
  if (self.hasMacAddress) {
    [output appendFormat:@"%@%@: %@\n", indent, @"macAddress", self.macAddress];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasOaId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.oaId] forKey: @"oaId"];
  }
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasMachineId) {
    [dictionary setObject: self.machineId forKey: @"machineId"];
  }
  if (self.hasMacAddress) {
    [dictionary setObject: self.macAddress forKey: @"macAddress"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBRegisterCheckinMachineRequest class]]) {
    return NO;
  }
  TXPBRegisterCheckinMachineRequest *otherMessage = other;
  return
      self.hasOaId == otherMessage.hasOaId &&
      (!self.hasOaId || self.oaId == otherMessage.oaId) &&
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasMachineId == otherMessage.hasMachineId &&
      (!self.hasMachineId || [self.machineId isEqual:otherMessage.machineId]) &&
      self.hasMacAddress == otherMessage.hasMacAddress &&
      (!self.hasMacAddress || [self.macAddress isEqual:otherMessage.macAddress]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasOaId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.oaId] hash];
  }
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasMachineId) {
    hashCode = hashCode * 31 + [self.machineId hash];
  }
  if (self.hasMacAddress) {
    hashCode = hashCode * 31 + [self.macAddress hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBRegisterCheckinMachineRequestBuilder()
@property (strong) TXPBRegisterCheckinMachineRequest* resultRegisterCheckinMachineRequest;
@end

@implementation TXPBRegisterCheckinMachineRequestBuilder
@synthesize resultRegisterCheckinMachineRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRegisterCheckinMachineRequest = [[TXPBRegisterCheckinMachineRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRegisterCheckinMachineRequest;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) clear {
  self.resultRegisterCheckinMachineRequest = [[TXPBRegisterCheckinMachineRequest alloc] init];
  return self;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) clone {
  return [TXPBRegisterCheckinMachineRequest builderWithPrototype:resultRegisterCheckinMachineRequest];
}
- (TXPBRegisterCheckinMachineRequest*) defaultInstance {
  return [TXPBRegisterCheckinMachineRequest defaultInstance];
}
- (TXPBRegisterCheckinMachineRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBRegisterCheckinMachineRequest*) buildPartial {
  TXPBRegisterCheckinMachineRequest* returnMe = resultRegisterCheckinMachineRequest;
  self.resultRegisterCheckinMachineRequest = nil;
  return returnMe;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) mergeFrom:(TXPBRegisterCheckinMachineRequest*) other {
  if (other == [TXPBRegisterCheckinMachineRequest defaultInstance]) {
    return self;
  }
  if (other.hasOaId) {
    [self setOaId:other.oaId];
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasMachineId) {
    [self setMachineId:other.machineId];
  }
  if (other.hasMacAddress) {
    [self setMacAddress:other.macAddress];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBRegisterCheckinMachineRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOaId:[input readInt64]];
        break;
      }
      case 16: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 26: {
        [self setMachineId:[input readString]];
        break;
      }
      case 34: {
        [self setMacAddress:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasOaId {
  return resultRegisterCheckinMachineRequest.hasOaId;
}
- (SInt64) oaId {
  return resultRegisterCheckinMachineRequest.oaId;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) setOaId:(SInt64) value {
  resultRegisterCheckinMachineRequest.hasOaId = YES;
  resultRegisterCheckinMachineRequest.oaId = value;
  return self;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) clearOaId {
  resultRegisterCheckinMachineRequest.hasOaId = NO;
  resultRegisterCheckinMachineRequest.oaId = 0L;
  return self;
}
- (BOOL) hasGardenId {
  return resultRegisterCheckinMachineRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultRegisterCheckinMachineRequest.gardenId;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) setGardenId:(SInt64) value {
  resultRegisterCheckinMachineRequest.hasGardenId = YES;
  resultRegisterCheckinMachineRequest.gardenId = value;
  return self;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) clearGardenId {
  resultRegisterCheckinMachineRequest.hasGardenId = NO;
  resultRegisterCheckinMachineRequest.gardenId = 0L;
  return self;
}
- (BOOL) hasMachineId {
  return resultRegisterCheckinMachineRequest.hasMachineId;
}
- (NSString*) machineId {
  return resultRegisterCheckinMachineRequest.machineId;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) setMachineId:(NSString*) value {
  resultRegisterCheckinMachineRequest.hasMachineId = YES;
  resultRegisterCheckinMachineRequest.machineId = value;
  return self;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) clearMachineId {
  resultRegisterCheckinMachineRequest.hasMachineId = NO;
  resultRegisterCheckinMachineRequest.machineId = @"";
  return self;
}
- (BOOL) hasMacAddress {
  return resultRegisterCheckinMachineRequest.hasMacAddress;
}
- (NSString*) macAddress {
  return resultRegisterCheckinMachineRequest.macAddress;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) setMacAddress:(NSString*) value {
  resultRegisterCheckinMachineRequest.hasMacAddress = YES;
  resultRegisterCheckinMachineRequest.macAddress = value;
  return self;
}
- (TXPBRegisterCheckinMachineRequestBuilder*) clearMacAddress {
  resultRegisterCheckinMachineRequest.hasMacAddress = NO;
  resultRegisterCheckinMachineRequest.macAddress = @"";
  return self;
}
@end

@interface TXPBRegisterCheckinMachineResponse ()
@property SInt64 gardenId;
@property (strong) NSString* gardenName;
@end

@implementation TXPBRegisterCheckinMachineResponse

- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasGardenName {
  return !!hasGardenName_;
}
- (void) setHasGardenName:(BOOL) _value_ {
  hasGardenName_ = !!_value_;
}
@synthesize gardenName;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenId = 0L;
    self.gardenName = @"";
  }
  return self;
}
static TXPBRegisterCheckinMachineResponse* defaultTXPBRegisterCheckinMachineResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBRegisterCheckinMachineResponse class]) {
    defaultTXPBRegisterCheckinMachineResponseInstance = [[TXPBRegisterCheckinMachineResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBRegisterCheckinMachineResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBRegisterCheckinMachineResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenId) {
    return NO;
  }
  if (!self.hasGardenName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenId) {
    [output writeInt64:1 value:self.gardenId];
  }
  if (self.hasGardenName) {
    [output writeString:2 value:self.gardenName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenId) {
    size_ += computeInt64Size(1, self.gardenId);
  }
  if (self.hasGardenName) {
    size_ += computeStringSize(2, self.gardenName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBRegisterCheckinMachineResponse*) parseFromData:(NSData*) data {
  return (TXPBRegisterCheckinMachineResponse*)[[[TXPBRegisterCheckinMachineResponse builder] mergeFromData:data] build];
}
+ (TXPBRegisterCheckinMachineResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRegisterCheckinMachineResponse*)[[[TXPBRegisterCheckinMachineResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBRegisterCheckinMachineResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBRegisterCheckinMachineResponse*)[[[TXPBRegisterCheckinMachineResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBRegisterCheckinMachineResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRegisterCheckinMachineResponse*)[[[TXPBRegisterCheckinMachineResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRegisterCheckinMachineResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBRegisterCheckinMachineResponse*)[[[TXPBRegisterCheckinMachineResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBRegisterCheckinMachineResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRegisterCheckinMachineResponse*)[[[TXPBRegisterCheckinMachineResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRegisterCheckinMachineResponseBuilder*) builder {
  return [[TXPBRegisterCheckinMachineResponseBuilder alloc] init];
}
+ (TXPBRegisterCheckinMachineResponseBuilder*) builderWithPrototype:(TXPBRegisterCheckinMachineResponse*) prototype {
  return [[TXPBRegisterCheckinMachineResponse builder] mergeFrom:prototype];
}
- (TXPBRegisterCheckinMachineResponseBuilder*) builder {
  return [TXPBRegisterCheckinMachineResponse builder];
}
- (TXPBRegisterCheckinMachineResponseBuilder*) toBuilder {
  return [TXPBRegisterCheckinMachineResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasGardenName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenName", self.gardenName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasGardenName) {
    [dictionary setObject: self.gardenName forKey: @"gardenName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBRegisterCheckinMachineResponse class]]) {
    return NO;
  }
  TXPBRegisterCheckinMachineResponse *otherMessage = other;
  return
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasGardenName == otherMessage.hasGardenName &&
      (!self.hasGardenName || [self.gardenName isEqual:otherMessage.gardenName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasGardenName) {
    hashCode = hashCode * 31 + [self.gardenName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBRegisterCheckinMachineResponseBuilder()
@property (strong) TXPBRegisterCheckinMachineResponse* resultRegisterCheckinMachineResponse;
@end

@implementation TXPBRegisterCheckinMachineResponseBuilder
@synthesize resultRegisterCheckinMachineResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRegisterCheckinMachineResponse = [[TXPBRegisterCheckinMachineResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRegisterCheckinMachineResponse;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) clear {
  self.resultRegisterCheckinMachineResponse = [[TXPBRegisterCheckinMachineResponse alloc] init];
  return self;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) clone {
  return [TXPBRegisterCheckinMachineResponse builderWithPrototype:resultRegisterCheckinMachineResponse];
}
- (TXPBRegisterCheckinMachineResponse*) defaultInstance {
  return [TXPBRegisterCheckinMachineResponse defaultInstance];
}
- (TXPBRegisterCheckinMachineResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBRegisterCheckinMachineResponse*) buildPartial {
  TXPBRegisterCheckinMachineResponse* returnMe = resultRegisterCheckinMachineResponse;
  self.resultRegisterCheckinMachineResponse = nil;
  return returnMe;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) mergeFrom:(TXPBRegisterCheckinMachineResponse*) other {
  if (other == [TXPBRegisterCheckinMachineResponse defaultInstance]) {
    return self;
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasGardenName) {
    [self setGardenName:other.gardenName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBRegisterCheckinMachineResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 18: {
        [self setGardenName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGardenId {
  return resultRegisterCheckinMachineResponse.hasGardenId;
}
- (SInt64) gardenId {
  return resultRegisterCheckinMachineResponse.gardenId;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) setGardenId:(SInt64) value {
  resultRegisterCheckinMachineResponse.hasGardenId = YES;
  resultRegisterCheckinMachineResponse.gardenId = value;
  return self;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) clearGardenId {
  resultRegisterCheckinMachineResponse.hasGardenId = NO;
  resultRegisterCheckinMachineResponse.gardenId = 0L;
  return self;
}
- (BOOL) hasGardenName {
  return resultRegisterCheckinMachineResponse.hasGardenName;
}
- (NSString*) gardenName {
  return resultRegisterCheckinMachineResponse.gardenName;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) setGardenName:(NSString*) value {
  resultRegisterCheckinMachineResponse.hasGardenName = YES;
  resultRegisterCheckinMachineResponse.gardenName = value;
  return self;
}
- (TXPBRegisterCheckinMachineResponseBuilder*) clearGardenName {
  resultRegisterCheckinMachineResponse.hasGardenName = NO;
  resultRegisterCheckinMachineResponse.gardenName = @"";
  return self;
}
@end

@interface TXPBCheckPermissionRequest ()
@property (strong) NSString* password;
@property SInt64 gardenId;
@end

@implementation TXPBCheckPermissionRequest

- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (instancetype) init {
  if ((self = [super init])) {
    self.password = @"";
    self.gardenId = 0L;
  }
  return self;
}
static TXPBCheckPermissionRequest* defaultTXPBCheckPermissionRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBCheckPermissionRequest class]) {
    defaultTXPBCheckPermissionRequestInstance = [[TXPBCheckPermissionRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCheckPermissionRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCheckPermissionRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPassword) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPassword) {
    [output writeString:1 value:self.password];
  }
  if (self.hasGardenId) {
    [output writeInt64:2 value:self.gardenId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPassword) {
    size_ += computeStringSize(1, self.password);
  }
  if (self.hasGardenId) {
    size_ += computeInt64Size(2, self.gardenId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCheckPermissionRequest*) parseFromData:(NSData*) data {
  return (TXPBCheckPermissionRequest*)[[[TXPBCheckPermissionRequest builder] mergeFromData:data] build];
}
+ (TXPBCheckPermissionRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckPermissionRequest*)[[[TXPBCheckPermissionRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckPermissionRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCheckPermissionRequest*)[[[TXPBCheckPermissionRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBCheckPermissionRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckPermissionRequest*)[[[TXPBCheckPermissionRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckPermissionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCheckPermissionRequest*)[[[TXPBCheckPermissionRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCheckPermissionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckPermissionRequest*)[[[TXPBCheckPermissionRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckPermissionRequestBuilder*) builder {
  return [[TXPBCheckPermissionRequestBuilder alloc] init];
}
+ (TXPBCheckPermissionRequestBuilder*) builderWithPrototype:(TXPBCheckPermissionRequest*) prototype {
  return [[TXPBCheckPermissionRequest builder] mergeFrom:prototype];
}
- (TXPBCheckPermissionRequestBuilder*) builder {
  return [TXPBCheckPermissionRequest builder];
}
- (TXPBCheckPermissionRequestBuilder*) toBuilder {
  return [TXPBCheckPermissionRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPassword) {
    [dictionary setObject: self.password forKey: @"password"];
  }
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCheckPermissionRequest class]]) {
    return NO;
  }
  TXPBCheckPermissionRequest *otherMessage = other;
  return
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCheckPermissionRequestBuilder()
@property (strong) TXPBCheckPermissionRequest* resultCheckPermissionRequest;
@end

@implementation TXPBCheckPermissionRequestBuilder
@synthesize resultCheckPermissionRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCheckPermissionRequest = [[TXPBCheckPermissionRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCheckPermissionRequest;
}
- (TXPBCheckPermissionRequestBuilder*) clear {
  self.resultCheckPermissionRequest = [[TXPBCheckPermissionRequest alloc] init];
  return self;
}
- (TXPBCheckPermissionRequestBuilder*) clone {
  return [TXPBCheckPermissionRequest builderWithPrototype:resultCheckPermissionRequest];
}
- (TXPBCheckPermissionRequest*) defaultInstance {
  return [TXPBCheckPermissionRequest defaultInstance];
}
- (TXPBCheckPermissionRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCheckPermissionRequest*) buildPartial {
  TXPBCheckPermissionRequest* returnMe = resultCheckPermissionRequest;
  self.resultCheckPermissionRequest = nil;
  return returnMe;
}
- (TXPBCheckPermissionRequestBuilder*) mergeFrom:(TXPBCheckPermissionRequest*) other {
  if (other == [TXPBCheckPermissionRequest defaultInstance]) {
    return self;
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCheckPermissionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCheckPermissionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setPassword:[input readString]];
        break;
      }
      case 16: {
        [self setGardenId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasPassword {
  return resultCheckPermissionRequest.hasPassword;
}
- (NSString*) password {
  return resultCheckPermissionRequest.password;
}
- (TXPBCheckPermissionRequestBuilder*) setPassword:(NSString*) value {
  resultCheckPermissionRequest.hasPassword = YES;
  resultCheckPermissionRequest.password = value;
  return self;
}
- (TXPBCheckPermissionRequestBuilder*) clearPassword {
  resultCheckPermissionRequest.hasPassword = NO;
  resultCheckPermissionRequest.password = @"";
  return self;
}
- (BOOL) hasGardenId {
  return resultCheckPermissionRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultCheckPermissionRequest.gardenId;
}
- (TXPBCheckPermissionRequestBuilder*) setGardenId:(SInt64) value {
  resultCheckPermissionRequest.hasGardenId = YES;
  resultCheckPermissionRequest.gardenId = value;
  return self;
}
- (TXPBCheckPermissionRequestBuilder*) clearGardenId {
  resultCheckPermissionRequest.hasGardenId = NO;
  resultCheckPermissionRequest.gardenId = 0L;
  return self;
}
@end

@interface TXPBCheckPermissionResponse ()
@end

@implementation TXPBCheckPermissionResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBCheckPermissionResponse* defaultTXPBCheckPermissionResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBCheckPermissionResponse class]) {
    defaultTXPBCheckPermissionResponseInstance = [[TXPBCheckPermissionResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCheckPermissionResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCheckPermissionResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCheckPermissionResponse*) parseFromData:(NSData*) data {
  return (TXPBCheckPermissionResponse*)[[[TXPBCheckPermissionResponse builder] mergeFromData:data] build];
}
+ (TXPBCheckPermissionResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckPermissionResponse*)[[[TXPBCheckPermissionResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckPermissionResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCheckPermissionResponse*)[[[TXPBCheckPermissionResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBCheckPermissionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckPermissionResponse*)[[[TXPBCheckPermissionResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckPermissionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCheckPermissionResponse*)[[[TXPBCheckPermissionResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCheckPermissionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCheckPermissionResponse*)[[[TXPBCheckPermissionResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCheckPermissionResponseBuilder*) builder {
  return [[TXPBCheckPermissionResponseBuilder alloc] init];
}
+ (TXPBCheckPermissionResponseBuilder*) builderWithPrototype:(TXPBCheckPermissionResponse*) prototype {
  return [[TXPBCheckPermissionResponse builder] mergeFrom:prototype];
}
- (TXPBCheckPermissionResponseBuilder*) builder {
  return [TXPBCheckPermissionResponse builder];
}
- (TXPBCheckPermissionResponseBuilder*) toBuilder {
  return [TXPBCheckPermissionResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCheckPermissionResponse class]]) {
    return NO;
  }
  TXPBCheckPermissionResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCheckPermissionResponseBuilder()
@property (strong) TXPBCheckPermissionResponse* resultCheckPermissionResponse;
@end

@implementation TXPBCheckPermissionResponseBuilder
@synthesize resultCheckPermissionResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCheckPermissionResponse = [[TXPBCheckPermissionResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCheckPermissionResponse;
}
- (TXPBCheckPermissionResponseBuilder*) clear {
  self.resultCheckPermissionResponse = [[TXPBCheckPermissionResponse alloc] init];
  return self;
}
- (TXPBCheckPermissionResponseBuilder*) clone {
  return [TXPBCheckPermissionResponse builderWithPrototype:resultCheckPermissionResponse];
}
- (TXPBCheckPermissionResponse*) defaultInstance {
  return [TXPBCheckPermissionResponse defaultInstance];
}
- (TXPBCheckPermissionResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCheckPermissionResponse*) buildPartial {
  TXPBCheckPermissionResponse* returnMe = resultCheckPermissionResponse;
  self.resultCheckPermissionResponse = nil;
  return returnMe;
}
- (TXPBCheckPermissionResponseBuilder*) mergeFrom:(TXPBCheckPermissionResponse*) other {
  if (other == [TXPBCheckPermissionResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCheckPermissionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCheckPermissionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchCardRequest ()
@property SInt64 gardenId;
@property SInt64 lastModifiedSince;
@end

@implementation TXPBFetchCardRequest

- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasLastModifiedSince {
  return !!hasLastModifiedSince_;
}
- (void) setHasLastModifiedSince:(BOOL) _value_ {
  hasLastModifiedSince_ = !!_value_;
}
@synthesize lastModifiedSince;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenId = 0L;
    self.lastModifiedSince = 0L;
  }
  return self;
}
static TXPBFetchCardRequest* defaultTXPBFetchCardRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCardRequest class]) {
    defaultTXPBFetchCardRequestInstance = [[TXPBFetchCardRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCardRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCardRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenId) {
    return NO;
  }
  if (!self.hasLastModifiedSince) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenId) {
    [output writeInt64:1 value:self.gardenId];
  }
  if (self.hasLastModifiedSince) {
    [output writeInt64:2 value:self.lastModifiedSince];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenId) {
    size_ += computeInt64Size(1, self.gardenId);
  }
  if (self.hasLastModifiedSince) {
    size_ += computeInt64Size(2, self.lastModifiedSince);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCardRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCardRequest*)[[[TXPBFetchCardRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCardRequest*)[[[TXPBFetchCardRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCardRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCardRequest*)[[[TXPBFetchCardRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCardRequest*)[[[TXPBFetchCardRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCardRequest*)[[[TXPBFetchCardRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCardRequest*)[[[TXPBFetchCardRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCardRequestBuilder*) builder {
  return [[TXPBFetchCardRequestBuilder alloc] init];
}
+ (TXPBFetchCardRequestBuilder*) builderWithPrototype:(TXPBFetchCardRequest*) prototype {
  return [[TXPBFetchCardRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCardRequestBuilder*) builder {
  return [TXPBFetchCardRequest builder];
}
- (TXPBFetchCardRequestBuilder*) toBuilder {
  return [TXPBFetchCardRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasLastModifiedSince) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastModifiedSince", [NSNumber numberWithLongLong:self.lastModifiedSince]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasLastModifiedSince) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastModifiedSince] forKey: @"lastModifiedSince"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCardRequest class]]) {
    return NO;
  }
  TXPBFetchCardRequest *otherMessage = other;
  return
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasLastModifiedSince == otherMessage.hasLastModifiedSince &&
      (!self.hasLastModifiedSince || self.lastModifiedSince == otherMessage.lastModifiedSince) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasLastModifiedSince) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastModifiedSince] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCardRequestBuilder()
@property (strong) TXPBFetchCardRequest* resultFetchCardRequest;
@end

@implementation TXPBFetchCardRequestBuilder
@synthesize resultFetchCardRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCardRequest = [[TXPBFetchCardRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCardRequest;
}
- (TXPBFetchCardRequestBuilder*) clear {
  self.resultFetchCardRequest = [[TXPBFetchCardRequest alloc] init];
  return self;
}
- (TXPBFetchCardRequestBuilder*) clone {
  return [TXPBFetchCardRequest builderWithPrototype:resultFetchCardRequest];
}
- (TXPBFetchCardRequest*) defaultInstance {
  return [TXPBFetchCardRequest defaultInstance];
}
- (TXPBFetchCardRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCardRequest*) buildPartial {
  TXPBFetchCardRequest* returnMe = resultFetchCardRequest;
  self.resultFetchCardRequest = nil;
  return returnMe;
}
- (TXPBFetchCardRequestBuilder*) mergeFrom:(TXPBFetchCardRequest*) other {
  if (other == [TXPBFetchCardRequest defaultInstance]) {
    return self;
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasLastModifiedSince) {
    [self setLastModifiedSince:other.lastModifiedSince];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 16: {
        [self setLastModifiedSince:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasGardenId {
  return resultFetchCardRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultFetchCardRequest.gardenId;
}
- (TXPBFetchCardRequestBuilder*) setGardenId:(SInt64) value {
  resultFetchCardRequest.hasGardenId = YES;
  resultFetchCardRequest.gardenId = value;
  return self;
}
- (TXPBFetchCardRequestBuilder*) clearGardenId {
  resultFetchCardRequest.hasGardenId = NO;
  resultFetchCardRequest.gardenId = 0L;
  return self;
}
- (BOOL) hasLastModifiedSince {
  return resultFetchCardRequest.hasLastModifiedSince;
}
- (SInt64) lastModifiedSince {
  return resultFetchCardRequest.lastModifiedSince;
}
- (TXPBFetchCardRequestBuilder*) setLastModifiedSince:(SInt64) value {
  resultFetchCardRequest.hasLastModifiedSince = YES;
  resultFetchCardRequest.lastModifiedSince = value;
  return self;
}
- (TXPBFetchCardRequestBuilder*) clearLastModifiedSince {
  resultFetchCardRequest.hasLastModifiedSince = NO;
  resultFetchCardRequest.lastModifiedSince = 0L;
  return self;
}
@end

@interface TXPBFetchCardResponse ()
@property (strong) NSMutableArray * cardArray;
@property SInt64 fetchTime;
@property BOOL hasMore;
@end

@implementation TXPBFetchCardResponse

@synthesize cardArray;
@dynamic card;
- (BOOL) hasFetchTime {
  return !!hasFetchTime_;
}
- (void) setHasFetchTime:(BOOL) _value_ {
  hasFetchTime_ = !!_value_;
}
@synthesize fetchTime;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.fetchTime = 0L;
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchCardResponse* defaultTXPBFetchCardResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCardResponse class]) {
    defaultTXPBFetchCardResponseInstance = [[TXPBFetchCardResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCardResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCardResponseInstance;
}
- (NSArray *)card {
  return cardArray;
}
- (TXPBUserCard*)cardAtIndex:(NSUInteger)index {
  return [cardArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasFetchTime) {
    return NO;
  }
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitcard = YES;
   [self.card enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcard = NO;
      *stop = YES;
    }
  }];
  if (!isInitcard) return isInitcard;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasFetchTime) {
    [output writeInt64:2 value:self.fetchTime];
  }
  if (self.hasHasMore) {
    [output writeBool:3 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasFetchTime) {
    size_ += computeInt64Size(2, self.fetchTime);
  }
  if (self.hasHasMore) {
    size_ += computeBoolSize(3, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCardResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCardResponse*)[[[TXPBFetchCardResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCardResponse*)[[[TXPBFetchCardResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCardResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCardResponse*)[[[TXPBFetchCardResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCardResponse*)[[[TXPBFetchCardResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCardResponse*)[[[TXPBFetchCardResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCardResponse*)[[[TXPBFetchCardResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCardResponseBuilder*) builder {
  return [[TXPBFetchCardResponseBuilder alloc] init];
}
+ (TXPBFetchCardResponseBuilder*) builderWithPrototype:(TXPBFetchCardResponse*) prototype {
  return [[TXPBFetchCardResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCardResponseBuilder*) builder {
  return [TXPBFetchCardResponse builder];
}
- (TXPBFetchCardResponseBuilder*) toBuilder {
  return [TXPBFetchCardResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"card"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fetchTime", [NSNumber numberWithLongLong:self.fetchTime]];
  }
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBUserCard* element in self.cardArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"card"];
  }
  if (self.hasFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.fetchTime] forKey: @"fetchTime"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCardResponse class]]) {
    return NO;
  }
  TXPBFetchCardResponse *otherMessage = other;
  return
      [self.cardArray isEqualToArray:otherMessage.cardArray] &&
      self.hasFetchTime == otherMessage.hasFetchTime &&
      (!self.hasFetchTime || self.fetchTime == otherMessage.fetchTime) &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fetchTime] hash];
  }
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCardResponseBuilder()
@property (strong) TXPBFetchCardResponse* resultFetchCardResponse;
@end

@implementation TXPBFetchCardResponseBuilder
@synthesize resultFetchCardResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCardResponse = [[TXPBFetchCardResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCardResponse;
}
- (TXPBFetchCardResponseBuilder*) clear {
  self.resultFetchCardResponse = [[TXPBFetchCardResponse alloc] init];
  return self;
}
- (TXPBFetchCardResponseBuilder*) clone {
  return [TXPBFetchCardResponse builderWithPrototype:resultFetchCardResponse];
}
- (TXPBFetchCardResponse*) defaultInstance {
  return [TXPBFetchCardResponse defaultInstance];
}
- (TXPBFetchCardResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCardResponse*) buildPartial {
  TXPBFetchCardResponse* returnMe = resultFetchCardResponse;
  self.resultFetchCardResponse = nil;
  return returnMe;
}
- (TXPBFetchCardResponseBuilder*) mergeFrom:(TXPBFetchCardResponse*) other {
  if (other == [TXPBFetchCardResponse defaultInstance]) {
    return self;
  }
  if (other.cardArray.count > 0) {
    if (resultFetchCardResponse.cardArray == nil) {
      resultFetchCardResponse.cardArray = [[NSMutableArray alloc] initWithArray:other.cardArray];
    } else {
      [resultFetchCardResponse.cardArray addObjectsFromArray:other.cardArray];
    }
  }
  if (other.hasFetchTime) {
    [self setFetchTime:other.fetchTime];
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserCardBuilder* subBuilder = [TXPBUserCard builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCard:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setFetchTime:[input readInt64]];
        break;
      }
      case 24: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)card {
  return resultFetchCardResponse.cardArray;
}
- (TXPBUserCard*)cardAtIndex:(NSUInteger)index {
  return [resultFetchCardResponse cardAtIndex:index];
}
- (TXPBFetchCardResponseBuilder *)addCard:(TXPBUserCard*)value {
  if (resultFetchCardResponse.cardArray == nil) {
    resultFetchCardResponse.cardArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCardResponse.cardArray addObject:value];
  return self;
}
- (TXPBFetchCardResponseBuilder *)setCardArray:(NSArray *)array {
  resultFetchCardResponse.cardArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCardResponseBuilder *)clearCard {
  resultFetchCardResponse.cardArray = nil;
  return self;
}
- (BOOL) hasFetchTime {
  return resultFetchCardResponse.hasFetchTime;
}
- (SInt64) fetchTime {
  return resultFetchCardResponse.fetchTime;
}
- (TXPBFetchCardResponseBuilder*) setFetchTime:(SInt64) value {
  resultFetchCardResponse.hasFetchTime = YES;
  resultFetchCardResponse.fetchTime = value;
  return self;
}
- (TXPBFetchCardResponseBuilder*) clearFetchTime {
  resultFetchCardResponse.hasFetchTime = NO;
  resultFetchCardResponse.fetchTime = 0L;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchCardResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchCardResponse.hasMore;
}
- (TXPBFetchCardResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchCardResponse.hasHasMore = YES;
  resultFetchCardResponse.hasMore = value;
  return self;
}
- (TXPBFetchCardResponseBuilder*) clearHasMore {
  resultFetchCardResponse.hasHasMore = NO;
  resultFetchCardResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchOldMachineCardRequest ()
@property SInt64 gardenId;
@property SInt64 syncVersion;
@end

@implementation TXPBFetchOldMachineCardRequest

- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasSyncVersion {
  return !!hasSyncVersion_;
}
- (void) setHasSyncVersion:(BOOL) _value_ {
  hasSyncVersion_ = !!_value_;
}
@synthesize syncVersion;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenId = 0L;
    self.syncVersion = 0L;
  }
  return self;
}
static TXPBFetchOldMachineCardRequest* defaultTXPBFetchOldMachineCardRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchOldMachineCardRequest class]) {
    defaultTXPBFetchOldMachineCardRequestInstance = [[TXPBFetchOldMachineCardRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchOldMachineCardRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchOldMachineCardRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenId) {
    return NO;
  }
  if (!self.hasSyncVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenId) {
    [output writeInt64:1 value:self.gardenId];
  }
  if (self.hasSyncVersion) {
    [output writeInt64:2 value:self.syncVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenId) {
    size_ += computeInt64Size(1, self.gardenId);
  }
  if (self.hasSyncVersion) {
    size_ += computeInt64Size(2, self.syncVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchOldMachineCardRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchOldMachineCardRequest*)[[[TXPBFetchOldMachineCardRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchOldMachineCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchOldMachineCardRequest*)[[[TXPBFetchOldMachineCardRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchOldMachineCardRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchOldMachineCardRequest*)[[[TXPBFetchOldMachineCardRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchOldMachineCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchOldMachineCardRequest*)[[[TXPBFetchOldMachineCardRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchOldMachineCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchOldMachineCardRequest*)[[[TXPBFetchOldMachineCardRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchOldMachineCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchOldMachineCardRequest*)[[[TXPBFetchOldMachineCardRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchOldMachineCardRequestBuilder*) builder {
  return [[TXPBFetchOldMachineCardRequestBuilder alloc] init];
}
+ (TXPBFetchOldMachineCardRequestBuilder*) builderWithPrototype:(TXPBFetchOldMachineCardRequest*) prototype {
  return [[TXPBFetchOldMachineCardRequest builder] mergeFrom:prototype];
}
- (TXPBFetchOldMachineCardRequestBuilder*) builder {
  return [TXPBFetchOldMachineCardRequest builder];
}
- (TXPBFetchOldMachineCardRequestBuilder*) toBuilder {
  return [TXPBFetchOldMachineCardRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasSyncVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"syncVersion", [NSNumber numberWithLongLong:self.syncVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasSyncVersion) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.syncVersion] forKey: @"syncVersion"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchOldMachineCardRequest class]]) {
    return NO;
  }
  TXPBFetchOldMachineCardRequest *otherMessage = other;
  return
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasSyncVersion == otherMessage.hasSyncVersion &&
      (!self.hasSyncVersion || self.syncVersion == otherMessage.syncVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasSyncVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.syncVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchOldMachineCardRequestBuilder()
@property (strong) TXPBFetchOldMachineCardRequest* resultFetchOldMachineCardRequest;
@end

@implementation TXPBFetchOldMachineCardRequestBuilder
@synthesize resultFetchOldMachineCardRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchOldMachineCardRequest = [[TXPBFetchOldMachineCardRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchOldMachineCardRequest;
}
- (TXPBFetchOldMachineCardRequestBuilder*) clear {
  self.resultFetchOldMachineCardRequest = [[TXPBFetchOldMachineCardRequest alloc] init];
  return self;
}
- (TXPBFetchOldMachineCardRequestBuilder*) clone {
  return [TXPBFetchOldMachineCardRequest builderWithPrototype:resultFetchOldMachineCardRequest];
}
- (TXPBFetchOldMachineCardRequest*) defaultInstance {
  return [TXPBFetchOldMachineCardRequest defaultInstance];
}
- (TXPBFetchOldMachineCardRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchOldMachineCardRequest*) buildPartial {
  TXPBFetchOldMachineCardRequest* returnMe = resultFetchOldMachineCardRequest;
  self.resultFetchOldMachineCardRequest = nil;
  return returnMe;
}
- (TXPBFetchOldMachineCardRequestBuilder*) mergeFrom:(TXPBFetchOldMachineCardRequest*) other {
  if (other == [TXPBFetchOldMachineCardRequest defaultInstance]) {
    return self;
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasSyncVersion) {
    [self setSyncVersion:other.syncVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchOldMachineCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchOldMachineCardRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSyncVersion:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasGardenId {
  return resultFetchOldMachineCardRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultFetchOldMachineCardRequest.gardenId;
}
- (TXPBFetchOldMachineCardRequestBuilder*) setGardenId:(SInt64) value {
  resultFetchOldMachineCardRequest.hasGardenId = YES;
  resultFetchOldMachineCardRequest.gardenId = value;
  return self;
}
- (TXPBFetchOldMachineCardRequestBuilder*) clearGardenId {
  resultFetchOldMachineCardRequest.hasGardenId = NO;
  resultFetchOldMachineCardRequest.gardenId = 0L;
  return self;
}
- (BOOL) hasSyncVersion {
  return resultFetchOldMachineCardRequest.hasSyncVersion;
}
- (SInt64) syncVersion {
  return resultFetchOldMachineCardRequest.syncVersion;
}
- (TXPBFetchOldMachineCardRequestBuilder*) setSyncVersion:(SInt64) value {
  resultFetchOldMachineCardRequest.hasSyncVersion = YES;
  resultFetchOldMachineCardRequest.syncVersion = value;
  return self;
}
- (TXPBFetchOldMachineCardRequestBuilder*) clearSyncVersion {
  resultFetchOldMachineCardRequest.hasSyncVersion = NO;
  resultFetchOldMachineCardRequest.syncVersion = 0L;
  return self;
}
@end

@interface TXPBFetchOldMachineCardResponse ()
@property (strong) NSMutableArray * cardArray;
@property SInt64 syncVersion;
@end

@implementation TXPBFetchOldMachineCardResponse

@synthesize cardArray;
@dynamic card;
- (BOOL) hasSyncVersion {
  return !!hasSyncVersion_;
}
- (void) setHasSyncVersion:(BOOL) _value_ {
  hasSyncVersion_ = !!_value_;
}
@synthesize syncVersion;
- (instancetype) init {
  if ((self = [super init])) {
    self.syncVersion = 0L;
  }
  return self;
}
static TXPBFetchOldMachineCardResponse* defaultTXPBFetchOldMachineCardResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchOldMachineCardResponse class]) {
    defaultTXPBFetchOldMachineCardResponseInstance = [[TXPBFetchOldMachineCardResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchOldMachineCardResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchOldMachineCardResponseInstance;
}
- (NSArray *)card {
  return cardArray;
}
- (TXPBUserCard*)cardAtIndex:(NSUInteger)index {
  return [cardArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitcard = YES;
   [self.card enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcard = NO;
      *stop = YES;
    }
  }];
  if (!isInitcard) return isInitcard;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasSyncVersion) {
    [output writeInt64:2 value:self.syncVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasSyncVersion) {
    size_ += computeInt64Size(2, self.syncVersion);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchOldMachineCardResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchOldMachineCardResponse*)[[[TXPBFetchOldMachineCardResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchOldMachineCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchOldMachineCardResponse*)[[[TXPBFetchOldMachineCardResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchOldMachineCardResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchOldMachineCardResponse*)[[[TXPBFetchOldMachineCardResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchOldMachineCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchOldMachineCardResponse*)[[[TXPBFetchOldMachineCardResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchOldMachineCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchOldMachineCardResponse*)[[[TXPBFetchOldMachineCardResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchOldMachineCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchOldMachineCardResponse*)[[[TXPBFetchOldMachineCardResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchOldMachineCardResponseBuilder*) builder {
  return [[TXPBFetchOldMachineCardResponseBuilder alloc] init];
}
+ (TXPBFetchOldMachineCardResponseBuilder*) builderWithPrototype:(TXPBFetchOldMachineCardResponse*) prototype {
  return [[TXPBFetchOldMachineCardResponse builder] mergeFrom:prototype];
}
- (TXPBFetchOldMachineCardResponseBuilder*) builder {
  return [TXPBFetchOldMachineCardResponse builder];
}
- (TXPBFetchOldMachineCardResponseBuilder*) toBuilder {
  return [TXPBFetchOldMachineCardResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"card"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasSyncVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"syncVersion", [NSNumber numberWithLongLong:self.syncVersion]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBUserCard* element in self.cardArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"card"];
  }
  if (self.hasSyncVersion) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.syncVersion] forKey: @"syncVersion"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchOldMachineCardResponse class]]) {
    return NO;
  }
  TXPBFetchOldMachineCardResponse *otherMessage = other;
  return
      [self.cardArray isEqualToArray:otherMessage.cardArray] &&
      self.hasSyncVersion == otherMessage.hasSyncVersion &&
      (!self.hasSyncVersion || self.syncVersion == otherMessage.syncVersion) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.cardArray enumerateObjectsUsingBlock:^(TXPBUserCard *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasSyncVersion) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.syncVersion] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchOldMachineCardResponseBuilder()
@property (strong) TXPBFetchOldMachineCardResponse* resultFetchOldMachineCardResponse;
@end

@implementation TXPBFetchOldMachineCardResponseBuilder
@synthesize resultFetchOldMachineCardResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchOldMachineCardResponse = [[TXPBFetchOldMachineCardResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchOldMachineCardResponse;
}
- (TXPBFetchOldMachineCardResponseBuilder*) clear {
  self.resultFetchOldMachineCardResponse = [[TXPBFetchOldMachineCardResponse alloc] init];
  return self;
}
- (TXPBFetchOldMachineCardResponseBuilder*) clone {
  return [TXPBFetchOldMachineCardResponse builderWithPrototype:resultFetchOldMachineCardResponse];
}
- (TXPBFetchOldMachineCardResponse*) defaultInstance {
  return [TXPBFetchOldMachineCardResponse defaultInstance];
}
- (TXPBFetchOldMachineCardResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchOldMachineCardResponse*) buildPartial {
  TXPBFetchOldMachineCardResponse* returnMe = resultFetchOldMachineCardResponse;
  self.resultFetchOldMachineCardResponse = nil;
  return returnMe;
}
- (TXPBFetchOldMachineCardResponseBuilder*) mergeFrom:(TXPBFetchOldMachineCardResponse*) other {
  if (other == [TXPBFetchOldMachineCardResponse defaultInstance]) {
    return self;
  }
  if (other.cardArray.count > 0) {
    if (resultFetchOldMachineCardResponse.cardArray == nil) {
      resultFetchOldMachineCardResponse.cardArray = [[NSMutableArray alloc] initWithArray:other.cardArray];
    } else {
      [resultFetchOldMachineCardResponse.cardArray addObjectsFromArray:other.cardArray];
    }
  }
  if (other.hasSyncVersion) {
    [self setSyncVersion:other.syncVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchOldMachineCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchOldMachineCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserCardBuilder* subBuilder = [TXPBUserCard builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCard:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setSyncVersion:[input readInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)card {
  return resultFetchOldMachineCardResponse.cardArray;
}
- (TXPBUserCard*)cardAtIndex:(NSUInteger)index {
  return [resultFetchOldMachineCardResponse cardAtIndex:index];
}
- (TXPBFetchOldMachineCardResponseBuilder *)addCard:(TXPBUserCard*)value {
  if (resultFetchOldMachineCardResponse.cardArray == nil) {
    resultFetchOldMachineCardResponse.cardArray = [[NSMutableArray alloc]init];
  }
  [resultFetchOldMachineCardResponse.cardArray addObject:value];
  return self;
}
- (TXPBFetchOldMachineCardResponseBuilder *)setCardArray:(NSArray *)array {
  resultFetchOldMachineCardResponse.cardArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchOldMachineCardResponseBuilder *)clearCard {
  resultFetchOldMachineCardResponse.cardArray = nil;
  return self;
}
- (BOOL) hasSyncVersion {
  return resultFetchOldMachineCardResponse.hasSyncVersion;
}
- (SInt64) syncVersion {
  return resultFetchOldMachineCardResponse.syncVersion;
}
- (TXPBFetchOldMachineCardResponseBuilder*) setSyncVersion:(SInt64) value {
  resultFetchOldMachineCardResponse.hasSyncVersion = YES;
  resultFetchOldMachineCardResponse.syncVersion = value;
  return self;
}
- (TXPBFetchOldMachineCardResponseBuilder*) clearSyncVersion {
  resultFetchOldMachineCardResponse.hasSyncVersion = NO;
  resultFetchOldMachineCardResponse.syncVersion = 0L;
  return self;
}
@end

@interface TXPBFetchVoiceRequest ()
@property SInt64 gardenId;
@end

@implementation TXPBFetchVoiceRequest

- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenId = 0L;
  }
  return self;
}
static TXPBFetchVoiceRequest* defaultTXPBFetchVoiceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchVoiceRequest class]) {
    defaultTXPBFetchVoiceRequestInstance = [[TXPBFetchVoiceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchVoiceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchVoiceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenId) {
    [output writeInt64:1 value:self.gardenId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenId) {
    size_ += computeInt64Size(1, self.gardenId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchVoiceRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchVoiceRequest*)[[[TXPBFetchVoiceRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchVoiceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchVoiceRequest*)[[[TXPBFetchVoiceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchVoiceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchVoiceRequest*)[[[TXPBFetchVoiceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchVoiceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchVoiceRequest*)[[[TXPBFetchVoiceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchVoiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchVoiceRequest*)[[[TXPBFetchVoiceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchVoiceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchVoiceRequest*)[[[TXPBFetchVoiceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchVoiceRequestBuilder*) builder {
  return [[TXPBFetchVoiceRequestBuilder alloc] init];
}
+ (TXPBFetchVoiceRequestBuilder*) builderWithPrototype:(TXPBFetchVoiceRequest*) prototype {
  return [[TXPBFetchVoiceRequest builder] mergeFrom:prototype];
}
- (TXPBFetchVoiceRequestBuilder*) builder {
  return [TXPBFetchVoiceRequest builder];
}
- (TXPBFetchVoiceRequestBuilder*) toBuilder {
  return [TXPBFetchVoiceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchVoiceRequest class]]) {
    return NO;
  }
  TXPBFetchVoiceRequest *otherMessage = other;
  return
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchVoiceRequestBuilder()
@property (strong) TXPBFetchVoiceRequest* resultFetchVoiceRequest;
@end

@implementation TXPBFetchVoiceRequestBuilder
@synthesize resultFetchVoiceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchVoiceRequest = [[TXPBFetchVoiceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchVoiceRequest;
}
- (TXPBFetchVoiceRequestBuilder*) clear {
  self.resultFetchVoiceRequest = [[TXPBFetchVoiceRequest alloc] init];
  return self;
}
- (TXPBFetchVoiceRequestBuilder*) clone {
  return [TXPBFetchVoiceRequest builderWithPrototype:resultFetchVoiceRequest];
}
- (TXPBFetchVoiceRequest*) defaultInstance {
  return [TXPBFetchVoiceRequest defaultInstance];
}
- (TXPBFetchVoiceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchVoiceRequest*) buildPartial {
  TXPBFetchVoiceRequest* returnMe = resultFetchVoiceRequest;
  self.resultFetchVoiceRequest = nil;
  return returnMe;
}
- (TXPBFetchVoiceRequestBuilder*) mergeFrom:(TXPBFetchVoiceRequest*) other {
  if (other == [TXPBFetchVoiceRequest defaultInstance]) {
    return self;
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchVoiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchVoiceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGardenId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasGardenId {
  return resultFetchVoiceRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultFetchVoiceRequest.gardenId;
}
- (TXPBFetchVoiceRequestBuilder*) setGardenId:(SInt64) value {
  resultFetchVoiceRequest.hasGardenId = YES;
  resultFetchVoiceRequest.gardenId = value;
  return self;
}
- (TXPBFetchVoiceRequestBuilder*) clearGardenId {
  resultFetchVoiceRequest.hasGardenId = NO;
  resultFetchVoiceRequest.gardenId = 0L;
  return self;
}
@end

@interface TXPBFetchVoiceResponse ()
@property SInt32 voiceClass;
@property (strong) NSString* voicePrefix;
@property (strong) NSString* voiceSuffix;
@end

@implementation TXPBFetchVoiceResponse

- (BOOL) hasVoiceClass {
  return !!hasVoiceClass_;
}
- (void) setHasVoiceClass:(BOOL) _value_ {
  hasVoiceClass_ = !!_value_;
}
@synthesize voiceClass;
- (BOOL) hasVoicePrefix {
  return !!hasVoicePrefix_;
}
- (void) setHasVoicePrefix:(BOOL) _value_ {
  hasVoicePrefix_ = !!_value_;
}
@synthesize voicePrefix;
- (BOOL) hasVoiceSuffix {
  return !!hasVoiceSuffix_;
}
- (void) setHasVoiceSuffix:(BOOL) _value_ {
  hasVoiceSuffix_ = !!_value_;
}
@synthesize voiceSuffix;
- (instancetype) init {
  if ((self = [super init])) {
    self.voiceClass = 0;
    self.voicePrefix = @"";
    self.voiceSuffix = @"";
  }
  return self;
}
static TXPBFetchVoiceResponse* defaultTXPBFetchVoiceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchVoiceResponse class]) {
    defaultTXPBFetchVoiceResponseInstance = [[TXPBFetchVoiceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchVoiceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchVoiceResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasVoiceClass) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVoiceClass) {
    [output writeInt32:1 value:self.voiceClass];
  }
  if (self.hasVoicePrefix) {
    [output writeString:2 value:self.voicePrefix];
  }
  if (self.hasVoiceSuffix) {
    [output writeString:3 value:self.voiceSuffix];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVoiceClass) {
    size_ += computeInt32Size(1, self.voiceClass);
  }
  if (self.hasVoicePrefix) {
    size_ += computeStringSize(2, self.voicePrefix);
  }
  if (self.hasVoiceSuffix) {
    size_ += computeStringSize(3, self.voiceSuffix);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchVoiceResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchVoiceResponse*)[[[TXPBFetchVoiceResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchVoiceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchVoiceResponse*)[[[TXPBFetchVoiceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchVoiceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchVoiceResponse*)[[[TXPBFetchVoiceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchVoiceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchVoiceResponse*)[[[TXPBFetchVoiceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchVoiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchVoiceResponse*)[[[TXPBFetchVoiceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchVoiceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchVoiceResponse*)[[[TXPBFetchVoiceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchVoiceResponseBuilder*) builder {
  return [[TXPBFetchVoiceResponseBuilder alloc] init];
}
+ (TXPBFetchVoiceResponseBuilder*) builderWithPrototype:(TXPBFetchVoiceResponse*) prototype {
  return [[TXPBFetchVoiceResponse builder] mergeFrom:prototype];
}
- (TXPBFetchVoiceResponseBuilder*) builder {
  return [TXPBFetchVoiceResponse builder];
}
- (TXPBFetchVoiceResponseBuilder*) toBuilder {
  return [TXPBFetchVoiceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVoiceClass) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voiceClass", [NSNumber numberWithInteger:self.voiceClass]];
  }
  if (self.hasVoicePrefix) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voicePrefix", self.voicePrefix];
  }
  if (self.hasVoiceSuffix) {
    [output appendFormat:@"%@%@: %@\n", indent, @"voiceSuffix", self.voiceSuffix];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasVoiceClass) {
    [dictionary setObject: [NSNumber numberWithInteger:self.voiceClass] forKey: @"voiceClass"];
  }
  if (self.hasVoicePrefix) {
    [dictionary setObject: self.voicePrefix forKey: @"voicePrefix"];
  }
  if (self.hasVoiceSuffix) {
    [dictionary setObject: self.voiceSuffix forKey: @"voiceSuffix"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchVoiceResponse class]]) {
    return NO;
  }
  TXPBFetchVoiceResponse *otherMessage = other;
  return
      self.hasVoiceClass == otherMessage.hasVoiceClass &&
      (!self.hasVoiceClass || self.voiceClass == otherMessage.voiceClass) &&
      self.hasVoicePrefix == otherMessage.hasVoicePrefix &&
      (!self.hasVoicePrefix || [self.voicePrefix isEqual:otherMessage.voicePrefix]) &&
      self.hasVoiceSuffix == otherMessage.hasVoiceSuffix &&
      (!self.hasVoiceSuffix || [self.voiceSuffix isEqual:otherMessage.voiceSuffix]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVoiceClass) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.voiceClass] hash];
  }
  if (self.hasVoicePrefix) {
    hashCode = hashCode * 31 + [self.voicePrefix hash];
  }
  if (self.hasVoiceSuffix) {
    hashCode = hashCode * 31 + [self.voiceSuffix hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchVoiceResponseBuilder()
@property (strong) TXPBFetchVoiceResponse* resultFetchVoiceResponse;
@end

@implementation TXPBFetchVoiceResponseBuilder
@synthesize resultFetchVoiceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchVoiceResponse = [[TXPBFetchVoiceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchVoiceResponse;
}
- (TXPBFetchVoiceResponseBuilder*) clear {
  self.resultFetchVoiceResponse = [[TXPBFetchVoiceResponse alloc] init];
  return self;
}
- (TXPBFetchVoiceResponseBuilder*) clone {
  return [TXPBFetchVoiceResponse builderWithPrototype:resultFetchVoiceResponse];
}
- (TXPBFetchVoiceResponse*) defaultInstance {
  return [TXPBFetchVoiceResponse defaultInstance];
}
- (TXPBFetchVoiceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchVoiceResponse*) buildPartial {
  TXPBFetchVoiceResponse* returnMe = resultFetchVoiceResponse;
  self.resultFetchVoiceResponse = nil;
  return returnMe;
}
- (TXPBFetchVoiceResponseBuilder*) mergeFrom:(TXPBFetchVoiceResponse*) other {
  if (other == [TXPBFetchVoiceResponse defaultInstance]) {
    return self;
  }
  if (other.hasVoiceClass) {
    [self setVoiceClass:other.voiceClass];
  }
  if (other.hasVoicePrefix) {
    [self setVoicePrefix:other.voicePrefix];
  }
  if (other.hasVoiceSuffix) {
    [self setVoiceSuffix:other.voiceSuffix];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchVoiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchVoiceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setVoiceClass:[input readInt32]];
        break;
      }
      case 18: {
        [self setVoicePrefix:[input readString]];
        break;
      }
      case 26: {
        [self setVoiceSuffix:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasVoiceClass {
  return resultFetchVoiceResponse.hasVoiceClass;
}
- (SInt32) voiceClass {
  return resultFetchVoiceResponse.voiceClass;
}
- (TXPBFetchVoiceResponseBuilder*) setVoiceClass:(SInt32) value {
  resultFetchVoiceResponse.hasVoiceClass = YES;
  resultFetchVoiceResponse.voiceClass = value;
  return self;
}
- (TXPBFetchVoiceResponseBuilder*) clearVoiceClass {
  resultFetchVoiceResponse.hasVoiceClass = NO;
  resultFetchVoiceResponse.voiceClass = 0;
  return self;
}
- (BOOL) hasVoicePrefix {
  return resultFetchVoiceResponse.hasVoicePrefix;
}
- (NSString*) voicePrefix {
  return resultFetchVoiceResponse.voicePrefix;
}
- (TXPBFetchVoiceResponseBuilder*) setVoicePrefix:(NSString*) value {
  resultFetchVoiceResponse.hasVoicePrefix = YES;
  resultFetchVoiceResponse.voicePrefix = value;
  return self;
}
- (TXPBFetchVoiceResponseBuilder*) clearVoicePrefix {
  resultFetchVoiceResponse.hasVoicePrefix = NO;
  resultFetchVoiceResponse.voicePrefix = @"";
  return self;
}
- (BOOL) hasVoiceSuffix {
  return resultFetchVoiceResponse.hasVoiceSuffix;
}
- (NSString*) voiceSuffix {
  return resultFetchVoiceResponse.voiceSuffix;
}
- (TXPBFetchVoiceResponseBuilder*) setVoiceSuffix:(NSString*) value {
  resultFetchVoiceResponse.hasVoiceSuffix = YES;
  resultFetchVoiceResponse.voiceSuffix = value;
  return self;
}
- (TXPBFetchVoiceResponseBuilder*) clearVoiceSuffix {
  resultFetchVoiceResponse.hasVoiceSuffix = NO;
  resultFetchVoiceResponse.voiceSuffix = @"";
  return self;
}
@end

@interface TXPBFetchCheckinRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchCheckinRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchCheckinRequest* defaultTXPBFetchCheckinRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCheckinRequest class]) {
    defaultTXPBFetchCheckinRequestInstance = [[TXPBFetchCheckinRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCheckinRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCheckinRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCheckinRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCheckinRequest*)[[[TXPBFetchCheckinRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCheckinRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCheckinRequest*)[[[TXPBFetchCheckinRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCheckinRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCheckinRequest*)[[[TXPBFetchCheckinRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCheckinRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCheckinRequest*)[[[TXPBFetchCheckinRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCheckinRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCheckinRequest*)[[[TXPBFetchCheckinRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCheckinRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCheckinRequest*)[[[TXPBFetchCheckinRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCheckinRequestBuilder*) builder {
  return [[TXPBFetchCheckinRequestBuilder alloc] init];
}
+ (TXPBFetchCheckinRequestBuilder*) builderWithPrototype:(TXPBFetchCheckinRequest*) prototype {
  return [[TXPBFetchCheckinRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCheckinRequestBuilder*) builder {
  return [TXPBFetchCheckinRequest builder];
}
- (TXPBFetchCheckinRequestBuilder*) toBuilder {
  return [TXPBFetchCheckinRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCheckinRequest class]]) {
    return NO;
  }
  TXPBFetchCheckinRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCheckinRequestBuilder()
@property (strong) TXPBFetchCheckinRequest* resultFetchCheckinRequest;
@end

@implementation TXPBFetchCheckinRequestBuilder
@synthesize resultFetchCheckinRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCheckinRequest = [[TXPBFetchCheckinRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCheckinRequest;
}
- (TXPBFetchCheckinRequestBuilder*) clear {
  self.resultFetchCheckinRequest = [[TXPBFetchCheckinRequest alloc] init];
  return self;
}
- (TXPBFetchCheckinRequestBuilder*) clone {
  return [TXPBFetchCheckinRequest builderWithPrototype:resultFetchCheckinRequest];
}
- (TXPBFetchCheckinRequest*) defaultInstance {
  return [TXPBFetchCheckinRequest defaultInstance];
}
- (TXPBFetchCheckinRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCheckinRequest*) buildPartial {
  TXPBFetchCheckinRequest* returnMe = resultFetchCheckinRequest;
  self.resultFetchCheckinRequest = nil;
  return returnMe;
}
- (TXPBFetchCheckinRequestBuilder*) mergeFrom:(TXPBFetchCheckinRequest*) other {
  if (other == [TXPBFetchCheckinRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCheckinRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCheckinRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchCheckinRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchCheckinRequest.maxId;
}
- (TXPBFetchCheckinRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchCheckinRequest.hasMaxId = YES;
  resultFetchCheckinRequest.maxId = value;
  return self;
}
- (TXPBFetchCheckinRequestBuilder*) clearMaxId {
  resultFetchCheckinRequest.hasMaxId = NO;
  resultFetchCheckinRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchCheckinRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchCheckinRequest.sinceId;
}
- (TXPBFetchCheckinRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchCheckinRequest.hasSinceId = YES;
  resultFetchCheckinRequest.sinceId = value;
  return self;
}
- (TXPBFetchCheckinRequestBuilder*) clearSinceId {
  resultFetchCheckinRequest.hasSinceId = NO;
  resultFetchCheckinRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFetchCheckinResponse ()
@property (strong) NSMutableArray * checkinsArray;
@property BOOL hasMore;
@property SInt64 lastFetchTime;
@end

@implementation TXPBFetchCheckinResponse

@synthesize checkinsArray;
@dynamic checkins;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (BOOL) hasLastFetchTime {
  return !!hasLastFetchTime_;
}
- (void) setHasLastFetchTime:(BOOL) _value_ {
  hasLastFetchTime_ = !!_value_;
}
@synthesize lastFetchTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
    self.lastFetchTime = 0L;
  }
  return self;
}
static TXPBFetchCheckinResponse* defaultTXPBFetchCheckinResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCheckinResponse class]) {
    defaultTXPBFetchCheckinResponseInstance = [[TXPBFetchCheckinResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCheckinResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCheckinResponseInstance;
}
- (NSArray *)checkins {
  return checkinsArray;
}
- (TXPBCheckin*)checkinsAtIndex:(NSUInteger)index {
  return [checkinsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  if (!self.hasLastFetchTime) {
    return NO;
  }
  __block BOOL isInitcheckins = YES;
   [self.checkins enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcheckins = NO;
      *stop = YES;
    }
  }];
  if (!isInitcheckins) return isInitcheckins;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  if (self.hasLastFetchTime) {
    [output writeInt64:3 value:self.lastFetchTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  if (self.hasLastFetchTime) {
    size_ += computeInt64Size(3, self.lastFetchTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCheckinResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCheckinResponse*)[[[TXPBFetchCheckinResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCheckinResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCheckinResponse*)[[[TXPBFetchCheckinResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCheckinResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCheckinResponse*)[[[TXPBFetchCheckinResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCheckinResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCheckinResponse*)[[[TXPBFetchCheckinResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCheckinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCheckinResponse*)[[[TXPBFetchCheckinResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCheckinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCheckinResponse*)[[[TXPBFetchCheckinResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCheckinResponseBuilder*) builder {
  return [[TXPBFetchCheckinResponseBuilder alloc] init];
}
+ (TXPBFetchCheckinResponseBuilder*) builderWithPrototype:(TXPBFetchCheckinResponse*) prototype {
  return [[TXPBFetchCheckinResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCheckinResponseBuilder*) builder {
  return [TXPBFetchCheckinResponse builder];
}
- (TXPBFetchCheckinResponseBuilder*) toBuilder {
  return [TXPBFetchCheckinResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"checkins"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  if (self.hasLastFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastFetchTime", [NSNumber numberWithLongLong:self.lastFetchTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCheckin* element in self.checkinsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"checkins"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  if (self.hasLastFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastFetchTime] forKey: @"lastFetchTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCheckinResponse class]]) {
    return NO;
  }
  TXPBFetchCheckinResponse *otherMessage = other;
  return
      [self.checkinsArray isEqualToArray:otherMessage.checkinsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      self.hasLastFetchTime == otherMessage.hasLastFetchTime &&
      (!self.hasLastFetchTime || self.lastFetchTime == otherMessage.lastFetchTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  if (self.hasLastFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastFetchTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCheckinResponseBuilder()
@property (strong) TXPBFetchCheckinResponse* resultFetchCheckinResponse;
@end

@implementation TXPBFetchCheckinResponseBuilder
@synthesize resultFetchCheckinResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCheckinResponse = [[TXPBFetchCheckinResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCheckinResponse;
}
- (TXPBFetchCheckinResponseBuilder*) clear {
  self.resultFetchCheckinResponse = [[TXPBFetchCheckinResponse alloc] init];
  return self;
}
- (TXPBFetchCheckinResponseBuilder*) clone {
  return [TXPBFetchCheckinResponse builderWithPrototype:resultFetchCheckinResponse];
}
- (TXPBFetchCheckinResponse*) defaultInstance {
  return [TXPBFetchCheckinResponse defaultInstance];
}
- (TXPBFetchCheckinResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCheckinResponse*) buildPartial {
  TXPBFetchCheckinResponse* returnMe = resultFetchCheckinResponse;
  self.resultFetchCheckinResponse = nil;
  return returnMe;
}
- (TXPBFetchCheckinResponseBuilder*) mergeFrom:(TXPBFetchCheckinResponse*) other {
  if (other == [TXPBFetchCheckinResponse defaultInstance]) {
    return self;
  }
  if (other.checkinsArray.count > 0) {
    if (resultFetchCheckinResponse.checkinsArray == nil) {
      resultFetchCheckinResponse.checkinsArray = [[NSMutableArray alloc] initWithArray:other.checkinsArray];
    } else {
      [resultFetchCheckinResponse.checkinsArray addObjectsFromArray:other.checkinsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  if (other.hasLastFetchTime) {
    [self setLastFetchTime:other.lastFetchTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCheckinResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCheckinResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCheckinBuilder* subBuilder = [TXPBCheckin builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCheckins:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 24: {
        [self setLastFetchTime:[input readInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)checkins {
  return resultFetchCheckinResponse.checkinsArray;
}
- (TXPBCheckin*)checkinsAtIndex:(NSUInteger)index {
  return [resultFetchCheckinResponse checkinsAtIndex:index];
}
- (TXPBFetchCheckinResponseBuilder *)addCheckins:(TXPBCheckin*)value {
  if (resultFetchCheckinResponse.checkinsArray == nil) {
    resultFetchCheckinResponse.checkinsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCheckinResponse.checkinsArray addObject:value];
  return self;
}
- (TXPBFetchCheckinResponseBuilder *)setCheckinsArray:(NSArray *)array {
  resultFetchCheckinResponse.checkinsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCheckinResponseBuilder *)clearCheckins {
  resultFetchCheckinResponse.checkinsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchCheckinResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchCheckinResponse.hasMore;
}
- (TXPBFetchCheckinResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchCheckinResponse.hasHasMore = YES;
  resultFetchCheckinResponse.hasMore = value;
  return self;
}
- (TXPBFetchCheckinResponseBuilder*) clearHasMore {
  resultFetchCheckinResponse.hasHasMore = NO;
  resultFetchCheckinResponse.hasMore = NO;
  return self;
}
- (BOOL) hasLastFetchTime {
  return resultFetchCheckinResponse.hasLastFetchTime;
}
- (SInt64) lastFetchTime {
  return resultFetchCheckinResponse.lastFetchTime;
}
- (TXPBFetchCheckinResponseBuilder*) setLastFetchTime:(SInt64) value {
  resultFetchCheckinResponse.hasLastFetchTime = YES;
  resultFetchCheckinResponse.lastFetchTime = value;
  return self;
}
- (TXPBFetchCheckinResponseBuilder*) clearLastFetchTime {
  resultFetchCheckinResponse.hasLastFetchTime = NO;
  resultFetchCheckinResponse.lastFetchTime = 0L;
  return self;
}
@end

@interface TXPBGetUploadinfoRequest ()
@end

@implementation TXPBGetUploadinfoRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetUploadinfoRequest* defaultTXPBGetUploadinfoRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetUploadinfoRequest class]) {
    defaultTXPBGetUploadinfoRequestInstance = [[TXPBGetUploadinfoRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetUploadinfoRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetUploadinfoRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetUploadinfoRequest*) parseFromData:(NSData*) data {
  return (TXPBGetUploadinfoRequest*)[[[TXPBGetUploadinfoRequest builder] mergeFromData:data] build];
}
+ (TXPBGetUploadinfoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUploadinfoRequest*)[[[TXPBGetUploadinfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUploadinfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetUploadinfoRequest*)[[[TXPBGetUploadinfoRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBGetUploadinfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUploadinfoRequest*)[[[TXPBGetUploadinfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUploadinfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetUploadinfoRequest*)[[[TXPBGetUploadinfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetUploadinfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUploadinfoRequest*)[[[TXPBGetUploadinfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUploadinfoRequestBuilder*) builder {
  return [[TXPBGetUploadinfoRequestBuilder alloc] init];
}
+ (TXPBGetUploadinfoRequestBuilder*) builderWithPrototype:(TXPBGetUploadinfoRequest*) prototype {
  return [[TXPBGetUploadinfoRequest builder] mergeFrom:prototype];
}
- (TXPBGetUploadinfoRequestBuilder*) builder {
  return [TXPBGetUploadinfoRequest builder];
}
- (TXPBGetUploadinfoRequestBuilder*) toBuilder {
  return [TXPBGetUploadinfoRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetUploadinfoRequest class]]) {
    return NO;
  }
  TXPBGetUploadinfoRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetUploadinfoRequestBuilder()
@property (strong) TXPBGetUploadinfoRequest* resultGetUploadinfoRequest;
@end

@implementation TXPBGetUploadinfoRequestBuilder
@synthesize resultGetUploadinfoRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetUploadinfoRequest = [[TXPBGetUploadinfoRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetUploadinfoRequest;
}
- (TXPBGetUploadinfoRequestBuilder*) clear {
  self.resultGetUploadinfoRequest = [[TXPBGetUploadinfoRequest alloc] init];
  return self;
}
- (TXPBGetUploadinfoRequestBuilder*) clone {
  return [TXPBGetUploadinfoRequest builderWithPrototype:resultGetUploadinfoRequest];
}
- (TXPBGetUploadinfoRequest*) defaultInstance {
  return [TXPBGetUploadinfoRequest defaultInstance];
}
- (TXPBGetUploadinfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetUploadinfoRequest*) buildPartial {
  TXPBGetUploadinfoRequest* returnMe = resultGetUploadinfoRequest;
  self.resultGetUploadinfoRequest = nil;
  return returnMe;
}
- (TXPBGetUploadinfoRequestBuilder*) mergeFrom:(TXPBGetUploadinfoRequest*) other {
  if (other == [TXPBGetUploadinfoRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetUploadinfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetUploadinfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetUploadinfoResponse ()
@property (strong) NSString* token;
@end

@implementation TXPBGetUploadinfoResponse

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (instancetype) init {
  if ((self = [super init])) {
    self.token = @"";
  }
  return self;
}
static TXPBGetUploadinfoResponse* defaultTXPBGetUploadinfoResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetUploadinfoResponse class]) {
    defaultTXPBGetUploadinfoResponseInstance = [[TXPBGetUploadinfoResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetUploadinfoResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetUploadinfoResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasToken) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasToken) {
    size_ += computeStringSize(1, self.token);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetUploadinfoResponse*) parseFromData:(NSData*) data {
  return (TXPBGetUploadinfoResponse*)[[[TXPBGetUploadinfoResponse builder] mergeFromData:data] build];
}
+ (TXPBGetUploadinfoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUploadinfoResponse*)[[[TXPBGetUploadinfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUploadinfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetUploadinfoResponse*)[[[TXPBGetUploadinfoResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBGetUploadinfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUploadinfoResponse*)[[[TXPBGetUploadinfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUploadinfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetUploadinfoResponse*)[[[TXPBGetUploadinfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetUploadinfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetUploadinfoResponse*)[[[TXPBGetUploadinfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetUploadinfoResponseBuilder*) builder {
  return [[TXPBGetUploadinfoResponseBuilder alloc] init];
}
+ (TXPBGetUploadinfoResponseBuilder*) builderWithPrototype:(TXPBGetUploadinfoResponse*) prototype {
  return [[TXPBGetUploadinfoResponse builder] mergeFrom:prototype];
}
- (TXPBGetUploadinfoResponseBuilder*) builder {
  return [TXPBGetUploadinfoResponse builder];
}
- (TXPBGetUploadinfoResponseBuilder*) toBuilder {
  return [TXPBGetUploadinfoResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasToken) {
    [dictionary setObject: self.token forKey: @"token"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetUploadinfoResponse class]]) {
    return NO;
  }
  TXPBGetUploadinfoResponse *otherMessage = other;
  return
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetUploadinfoResponseBuilder()
@property (strong) TXPBGetUploadinfoResponse* resultGetUploadinfoResponse;
@end

@implementation TXPBGetUploadinfoResponseBuilder
@synthesize resultGetUploadinfoResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetUploadinfoResponse = [[TXPBGetUploadinfoResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetUploadinfoResponse;
}
- (TXPBGetUploadinfoResponseBuilder*) clear {
  self.resultGetUploadinfoResponse = [[TXPBGetUploadinfoResponse alloc] init];
  return self;
}
- (TXPBGetUploadinfoResponseBuilder*) clone {
  return [TXPBGetUploadinfoResponse builderWithPrototype:resultGetUploadinfoResponse];
}
- (TXPBGetUploadinfoResponse*) defaultInstance {
  return [TXPBGetUploadinfoResponse defaultInstance];
}
- (TXPBGetUploadinfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetUploadinfoResponse*) buildPartial {
  TXPBGetUploadinfoResponse* returnMe = resultGetUploadinfoResponse;
  self.resultGetUploadinfoResponse = nil;
  return returnMe;
}
- (TXPBGetUploadinfoResponseBuilder*) mergeFrom:(TXPBGetUploadinfoResponse*) other {
  if (other == [TXPBGetUploadinfoResponse defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetUploadinfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetUploadinfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return resultGetUploadinfoResponse.hasToken;
}
- (NSString*) token {
  return resultGetUploadinfoResponse.token;
}
- (TXPBGetUploadinfoResponseBuilder*) setToken:(NSString*) value {
  resultGetUploadinfoResponse.hasToken = YES;
  resultGetUploadinfoResponse.token = value;
  return self;
}
- (TXPBGetUploadinfoResponseBuilder*) clearToken {
  resultGetUploadinfoResponse.hasToken = NO;
  resultGetUploadinfoResponse.token = @"";
  return self;
}
@end

@interface TXPBGetCheckinUploadTokenRequest ()
@end

@implementation TXPBGetCheckinUploadTokenRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetCheckinUploadTokenRequest* defaultTXPBGetCheckinUploadTokenRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetCheckinUploadTokenRequest class]) {
    defaultTXPBGetCheckinUploadTokenRequestInstance = [[TXPBGetCheckinUploadTokenRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetCheckinUploadTokenRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetCheckinUploadTokenRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetCheckinUploadTokenRequest*) parseFromData:(NSData*) data {
  return (TXPBGetCheckinUploadTokenRequest*)[[[TXPBGetCheckinUploadTokenRequest builder] mergeFromData:data] build];
}
+ (TXPBGetCheckinUploadTokenRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetCheckinUploadTokenRequest*)[[[TXPBGetCheckinUploadTokenRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetCheckinUploadTokenRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetCheckinUploadTokenRequest*)[[[TXPBGetCheckinUploadTokenRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBGetCheckinUploadTokenRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetCheckinUploadTokenRequest*)[[[TXPBGetCheckinUploadTokenRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetCheckinUploadTokenRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetCheckinUploadTokenRequest*)[[[TXPBGetCheckinUploadTokenRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetCheckinUploadTokenRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetCheckinUploadTokenRequest*)[[[TXPBGetCheckinUploadTokenRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetCheckinUploadTokenRequestBuilder*) builder {
  return [[TXPBGetCheckinUploadTokenRequestBuilder alloc] init];
}
+ (TXPBGetCheckinUploadTokenRequestBuilder*) builderWithPrototype:(TXPBGetCheckinUploadTokenRequest*) prototype {
  return [[TXPBGetCheckinUploadTokenRequest builder] mergeFrom:prototype];
}
- (TXPBGetCheckinUploadTokenRequestBuilder*) builder {
  return [TXPBGetCheckinUploadTokenRequest builder];
}
- (TXPBGetCheckinUploadTokenRequestBuilder*) toBuilder {
  return [TXPBGetCheckinUploadTokenRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetCheckinUploadTokenRequest class]]) {
    return NO;
  }
  TXPBGetCheckinUploadTokenRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetCheckinUploadTokenRequestBuilder()
@property (strong) TXPBGetCheckinUploadTokenRequest* resultGetCheckinUploadTokenRequest;
@end

@implementation TXPBGetCheckinUploadTokenRequestBuilder
@synthesize resultGetCheckinUploadTokenRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetCheckinUploadTokenRequest = [[TXPBGetCheckinUploadTokenRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetCheckinUploadTokenRequest;
}
- (TXPBGetCheckinUploadTokenRequestBuilder*) clear {
  self.resultGetCheckinUploadTokenRequest = [[TXPBGetCheckinUploadTokenRequest alloc] init];
  return self;
}
- (TXPBGetCheckinUploadTokenRequestBuilder*) clone {
  return [TXPBGetCheckinUploadTokenRequest builderWithPrototype:resultGetCheckinUploadTokenRequest];
}
- (TXPBGetCheckinUploadTokenRequest*) defaultInstance {
  return [TXPBGetCheckinUploadTokenRequest defaultInstance];
}
- (TXPBGetCheckinUploadTokenRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetCheckinUploadTokenRequest*) buildPartial {
  TXPBGetCheckinUploadTokenRequest* returnMe = resultGetCheckinUploadTokenRequest;
  self.resultGetCheckinUploadTokenRequest = nil;
  return returnMe;
}
- (TXPBGetCheckinUploadTokenRequestBuilder*) mergeFrom:(TXPBGetCheckinUploadTokenRequest*) other {
  if (other == [TXPBGetCheckinUploadTokenRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetCheckinUploadTokenRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetCheckinUploadTokenRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetCheckinUploadTokenResponse ()
@property (strong) NSString* token;
@end

@implementation TXPBGetCheckinUploadTokenResponse

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (instancetype) init {
  if ((self = [super init])) {
    self.token = @"";
  }
  return self;
}
static TXPBGetCheckinUploadTokenResponse* defaultTXPBGetCheckinUploadTokenResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetCheckinUploadTokenResponse class]) {
    defaultTXPBGetCheckinUploadTokenResponseInstance = [[TXPBGetCheckinUploadTokenResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetCheckinUploadTokenResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetCheckinUploadTokenResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasToken) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasToken) {
    size_ += computeStringSize(1, self.token);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetCheckinUploadTokenResponse*) parseFromData:(NSData*) data {
  return (TXPBGetCheckinUploadTokenResponse*)[[[TXPBGetCheckinUploadTokenResponse builder] mergeFromData:data] build];
}
+ (TXPBGetCheckinUploadTokenResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetCheckinUploadTokenResponse*)[[[TXPBGetCheckinUploadTokenResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetCheckinUploadTokenResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetCheckinUploadTokenResponse*)[[[TXPBGetCheckinUploadTokenResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBGetCheckinUploadTokenResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetCheckinUploadTokenResponse*)[[[TXPBGetCheckinUploadTokenResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetCheckinUploadTokenResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetCheckinUploadTokenResponse*)[[[TXPBGetCheckinUploadTokenResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetCheckinUploadTokenResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetCheckinUploadTokenResponse*)[[[TXPBGetCheckinUploadTokenResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetCheckinUploadTokenResponseBuilder*) builder {
  return [[TXPBGetCheckinUploadTokenResponseBuilder alloc] init];
}
+ (TXPBGetCheckinUploadTokenResponseBuilder*) builderWithPrototype:(TXPBGetCheckinUploadTokenResponse*) prototype {
  return [[TXPBGetCheckinUploadTokenResponse builder] mergeFrom:prototype];
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) builder {
  return [TXPBGetCheckinUploadTokenResponse builder];
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) toBuilder {
  return [TXPBGetCheckinUploadTokenResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasToken) {
    [dictionary setObject: self.token forKey: @"token"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetCheckinUploadTokenResponse class]]) {
    return NO;
  }
  TXPBGetCheckinUploadTokenResponse *otherMessage = other;
  return
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetCheckinUploadTokenResponseBuilder()
@property (strong) TXPBGetCheckinUploadTokenResponse* resultGetCheckinUploadTokenResponse;
@end

@implementation TXPBGetCheckinUploadTokenResponseBuilder
@synthesize resultGetCheckinUploadTokenResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetCheckinUploadTokenResponse = [[TXPBGetCheckinUploadTokenResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetCheckinUploadTokenResponse;
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) clear {
  self.resultGetCheckinUploadTokenResponse = [[TXPBGetCheckinUploadTokenResponse alloc] init];
  return self;
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) clone {
  return [TXPBGetCheckinUploadTokenResponse builderWithPrototype:resultGetCheckinUploadTokenResponse];
}
- (TXPBGetCheckinUploadTokenResponse*) defaultInstance {
  return [TXPBGetCheckinUploadTokenResponse defaultInstance];
}
- (TXPBGetCheckinUploadTokenResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetCheckinUploadTokenResponse*) buildPartial {
  TXPBGetCheckinUploadTokenResponse* returnMe = resultGetCheckinUploadTokenResponse;
  self.resultGetCheckinUploadTokenResponse = nil;
  return returnMe;
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) mergeFrom:(TXPBGetCheckinUploadTokenResponse*) other {
  if (other == [TXPBGetCheckinUploadTokenResponse defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return resultGetCheckinUploadTokenResponse.hasToken;
}
- (NSString*) token {
  return resultGetCheckinUploadTokenResponse.token;
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) setToken:(NSString*) value {
  resultGetCheckinUploadTokenResponse.hasToken = YES;
  resultGetCheckinUploadTokenResponse.token = value;
  return self;
}
- (TXPBGetCheckinUploadTokenResponseBuilder*) clearToken {
  resultGetCheckinUploadTokenResponse.hasToken = NO;
  resultGetCheckinUploadTokenResponse.token = @"";
  return self;
}
@end

@interface TXPBBindCardInfo ()
@property (strong) NSString* cardCode;
@property (strong) NSString* nickName;
@property TXPBParentType parentType;
@property (strong) NSString* avatar;
@property SInt64 parentId;
@end

@implementation TXPBBindCardInfo

- (BOOL) hasCardCode {
  return !!hasCardCode_;
}
- (void) setHasCardCode:(BOOL) _value_ {
  hasCardCode_ = !!_value_;
}
@synthesize cardCode;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) _value_ {
  hasNickName_ = !!_value_;
}
@synthesize nickName;
- (BOOL) hasParentType {
  return !!hasParentType_;
}
- (void) setHasParentType:(BOOL) _value_ {
  hasParentType_ = !!_value_;
}
@synthesize parentType;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) _value_ {
  hasParentId_ = !!_value_;
}
@synthesize parentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.cardCode = @"";
    self.nickName = @"";
    self.parentType = TXPBParentTypeFather;
    self.avatar = @"";
    self.parentId = 0L;
  }
  return self;
}
static TXPBBindCardInfo* defaultTXPBBindCardInfoInstance = nil;
+ (void) initialize {
  if (self == [TXPBBindCardInfo class]) {
    defaultTXPBBindCardInfoInstance = [[TXPBBindCardInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBBindCardInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBBindCardInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCardCode) {
    [output writeString:1 value:self.cardCode];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  if (self.hasParentType) {
    [output writeEnum:3 value:self.parentType];
  }
  if (self.hasAvatar) {
    [output writeString:4 value:self.avatar];
  }
  if (self.hasParentId) {
    [output writeInt64:5 value:self.parentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCardCode) {
    size_ += computeStringSize(1, self.cardCode);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(2, self.nickName);
  }
  if (self.hasParentType) {
    size_ += computeEnumSize(3, self.parentType);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(4, self.avatar);
  }
  if (self.hasParentId) {
    size_ += computeInt64Size(5, self.parentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBBindCardInfo*) parseFromData:(NSData*) data {
  return (TXPBBindCardInfo*)[[[TXPBBindCardInfo builder] mergeFromData:data] build];
}
+ (TXPBBindCardInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindCardInfo*)[[[TXPBBindCardInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindCardInfo*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBBindCardInfo*)[[[TXPBBindCardInfo builder] mergeFromInputStream:input] build];
}
+ (TXPBBindCardInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindCardInfo*)[[[TXPBBindCardInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindCardInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBBindCardInfo*)[[[TXPBBindCardInfo builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBBindCardInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindCardInfo*)[[[TXPBBindCardInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindCardInfoBuilder*) builder {
  return [[TXPBBindCardInfoBuilder alloc] init];
}
+ (TXPBBindCardInfoBuilder*) builderWithPrototype:(TXPBBindCardInfo*) prototype {
  return [[TXPBBindCardInfo builder] mergeFrom:prototype];
}
- (TXPBBindCardInfoBuilder*) builder {
  return [TXPBBindCardInfo builder];
}
- (TXPBBindCardInfoBuilder*) toBuilder {
  return [TXPBBindCardInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCardCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardCode", self.cardCode];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  if (self.hasParentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentType", NSStringFromTXPBParentType(self.parentType)];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithLongLong:self.parentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCardCode) {
    [dictionary setObject: self.cardCode forKey: @"cardCode"];
  }
  if (self.hasNickName) {
    [dictionary setObject: self.nickName forKey: @"nickName"];
  }
  if (self.hasParentType) {
    [dictionary setObject: @(self.parentType) forKey: @"parentType"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasParentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentId] forKey: @"parentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBBindCardInfo class]]) {
    return NO;
  }
  TXPBBindCardInfo *otherMessage = other;
  return
      self.hasCardCode == otherMessage.hasCardCode &&
      (!self.hasCardCode || [self.cardCode isEqual:otherMessage.cardCode]) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      self.hasParentType == otherMessage.hasParentType &&
      (!self.hasParentType || self.parentType == otherMessage.parentType) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCardCode) {
    hashCode = hashCode * 31 + [self.cardCode hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  if (self.hasParentType) {
    hashCode = hashCode * 31 + self.parentType;
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBBindCardInfoBuilder()
@property (strong) TXPBBindCardInfo* resultBindCardInfo;
@end

@implementation TXPBBindCardInfoBuilder
@synthesize resultBindCardInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBindCardInfo = [[TXPBBindCardInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBindCardInfo;
}
- (TXPBBindCardInfoBuilder*) clear {
  self.resultBindCardInfo = [[TXPBBindCardInfo alloc] init];
  return self;
}
- (TXPBBindCardInfoBuilder*) clone {
  return [TXPBBindCardInfo builderWithPrototype:resultBindCardInfo];
}
- (TXPBBindCardInfo*) defaultInstance {
  return [TXPBBindCardInfo defaultInstance];
}
- (TXPBBindCardInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBBindCardInfo*) buildPartial {
  TXPBBindCardInfo* returnMe = resultBindCardInfo;
  self.resultBindCardInfo = nil;
  return returnMe;
}
- (TXPBBindCardInfoBuilder*) mergeFrom:(TXPBBindCardInfo*) other {
  if (other == [TXPBBindCardInfo defaultInstance]) {
    return self;
  }
  if (other.hasCardCode) {
    [self setCardCode:other.cardCode];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasParentType) {
    [self setParentType:other.parentType];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBBindCardInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBBindCardInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCardCode:[input readString]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
      case 24: {
        TXPBParentType value = (TXPBParentType)[input readEnum];
        if (TXPBParentTypeIsValidValue(value)) {
          [self setParentType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setParentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCardCode {
  return resultBindCardInfo.hasCardCode;
}
- (NSString*) cardCode {
  return resultBindCardInfo.cardCode;
}
- (TXPBBindCardInfoBuilder*) setCardCode:(NSString*) value {
  resultBindCardInfo.hasCardCode = YES;
  resultBindCardInfo.cardCode = value;
  return self;
}
- (TXPBBindCardInfoBuilder*) clearCardCode {
  resultBindCardInfo.hasCardCode = NO;
  resultBindCardInfo.cardCode = @"";
  return self;
}
- (BOOL) hasNickName {
  return resultBindCardInfo.hasNickName;
}
- (NSString*) nickName {
  return resultBindCardInfo.nickName;
}
- (TXPBBindCardInfoBuilder*) setNickName:(NSString*) value {
  resultBindCardInfo.hasNickName = YES;
  resultBindCardInfo.nickName = value;
  return self;
}
- (TXPBBindCardInfoBuilder*) clearNickName {
  resultBindCardInfo.hasNickName = NO;
  resultBindCardInfo.nickName = @"";
  return self;
}
- (BOOL) hasParentType {
  return resultBindCardInfo.hasParentType;
}
- (TXPBParentType) parentType {
  return resultBindCardInfo.parentType;
}
- (TXPBBindCardInfoBuilder*) setParentType:(TXPBParentType) value {
  resultBindCardInfo.hasParentType = YES;
  resultBindCardInfo.parentType = value;
  return self;
}
- (TXPBBindCardInfoBuilder*) clearParentType {
  resultBindCardInfo.hasParentType = NO;
  resultBindCardInfo.parentType = TXPBParentTypeFather;
  return self;
}
- (BOOL) hasAvatar {
  return resultBindCardInfo.hasAvatar;
}
- (NSString*) avatar {
  return resultBindCardInfo.avatar;
}
- (TXPBBindCardInfoBuilder*) setAvatar:(NSString*) value {
  resultBindCardInfo.hasAvatar = YES;
  resultBindCardInfo.avatar = value;
  return self;
}
- (TXPBBindCardInfoBuilder*) clearAvatar {
  resultBindCardInfo.hasAvatar = NO;
  resultBindCardInfo.avatar = @"";
  return self;
}
- (BOOL) hasParentId {
  return resultBindCardInfo.hasParentId;
}
- (SInt64) parentId {
  return resultBindCardInfo.parentId;
}
- (TXPBBindCardInfoBuilder*) setParentId:(SInt64) value {
  resultBindCardInfo.hasParentId = YES;
  resultBindCardInfo.parentId = value;
  return self;
}
- (TXPBBindCardInfoBuilder*) clearParentId {
  resultBindCardInfo.hasParentId = NO;
  resultBindCardInfo.parentId = 0L;
  return self;
}
@end

@interface TXPBFetchUserCardResponse ()
@property (strong) NSMutableArray * biandCardInfoArray;
@end

@implementation TXPBFetchUserCardResponse

@synthesize biandCardInfoArray;
@dynamic biandCardInfo;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchUserCardResponse* defaultTXPBFetchUserCardResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserCardResponse class]) {
    defaultTXPBFetchUserCardResponseInstance = [[TXPBFetchUserCardResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserCardResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserCardResponseInstance;
}
- (NSArray *)biandCardInfo {
  return biandCardInfoArray;
}
- (TXPBBindCardInfo*)biandCardInfoAtIndex:(NSUInteger)index {
  return [biandCardInfoArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.biandCardInfoArray enumerateObjectsUsingBlock:^(TXPBBindCardInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.biandCardInfoArray enumerateObjectsUsingBlock:^(TXPBBindCardInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserCardResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchUserCardResponse*)[[[TXPBFetchUserCardResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchUserCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCardResponse*)[[[TXPBFetchUserCardResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCardResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserCardResponse*)[[[TXPBFetchUserCardResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCardResponse*)[[[TXPBFetchUserCardResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserCardResponse*)[[[TXPBFetchUserCardResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserCardResponse*)[[[TXPBFetchUserCardResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserCardResponseBuilder*) builder {
  return [[TXPBFetchUserCardResponseBuilder alloc] init];
}
+ (TXPBFetchUserCardResponseBuilder*) builderWithPrototype:(TXPBFetchUserCardResponse*) prototype {
  return [[TXPBFetchUserCardResponse builder] mergeFrom:prototype];
}
- (TXPBFetchUserCardResponseBuilder*) builder {
  return [TXPBFetchUserCardResponse builder];
}
- (TXPBFetchUserCardResponseBuilder*) toBuilder {
  return [TXPBFetchUserCardResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.biandCardInfoArray enumerateObjectsUsingBlock:^(TXPBBindCardInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"biandCardInfo"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBBindCardInfo* element in self.biandCardInfoArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"biandCardInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserCardResponse class]]) {
    return NO;
  }
  TXPBFetchUserCardResponse *otherMessage = other;
  return
      [self.biandCardInfoArray isEqualToArray:otherMessage.biandCardInfoArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.biandCardInfoArray enumerateObjectsUsingBlock:^(TXPBBindCardInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserCardResponseBuilder()
@property (strong) TXPBFetchUserCardResponse* resultFetchUserCardResponse;
@end

@implementation TXPBFetchUserCardResponseBuilder
@synthesize resultFetchUserCardResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserCardResponse = [[TXPBFetchUserCardResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserCardResponse;
}
- (TXPBFetchUserCardResponseBuilder*) clear {
  self.resultFetchUserCardResponse = [[TXPBFetchUserCardResponse alloc] init];
  return self;
}
- (TXPBFetchUserCardResponseBuilder*) clone {
  return [TXPBFetchUserCardResponse builderWithPrototype:resultFetchUserCardResponse];
}
- (TXPBFetchUserCardResponse*) defaultInstance {
  return [TXPBFetchUserCardResponse defaultInstance];
}
- (TXPBFetchUserCardResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserCardResponse*) buildPartial {
  TXPBFetchUserCardResponse* returnMe = resultFetchUserCardResponse;
  self.resultFetchUserCardResponse = nil;
  return returnMe;
}
- (TXPBFetchUserCardResponseBuilder*) mergeFrom:(TXPBFetchUserCardResponse*) other {
  if (other == [TXPBFetchUserCardResponse defaultInstance]) {
    return self;
  }
  if (other.biandCardInfoArray.count > 0) {
    if (resultFetchUserCardResponse.biandCardInfoArray == nil) {
      resultFetchUserCardResponse.biandCardInfoArray = [[NSMutableArray alloc] initWithArray:other.biandCardInfoArray];
    } else {
      [resultFetchUserCardResponse.biandCardInfoArray addObjectsFromArray:other.biandCardInfoArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserCardResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBBindCardInfoBuilder* subBuilder = [TXPBBindCardInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBiandCardInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)biandCardInfo {
  return resultFetchUserCardResponse.biandCardInfoArray;
}
- (TXPBBindCardInfo*)biandCardInfoAtIndex:(NSUInteger)index {
  return [resultFetchUserCardResponse biandCardInfoAtIndex:index];
}
- (TXPBFetchUserCardResponseBuilder *)addBiandCardInfo:(TXPBBindCardInfo*)value {
  if (resultFetchUserCardResponse.biandCardInfoArray == nil) {
    resultFetchUserCardResponse.biandCardInfoArray = [[NSMutableArray alloc]init];
  }
  [resultFetchUserCardResponse.biandCardInfoArray addObject:value];
  return self;
}
- (TXPBFetchUserCardResponseBuilder *)setBiandCardInfoArray:(NSArray *)array {
  resultFetchUserCardResponse.biandCardInfoArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchUserCardResponseBuilder *)clearBiandCardInfo {
  resultFetchUserCardResponse.biandCardInfoArray = nil;
  return self;
}
@end

@interface TXPBFeedMedicineTask ()
@property SInt64 id;
@property SInt64 beginDate;
@property (strong) NSString* desc;
@property (strong) NSMutableArray * attachesArray;
@property SInt64 parentUserId;
@property (strong) NSString* parentName;
@property (strong) NSString* parentAvatarUrl;
@property SInt64 classId;
@property (strong) NSString* className;
@property (strong) NSString* classAvatarUrl;
@property SInt64 createdOn;
@property SInt32 status;
@property SInt64 updateOn;
@property BOOL hasRead;
@end

@implementation TXPBFeedMedicineTask

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasBeginDate {
  return !!hasBeginDate_;
}
- (void) setHasBeginDate:(BOOL) _value_ {
  hasBeginDate_ = !!_value_;
}
@synthesize beginDate;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) _value_ {
  hasDesc_ = !!_value_;
}
@synthesize desc;
@synthesize attachesArray;
@dynamic attaches;
- (BOOL) hasParentUserId {
  return !!hasParentUserId_;
}
- (void) setHasParentUserId:(BOOL) _value_ {
  hasParentUserId_ = !!_value_;
}
@synthesize parentUserId;
- (BOOL) hasParentName {
  return !!hasParentName_;
}
- (void) setHasParentName:(BOOL) _value_ {
  hasParentName_ = !!_value_;
}
@synthesize parentName;
- (BOOL) hasParentAvatarUrl {
  return !!hasParentAvatarUrl_;
}
- (void) setHasParentAvatarUrl:(BOOL) _value_ {
  hasParentAvatarUrl_ = !!_value_;
}
@synthesize parentAvatarUrl;
- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (BOOL) hasClassName {
  return !!hasClassName_;
}
- (void) setHasClassName:(BOOL) _value_ {
  hasClassName_ = !!_value_;
}
@synthesize className;
- (BOOL) hasClassAvatarUrl {
  return !!hasClassAvatarUrl_;
}
- (void) setHasClassAvatarUrl:(BOOL) _value_ {
  hasClassAvatarUrl_ = !!_value_;
}
@synthesize classAvatarUrl;
- (BOOL) hasCreatedOn {
  return !!hasCreatedOn_;
}
- (void) setHasCreatedOn:(BOOL) _value_ {
  hasCreatedOn_ = !!_value_;
}
@synthesize createdOn;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
- (BOOL) hasHasRead {
  return !!hasHasRead_;
}
- (void) setHasHasRead:(BOOL) _value_ {
  hasHasRead_ = !!_value_;
}
- (BOOL) hasRead {
  return !!hasRead_;
}
- (void) setHasRead:(BOOL) _value_ {
  hasRead_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.beginDate = 0L;
    self.desc = @"";
    self.parentUserId = 0L;
    self.parentName = @"";
    self.parentAvatarUrl = @"";
    self.classId = 0L;
    self.className = @"";
    self.classAvatarUrl = @"";
    self.createdOn = 0L;
    self.status = 0;
    self.updateOn = 0L;
    self.hasRead = NO;
  }
  return self;
}
static TXPBFeedMedicineTask* defaultTXPBFeedMedicineTaskInstance = nil;
+ (void) initialize {
  if (self == [TXPBFeedMedicineTask class]) {
    defaultTXPBFeedMedicineTaskInstance = [[TXPBFeedMedicineTask alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFeedMedicineTaskInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFeedMedicineTaskInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasBeginDate) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  if (!self.hasParentUserId) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasBeginDate) {
    [output writeInt64:2 value:self.beginDate];
  }
  if (self.hasDesc) {
    [output writeString:3 value:self.desc];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasParentUserId) {
    [output writeInt64:5 value:self.parentUserId];
  }
  if (self.hasParentName) {
    [output writeString:6 value:self.parentName];
  }
  if (self.hasParentAvatarUrl) {
    [output writeString:7 value:self.parentAvatarUrl];
  }
  if (self.hasClassId) {
    [output writeInt64:8 value:self.classId];
  }
  if (self.hasClassName) {
    [output writeString:9 value:self.className];
  }
  if (self.hasClassAvatarUrl) {
    [output writeString:10 value:self.classAvatarUrl];
  }
  if (self.hasCreatedOn) {
    [output writeInt64:11 value:self.createdOn];
  }
  if (self.hasStatus) {
    [output writeInt32:12 value:self.status];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:13 value:self.updateOn];
  }
  if (self.hasHasRead) {
    [output writeBool:14 value:self.hasRead];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasBeginDate) {
    size_ += computeInt64Size(2, self.beginDate);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(3, self.desc);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasParentUserId) {
    size_ += computeInt64Size(5, self.parentUserId);
  }
  if (self.hasParentName) {
    size_ += computeStringSize(6, self.parentName);
  }
  if (self.hasParentAvatarUrl) {
    size_ += computeStringSize(7, self.parentAvatarUrl);
  }
  if (self.hasClassId) {
    size_ += computeInt64Size(8, self.classId);
  }
  if (self.hasClassName) {
    size_ += computeStringSize(9, self.className);
  }
  if (self.hasClassAvatarUrl) {
    size_ += computeStringSize(10, self.classAvatarUrl);
  }
  if (self.hasCreatedOn) {
    size_ += computeInt64Size(11, self.createdOn);
  }
  if (self.hasStatus) {
    size_ += computeInt32Size(12, self.status);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(13, self.updateOn);
  }
  if (self.hasHasRead) {
    size_ += computeBoolSize(14, self.hasRead);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFeedMedicineTask*) parseFromData:(NSData*) data {
  return (TXPBFeedMedicineTask*)[[[TXPBFeedMedicineTask builder] mergeFromData:data] build];
}
+ (TXPBFeedMedicineTask*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeedMedicineTask*)[[[TXPBFeedMedicineTask builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeedMedicineTask*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFeedMedicineTask*)[[[TXPBFeedMedicineTask builder] mergeFromInputStream:input] build];
}
+ (TXPBFeedMedicineTask*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeedMedicineTask*)[[[TXPBFeedMedicineTask builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeedMedicineTask*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFeedMedicineTask*)[[[TXPBFeedMedicineTask builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFeedMedicineTask*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeedMedicineTask*)[[[TXPBFeedMedicineTask builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeedMedicineTaskBuilder*) builder {
  return [[TXPBFeedMedicineTaskBuilder alloc] init];
}
+ (TXPBFeedMedicineTaskBuilder*) builderWithPrototype:(TXPBFeedMedicineTask*) prototype {
  return [[TXPBFeedMedicineTask builder] mergeFrom:prototype];
}
- (TXPBFeedMedicineTaskBuilder*) builder {
  return [TXPBFeedMedicineTask builder];
}
- (TXPBFeedMedicineTaskBuilder*) toBuilder {
  return [TXPBFeedMedicineTask builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasBeginDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beginDate", [NSNumber numberWithLongLong:self.beginDate]];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasParentUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentUserId", [NSNumber numberWithLongLong:self.parentUserId]];
  }
  if (self.hasParentName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentName", self.parentName];
  }
  if (self.hasParentAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentAvatarUrl", self.parentAvatarUrl];
  }
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  if (self.hasClassName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"className", self.className];
  }
  if (self.hasClassAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classAvatarUrl", self.classAvatarUrl];
  }
  if (self.hasCreatedOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdOn", [NSNumber numberWithLongLong:self.createdOn]];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  if (self.hasHasRead) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasRead", [NSNumber numberWithBool:self.hasRead]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasBeginDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.beginDate] forKey: @"beginDate"];
  }
  if (self.hasDesc) {
    [dictionary setObject: self.desc forKey: @"desc"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  if (self.hasParentUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentUserId] forKey: @"parentUserId"];
  }
  if (self.hasParentName) {
    [dictionary setObject: self.parentName forKey: @"parentName"];
  }
  if (self.hasParentAvatarUrl) {
    [dictionary setObject: self.parentAvatarUrl forKey: @"parentAvatarUrl"];
  }
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  if (self.hasClassName) {
    [dictionary setObject: self.className forKey: @"className"];
  }
  if (self.hasClassAvatarUrl) {
    [dictionary setObject: self.classAvatarUrl forKey: @"classAvatarUrl"];
  }
  if (self.hasCreatedOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdOn] forKey: @"createdOn"];
  }
  if (self.hasStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.status] forKey: @"status"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  if (self.hasHasRead) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasRead] forKey: @"hasRead"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFeedMedicineTask class]]) {
    return NO;
  }
  TXPBFeedMedicineTask *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasBeginDate == otherMessage.hasBeginDate &&
      (!self.hasBeginDate || self.beginDate == otherMessage.beginDate) &&
      self.hasDesc == otherMessage.hasDesc &&
      (!self.hasDesc || [self.desc isEqual:otherMessage.desc]) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      self.hasParentUserId == otherMessage.hasParentUserId &&
      (!self.hasParentUserId || self.parentUserId == otherMessage.parentUserId) &&
      self.hasParentName == otherMessage.hasParentName &&
      (!self.hasParentName || [self.parentName isEqual:otherMessage.parentName]) &&
      self.hasParentAvatarUrl == otherMessage.hasParentAvatarUrl &&
      (!self.hasParentAvatarUrl || [self.parentAvatarUrl isEqual:otherMessage.parentAvatarUrl]) &&
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      self.hasClassName == otherMessage.hasClassName &&
      (!self.hasClassName || [self.className isEqual:otherMessage.className]) &&
      self.hasClassAvatarUrl == otherMessage.hasClassAvatarUrl &&
      (!self.hasClassAvatarUrl || [self.classAvatarUrl isEqual:otherMessage.classAvatarUrl]) &&
      self.hasCreatedOn == otherMessage.hasCreatedOn &&
      (!self.hasCreatedOn || self.createdOn == otherMessage.createdOn) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      self.hasHasRead == otherMessage.hasHasRead &&
      (!self.hasHasRead || self.hasRead == otherMessage.hasRead) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasBeginDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.beginDate] hash];
  }
  if (self.hasDesc) {
    hashCode = hashCode * 31 + [self.desc hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasParentUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentUserId] hash];
  }
  if (self.hasParentName) {
    hashCode = hashCode * 31 + [self.parentName hash];
  }
  if (self.hasParentAvatarUrl) {
    hashCode = hashCode * 31 + [self.parentAvatarUrl hash];
  }
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  if (self.hasClassName) {
    hashCode = hashCode * 31 + [self.className hash];
  }
  if (self.hasClassAvatarUrl) {
    hashCode = hashCode * 31 + [self.classAvatarUrl hash];
  }
  if (self.hasCreatedOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdOn] hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.status] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  if (self.hasHasRead) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasRead] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFeedMedicineTaskBuilder()
@property (strong) TXPBFeedMedicineTask* resultFeedMedicineTask;
@end

@implementation TXPBFeedMedicineTaskBuilder
@synthesize resultFeedMedicineTask;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFeedMedicineTask = [[TXPBFeedMedicineTask alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFeedMedicineTask;
}
- (TXPBFeedMedicineTaskBuilder*) clear {
  self.resultFeedMedicineTask = [[TXPBFeedMedicineTask alloc] init];
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clone {
  return [TXPBFeedMedicineTask builderWithPrototype:resultFeedMedicineTask];
}
- (TXPBFeedMedicineTask*) defaultInstance {
  return [TXPBFeedMedicineTask defaultInstance];
}
- (TXPBFeedMedicineTask*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFeedMedicineTask*) buildPartial {
  TXPBFeedMedicineTask* returnMe = resultFeedMedicineTask;
  self.resultFeedMedicineTask = nil;
  return returnMe;
}
- (TXPBFeedMedicineTaskBuilder*) mergeFrom:(TXPBFeedMedicineTask*) other {
  if (other == [TXPBFeedMedicineTask defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasBeginDate) {
    [self setBeginDate:other.beginDate];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.attachesArray.count > 0) {
    if (resultFeedMedicineTask.attachesArray == nil) {
      resultFeedMedicineTask.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultFeedMedicineTask.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  if (other.hasParentUserId) {
    [self setParentUserId:other.parentUserId];
  }
  if (other.hasParentName) {
    [self setParentName:other.parentName];
  }
  if (other.hasParentAvatarUrl) {
    [self setParentAvatarUrl:other.parentAvatarUrl];
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  if (other.hasClassName) {
    [self setClassName:other.className];
  }
  if (other.hasClassAvatarUrl) {
    [self setClassAvatarUrl:other.classAvatarUrl];
  }
  if (other.hasCreatedOn) {
    [self setCreatedOn:other.createdOn];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.hasHasRead) {
    [self setHasRead:other.hasRead];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFeedMedicineTaskBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setBeginDate:[input readInt64]];
        break;
      }
      case 26: {
        [self setDesc:[input readString]];
        break;
      }
      case 34: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setParentUserId:[input readInt64]];
        break;
      }
      case 50: {
        [self setParentName:[input readString]];
        break;
      }
      case 58: {
        [self setParentAvatarUrl:[input readString]];
        break;
      }
      case 64: {
        [self setClassId:[input readInt64]];
        break;
      }
      case 74: {
        [self setClassName:[input readString]];
        break;
      }
      case 82: {
        [self setClassAvatarUrl:[input readString]];
        break;
      }
      case 88: {
        [self setCreatedOn:[input readInt64]];
        break;
      }
      case 96: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 104: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 112: {
        [self setHasRead:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultFeedMedicineTask.hasId;
}
- (SInt64) id {
  return resultFeedMedicineTask.id;
}
- (TXPBFeedMedicineTaskBuilder*) setId:(SInt64) value {
  resultFeedMedicineTask.hasId = YES;
  resultFeedMedicineTask.id = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearId {
  resultFeedMedicineTask.hasId = NO;
  resultFeedMedicineTask.id = 0L;
  return self;
}
- (BOOL) hasBeginDate {
  return resultFeedMedicineTask.hasBeginDate;
}
- (SInt64) beginDate {
  return resultFeedMedicineTask.beginDate;
}
- (TXPBFeedMedicineTaskBuilder*) setBeginDate:(SInt64) value {
  resultFeedMedicineTask.hasBeginDate = YES;
  resultFeedMedicineTask.beginDate = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearBeginDate {
  resultFeedMedicineTask.hasBeginDate = NO;
  resultFeedMedicineTask.beginDate = 0L;
  return self;
}
- (BOOL) hasDesc {
  return resultFeedMedicineTask.hasDesc;
}
- (NSString*) desc {
  return resultFeedMedicineTask.desc;
}
- (TXPBFeedMedicineTaskBuilder*) setDesc:(NSString*) value {
  resultFeedMedicineTask.hasDesc = YES;
  resultFeedMedicineTask.desc = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearDesc {
  resultFeedMedicineTask.hasDesc = NO;
  resultFeedMedicineTask.desc = @"";
  return self;
}
- (NSMutableArray *)attaches {
  return resultFeedMedicineTask.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultFeedMedicineTask attachesAtIndex:index];
}
- (TXPBFeedMedicineTaskBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultFeedMedicineTask.attachesArray == nil) {
    resultFeedMedicineTask.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultFeedMedicineTask.attachesArray addObject:value];
  return self;
}
- (TXPBFeedMedicineTaskBuilder *)setAttachesArray:(NSArray *)array {
  resultFeedMedicineTask.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFeedMedicineTaskBuilder *)clearAttaches {
  resultFeedMedicineTask.attachesArray = nil;
  return self;
}
- (BOOL) hasParentUserId {
  return resultFeedMedicineTask.hasParentUserId;
}
- (SInt64) parentUserId {
  return resultFeedMedicineTask.parentUserId;
}
- (TXPBFeedMedicineTaskBuilder*) setParentUserId:(SInt64) value {
  resultFeedMedicineTask.hasParentUserId = YES;
  resultFeedMedicineTask.parentUserId = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearParentUserId {
  resultFeedMedicineTask.hasParentUserId = NO;
  resultFeedMedicineTask.parentUserId = 0L;
  return self;
}
- (BOOL) hasParentName {
  return resultFeedMedicineTask.hasParentName;
}
- (NSString*) parentName {
  return resultFeedMedicineTask.parentName;
}
- (TXPBFeedMedicineTaskBuilder*) setParentName:(NSString*) value {
  resultFeedMedicineTask.hasParentName = YES;
  resultFeedMedicineTask.parentName = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearParentName {
  resultFeedMedicineTask.hasParentName = NO;
  resultFeedMedicineTask.parentName = @"";
  return self;
}
- (BOOL) hasParentAvatarUrl {
  return resultFeedMedicineTask.hasParentAvatarUrl;
}
- (NSString*) parentAvatarUrl {
  return resultFeedMedicineTask.parentAvatarUrl;
}
- (TXPBFeedMedicineTaskBuilder*) setParentAvatarUrl:(NSString*) value {
  resultFeedMedicineTask.hasParentAvatarUrl = YES;
  resultFeedMedicineTask.parentAvatarUrl = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearParentAvatarUrl {
  resultFeedMedicineTask.hasParentAvatarUrl = NO;
  resultFeedMedicineTask.parentAvatarUrl = @"";
  return self;
}
- (BOOL) hasClassId {
  return resultFeedMedicineTask.hasClassId;
}
- (SInt64) classId {
  return resultFeedMedicineTask.classId;
}
- (TXPBFeedMedicineTaskBuilder*) setClassId:(SInt64) value {
  resultFeedMedicineTask.hasClassId = YES;
  resultFeedMedicineTask.classId = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearClassId {
  resultFeedMedicineTask.hasClassId = NO;
  resultFeedMedicineTask.classId = 0L;
  return self;
}
- (BOOL) hasClassName {
  return resultFeedMedicineTask.hasClassName;
}
- (NSString*) className {
  return resultFeedMedicineTask.className;
}
- (TXPBFeedMedicineTaskBuilder*) setClassName:(NSString*) value {
  resultFeedMedicineTask.hasClassName = YES;
  resultFeedMedicineTask.className = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearClassName {
  resultFeedMedicineTask.hasClassName = NO;
  resultFeedMedicineTask.className = @"";
  return self;
}
- (BOOL) hasClassAvatarUrl {
  return resultFeedMedicineTask.hasClassAvatarUrl;
}
- (NSString*) classAvatarUrl {
  return resultFeedMedicineTask.classAvatarUrl;
}
- (TXPBFeedMedicineTaskBuilder*) setClassAvatarUrl:(NSString*) value {
  resultFeedMedicineTask.hasClassAvatarUrl = YES;
  resultFeedMedicineTask.classAvatarUrl = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearClassAvatarUrl {
  resultFeedMedicineTask.hasClassAvatarUrl = NO;
  resultFeedMedicineTask.classAvatarUrl = @"";
  return self;
}
- (BOOL) hasCreatedOn {
  return resultFeedMedicineTask.hasCreatedOn;
}
- (SInt64) createdOn {
  return resultFeedMedicineTask.createdOn;
}
- (TXPBFeedMedicineTaskBuilder*) setCreatedOn:(SInt64) value {
  resultFeedMedicineTask.hasCreatedOn = YES;
  resultFeedMedicineTask.createdOn = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearCreatedOn {
  resultFeedMedicineTask.hasCreatedOn = NO;
  resultFeedMedicineTask.createdOn = 0L;
  return self;
}
- (BOOL) hasStatus {
  return resultFeedMedicineTask.hasStatus;
}
- (SInt32) status {
  return resultFeedMedicineTask.status;
}
- (TXPBFeedMedicineTaskBuilder*) setStatus:(SInt32) value {
  resultFeedMedicineTask.hasStatus = YES;
  resultFeedMedicineTask.status = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearStatus {
  resultFeedMedicineTask.hasStatus = NO;
  resultFeedMedicineTask.status = 0;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultFeedMedicineTask.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultFeedMedicineTask.updateOn;
}
- (TXPBFeedMedicineTaskBuilder*) setUpdateOn:(SInt64) value {
  resultFeedMedicineTask.hasUpdateOn = YES;
  resultFeedMedicineTask.updateOn = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearUpdateOn {
  resultFeedMedicineTask.hasUpdateOn = NO;
  resultFeedMedicineTask.updateOn = 0L;
  return self;
}
- (BOOL) hasHasRead {
  return resultFeedMedicineTask.hasHasRead;
}
- (BOOL) hasRead {
  return resultFeedMedicineTask.hasRead;
}
- (TXPBFeedMedicineTaskBuilder*) setHasRead:(BOOL) value {
  resultFeedMedicineTask.hasHasRead = YES;
  resultFeedMedicineTask.hasRead = value;
  return self;
}
- (TXPBFeedMedicineTaskBuilder*) clearHasRead {
  resultFeedMedicineTask.hasHasRead = NO;
  resultFeedMedicineTask.hasRead = NO;
  return self;
}
@end

@interface TXPBFetchFeedMedicineTaskRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchFeedMedicineTaskRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchFeedMedicineTaskRequest* defaultTXPBFetchFeedMedicineTaskRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchFeedMedicineTaskRequest class]) {
    defaultTXPBFetchFeedMedicineTaskRequestInstance = [[TXPBFetchFeedMedicineTaskRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchFeedMedicineTaskRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchFeedMedicineTaskRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchFeedMedicineTaskRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchFeedMedicineTaskRequest*)[[[TXPBFetchFeedMedicineTaskRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchFeedMedicineTaskRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedMedicineTaskRequest*)[[[TXPBFetchFeedMedicineTaskRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedMedicineTaskRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchFeedMedicineTaskRequest*)[[[TXPBFetchFeedMedicineTaskRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchFeedMedicineTaskRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedMedicineTaskRequest*)[[[TXPBFetchFeedMedicineTaskRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedMedicineTaskRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchFeedMedicineTaskRequest*)[[[TXPBFetchFeedMedicineTaskRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchFeedMedicineTaskRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedMedicineTaskRequest*)[[[TXPBFetchFeedMedicineTaskRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedMedicineTaskRequestBuilder*) builder {
  return [[TXPBFetchFeedMedicineTaskRequestBuilder alloc] init];
}
+ (TXPBFetchFeedMedicineTaskRequestBuilder*) builderWithPrototype:(TXPBFetchFeedMedicineTaskRequest*) prototype {
  return [[TXPBFetchFeedMedicineTaskRequest builder] mergeFrom:prototype];
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) builder {
  return [TXPBFetchFeedMedicineTaskRequest builder];
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) toBuilder {
  return [TXPBFetchFeedMedicineTaskRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchFeedMedicineTaskRequest class]]) {
    return NO;
  }
  TXPBFetchFeedMedicineTaskRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchFeedMedicineTaskRequestBuilder()
@property (strong) TXPBFetchFeedMedicineTaskRequest* resultFetchFeedMedicineTaskRequest;
@end

@implementation TXPBFetchFeedMedicineTaskRequestBuilder
@synthesize resultFetchFeedMedicineTaskRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchFeedMedicineTaskRequest = [[TXPBFetchFeedMedicineTaskRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchFeedMedicineTaskRequest;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) clear {
  self.resultFetchFeedMedicineTaskRequest = [[TXPBFetchFeedMedicineTaskRequest alloc] init];
  return self;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) clone {
  return [TXPBFetchFeedMedicineTaskRequest builderWithPrototype:resultFetchFeedMedicineTaskRequest];
}
- (TXPBFetchFeedMedicineTaskRequest*) defaultInstance {
  return [TXPBFetchFeedMedicineTaskRequest defaultInstance];
}
- (TXPBFetchFeedMedicineTaskRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchFeedMedicineTaskRequest*) buildPartial {
  TXPBFetchFeedMedicineTaskRequest* returnMe = resultFetchFeedMedicineTaskRequest;
  self.resultFetchFeedMedicineTaskRequest = nil;
  return returnMe;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) mergeFrom:(TXPBFetchFeedMedicineTaskRequest*) other {
  if (other == [TXPBFetchFeedMedicineTaskRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchFeedMedicineTaskRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchFeedMedicineTaskRequest.maxId;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchFeedMedicineTaskRequest.hasMaxId = YES;
  resultFetchFeedMedicineTaskRequest.maxId = value;
  return self;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) clearMaxId {
  resultFetchFeedMedicineTaskRequest.hasMaxId = NO;
  resultFetchFeedMedicineTaskRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchFeedMedicineTaskRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchFeedMedicineTaskRequest.sinceId;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchFeedMedicineTaskRequest.hasSinceId = YES;
  resultFetchFeedMedicineTaskRequest.sinceId = value;
  return self;
}
- (TXPBFetchFeedMedicineTaskRequestBuilder*) clearSinceId {
  resultFetchFeedMedicineTaskRequest.hasSinceId = NO;
  resultFetchFeedMedicineTaskRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFetchFeedMedicineTaskResponse ()
@property (strong) NSMutableArray * feedMedicineTaskArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchFeedMedicineTaskResponse

@synthesize feedMedicineTaskArray;
@dynamic feedMedicineTask;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchFeedMedicineTaskResponse* defaultTXPBFetchFeedMedicineTaskResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchFeedMedicineTaskResponse class]) {
    defaultTXPBFetchFeedMedicineTaskResponseInstance = [[TXPBFetchFeedMedicineTaskResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchFeedMedicineTaskResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchFeedMedicineTaskResponseInstance;
}
- (NSArray *)feedMedicineTask {
  return feedMedicineTaskArray;
}
- (TXPBFeedMedicineTask*)feedMedicineTaskAtIndex:(NSUInteger)index {
  return [feedMedicineTaskArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitfeedMedicineTask = YES;
   [self.feedMedicineTask enumerateObjectsUsingBlock:^(TXPBFeedMedicineTask *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitfeedMedicineTask = NO;
      *stop = YES;
    }
  }];
  if (!isInitfeedMedicineTask) return isInitfeedMedicineTask;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.feedMedicineTaskArray enumerateObjectsUsingBlock:^(TXPBFeedMedicineTask *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.feedMedicineTaskArray enumerateObjectsUsingBlock:^(TXPBFeedMedicineTask *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchFeedMedicineTaskResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchFeedMedicineTaskResponse*)[[[TXPBFetchFeedMedicineTaskResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchFeedMedicineTaskResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedMedicineTaskResponse*)[[[TXPBFetchFeedMedicineTaskResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedMedicineTaskResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchFeedMedicineTaskResponse*)[[[TXPBFetchFeedMedicineTaskResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchFeedMedicineTaskResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedMedicineTaskResponse*)[[[TXPBFetchFeedMedicineTaskResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedMedicineTaskResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchFeedMedicineTaskResponse*)[[[TXPBFetchFeedMedicineTaskResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchFeedMedicineTaskResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedMedicineTaskResponse*)[[[TXPBFetchFeedMedicineTaskResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedMedicineTaskResponseBuilder*) builder {
  return [[TXPBFetchFeedMedicineTaskResponseBuilder alloc] init];
}
+ (TXPBFetchFeedMedicineTaskResponseBuilder*) builderWithPrototype:(TXPBFetchFeedMedicineTaskResponse*) prototype {
  return [[TXPBFetchFeedMedicineTaskResponse builder] mergeFrom:prototype];
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) builder {
  return [TXPBFetchFeedMedicineTaskResponse builder];
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) toBuilder {
  return [TXPBFetchFeedMedicineTaskResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.feedMedicineTaskArray enumerateObjectsUsingBlock:^(TXPBFeedMedicineTask *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"feedMedicineTask"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBFeedMedicineTask* element in self.feedMedicineTaskArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"feedMedicineTask"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchFeedMedicineTaskResponse class]]) {
    return NO;
  }
  TXPBFetchFeedMedicineTaskResponse *otherMessage = other;
  return
      [self.feedMedicineTaskArray isEqualToArray:otherMessage.feedMedicineTaskArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.feedMedicineTaskArray enumerateObjectsUsingBlock:^(TXPBFeedMedicineTask *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchFeedMedicineTaskResponseBuilder()
@property (strong) TXPBFetchFeedMedicineTaskResponse* resultFetchFeedMedicineTaskResponse;
@end

@implementation TXPBFetchFeedMedicineTaskResponseBuilder
@synthesize resultFetchFeedMedicineTaskResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchFeedMedicineTaskResponse = [[TXPBFetchFeedMedicineTaskResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchFeedMedicineTaskResponse;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) clear {
  self.resultFetchFeedMedicineTaskResponse = [[TXPBFetchFeedMedicineTaskResponse alloc] init];
  return self;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) clone {
  return [TXPBFetchFeedMedicineTaskResponse builderWithPrototype:resultFetchFeedMedicineTaskResponse];
}
- (TXPBFetchFeedMedicineTaskResponse*) defaultInstance {
  return [TXPBFetchFeedMedicineTaskResponse defaultInstance];
}
- (TXPBFetchFeedMedicineTaskResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchFeedMedicineTaskResponse*) buildPartial {
  TXPBFetchFeedMedicineTaskResponse* returnMe = resultFetchFeedMedicineTaskResponse;
  self.resultFetchFeedMedicineTaskResponse = nil;
  return returnMe;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) mergeFrom:(TXPBFetchFeedMedicineTaskResponse*) other {
  if (other == [TXPBFetchFeedMedicineTaskResponse defaultInstance]) {
    return self;
  }
  if (other.feedMedicineTaskArray.count > 0) {
    if (resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray == nil) {
      resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray = [[NSMutableArray alloc] initWithArray:other.feedMedicineTaskArray];
    } else {
      [resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray addObjectsFromArray:other.feedMedicineTaskArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBFeedMedicineTaskBuilder* subBuilder = [TXPBFeedMedicineTask builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFeedMedicineTask:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)feedMedicineTask {
  return resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray;
}
- (TXPBFeedMedicineTask*)feedMedicineTaskAtIndex:(NSUInteger)index {
  return [resultFetchFeedMedicineTaskResponse feedMedicineTaskAtIndex:index];
}
- (TXPBFetchFeedMedicineTaskResponseBuilder *)addFeedMedicineTask:(TXPBFeedMedicineTask*)value {
  if (resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray == nil) {
    resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray = [[NSMutableArray alloc]init];
  }
  [resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray addObject:value];
  return self;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder *)setFeedMedicineTaskArray:(NSArray *)array {
  resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder *)clearFeedMedicineTask {
  resultFetchFeedMedicineTaskResponse.feedMedicineTaskArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchFeedMedicineTaskResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchFeedMedicineTaskResponse.hasMore;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchFeedMedicineTaskResponse.hasHasMore = YES;
  resultFetchFeedMedicineTaskResponse.hasMore = value;
  return self;
}
- (TXPBFetchFeedMedicineTaskResponseBuilder*) clearHasMore {
  resultFetchFeedMedicineTaskResponse.hasHasMore = NO;
  resultFetchFeedMedicineTaskResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBReadFeedMedicineTaskRequest ()
@property SInt64 feedMedicineTaskId;
@end

@implementation TXPBReadFeedMedicineTaskRequest

- (BOOL) hasFeedMedicineTaskId {
  return !!hasFeedMedicineTaskId_;
}
- (void) setHasFeedMedicineTaskId:(BOOL) _value_ {
  hasFeedMedicineTaskId_ = !!_value_;
}
@synthesize feedMedicineTaskId;
- (instancetype) init {
  if ((self = [super init])) {
    self.feedMedicineTaskId = 0L;
  }
  return self;
}
static TXPBReadFeedMedicineTaskRequest* defaultTXPBReadFeedMedicineTaskRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBReadFeedMedicineTaskRequest class]) {
    defaultTXPBReadFeedMedicineTaskRequestInstance = [[TXPBReadFeedMedicineTaskRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReadFeedMedicineTaskRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReadFeedMedicineTaskRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFeedMedicineTaskId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFeedMedicineTaskId) {
    [output writeInt64:1 value:self.feedMedicineTaskId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFeedMedicineTaskId) {
    size_ += computeInt64Size(1, self.feedMedicineTaskId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReadFeedMedicineTaskRequest*) parseFromData:(NSData*) data {
  return (TXPBReadFeedMedicineTaskRequest*)[[[TXPBReadFeedMedicineTaskRequest builder] mergeFromData:data] build];
}
+ (TXPBReadFeedMedicineTaskRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineTaskRequest*)[[[TXPBReadFeedMedicineTaskRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineTaskRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReadFeedMedicineTaskRequest*)[[[TXPBReadFeedMedicineTaskRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBReadFeedMedicineTaskRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineTaskRequest*)[[[TXPBReadFeedMedicineTaskRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineTaskRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReadFeedMedicineTaskRequest*)[[[TXPBReadFeedMedicineTaskRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReadFeedMedicineTaskRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineTaskRequest*)[[[TXPBReadFeedMedicineTaskRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineTaskRequestBuilder*) builder {
  return [[TXPBReadFeedMedicineTaskRequestBuilder alloc] init];
}
+ (TXPBReadFeedMedicineTaskRequestBuilder*) builderWithPrototype:(TXPBReadFeedMedicineTaskRequest*) prototype {
  return [[TXPBReadFeedMedicineTaskRequest builder] mergeFrom:prototype];
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) builder {
  return [TXPBReadFeedMedicineTaskRequest builder];
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) toBuilder {
  return [TXPBReadFeedMedicineTaskRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFeedMedicineTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"feedMedicineTaskId", [NSNumber numberWithLongLong:self.feedMedicineTaskId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFeedMedicineTaskId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.feedMedicineTaskId] forKey: @"feedMedicineTaskId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReadFeedMedicineTaskRequest class]]) {
    return NO;
  }
  TXPBReadFeedMedicineTaskRequest *otherMessage = other;
  return
      self.hasFeedMedicineTaskId == otherMessage.hasFeedMedicineTaskId &&
      (!self.hasFeedMedicineTaskId || self.feedMedicineTaskId == otherMessage.feedMedicineTaskId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFeedMedicineTaskId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.feedMedicineTaskId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReadFeedMedicineTaskRequestBuilder()
@property (strong) TXPBReadFeedMedicineTaskRequest* resultReadFeedMedicineTaskRequest;
@end

@implementation TXPBReadFeedMedicineTaskRequestBuilder
@synthesize resultReadFeedMedicineTaskRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadFeedMedicineTaskRequest = [[TXPBReadFeedMedicineTaskRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadFeedMedicineTaskRequest;
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) clear {
  self.resultReadFeedMedicineTaskRequest = [[TXPBReadFeedMedicineTaskRequest alloc] init];
  return self;
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) clone {
  return [TXPBReadFeedMedicineTaskRequest builderWithPrototype:resultReadFeedMedicineTaskRequest];
}
- (TXPBReadFeedMedicineTaskRequest*) defaultInstance {
  return [TXPBReadFeedMedicineTaskRequest defaultInstance];
}
- (TXPBReadFeedMedicineTaskRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReadFeedMedicineTaskRequest*) buildPartial {
  TXPBReadFeedMedicineTaskRequest* returnMe = resultReadFeedMedicineTaskRequest;
  self.resultReadFeedMedicineTaskRequest = nil;
  return returnMe;
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) mergeFrom:(TXPBReadFeedMedicineTaskRequest*) other {
  if (other == [TXPBReadFeedMedicineTaskRequest defaultInstance]) {
    return self;
  }
  if (other.hasFeedMedicineTaskId) {
    [self setFeedMedicineTaskId:other.feedMedicineTaskId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFeedMedicineTaskId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasFeedMedicineTaskId {
  return resultReadFeedMedicineTaskRequest.hasFeedMedicineTaskId;
}
- (SInt64) feedMedicineTaskId {
  return resultReadFeedMedicineTaskRequest.feedMedicineTaskId;
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) setFeedMedicineTaskId:(SInt64) value {
  resultReadFeedMedicineTaskRequest.hasFeedMedicineTaskId = YES;
  resultReadFeedMedicineTaskRequest.feedMedicineTaskId = value;
  return self;
}
- (TXPBReadFeedMedicineTaskRequestBuilder*) clearFeedMedicineTaskId {
  resultReadFeedMedicineTaskRequest.hasFeedMedicineTaskId = NO;
  resultReadFeedMedicineTaskRequest.feedMedicineTaskId = 0L;
  return self;
}
@end

@interface TXPBSendFeedMedicineTaskRequest ()
@property SInt64 beginDate;
@property (strong) NSString* desc;
@property (strong) NSMutableArray * attachesArray;
@end

@implementation TXPBSendFeedMedicineTaskRequest

- (BOOL) hasBeginDate {
  return !!hasBeginDate_;
}
- (void) setHasBeginDate:(BOOL) _value_ {
  hasBeginDate_ = !!_value_;
}
@synthesize beginDate;
- (BOOL) hasDesc {
  return !!hasDesc_;
}
- (void) setHasDesc:(BOOL) _value_ {
  hasDesc_ = !!_value_;
}
@synthesize desc;
@synthesize attachesArray;
@dynamic attaches;
- (instancetype) init {
  if ((self = [super init])) {
    self.beginDate = 0L;
    self.desc = @"";
  }
  return self;
}
static TXPBSendFeedMedicineTaskRequest* defaultTXPBSendFeedMedicineTaskRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendFeedMedicineTaskRequest class]) {
    defaultTXPBSendFeedMedicineTaskRequestInstance = [[TXPBSendFeedMedicineTaskRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendFeedMedicineTaskRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendFeedMedicineTaskRequestInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasBeginDate) {
    return NO;
  }
  if (!self.hasDesc) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBeginDate) {
    [output writeInt64:1 value:self.beginDate];
  }
  if (self.hasDesc) {
    [output writeString:2 value:self.desc];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBeginDate) {
    size_ += computeInt64Size(1, self.beginDate);
  }
  if (self.hasDesc) {
    size_ += computeStringSize(2, self.desc);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendFeedMedicineTaskRequest*) parseFromData:(NSData*) data {
  return (TXPBSendFeedMedicineTaskRequest*)[[[TXPBSendFeedMedicineTaskRequest builder] mergeFromData:data] build];
}
+ (TXPBSendFeedMedicineTaskRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedMedicineTaskRequest*)[[[TXPBSendFeedMedicineTaskRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedMedicineTaskRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendFeedMedicineTaskRequest*)[[[TXPBSendFeedMedicineTaskRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSendFeedMedicineTaskRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedMedicineTaskRequest*)[[[TXPBSendFeedMedicineTaskRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedMedicineTaskRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendFeedMedicineTaskRequest*)[[[TXPBSendFeedMedicineTaskRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendFeedMedicineTaskRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedMedicineTaskRequest*)[[[TXPBSendFeedMedicineTaskRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedMedicineTaskRequestBuilder*) builder {
  return [[TXPBSendFeedMedicineTaskRequestBuilder alloc] init];
}
+ (TXPBSendFeedMedicineTaskRequestBuilder*) builderWithPrototype:(TXPBSendFeedMedicineTaskRequest*) prototype {
  return [[TXPBSendFeedMedicineTaskRequest builder] mergeFrom:prototype];
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) builder {
  return [TXPBSendFeedMedicineTaskRequest builder];
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) toBuilder {
  return [TXPBSendFeedMedicineTaskRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBeginDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beginDate", [NSNumber numberWithLongLong:self.beginDate]];
  }
  if (self.hasDesc) {
    [output appendFormat:@"%@%@: %@\n", indent, @"desc", self.desc];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBeginDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.beginDate] forKey: @"beginDate"];
  }
  if (self.hasDesc) {
    [dictionary setObject: self.desc forKey: @"desc"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendFeedMedicineTaskRequest class]]) {
    return NO;
  }
  TXPBSendFeedMedicineTaskRequest *otherMessage = other;
  return
      self.hasBeginDate == otherMessage.hasBeginDate &&
      (!self.hasBeginDate || self.beginDate == otherMessage.beginDate) &&
      self.hasDesc == otherMessage.hasDesc &&
      (!self.hasDesc || [self.desc isEqual:otherMessage.desc]) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBeginDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.beginDate] hash];
  }
  if (self.hasDesc) {
    hashCode = hashCode * 31 + [self.desc hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendFeedMedicineTaskRequestBuilder()
@property (strong) TXPBSendFeedMedicineTaskRequest* resultSendFeedMedicineTaskRequest;
@end

@implementation TXPBSendFeedMedicineTaskRequestBuilder
@synthesize resultSendFeedMedicineTaskRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendFeedMedicineTaskRequest = [[TXPBSendFeedMedicineTaskRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendFeedMedicineTaskRequest;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) clear {
  self.resultSendFeedMedicineTaskRequest = [[TXPBSendFeedMedicineTaskRequest alloc] init];
  return self;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) clone {
  return [TXPBSendFeedMedicineTaskRequest builderWithPrototype:resultSendFeedMedicineTaskRequest];
}
- (TXPBSendFeedMedicineTaskRequest*) defaultInstance {
  return [TXPBSendFeedMedicineTaskRequest defaultInstance];
}
- (TXPBSendFeedMedicineTaskRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendFeedMedicineTaskRequest*) buildPartial {
  TXPBSendFeedMedicineTaskRequest* returnMe = resultSendFeedMedicineTaskRequest;
  self.resultSendFeedMedicineTaskRequest = nil;
  return returnMe;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) mergeFrom:(TXPBSendFeedMedicineTaskRequest*) other {
  if (other == [TXPBSendFeedMedicineTaskRequest defaultInstance]) {
    return self;
  }
  if (other.hasBeginDate) {
    [self setBeginDate:other.beginDate];
  }
  if (other.hasDesc) {
    [self setDesc:other.desc];
  }
  if (other.attachesArray.count > 0) {
    if (resultSendFeedMedicineTaskRequest.attachesArray == nil) {
      resultSendFeedMedicineTaskRequest.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultSendFeedMedicineTaskRequest.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBeginDate:[input readInt64]];
        break;
      }
      case 18: {
        [self setDesc:[input readString]];
        break;
      }
      case 26: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBeginDate {
  return resultSendFeedMedicineTaskRequest.hasBeginDate;
}
- (SInt64) beginDate {
  return resultSendFeedMedicineTaskRequest.beginDate;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) setBeginDate:(SInt64) value {
  resultSendFeedMedicineTaskRequest.hasBeginDate = YES;
  resultSendFeedMedicineTaskRequest.beginDate = value;
  return self;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) clearBeginDate {
  resultSendFeedMedicineTaskRequest.hasBeginDate = NO;
  resultSendFeedMedicineTaskRequest.beginDate = 0L;
  return self;
}
- (BOOL) hasDesc {
  return resultSendFeedMedicineTaskRequest.hasDesc;
}
- (NSString*) desc {
  return resultSendFeedMedicineTaskRequest.desc;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) setDesc:(NSString*) value {
  resultSendFeedMedicineTaskRequest.hasDesc = YES;
  resultSendFeedMedicineTaskRequest.desc = value;
  return self;
}
- (TXPBSendFeedMedicineTaskRequestBuilder*) clearDesc {
  resultSendFeedMedicineTaskRequest.hasDesc = NO;
  resultSendFeedMedicineTaskRequest.desc = @"";
  return self;
}
- (NSMutableArray *)attaches {
  return resultSendFeedMedicineTaskRequest.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultSendFeedMedicineTaskRequest attachesAtIndex:index];
}
- (TXPBSendFeedMedicineTaskRequestBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultSendFeedMedicineTaskRequest.attachesArray == nil) {
    resultSendFeedMedicineTaskRequest.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultSendFeedMedicineTaskRequest.attachesArray addObject:value];
  return self;
}
- (TXPBSendFeedMedicineTaskRequestBuilder *)setAttachesArray:(NSArray *)array {
  resultSendFeedMedicineTaskRequest.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSendFeedMedicineTaskRequestBuilder *)clearAttaches {
  resultSendFeedMedicineTaskRequest.attachesArray = nil;
  return self;
}
@end

@interface TXPBSendFeedMedicineTaskResponse ()
@property SInt64 feedMedicineTaskId;
@end

@implementation TXPBSendFeedMedicineTaskResponse

- (BOOL) hasFeedMedicineTaskId {
  return !!hasFeedMedicineTaskId_;
}
- (void) setHasFeedMedicineTaskId:(BOOL) _value_ {
  hasFeedMedicineTaskId_ = !!_value_;
}
@synthesize feedMedicineTaskId;
- (instancetype) init {
  if ((self = [super init])) {
    self.feedMedicineTaskId = 0L;
  }
  return self;
}
static TXPBSendFeedMedicineTaskResponse* defaultTXPBSendFeedMedicineTaskResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendFeedMedicineTaskResponse class]) {
    defaultTXPBSendFeedMedicineTaskResponseInstance = [[TXPBSendFeedMedicineTaskResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendFeedMedicineTaskResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendFeedMedicineTaskResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFeedMedicineTaskId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFeedMedicineTaskId) {
    [output writeInt64:1 value:self.feedMedicineTaskId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFeedMedicineTaskId) {
    size_ += computeInt64Size(1, self.feedMedicineTaskId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendFeedMedicineTaskResponse*) parseFromData:(NSData*) data {
  return (TXPBSendFeedMedicineTaskResponse*)[[[TXPBSendFeedMedicineTaskResponse builder] mergeFromData:data] build];
}
+ (TXPBSendFeedMedicineTaskResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedMedicineTaskResponse*)[[[TXPBSendFeedMedicineTaskResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedMedicineTaskResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendFeedMedicineTaskResponse*)[[[TXPBSendFeedMedicineTaskResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSendFeedMedicineTaskResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedMedicineTaskResponse*)[[[TXPBSendFeedMedicineTaskResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedMedicineTaskResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendFeedMedicineTaskResponse*)[[[TXPBSendFeedMedicineTaskResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendFeedMedicineTaskResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedMedicineTaskResponse*)[[[TXPBSendFeedMedicineTaskResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedMedicineTaskResponseBuilder*) builder {
  return [[TXPBSendFeedMedicineTaskResponseBuilder alloc] init];
}
+ (TXPBSendFeedMedicineTaskResponseBuilder*) builderWithPrototype:(TXPBSendFeedMedicineTaskResponse*) prototype {
  return [[TXPBSendFeedMedicineTaskResponse builder] mergeFrom:prototype];
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) builder {
  return [TXPBSendFeedMedicineTaskResponse builder];
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) toBuilder {
  return [TXPBSendFeedMedicineTaskResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFeedMedicineTaskId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"feedMedicineTaskId", [NSNumber numberWithLongLong:self.feedMedicineTaskId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFeedMedicineTaskId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.feedMedicineTaskId] forKey: @"feedMedicineTaskId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendFeedMedicineTaskResponse class]]) {
    return NO;
  }
  TXPBSendFeedMedicineTaskResponse *otherMessage = other;
  return
      self.hasFeedMedicineTaskId == otherMessage.hasFeedMedicineTaskId &&
      (!self.hasFeedMedicineTaskId || self.feedMedicineTaskId == otherMessage.feedMedicineTaskId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFeedMedicineTaskId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.feedMedicineTaskId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendFeedMedicineTaskResponseBuilder()
@property (strong) TXPBSendFeedMedicineTaskResponse* resultSendFeedMedicineTaskResponse;
@end

@implementation TXPBSendFeedMedicineTaskResponseBuilder
@synthesize resultSendFeedMedicineTaskResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendFeedMedicineTaskResponse = [[TXPBSendFeedMedicineTaskResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendFeedMedicineTaskResponse;
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) clear {
  self.resultSendFeedMedicineTaskResponse = [[TXPBSendFeedMedicineTaskResponse alloc] init];
  return self;
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) clone {
  return [TXPBSendFeedMedicineTaskResponse builderWithPrototype:resultSendFeedMedicineTaskResponse];
}
- (TXPBSendFeedMedicineTaskResponse*) defaultInstance {
  return [TXPBSendFeedMedicineTaskResponse defaultInstance];
}
- (TXPBSendFeedMedicineTaskResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendFeedMedicineTaskResponse*) buildPartial {
  TXPBSendFeedMedicineTaskResponse* returnMe = resultSendFeedMedicineTaskResponse;
  self.resultSendFeedMedicineTaskResponse = nil;
  return returnMe;
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) mergeFrom:(TXPBSendFeedMedicineTaskResponse*) other {
  if (other == [TXPBSendFeedMedicineTaskResponse defaultInstance]) {
    return self;
  }
  if (other.hasFeedMedicineTaskId) {
    [self setFeedMedicineTaskId:other.feedMedicineTaskId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFeedMedicineTaskId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasFeedMedicineTaskId {
  return resultSendFeedMedicineTaskResponse.hasFeedMedicineTaskId;
}
- (SInt64) feedMedicineTaskId {
  return resultSendFeedMedicineTaskResponse.feedMedicineTaskId;
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) setFeedMedicineTaskId:(SInt64) value {
  resultSendFeedMedicineTaskResponse.hasFeedMedicineTaskId = YES;
  resultSendFeedMedicineTaskResponse.feedMedicineTaskId = value;
  return self;
}
- (TXPBSendFeedMedicineTaskResponseBuilder*) clearFeedMedicineTaskId {
  resultSendFeedMedicineTaskResponse.hasFeedMedicineTaskId = NO;
  resultSendFeedMedicineTaskResponse.feedMedicineTaskId = 0L;
  return self;
}
@end

@interface TXPBGardenMail ()
@property SInt64 id;
@property SInt64 gardenId;
@property (strong) NSString* gardenName;
@property (strong) NSString* gardenAvatarUrl;
@property (strong) NSString* content;
@property SInt64 createdOn;
@property BOOL anonymous;
@property SInt64 fromUserId;
@property (strong) NSString* fromUsername;
@property (strong) NSString* fromUserAvatarUrl;
@property SInt32 status;
@property SInt64 updateOn;
@property BOOL hasRead;
@end

@implementation TXPBGardenMail

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasGardenName {
  return !!hasGardenName_;
}
- (void) setHasGardenName:(BOOL) _value_ {
  hasGardenName_ = !!_value_;
}
@synthesize gardenName;
- (BOOL) hasGardenAvatarUrl {
  return !!hasGardenAvatarUrl_;
}
- (void) setHasGardenAvatarUrl:(BOOL) _value_ {
  hasGardenAvatarUrl_ = !!_value_;
}
@synthesize gardenAvatarUrl;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasCreatedOn {
  return !!hasCreatedOn_;
}
- (void) setHasCreatedOn:(BOOL) _value_ {
  hasCreatedOn_ = !!_value_;
}
@synthesize createdOn;
- (BOOL) hasAnonymous {
  return !!hasAnonymous_;
}
- (void) setHasAnonymous:(BOOL) _value_ {
  hasAnonymous_ = !!_value_;
}
- (BOOL) anonymous {
  return !!anonymous_;
}
- (void) setAnonymous:(BOOL) _value_ {
  anonymous_ = !!_value_;
}
- (BOOL) hasFromUserId {
  return !!hasFromUserId_;
}
- (void) setHasFromUserId:(BOOL) _value_ {
  hasFromUserId_ = !!_value_;
}
@synthesize fromUserId;
- (BOOL) hasFromUsername {
  return !!hasFromUsername_;
}
- (void) setHasFromUsername:(BOOL) _value_ {
  hasFromUsername_ = !!_value_;
}
@synthesize fromUsername;
- (BOOL) hasFromUserAvatarUrl {
  return !!hasFromUserAvatarUrl_;
}
- (void) setHasFromUserAvatarUrl:(BOOL) _value_ {
  hasFromUserAvatarUrl_ = !!_value_;
}
@synthesize fromUserAvatarUrl;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
- (BOOL) hasHasRead {
  return !!hasHasRead_;
}
- (void) setHasHasRead:(BOOL) _value_ {
  hasHasRead_ = !!_value_;
}
- (BOOL) hasRead {
  return !!hasRead_;
}
- (void) setHasRead:(BOOL) _value_ {
  hasRead_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.gardenId = 0L;
    self.gardenName = @"";
    self.gardenAvatarUrl = @"";
    self.content = @"";
    self.createdOn = 0L;
    self.anonymous = NO;
    self.fromUserId = 0L;
    self.fromUsername = @"";
    self.fromUserAvatarUrl = @"";
    self.status = 0;
    self.updateOn = 0L;
    self.hasRead = NO;
  }
  return self;
}
static TXPBGardenMail* defaultTXPBGardenMailInstance = nil;
+ (void) initialize {
  if (self == [TXPBGardenMail class]) {
    defaultTXPBGardenMailInstance = [[TXPBGardenMail alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGardenMailInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGardenMailInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasGardenId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasCreatedOn) {
    return NO;
  }
  if (!self.hasAnonymous) {
    return NO;
  }
  if (!self.hasFromUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasGardenId) {
    [output writeInt64:2 value:self.gardenId];
  }
  if (self.hasGardenName) {
    [output writeString:3 value:self.gardenName];
  }
  if (self.hasGardenAvatarUrl) {
    [output writeString:4 value:self.gardenAvatarUrl];
  }
  if (self.hasContent) {
    [output writeString:5 value:self.content];
  }
  if (self.hasCreatedOn) {
    [output writeInt64:6 value:self.createdOn];
  }
  if (self.hasAnonymous) {
    [output writeBool:7 value:self.anonymous];
  }
  if (self.hasFromUserId) {
    [output writeInt64:8 value:self.fromUserId];
  }
  if (self.hasFromUsername) {
    [output writeString:9 value:self.fromUsername];
  }
  if (self.hasFromUserAvatarUrl) {
    [output writeString:10 value:self.fromUserAvatarUrl];
  }
  if (self.hasStatus) {
    [output writeInt32:11 value:self.status];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:12 value:self.updateOn];
  }
  if (self.hasHasRead) {
    [output writeBool:13 value:self.hasRead];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasGardenId) {
    size_ += computeInt64Size(2, self.gardenId);
  }
  if (self.hasGardenName) {
    size_ += computeStringSize(3, self.gardenName);
  }
  if (self.hasGardenAvatarUrl) {
    size_ += computeStringSize(4, self.gardenAvatarUrl);
  }
  if (self.hasContent) {
    size_ += computeStringSize(5, self.content);
  }
  if (self.hasCreatedOn) {
    size_ += computeInt64Size(6, self.createdOn);
  }
  if (self.hasAnonymous) {
    size_ += computeBoolSize(7, self.anonymous);
  }
  if (self.hasFromUserId) {
    size_ += computeInt64Size(8, self.fromUserId);
  }
  if (self.hasFromUsername) {
    size_ += computeStringSize(9, self.fromUsername);
  }
  if (self.hasFromUserAvatarUrl) {
    size_ += computeStringSize(10, self.fromUserAvatarUrl);
  }
  if (self.hasStatus) {
    size_ += computeInt32Size(11, self.status);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(12, self.updateOn);
  }
  if (self.hasHasRead) {
    size_ += computeBoolSize(13, self.hasRead);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGardenMail*) parseFromData:(NSData*) data {
  return (TXPBGardenMail*)[[[TXPBGardenMail builder] mergeFromData:data] build];
}
+ (TXPBGardenMail*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGardenMail*)[[[TXPBGardenMail builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGardenMail*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGardenMail*)[[[TXPBGardenMail builder] mergeFromInputStream:input] build];
}
+ (TXPBGardenMail*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGardenMail*)[[[TXPBGardenMail builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGardenMail*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGardenMail*)[[[TXPBGardenMail builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGardenMail*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGardenMail*)[[[TXPBGardenMail builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGardenMailBuilder*) builder {
  return [[TXPBGardenMailBuilder alloc] init];
}
+ (TXPBGardenMailBuilder*) builderWithPrototype:(TXPBGardenMail*) prototype {
  return [[TXPBGardenMail builder] mergeFrom:prototype];
}
- (TXPBGardenMailBuilder*) builder {
  return [TXPBGardenMail builder];
}
- (TXPBGardenMailBuilder*) toBuilder {
  return [TXPBGardenMail builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasGardenName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenName", self.gardenName];
  }
  if (self.hasGardenAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenAvatarUrl", self.gardenAvatarUrl];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreatedOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdOn", [NSNumber numberWithLongLong:self.createdOn]];
  }
  if (self.hasAnonymous) {
    [output appendFormat:@"%@%@: %@\n", indent, @"anonymous", [NSNumber numberWithBool:self.anonymous]];
  }
  if (self.hasFromUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserId", [NSNumber numberWithLongLong:self.fromUserId]];
  }
  if (self.hasFromUsername) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUsername", self.fromUsername];
  }
  if (self.hasFromUserAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fromUserAvatarUrl", self.fromUserAvatarUrl];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", [NSNumber numberWithInteger:self.status]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  if (self.hasHasRead) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasRead", [NSNumber numberWithBool:self.hasRead]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasGardenName) {
    [dictionary setObject: self.gardenName forKey: @"gardenName"];
  }
  if (self.hasGardenAvatarUrl) {
    [dictionary setObject: self.gardenAvatarUrl forKey: @"gardenAvatarUrl"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasCreatedOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdOn] forKey: @"createdOn"];
  }
  if (self.hasAnonymous) {
    [dictionary setObject: [NSNumber numberWithBool:self.anonymous] forKey: @"anonymous"];
  }
  if (self.hasFromUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.fromUserId] forKey: @"fromUserId"];
  }
  if (self.hasFromUsername) {
    [dictionary setObject: self.fromUsername forKey: @"fromUsername"];
  }
  if (self.hasFromUserAvatarUrl) {
    [dictionary setObject: self.fromUserAvatarUrl forKey: @"fromUserAvatarUrl"];
  }
  if (self.hasStatus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.status] forKey: @"status"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  if (self.hasHasRead) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasRead] forKey: @"hasRead"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGardenMail class]]) {
    return NO;
  }
  TXPBGardenMail *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasGardenName == otherMessage.hasGardenName &&
      (!self.hasGardenName || [self.gardenName isEqual:otherMessage.gardenName]) &&
      self.hasGardenAvatarUrl == otherMessage.hasGardenAvatarUrl &&
      (!self.hasGardenAvatarUrl || [self.gardenAvatarUrl isEqual:otherMessage.gardenAvatarUrl]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreatedOn == otherMessage.hasCreatedOn &&
      (!self.hasCreatedOn || self.createdOn == otherMessage.createdOn) &&
      self.hasAnonymous == otherMessage.hasAnonymous &&
      (!self.hasAnonymous || self.anonymous == otherMessage.anonymous) &&
      self.hasFromUserId == otherMessage.hasFromUserId &&
      (!self.hasFromUserId || self.fromUserId == otherMessage.fromUserId) &&
      self.hasFromUsername == otherMessage.hasFromUsername &&
      (!self.hasFromUsername || [self.fromUsername isEqual:otherMessage.fromUsername]) &&
      self.hasFromUserAvatarUrl == otherMessage.hasFromUserAvatarUrl &&
      (!self.hasFromUserAvatarUrl || [self.fromUserAvatarUrl isEqual:otherMessage.fromUserAvatarUrl]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      self.hasHasRead == otherMessage.hasHasRead &&
      (!self.hasHasRead || self.hasRead == otherMessage.hasRead) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasGardenName) {
    hashCode = hashCode * 31 + [self.gardenName hash];
  }
  if (self.hasGardenAvatarUrl) {
    hashCode = hashCode * 31 + [self.gardenAvatarUrl hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreatedOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdOn] hash];
  }
  if (self.hasAnonymous) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.anonymous] hash];
  }
  if (self.hasFromUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.fromUserId] hash];
  }
  if (self.hasFromUsername) {
    hashCode = hashCode * 31 + [self.fromUsername hash];
  }
  if (self.hasFromUserAvatarUrl) {
    hashCode = hashCode * 31 + [self.fromUserAvatarUrl hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.status] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  if (self.hasHasRead) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasRead] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGardenMailBuilder()
@property (strong) TXPBGardenMail* resultGardenMail;
@end

@implementation TXPBGardenMailBuilder
@synthesize resultGardenMail;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGardenMail = [[TXPBGardenMail alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGardenMail;
}
- (TXPBGardenMailBuilder*) clear {
  self.resultGardenMail = [[TXPBGardenMail alloc] init];
  return self;
}
- (TXPBGardenMailBuilder*) clone {
  return [TXPBGardenMail builderWithPrototype:resultGardenMail];
}
- (TXPBGardenMail*) defaultInstance {
  return [TXPBGardenMail defaultInstance];
}
- (TXPBGardenMail*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGardenMail*) buildPartial {
  TXPBGardenMail* returnMe = resultGardenMail;
  self.resultGardenMail = nil;
  return returnMe;
}
- (TXPBGardenMailBuilder*) mergeFrom:(TXPBGardenMail*) other {
  if (other == [TXPBGardenMail defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasGardenName) {
    [self setGardenName:other.gardenName];
  }
  if (other.hasGardenAvatarUrl) {
    [self setGardenAvatarUrl:other.gardenAvatarUrl];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreatedOn) {
    [self setCreatedOn:other.createdOn];
  }
  if (other.hasAnonymous) {
    [self setAnonymous:other.anonymous];
  }
  if (other.hasFromUserId) {
    [self setFromUserId:other.fromUserId];
  }
  if (other.hasFromUsername) {
    [self setFromUsername:other.fromUsername];
  }
  if (other.hasFromUserAvatarUrl) {
    [self setFromUserAvatarUrl:other.fromUserAvatarUrl];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.hasHasRead) {
    [self setHasRead:other.hasRead];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGardenMailBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGardenMailBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 26: {
        [self setGardenName:[input readString]];
        break;
      }
      case 34: {
        [self setGardenAvatarUrl:[input readString]];
        break;
      }
      case 42: {
        [self setContent:[input readString]];
        break;
      }
      case 48: {
        [self setCreatedOn:[input readInt64]];
        break;
      }
      case 56: {
        [self setAnonymous:[input readBool]];
        break;
      }
      case 64: {
        [self setFromUserId:[input readInt64]];
        break;
      }
      case 74: {
        [self setFromUsername:[input readString]];
        break;
      }
      case 82: {
        [self setFromUserAvatarUrl:[input readString]];
        break;
      }
      case 88: {
        [self setStatus:[input readInt32]];
        break;
      }
      case 96: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 104: {
        [self setHasRead:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultGardenMail.hasId;
}
- (SInt64) id {
  return resultGardenMail.id;
}
- (TXPBGardenMailBuilder*) setId:(SInt64) value {
  resultGardenMail.hasId = YES;
  resultGardenMail.id = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearId {
  resultGardenMail.hasId = NO;
  resultGardenMail.id = 0L;
  return self;
}
- (BOOL) hasGardenId {
  return resultGardenMail.hasGardenId;
}
- (SInt64) gardenId {
  return resultGardenMail.gardenId;
}
- (TXPBGardenMailBuilder*) setGardenId:(SInt64) value {
  resultGardenMail.hasGardenId = YES;
  resultGardenMail.gardenId = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearGardenId {
  resultGardenMail.hasGardenId = NO;
  resultGardenMail.gardenId = 0L;
  return self;
}
- (BOOL) hasGardenName {
  return resultGardenMail.hasGardenName;
}
- (NSString*) gardenName {
  return resultGardenMail.gardenName;
}
- (TXPBGardenMailBuilder*) setGardenName:(NSString*) value {
  resultGardenMail.hasGardenName = YES;
  resultGardenMail.gardenName = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearGardenName {
  resultGardenMail.hasGardenName = NO;
  resultGardenMail.gardenName = @"";
  return self;
}
- (BOOL) hasGardenAvatarUrl {
  return resultGardenMail.hasGardenAvatarUrl;
}
- (NSString*) gardenAvatarUrl {
  return resultGardenMail.gardenAvatarUrl;
}
- (TXPBGardenMailBuilder*) setGardenAvatarUrl:(NSString*) value {
  resultGardenMail.hasGardenAvatarUrl = YES;
  resultGardenMail.gardenAvatarUrl = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearGardenAvatarUrl {
  resultGardenMail.hasGardenAvatarUrl = NO;
  resultGardenMail.gardenAvatarUrl = @"";
  return self;
}
- (BOOL) hasContent {
  return resultGardenMail.hasContent;
}
- (NSString*) content {
  return resultGardenMail.content;
}
- (TXPBGardenMailBuilder*) setContent:(NSString*) value {
  resultGardenMail.hasContent = YES;
  resultGardenMail.content = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearContent {
  resultGardenMail.hasContent = NO;
  resultGardenMail.content = @"";
  return self;
}
- (BOOL) hasCreatedOn {
  return resultGardenMail.hasCreatedOn;
}
- (SInt64) createdOn {
  return resultGardenMail.createdOn;
}
- (TXPBGardenMailBuilder*) setCreatedOn:(SInt64) value {
  resultGardenMail.hasCreatedOn = YES;
  resultGardenMail.createdOn = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearCreatedOn {
  resultGardenMail.hasCreatedOn = NO;
  resultGardenMail.createdOn = 0L;
  return self;
}
- (BOOL) hasAnonymous {
  return resultGardenMail.hasAnonymous;
}
- (BOOL) anonymous {
  return resultGardenMail.anonymous;
}
- (TXPBGardenMailBuilder*) setAnonymous:(BOOL) value {
  resultGardenMail.hasAnonymous = YES;
  resultGardenMail.anonymous = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearAnonymous {
  resultGardenMail.hasAnonymous = NO;
  resultGardenMail.anonymous = NO;
  return self;
}
- (BOOL) hasFromUserId {
  return resultGardenMail.hasFromUserId;
}
- (SInt64) fromUserId {
  return resultGardenMail.fromUserId;
}
- (TXPBGardenMailBuilder*) setFromUserId:(SInt64) value {
  resultGardenMail.hasFromUserId = YES;
  resultGardenMail.fromUserId = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearFromUserId {
  resultGardenMail.hasFromUserId = NO;
  resultGardenMail.fromUserId = 0L;
  return self;
}
- (BOOL) hasFromUsername {
  return resultGardenMail.hasFromUsername;
}
- (NSString*) fromUsername {
  return resultGardenMail.fromUsername;
}
- (TXPBGardenMailBuilder*) setFromUsername:(NSString*) value {
  resultGardenMail.hasFromUsername = YES;
  resultGardenMail.fromUsername = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearFromUsername {
  resultGardenMail.hasFromUsername = NO;
  resultGardenMail.fromUsername = @"";
  return self;
}
- (BOOL) hasFromUserAvatarUrl {
  return resultGardenMail.hasFromUserAvatarUrl;
}
- (NSString*) fromUserAvatarUrl {
  return resultGardenMail.fromUserAvatarUrl;
}
- (TXPBGardenMailBuilder*) setFromUserAvatarUrl:(NSString*) value {
  resultGardenMail.hasFromUserAvatarUrl = YES;
  resultGardenMail.fromUserAvatarUrl = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearFromUserAvatarUrl {
  resultGardenMail.hasFromUserAvatarUrl = NO;
  resultGardenMail.fromUserAvatarUrl = @"";
  return self;
}
- (BOOL) hasStatus {
  return resultGardenMail.hasStatus;
}
- (SInt32) status {
  return resultGardenMail.status;
}
- (TXPBGardenMailBuilder*) setStatus:(SInt32) value {
  resultGardenMail.hasStatus = YES;
  resultGardenMail.status = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearStatus {
  resultGardenMail.hasStatus = NO;
  resultGardenMail.status = 0;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultGardenMail.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultGardenMail.updateOn;
}
- (TXPBGardenMailBuilder*) setUpdateOn:(SInt64) value {
  resultGardenMail.hasUpdateOn = YES;
  resultGardenMail.updateOn = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearUpdateOn {
  resultGardenMail.hasUpdateOn = NO;
  resultGardenMail.updateOn = 0L;
  return self;
}
- (BOOL) hasHasRead {
  return resultGardenMail.hasHasRead;
}
- (BOOL) hasRead {
  return resultGardenMail.hasRead;
}
- (TXPBGardenMailBuilder*) setHasRead:(BOOL) value {
  resultGardenMail.hasHasRead = YES;
  resultGardenMail.hasRead = value;
  return self;
}
- (TXPBGardenMailBuilder*) clearHasRead {
  resultGardenMail.hasHasRead = NO;
  resultGardenMail.hasRead = NO;
  return self;
}
@end

@interface TXPBFetchGardenMailRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchGardenMailRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchGardenMailRequest* defaultTXPBFetchGardenMailRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchGardenMailRequest class]) {
    defaultTXPBFetchGardenMailRequestInstance = [[TXPBFetchGardenMailRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchGardenMailRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchGardenMailRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchGardenMailRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchGardenMailRequest*)[[[TXPBFetchGardenMailRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchGardenMailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenMailRequest*)[[[TXPBFetchGardenMailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenMailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchGardenMailRequest*)[[[TXPBFetchGardenMailRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchGardenMailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenMailRequest*)[[[TXPBFetchGardenMailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenMailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchGardenMailRequest*)[[[TXPBFetchGardenMailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchGardenMailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenMailRequest*)[[[TXPBFetchGardenMailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenMailRequestBuilder*) builder {
  return [[TXPBFetchGardenMailRequestBuilder alloc] init];
}
+ (TXPBFetchGardenMailRequestBuilder*) builderWithPrototype:(TXPBFetchGardenMailRequest*) prototype {
  return [[TXPBFetchGardenMailRequest builder] mergeFrom:prototype];
}
- (TXPBFetchGardenMailRequestBuilder*) builder {
  return [TXPBFetchGardenMailRequest builder];
}
- (TXPBFetchGardenMailRequestBuilder*) toBuilder {
  return [TXPBFetchGardenMailRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchGardenMailRequest class]]) {
    return NO;
  }
  TXPBFetchGardenMailRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchGardenMailRequestBuilder()
@property (strong) TXPBFetchGardenMailRequest* resultFetchGardenMailRequest;
@end

@implementation TXPBFetchGardenMailRequestBuilder
@synthesize resultFetchGardenMailRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchGardenMailRequest = [[TXPBFetchGardenMailRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchGardenMailRequest;
}
- (TXPBFetchGardenMailRequestBuilder*) clear {
  self.resultFetchGardenMailRequest = [[TXPBFetchGardenMailRequest alloc] init];
  return self;
}
- (TXPBFetchGardenMailRequestBuilder*) clone {
  return [TXPBFetchGardenMailRequest builderWithPrototype:resultFetchGardenMailRequest];
}
- (TXPBFetchGardenMailRequest*) defaultInstance {
  return [TXPBFetchGardenMailRequest defaultInstance];
}
- (TXPBFetchGardenMailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchGardenMailRequest*) buildPartial {
  TXPBFetchGardenMailRequest* returnMe = resultFetchGardenMailRequest;
  self.resultFetchGardenMailRequest = nil;
  return returnMe;
}
- (TXPBFetchGardenMailRequestBuilder*) mergeFrom:(TXPBFetchGardenMailRequest*) other {
  if (other == [TXPBFetchGardenMailRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchGardenMailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchGardenMailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchGardenMailRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchGardenMailRequest.maxId;
}
- (TXPBFetchGardenMailRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchGardenMailRequest.hasMaxId = YES;
  resultFetchGardenMailRequest.maxId = value;
  return self;
}
- (TXPBFetchGardenMailRequestBuilder*) clearMaxId {
  resultFetchGardenMailRequest.hasMaxId = NO;
  resultFetchGardenMailRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchGardenMailRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchGardenMailRequest.sinceId;
}
- (TXPBFetchGardenMailRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchGardenMailRequest.hasSinceId = YES;
  resultFetchGardenMailRequest.sinceId = value;
  return self;
}
- (TXPBFetchGardenMailRequestBuilder*) clearSinceId {
  resultFetchGardenMailRequest.hasSinceId = NO;
  resultFetchGardenMailRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFetchGardenMailResponse ()
@property (strong) NSMutableArray * gardenMailArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchGardenMailResponse

@synthesize gardenMailArray;
@dynamic gardenMail;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchGardenMailResponse* defaultTXPBFetchGardenMailResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchGardenMailResponse class]) {
    defaultTXPBFetchGardenMailResponseInstance = [[TXPBFetchGardenMailResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchGardenMailResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchGardenMailResponseInstance;
}
- (NSArray *)gardenMail {
  return gardenMailArray;
}
- (TXPBGardenMail*)gardenMailAtIndex:(NSUInteger)index {
  return [gardenMailArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitgardenMail = YES;
   [self.gardenMail enumerateObjectsUsingBlock:^(TXPBGardenMail *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitgardenMail = NO;
      *stop = YES;
    }
  }];
  if (!isInitgardenMail) return isInitgardenMail;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.gardenMailArray enumerateObjectsUsingBlock:^(TXPBGardenMail *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.gardenMailArray enumerateObjectsUsingBlock:^(TXPBGardenMail *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchGardenMailResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchGardenMailResponse*)[[[TXPBFetchGardenMailResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchGardenMailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenMailResponse*)[[[TXPBFetchGardenMailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenMailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchGardenMailResponse*)[[[TXPBFetchGardenMailResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchGardenMailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenMailResponse*)[[[TXPBFetchGardenMailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenMailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchGardenMailResponse*)[[[TXPBFetchGardenMailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchGardenMailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenMailResponse*)[[[TXPBFetchGardenMailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenMailResponseBuilder*) builder {
  return [[TXPBFetchGardenMailResponseBuilder alloc] init];
}
+ (TXPBFetchGardenMailResponseBuilder*) builderWithPrototype:(TXPBFetchGardenMailResponse*) prototype {
  return [[TXPBFetchGardenMailResponse builder] mergeFrom:prototype];
}
- (TXPBFetchGardenMailResponseBuilder*) builder {
  return [TXPBFetchGardenMailResponse builder];
}
- (TXPBFetchGardenMailResponseBuilder*) toBuilder {
  return [TXPBFetchGardenMailResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.gardenMailArray enumerateObjectsUsingBlock:^(TXPBGardenMail *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"gardenMail"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBGardenMail* element in self.gardenMailArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"gardenMail"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchGardenMailResponse class]]) {
    return NO;
  }
  TXPBFetchGardenMailResponse *otherMessage = other;
  return
      [self.gardenMailArray isEqualToArray:otherMessage.gardenMailArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.gardenMailArray enumerateObjectsUsingBlock:^(TXPBGardenMail *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchGardenMailResponseBuilder()
@property (strong) TXPBFetchGardenMailResponse* resultFetchGardenMailResponse;
@end

@implementation TXPBFetchGardenMailResponseBuilder
@synthesize resultFetchGardenMailResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchGardenMailResponse = [[TXPBFetchGardenMailResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchGardenMailResponse;
}
- (TXPBFetchGardenMailResponseBuilder*) clear {
  self.resultFetchGardenMailResponse = [[TXPBFetchGardenMailResponse alloc] init];
  return self;
}
- (TXPBFetchGardenMailResponseBuilder*) clone {
  return [TXPBFetchGardenMailResponse builderWithPrototype:resultFetchGardenMailResponse];
}
- (TXPBFetchGardenMailResponse*) defaultInstance {
  return [TXPBFetchGardenMailResponse defaultInstance];
}
- (TXPBFetchGardenMailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchGardenMailResponse*) buildPartial {
  TXPBFetchGardenMailResponse* returnMe = resultFetchGardenMailResponse;
  self.resultFetchGardenMailResponse = nil;
  return returnMe;
}
- (TXPBFetchGardenMailResponseBuilder*) mergeFrom:(TXPBFetchGardenMailResponse*) other {
  if (other == [TXPBFetchGardenMailResponse defaultInstance]) {
    return self;
  }
  if (other.gardenMailArray.count > 0) {
    if (resultFetchGardenMailResponse.gardenMailArray == nil) {
      resultFetchGardenMailResponse.gardenMailArray = [[NSMutableArray alloc] initWithArray:other.gardenMailArray];
    } else {
      [resultFetchGardenMailResponse.gardenMailArray addObjectsFromArray:other.gardenMailArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchGardenMailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchGardenMailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBGardenMailBuilder* subBuilder = [TXPBGardenMail builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGardenMail:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)gardenMail {
  return resultFetchGardenMailResponse.gardenMailArray;
}
- (TXPBGardenMail*)gardenMailAtIndex:(NSUInteger)index {
  return [resultFetchGardenMailResponse gardenMailAtIndex:index];
}
- (TXPBFetchGardenMailResponseBuilder *)addGardenMail:(TXPBGardenMail*)value {
  if (resultFetchGardenMailResponse.gardenMailArray == nil) {
    resultFetchGardenMailResponse.gardenMailArray = [[NSMutableArray alloc]init];
  }
  [resultFetchGardenMailResponse.gardenMailArray addObject:value];
  return self;
}
- (TXPBFetchGardenMailResponseBuilder *)setGardenMailArray:(NSArray *)array {
  resultFetchGardenMailResponse.gardenMailArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchGardenMailResponseBuilder *)clearGardenMail {
  resultFetchGardenMailResponse.gardenMailArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchGardenMailResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchGardenMailResponse.hasMore;
}
- (TXPBFetchGardenMailResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchGardenMailResponse.hasHasMore = YES;
  resultFetchGardenMailResponse.hasMore = value;
  return self;
}
- (TXPBFetchGardenMailResponseBuilder*) clearHasMore {
  resultFetchGardenMailResponse.hasHasMore = NO;
  resultFetchGardenMailResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBSendGardenMailRequest ()
@property (strong) NSString* content;
@property BOOL anonymous;
@end

@implementation TXPBSendGardenMailRequest

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasAnonymous {
  return !!hasAnonymous_;
}
- (void) setHasAnonymous:(BOOL) _value_ {
  hasAnonymous_ = !!_value_;
}
- (BOOL) anonymous {
  return !!anonymous_;
}
- (void) setAnonymous:(BOOL) _value_ {
  anonymous_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.content = @"";
    self.anonymous = NO;
  }
  return self;
}
static TXPBSendGardenMailRequest* defaultTXPBSendGardenMailRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendGardenMailRequest class]) {
    defaultTXPBSendGardenMailRequestInstance = [[TXPBSendGardenMailRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendGardenMailRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendGardenMailRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasAnonymous) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeString:1 value:self.content];
  }
  if (self.hasAnonymous) {
    [output writeBool:2 value:self.anonymous];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContent) {
    size_ += computeStringSize(1, self.content);
  }
  if (self.hasAnonymous) {
    size_ += computeBoolSize(2, self.anonymous);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendGardenMailRequest*) parseFromData:(NSData*) data {
  return (TXPBSendGardenMailRequest*)[[[TXPBSendGardenMailRequest builder] mergeFromData:data] build];
}
+ (TXPBSendGardenMailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendGardenMailRequest*)[[[TXPBSendGardenMailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendGardenMailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendGardenMailRequest*)[[[TXPBSendGardenMailRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSendGardenMailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendGardenMailRequest*)[[[TXPBSendGardenMailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendGardenMailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendGardenMailRequest*)[[[TXPBSendGardenMailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendGardenMailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendGardenMailRequest*)[[[TXPBSendGardenMailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendGardenMailRequestBuilder*) builder {
  return [[TXPBSendGardenMailRequestBuilder alloc] init];
}
+ (TXPBSendGardenMailRequestBuilder*) builderWithPrototype:(TXPBSendGardenMailRequest*) prototype {
  return [[TXPBSendGardenMailRequest builder] mergeFrom:prototype];
}
- (TXPBSendGardenMailRequestBuilder*) builder {
  return [TXPBSendGardenMailRequest builder];
}
- (TXPBSendGardenMailRequestBuilder*) toBuilder {
  return [TXPBSendGardenMailRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasAnonymous) {
    [output appendFormat:@"%@%@: %@\n", indent, @"anonymous", [NSNumber numberWithBool:self.anonymous]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasAnonymous) {
    [dictionary setObject: [NSNumber numberWithBool:self.anonymous] forKey: @"anonymous"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendGardenMailRequest class]]) {
    return NO;
  }
  TXPBSendGardenMailRequest *otherMessage = other;
  return
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasAnonymous == otherMessage.hasAnonymous &&
      (!self.hasAnonymous || self.anonymous == otherMessage.anonymous) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasAnonymous) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.anonymous] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendGardenMailRequestBuilder()
@property (strong) TXPBSendGardenMailRequest* resultSendGardenMailRequest;
@end

@implementation TXPBSendGardenMailRequestBuilder
@synthesize resultSendGardenMailRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendGardenMailRequest = [[TXPBSendGardenMailRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendGardenMailRequest;
}
- (TXPBSendGardenMailRequestBuilder*) clear {
  self.resultSendGardenMailRequest = [[TXPBSendGardenMailRequest alloc] init];
  return self;
}
- (TXPBSendGardenMailRequestBuilder*) clone {
  return [TXPBSendGardenMailRequest builderWithPrototype:resultSendGardenMailRequest];
}
- (TXPBSendGardenMailRequest*) defaultInstance {
  return [TXPBSendGardenMailRequest defaultInstance];
}
- (TXPBSendGardenMailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendGardenMailRequest*) buildPartial {
  TXPBSendGardenMailRequest* returnMe = resultSendGardenMailRequest;
  self.resultSendGardenMailRequest = nil;
  return returnMe;
}
- (TXPBSendGardenMailRequestBuilder*) mergeFrom:(TXPBSendGardenMailRequest*) other {
  if (other == [TXPBSendGardenMailRequest defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasAnonymous) {
    [self setAnonymous:other.anonymous];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendGardenMailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendGardenMailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContent:[input readString]];
        break;
      }
      case 16: {
        [self setAnonymous:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return resultSendGardenMailRequest.hasContent;
}
- (NSString*) content {
  return resultSendGardenMailRequest.content;
}
- (TXPBSendGardenMailRequestBuilder*) setContent:(NSString*) value {
  resultSendGardenMailRequest.hasContent = YES;
  resultSendGardenMailRequest.content = value;
  return self;
}
- (TXPBSendGardenMailRequestBuilder*) clearContent {
  resultSendGardenMailRequest.hasContent = NO;
  resultSendGardenMailRequest.content = @"";
  return self;
}
- (BOOL) hasAnonymous {
  return resultSendGardenMailRequest.hasAnonymous;
}
- (BOOL) anonymous {
  return resultSendGardenMailRequest.anonymous;
}
- (TXPBSendGardenMailRequestBuilder*) setAnonymous:(BOOL) value {
  resultSendGardenMailRequest.hasAnonymous = YES;
  resultSendGardenMailRequest.anonymous = value;
  return self;
}
- (TXPBSendGardenMailRequestBuilder*) clearAnonymous {
  resultSendGardenMailRequest.hasAnonymous = NO;
  resultSendGardenMailRequest.anonymous = NO;
  return self;
}
@end

@interface TXPBSendGardenMailResponse ()
@property SInt64 id;
@end

@implementation TXPBSendGardenMailResponse

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
  }
  return self;
}
static TXPBSendGardenMailResponse* defaultTXPBSendGardenMailResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendGardenMailResponse class]) {
    defaultTXPBSendGardenMailResponseInstance = [[TXPBSendGardenMailResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendGardenMailResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendGardenMailResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendGardenMailResponse*) parseFromData:(NSData*) data {
  return (TXPBSendGardenMailResponse*)[[[TXPBSendGardenMailResponse builder] mergeFromData:data] build];
}
+ (TXPBSendGardenMailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendGardenMailResponse*)[[[TXPBSendGardenMailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendGardenMailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendGardenMailResponse*)[[[TXPBSendGardenMailResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSendGardenMailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendGardenMailResponse*)[[[TXPBSendGardenMailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendGardenMailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendGardenMailResponse*)[[[TXPBSendGardenMailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendGardenMailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendGardenMailResponse*)[[[TXPBSendGardenMailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendGardenMailResponseBuilder*) builder {
  return [[TXPBSendGardenMailResponseBuilder alloc] init];
}
+ (TXPBSendGardenMailResponseBuilder*) builderWithPrototype:(TXPBSendGardenMailResponse*) prototype {
  return [[TXPBSendGardenMailResponse builder] mergeFrom:prototype];
}
- (TXPBSendGardenMailResponseBuilder*) builder {
  return [TXPBSendGardenMailResponse builder];
}
- (TXPBSendGardenMailResponseBuilder*) toBuilder {
  return [TXPBSendGardenMailResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendGardenMailResponse class]]) {
    return NO;
  }
  TXPBSendGardenMailResponse *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendGardenMailResponseBuilder()
@property (strong) TXPBSendGardenMailResponse* resultSendGardenMailResponse;
@end

@implementation TXPBSendGardenMailResponseBuilder
@synthesize resultSendGardenMailResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendGardenMailResponse = [[TXPBSendGardenMailResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendGardenMailResponse;
}
- (TXPBSendGardenMailResponseBuilder*) clear {
  self.resultSendGardenMailResponse = [[TXPBSendGardenMailResponse alloc] init];
  return self;
}
- (TXPBSendGardenMailResponseBuilder*) clone {
  return [TXPBSendGardenMailResponse builderWithPrototype:resultSendGardenMailResponse];
}
- (TXPBSendGardenMailResponse*) defaultInstance {
  return [TXPBSendGardenMailResponse defaultInstance];
}
- (TXPBSendGardenMailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendGardenMailResponse*) buildPartial {
  TXPBSendGardenMailResponse* returnMe = resultSendGardenMailResponse;
  self.resultSendGardenMailResponse = nil;
  return returnMe;
}
- (TXPBSendGardenMailResponseBuilder*) mergeFrom:(TXPBSendGardenMailResponse*) other {
  if (other == [TXPBSendGardenMailResponse defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendGardenMailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendGardenMailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultSendGardenMailResponse.hasId;
}
- (SInt64) id {
  return resultSendGardenMailResponse.id;
}
- (TXPBSendGardenMailResponseBuilder*) setId:(SInt64) value {
  resultSendGardenMailResponse.hasId = YES;
  resultSendGardenMailResponse.id = value;
  return self;
}
- (TXPBSendGardenMailResponseBuilder*) clearId {
  resultSendGardenMailResponse.hasId = NO;
  resultSendGardenMailResponse.id = 0L;
  return self;
}
@end

@interface TXPBSendSmsCodeRequest ()
@property (strong) NSString* mobile;
@property TXPBSendSmsCodeType sendSmsCodeType;
@property BOOL isVoice;
@end

@implementation TXPBSendSmsCodeRequest

- (BOOL) hasMobile {
  return !!hasMobile_;
}
- (void) setHasMobile:(BOOL) _value_ {
  hasMobile_ = !!_value_;
}
@synthesize mobile;
- (BOOL) hasSendSmsCodeType {
  return !!hasSendSmsCodeType_;
}
- (void) setHasSendSmsCodeType:(BOOL) _value_ {
  hasSendSmsCodeType_ = !!_value_;
}
@synthesize sendSmsCodeType;
- (BOOL) hasIsVoice {
  return !!hasIsVoice_;
}
- (void) setHasIsVoice:(BOOL) _value_ {
  hasIsVoice_ = !!_value_;
}
- (BOOL) isVoice {
  return !!isVoice_;
}
- (void) setIsVoice:(BOOL) _value_ {
  isVoice_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.mobile = @"";
    self.sendSmsCodeType = TXPBSendSmsCodeTypeForgetPassword;
    self.isVoice = NO;
  }
  return self;
}
static TXPBSendSmsCodeRequest* defaultTXPBSendSmsCodeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendSmsCodeRequest class]) {
    defaultTXPBSendSmsCodeRequestInstance = [[TXPBSendSmsCodeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendSmsCodeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendSmsCodeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMobile) {
    return NO;
  }
  if (!self.hasSendSmsCodeType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobile) {
    [output writeString:1 value:self.mobile];
  }
  if (self.hasSendSmsCodeType) {
    [output writeEnum:2 value:self.sendSmsCodeType];
  }
  if (self.hasIsVoice) {
    [output writeBool:3 value:self.isVoice];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMobile) {
    size_ += computeStringSize(1, self.mobile);
  }
  if (self.hasSendSmsCodeType) {
    size_ += computeEnumSize(2, self.sendSmsCodeType);
  }
  if (self.hasIsVoice) {
    size_ += computeBoolSize(3, self.isVoice);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendSmsCodeRequest*) parseFromData:(NSData*) data {
  return (TXPBSendSmsCodeRequest*)[[[TXPBSendSmsCodeRequest builder] mergeFromData:data] build];
}
+ (TXPBSendSmsCodeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendSmsCodeRequest*)[[[TXPBSendSmsCodeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendSmsCodeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendSmsCodeRequest*)[[[TXPBSendSmsCodeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSendSmsCodeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendSmsCodeRequest*)[[[TXPBSendSmsCodeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendSmsCodeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendSmsCodeRequest*)[[[TXPBSendSmsCodeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendSmsCodeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendSmsCodeRequest*)[[[TXPBSendSmsCodeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendSmsCodeRequestBuilder*) builder {
  return [[TXPBSendSmsCodeRequestBuilder alloc] init];
}
+ (TXPBSendSmsCodeRequestBuilder*) builderWithPrototype:(TXPBSendSmsCodeRequest*) prototype {
  return [[TXPBSendSmsCodeRequest builder] mergeFrom:prototype];
}
- (TXPBSendSmsCodeRequestBuilder*) builder {
  return [TXPBSendSmsCodeRequest builder];
}
- (TXPBSendSmsCodeRequestBuilder*) toBuilder {
  return [TXPBSendSmsCodeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMobile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobile", self.mobile];
  }
  if (self.hasSendSmsCodeType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendSmsCodeType", NSStringFromTXPBSendSmsCodeType(self.sendSmsCodeType)];
  }
  if (self.hasIsVoice) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isVoice", [NSNumber numberWithBool:self.isVoice]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMobile) {
    [dictionary setObject: self.mobile forKey: @"mobile"];
  }
  if (self.hasSendSmsCodeType) {
    [dictionary setObject: @(self.sendSmsCodeType) forKey: @"sendSmsCodeType"];
  }
  if (self.hasIsVoice) {
    [dictionary setObject: [NSNumber numberWithBool:self.isVoice] forKey: @"isVoice"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendSmsCodeRequest class]]) {
    return NO;
  }
  TXPBSendSmsCodeRequest *otherMessage = other;
  return
      self.hasMobile == otherMessage.hasMobile &&
      (!self.hasMobile || [self.mobile isEqual:otherMessage.mobile]) &&
      self.hasSendSmsCodeType == otherMessage.hasSendSmsCodeType &&
      (!self.hasSendSmsCodeType || self.sendSmsCodeType == otherMessage.sendSmsCodeType) &&
      self.hasIsVoice == otherMessage.hasIsVoice &&
      (!self.hasIsVoice || self.isVoice == otherMessage.isVoice) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMobile) {
    hashCode = hashCode * 31 + [self.mobile hash];
  }
  if (self.hasSendSmsCodeType) {
    hashCode = hashCode * 31 + self.sendSmsCodeType;
  }
  if (self.hasIsVoice) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isVoice] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendSmsCodeRequestBuilder()
@property (strong) TXPBSendSmsCodeRequest* resultSendSmsCodeRequest;
@end

@implementation TXPBSendSmsCodeRequestBuilder
@synthesize resultSendSmsCodeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendSmsCodeRequest = [[TXPBSendSmsCodeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendSmsCodeRequest;
}
- (TXPBSendSmsCodeRequestBuilder*) clear {
  self.resultSendSmsCodeRequest = [[TXPBSendSmsCodeRequest alloc] init];
  return self;
}
- (TXPBSendSmsCodeRequestBuilder*) clone {
  return [TXPBSendSmsCodeRequest builderWithPrototype:resultSendSmsCodeRequest];
}
- (TXPBSendSmsCodeRequest*) defaultInstance {
  return [TXPBSendSmsCodeRequest defaultInstance];
}
- (TXPBSendSmsCodeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendSmsCodeRequest*) buildPartial {
  TXPBSendSmsCodeRequest* returnMe = resultSendSmsCodeRequest;
  self.resultSendSmsCodeRequest = nil;
  return returnMe;
}
- (TXPBSendSmsCodeRequestBuilder*) mergeFrom:(TXPBSendSmsCodeRequest*) other {
  if (other == [TXPBSendSmsCodeRequest defaultInstance]) {
    return self;
  }
  if (other.hasMobile) {
    [self setMobile:other.mobile];
  }
  if (other.hasSendSmsCodeType) {
    [self setSendSmsCodeType:other.sendSmsCodeType];
  }
  if (other.hasIsVoice) {
    [self setIsVoice:other.isVoice];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendSmsCodeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendSmsCodeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMobile:[input readString]];
        break;
      }
      case 16: {
        TXPBSendSmsCodeType value = (TXPBSendSmsCodeType)[input readEnum];
        if (TXPBSendSmsCodeTypeIsValidValue(value)) {
          [self setSendSmsCodeType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setIsVoice:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasMobile {
  return resultSendSmsCodeRequest.hasMobile;
}
- (NSString*) mobile {
  return resultSendSmsCodeRequest.mobile;
}
- (TXPBSendSmsCodeRequestBuilder*) setMobile:(NSString*) value {
  resultSendSmsCodeRequest.hasMobile = YES;
  resultSendSmsCodeRequest.mobile = value;
  return self;
}
- (TXPBSendSmsCodeRequestBuilder*) clearMobile {
  resultSendSmsCodeRequest.hasMobile = NO;
  resultSendSmsCodeRequest.mobile = @"";
  return self;
}
- (BOOL) hasSendSmsCodeType {
  return resultSendSmsCodeRequest.hasSendSmsCodeType;
}
- (TXPBSendSmsCodeType) sendSmsCodeType {
  return resultSendSmsCodeRequest.sendSmsCodeType;
}
- (TXPBSendSmsCodeRequestBuilder*) setSendSmsCodeType:(TXPBSendSmsCodeType) value {
  resultSendSmsCodeRequest.hasSendSmsCodeType = YES;
  resultSendSmsCodeRequest.sendSmsCodeType = value;
  return self;
}
- (TXPBSendSmsCodeRequestBuilder*) clearSendSmsCodeType {
  resultSendSmsCodeRequest.hasSendSmsCodeType = NO;
  resultSendSmsCodeRequest.sendSmsCodeType = TXPBSendSmsCodeTypeForgetPassword;
  return self;
}
- (BOOL) hasIsVoice {
  return resultSendSmsCodeRequest.hasIsVoice;
}
- (BOOL) isVoice {
  return resultSendSmsCodeRequest.isVoice;
}
- (TXPBSendSmsCodeRequestBuilder*) setIsVoice:(BOOL) value {
  resultSendSmsCodeRequest.hasIsVoice = YES;
  resultSendSmsCodeRequest.isVoice = value;
  return self;
}
- (TXPBSendSmsCodeRequestBuilder*) clearIsVoice {
  resultSendSmsCodeRequest.hasIsVoice = NO;
  resultSendSmsCodeRequest.isVoice = NO;
  return self;
}
@end

@interface TXPBSendSmsCodeResponse ()
@end

@implementation TXPBSendSmsCodeResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBSendSmsCodeResponse* defaultTXPBSendSmsCodeResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendSmsCodeResponse class]) {
    defaultTXPBSendSmsCodeResponseInstance = [[TXPBSendSmsCodeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendSmsCodeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendSmsCodeResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendSmsCodeResponse*) parseFromData:(NSData*) data {
  return (TXPBSendSmsCodeResponse*)[[[TXPBSendSmsCodeResponse builder] mergeFromData:data] build];
}
+ (TXPBSendSmsCodeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendSmsCodeResponse*)[[[TXPBSendSmsCodeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendSmsCodeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendSmsCodeResponse*)[[[TXPBSendSmsCodeResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSendSmsCodeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendSmsCodeResponse*)[[[TXPBSendSmsCodeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendSmsCodeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendSmsCodeResponse*)[[[TXPBSendSmsCodeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendSmsCodeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendSmsCodeResponse*)[[[TXPBSendSmsCodeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendSmsCodeResponseBuilder*) builder {
  return [[TXPBSendSmsCodeResponseBuilder alloc] init];
}
+ (TXPBSendSmsCodeResponseBuilder*) builderWithPrototype:(TXPBSendSmsCodeResponse*) prototype {
  return [[TXPBSendSmsCodeResponse builder] mergeFrom:prototype];
}
- (TXPBSendSmsCodeResponseBuilder*) builder {
  return [TXPBSendSmsCodeResponse builder];
}
- (TXPBSendSmsCodeResponseBuilder*) toBuilder {
  return [TXPBSendSmsCodeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendSmsCodeResponse class]]) {
    return NO;
  }
  TXPBSendSmsCodeResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendSmsCodeResponseBuilder()
@property (strong) TXPBSendSmsCodeResponse* resultSendSmsCodeResponse;
@end

@implementation TXPBSendSmsCodeResponseBuilder
@synthesize resultSendSmsCodeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendSmsCodeResponse = [[TXPBSendSmsCodeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendSmsCodeResponse;
}
- (TXPBSendSmsCodeResponseBuilder*) clear {
  self.resultSendSmsCodeResponse = [[TXPBSendSmsCodeResponse alloc] init];
  return self;
}
- (TXPBSendSmsCodeResponseBuilder*) clone {
  return [TXPBSendSmsCodeResponse builderWithPrototype:resultSendSmsCodeResponse];
}
- (TXPBSendSmsCodeResponse*) defaultInstance {
  return [TXPBSendSmsCodeResponse defaultInstance];
}
- (TXPBSendSmsCodeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendSmsCodeResponse*) buildPartial {
  TXPBSendSmsCodeResponse* returnMe = resultSendSmsCodeResponse;
  self.resultSendSmsCodeResponse = nil;
  return returnMe;
}
- (TXPBSendSmsCodeResponseBuilder*) mergeFrom:(TXPBSendSmsCodeResponse*) other {
  if (other == [TXPBSendSmsCodeResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendSmsCodeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendSmsCodeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBActiveUserRequest ()
@property (strong) NSString* mobile;
@property (strong) NSString* code;
@property (strong) NSString* password;
@end

@implementation TXPBActiveUserRequest

- (BOOL) hasMobile {
  return !!hasMobile_;
}
- (void) setHasMobile:(BOOL) _value_ {
  hasMobile_ = !!_value_;
}
@synthesize mobile;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (instancetype) init {
  if ((self = [super init])) {
    self.mobile = @"";
    self.code = @"";
    self.password = @"";
  }
  return self;
}
static TXPBActiveUserRequest* defaultTXPBActiveUserRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBActiveUserRequest class]) {
    defaultTXPBActiveUserRequestInstance = [[TXPBActiveUserRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBActiveUserRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBActiveUserRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMobile) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasPassword) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobile) {
    [output writeString:1 value:self.mobile];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasPassword) {
    [output writeString:3 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMobile) {
    size_ += computeStringSize(1, self.mobile);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(3, self.password);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBActiveUserRequest*) parseFromData:(NSData*) data {
  return (TXPBActiveUserRequest*)[[[TXPBActiveUserRequest builder] mergeFromData:data] build];
}
+ (TXPBActiveUserRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveUserRequest*)[[[TXPBActiveUserRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveUserRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBActiveUserRequest*)[[[TXPBActiveUserRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBActiveUserRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveUserRequest*)[[[TXPBActiveUserRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveUserRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBActiveUserRequest*)[[[TXPBActiveUserRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBActiveUserRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveUserRequest*)[[[TXPBActiveUserRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveUserRequestBuilder*) builder {
  return [[TXPBActiveUserRequestBuilder alloc] init];
}
+ (TXPBActiveUserRequestBuilder*) builderWithPrototype:(TXPBActiveUserRequest*) prototype {
  return [[TXPBActiveUserRequest builder] mergeFrom:prototype];
}
- (TXPBActiveUserRequestBuilder*) builder {
  return [TXPBActiveUserRequest builder];
}
- (TXPBActiveUserRequestBuilder*) toBuilder {
  return [TXPBActiveUserRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMobile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobile", self.mobile];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMobile) {
    [dictionary setObject: self.mobile forKey: @"mobile"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasPassword) {
    [dictionary setObject: self.password forKey: @"password"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBActiveUserRequest class]]) {
    return NO;
  }
  TXPBActiveUserRequest *otherMessage = other;
  return
      self.hasMobile == otherMessage.hasMobile &&
      (!self.hasMobile || [self.mobile isEqual:otherMessage.mobile]) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMobile) {
    hashCode = hashCode * 31 + [self.mobile hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBActiveUserRequestBuilder()
@property (strong) TXPBActiveUserRequest* resultActiveUserRequest;
@end

@implementation TXPBActiveUserRequestBuilder
@synthesize resultActiveUserRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultActiveUserRequest = [[TXPBActiveUserRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultActiveUserRequest;
}
- (TXPBActiveUserRequestBuilder*) clear {
  self.resultActiveUserRequest = [[TXPBActiveUserRequest alloc] init];
  return self;
}
- (TXPBActiveUserRequestBuilder*) clone {
  return [TXPBActiveUserRequest builderWithPrototype:resultActiveUserRequest];
}
- (TXPBActiveUserRequest*) defaultInstance {
  return [TXPBActiveUserRequest defaultInstance];
}
- (TXPBActiveUserRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBActiveUserRequest*) buildPartial {
  TXPBActiveUserRequest* returnMe = resultActiveUserRequest;
  self.resultActiveUserRequest = nil;
  return returnMe;
}
- (TXPBActiveUserRequestBuilder*) mergeFrom:(TXPBActiveUserRequest*) other {
  if (other == [TXPBActiveUserRequest defaultInstance]) {
    return self;
  }
  if (other.hasMobile) {
    [self setMobile:other.mobile];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBActiveUserRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBActiveUserRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMobile:[input readString]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 26: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMobile {
  return resultActiveUserRequest.hasMobile;
}
- (NSString*) mobile {
  return resultActiveUserRequest.mobile;
}
- (TXPBActiveUserRequestBuilder*) setMobile:(NSString*) value {
  resultActiveUserRequest.hasMobile = YES;
  resultActiveUserRequest.mobile = value;
  return self;
}
- (TXPBActiveUserRequestBuilder*) clearMobile {
  resultActiveUserRequest.hasMobile = NO;
  resultActiveUserRequest.mobile = @"";
  return self;
}
- (BOOL) hasCode {
  return resultActiveUserRequest.hasCode;
}
- (NSString*) code {
  return resultActiveUserRequest.code;
}
- (TXPBActiveUserRequestBuilder*) setCode:(NSString*) value {
  resultActiveUserRequest.hasCode = YES;
  resultActiveUserRequest.code = value;
  return self;
}
- (TXPBActiveUserRequestBuilder*) clearCode {
  resultActiveUserRequest.hasCode = NO;
  resultActiveUserRequest.code = @"";
  return self;
}
- (BOOL) hasPassword {
  return resultActiveUserRequest.hasPassword;
}
- (NSString*) password {
  return resultActiveUserRequest.password;
}
- (TXPBActiveUserRequestBuilder*) setPassword:(NSString*) value {
  resultActiveUserRequest.hasPassword = YES;
  resultActiveUserRequest.password = value;
  return self;
}
- (TXPBActiveUserRequestBuilder*) clearPassword {
  resultActiveUserRequest.hasPassword = NO;
  resultActiveUserRequest.password = @"";
  return self;
}
@end

@interface TXPBActiveUserResponse ()
@property (strong) NSString* token;
@property (strong) TXPBUser* user;
@property (strong) NSMutableArray * userProfilesArray;
@end

@implementation TXPBActiveUserResponse

- (BOOL) hasToken {
  return !!hasToken_;
}
- (void) setHasToken:(BOOL) _value_ {
  hasToken_ = !!_value_;
}
@synthesize token;
- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
@synthesize userProfilesArray;
@dynamic userProfiles;
- (instancetype) init {
  if ((self = [super init])) {
    self.token = @"";
    self.user = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBActiveUserResponse* defaultTXPBActiveUserResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBActiveUserResponse class]) {
    defaultTXPBActiveUserResponseInstance = [[TXPBActiveUserResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBActiveUserResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBActiveUserResponseInstance;
}
- (NSArray *)userProfiles {
  return userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [userProfilesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasToken) {
    return NO;
  }
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  __block BOOL isInituserProfiles = YES;
   [self.userProfiles enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserProfiles = NO;
      *stop = YES;
    }
  }];
  if (!isInituserProfiles) return isInituserProfiles;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasToken) {
    [output writeString:1 value:self.token];
  }
  if (self.hasUser) {
    [output writeMessage:2 value:self.user];
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasToken) {
    size_ += computeStringSize(1, self.token);
  }
  if (self.hasUser) {
    size_ += computeMessageSize(2, self.user);
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBActiveUserResponse*) parseFromData:(NSData*) data {
  return (TXPBActiveUserResponse*)[[[TXPBActiveUserResponse builder] mergeFromData:data] build];
}
+ (TXPBActiveUserResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveUserResponse*)[[[TXPBActiveUserResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveUserResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBActiveUserResponse*)[[[TXPBActiveUserResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBActiveUserResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveUserResponse*)[[[TXPBActiveUserResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveUserResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBActiveUserResponse*)[[[TXPBActiveUserResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBActiveUserResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveUserResponse*)[[[TXPBActiveUserResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveUserResponseBuilder*) builder {
  return [[TXPBActiveUserResponseBuilder alloc] init];
}
+ (TXPBActiveUserResponseBuilder*) builderWithPrototype:(TXPBActiveUserResponse*) prototype {
  return [[TXPBActiveUserResponse builder] mergeFrom:prototype];
}
- (TXPBActiveUserResponseBuilder*) builder {
  return [TXPBActiveUserResponse builder];
}
- (TXPBActiveUserResponseBuilder*) toBuilder {
  return [TXPBActiveUserResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"token", self.token];
  }
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userProfiles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasToken) {
    [dictionary setObject: self.token forKey: @"token"];
  }
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  for (TXPBUserProfile* element in self.userProfilesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"userProfiles"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBActiveUserResponse class]]) {
    return NO;
  }
  TXPBActiveUserResponse *otherMessage = other;
  return
      self.hasToken == otherMessage.hasToken &&
      (!self.hasToken || [self.token isEqual:otherMessage.token]) &&
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      [self.userProfilesArray isEqualToArray:otherMessage.userProfilesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasToken) {
    hashCode = hashCode * 31 + [self.token hash];
  }
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBActiveUserResponseBuilder()
@property (strong) TXPBActiveUserResponse* resultActiveUserResponse;
@end

@implementation TXPBActiveUserResponseBuilder
@synthesize resultActiveUserResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultActiveUserResponse = [[TXPBActiveUserResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultActiveUserResponse;
}
- (TXPBActiveUserResponseBuilder*) clear {
  self.resultActiveUserResponse = [[TXPBActiveUserResponse alloc] init];
  return self;
}
- (TXPBActiveUserResponseBuilder*) clone {
  return [TXPBActiveUserResponse builderWithPrototype:resultActiveUserResponse];
}
- (TXPBActiveUserResponse*) defaultInstance {
  return [TXPBActiveUserResponse defaultInstance];
}
- (TXPBActiveUserResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBActiveUserResponse*) buildPartial {
  TXPBActiveUserResponse* returnMe = resultActiveUserResponse;
  self.resultActiveUserResponse = nil;
  return returnMe;
}
- (TXPBActiveUserResponseBuilder*) mergeFrom:(TXPBActiveUserResponse*) other {
  if (other == [TXPBActiveUserResponse defaultInstance]) {
    return self;
  }
  if (other.hasToken) {
    [self setToken:other.token];
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.userProfilesArray.count > 0) {
    if (resultActiveUserResponse.userProfilesArray == nil) {
      resultActiveUserResponse.userProfilesArray = [[NSMutableArray alloc] initWithArray:other.userProfilesArray];
    } else {
      [resultActiveUserResponse.userProfilesArray addObjectsFromArray:other.userProfilesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBActiveUserResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBActiveUserResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setToken:[input readString]];
        break;
      }
      case 18: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TXPBUserProfileBuilder* subBuilder = [TXPBUserProfile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserProfiles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasToken {
  return resultActiveUserResponse.hasToken;
}
- (NSString*) token {
  return resultActiveUserResponse.token;
}
- (TXPBActiveUserResponseBuilder*) setToken:(NSString*) value {
  resultActiveUserResponse.hasToken = YES;
  resultActiveUserResponse.token = value;
  return self;
}
- (TXPBActiveUserResponseBuilder*) clearToken {
  resultActiveUserResponse.hasToken = NO;
  resultActiveUserResponse.token = @"";
  return self;
}
- (BOOL) hasUser {
  return resultActiveUserResponse.hasUser;
}
- (TXPBUser*) user {
  return resultActiveUserResponse.user;
}
- (TXPBActiveUserResponseBuilder*) setUser:(TXPBUser*) value {
  resultActiveUserResponse.hasUser = YES;
  resultActiveUserResponse.user = value;
  return self;
}
- (TXPBActiveUserResponseBuilder*) setUserBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (TXPBActiveUserResponseBuilder*) mergeUser:(TXPBUser*) value {
  if (resultActiveUserResponse.hasUser &&
      resultActiveUserResponse.user != [TXPBUser defaultInstance]) {
    resultActiveUserResponse.user =
      [[[TXPBUser builderWithPrototype:resultActiveUserResponse.user] mergeFrom:value] buildPartial];
  } else {
    resultActiveUserResponse.user = value;
  }
  resultActiveUserResponse.hasUser = YES;
  return self;
}
- (TXPBActiveUserResponseBuilder*) clearUser {
  resultActiveUserResponse.hasUser = NO;
  resultActiveUserResponse.user = [TXPBUser defaultInstance];
  return self;
}
- (NSMutableArray *)userProfiles {
  return resultActiveUserResponse.userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [resultActiveUserResponse userProfilesAtIndex:index];
}
- (TXPBActiveUserResponseBuilder *)addUserProfiles:(TXPBUserProfile*)value {
  if (resultActiveUserResponse.userProfilesArray == nil) {
    resultActiveUserResponse.userProfilesArray = [[NSMutableArray alloc]init];
  }
  [resultActiveUserResponse.userProfilesArray addObject:value];
  return self;
}
- (TXPBActiveUserResponseBuilder *)setUserProfilesArray:(NSArray *)array {
  resultActiveUserResponse.userProfilesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBActiveUserResponseBuilder *)clearUserProfiles {
  resultActiveUserResponse.userProfilesArray = nil;
  return self;
}
@end

@interface TXPBFetchChildRequest ()
@end

@implementation TXPBFetchChildRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchChildRequest* defaultTXPBFetchChildRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchChildRequest class]) {
    defaultTXPBFetchChildRequestInstance = [[TXPBFetchChildRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchChildRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchChildRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchChildRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchChildRequest*)[[[TXPBFetchChildRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchChildRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildRequest*)[[[TXPBFetchChildRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchChildRequest*)[[[TXPBFetchChildRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchChildRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildRequest*)[[[TXPBFetchChildRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchChildRequest*)[[[TXPBFetchChildRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchChildRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildRequest*)[[[TXPBFetchChildRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildRequestBuilder*) builder {
  return [[TXPBFetchChildRequestBuilder alloc] init];
}
+ (TXPBFetchChildRequestBuilder*) builderWithPrototype:(TXPBFetchChildRequest*) prototype {
  return [[TXPBFetchChildRequest builder] mergeFrom:prototype];
}
- (TXPBFetchChildRequestBuilder*) builder {
  return [TXPBFetchChildRequest builder];
}
- (TXPBFetchChildRequestBuilder*) toBuilder {
  return [TXPBFetchChildRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchChildRequest class]]) {
    return NO;
  }
  TXPBFetchChildRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchChildRequestBuilder()
@property (strong) TXPBFetchChildRequest* resultFetchChildRequest;
@end

@implementation TXPBFetchChildRequestBuilder
@synthesize resultFetchChildRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchChildRequest = [[TXPBFetchChildRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchChildRequest;
}
- (TXPBFetchChildRequestBuilder*) clear {
  self.resultFetchChildRequest = [[TXPBFetchChildRequest alloc] init];
  return self;
}
- (TXPBFetchChildRequestBuilder*) clone {
  return [TXPBFetchChildRequest builderWithPrototype:resultFetchChildRequest];
}
- (TXPBFetchChildRequest*) defaultInstance {
  return [TXPBFetchChildRequest defaultInstance];
}
- (TXPBFetchChildRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchChildRequest*) buildPartial {
  TXPBFetchChildRequest* returnMe = resultFetchChildRequest;
  self.resultFetchChildRequest = nil;
  return returnMe;
}
- (TXPBFetchChildRequestBuilder*) mergeFrom:(TXPBFetchChildRequest*) other {
  if (other == [TXPBFetchChildRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchChildRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchChildRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchChildResponse ()
@property (strong) TXPBUser* children;
@end

@implementation TXPBFetchChildResponse

- (BOOL) hasChildren {
  return !!hasChildren_;
}
- (void) setHasChildren:(BOOL) _value_ {
  hasChildren_ = !!_value_;
}
@synthesize children;
- (instancetype) init {
  if ((self = [super init])) {
    self.children = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBFetchChildResponse* defaultTXPBFetchChildResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchChildResponse class]) {
    defaultTXPBFetchChildResponseInstance = [[TXPBFetchChildResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchChildResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchChildResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasChildren) {
    return NO;
  }
  if (!self.children.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChildren) {
    [output writeMessage:1 value:self.children];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChildren) {
    size_ += computeMessageSize(1, self.children);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchChildResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchChildResponse*)[[[TXPBFetchChildResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchChildResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildResponse*)[[[TXPBFetchChildResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchChildResponse*)[[[TXPBFetchChildResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchChildResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildResponse*)[[[TXPBFetchChildResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchChildResponse*)[[[TXPBFetchChildResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchChildResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchChildResponse*)[[[TXPBFetchChildResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchChildResponseBuilder*) builder {
  return [[TXPBFetchChildResponseBuilder alloc] init];
}
+ (TXPBFetchChildResponseBuilder*) builderWithPrototype:(TXPBFetchChildResponse*) prototype {
  return [[TXPBFetchChildResponse builder] mergeFrom:prototype];
}
- (TXPBFetchChildResponseBuilder*) builder {
  return [TXPBFetchChildResponse builder];
}
- (TXPBFetchChildResponseBuilder*) toBuilder {
  return [TXPBFetchChildResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChildren) {
    [output appendFormat:@"%@%@ {\n", indent, @"children"];
    [self.children writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasChildren) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.children storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"children"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchChildResponse class]]) {
    return NO;
  }
  TXPBFetchChildResponse *otherMessage = other;
  return
      self.hasChildren == otherMessage.hasChildren &&
      (!self.hasChildren || [self.children isEqual:otherMessage.children]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasChildren) {
    hashCode = hashCode * 31 + [self.children hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchChildResponseBuilder()
@property (strong) TXPBFetchChildResponse* resultFetchChildResponse;
@end

@implementation TXPBFetchChildResponseBuilder
@synthesize resultFetchChildResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchChildResponse = [[TXPBFetchChildResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchChildResponse;
}
- (TXPBFetchChildResponseBuilder*) clear {
  self.resultFetchChildResponse = [[TXPBFetchChildResponse alloc] init];
  return self;
}
- (TXPBFetchChildResponseBuilder*) clone {
  return [TXPBFetchChildResponse builderWithPrototype:resultFetchChildResponse];
}
- (TXPBFetchChildResponse*) defaultInstance {
  return [TXPBFetchChildResponse defaultInstance];
}
- (TXPBFetchChildResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchChildResponse*) buildPartial {
  TXPBFetchChildResponse* returnMe = resultFetchChildResponse;
  self.resultFetchChildResponse = nil;
  return returnMe;
}
- (TXPBFetchChildResponseBuilder*) mergeFrom:(TXPBFetchChildResponse*) other {
  if (other == [TXPBFetchChildResponse defaultInstance]) {
    return self;
  }
  if (other.hasChildren) {
    [self mergeChildren:other.children];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchChildResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchChildResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasChildren) {
          [subBuilder mergeFrom:self.children];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setChildren:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasChildren {
  return resultFetchChildResponse.hasChildren;
}
- (TXPBUser*) children {
  return resultFetchChildResponse.children;
}
- (TXPBFetchChildResponseBuilder*) setChildren:(TXPBUser*) value {
  resultFetchChildResponse.hasChildren = YES;
  resultFetchChildResponse.children = value;
  return self;
}
- (TXPBFetchChildResponseBuilder*) setChildrenBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setChildren:[builderForValue build]];
}
- (TXPBFetchChildResponseBuilder*) mergeChildren:(TXPBUser*) value {
  if (resultFetchChildResponse.hasChildren &&
      resultFetchChildResponse.children != [TXPBUser defaultInstance]) {
    resultFetchChildResponse.children =
      [[[TXPBUser builderWithPrototype:resultFetchChildResponse.children] mergeFrom:value] buildPartial];
  } else {
    resultFetchChildResponse.children = value;
  }
  resultFetchChildResponse.hasChildren = YES;
  return self;
}
- (TXPBFetchChildResponseBuilder*) clearChildren {
  resultFetchChildResponse.hasChildren = NO;
  resultFetchChildResponse.children = [TXPBUser defaultInstance];
  return self;
}
@end

@interface TXPBBindChildRequest ()
@property TXPBParentType parentType;
@property SInt64 childUserId;
@property SInt64 birthday;
@property (strong) NSString* guarder;
@end

@implementation TXPBBindChildRequest

- (BOOL) hasParentType {
  return !!hasParentType_;
}
- (void) setHasParentType:(BOOL) _value_ {
  hasParentType_ = !!_value_;
}
@synthesize parentType;
- (BOOL) hasChildUserId {
  return !!hasChildUserId_;
}
- (void) setHasChildUserId:(BOOL) _value_ {
  hasChildUserId_ = !!_value_;
}
@synthesize childUserId;
- (BOOL) hasBirthday {
  return !!hasBirthday_;
}
- (void) setHasBirthday:(BOOL) _value_ {
  hasBirthday_ = !!_value_;
}
@synthesize birthday;
- (BOOL) hasGuarder {
  return !!hasGuarder_;
}
- (void) setHasGuarder:(BOOL) _value_ {
  hasGuarder_ = !!_value_;
}
@synthesize guarder;
- (instancetype) init {
  if ((self = [super init])) {
    self.parentType = TXPBParentTypeFather;
    self.childUserId = 0L;
    self.birthday = 0L;
    self.guarder = @"";
  }
  return self;
}
static TXPBBindChildRequest* defaultTXPBBindChildRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBBindChildRequest class]) {
    defaultTXPBBindChildRequestInstance = [[TXPBBindChildRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBBindChildRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBBindChildRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasParentType) {
    return NO;
  }
  if (!self.hasChildUserId) {
    return NO;
  }
  if (!self.hasBirthday) {
    return NO;
  }
  if (!self.hasGuarder) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasParentType) {
    [output writeEnum:1 value:self.parentType];
  }
  if (self.hasChildUserId) {
    [output writeInt64:2 value:self.childUserId];
  }
  if (self.hasBirthday) {
    [output writeInt64:3 value:self.birthday];
  }
  if (self.hasGuarder) {
    [output writeString:4 value:self.guarder];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasParentType) {
    size_ += computeEnumSize(1, self.parentType);
  }
  if (self.hasChildUserId) {
    size_ += computeInt64Size(2, self.childUserId);
  }
  if (self.hasBirthday) {
    size_ += computeInt64Size(3, self.birthday);
  }
  if (self.hasGuarder) {
    size_ += computeStringSize(4, self.guarder);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBBindChildRequest*) parseFromData:(NSData*) data {
  return (TXPBBindChildRequest*)[[[TXPBBindChildRequest builder] mergeFromData:data] build];
}
+ (TXPBBindChildRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindChildRequest*)[[[TXPBBindChildRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindChildRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBBindChildRequest*)[[[TXPBBindChildRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBBindChildRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindChildRequest*)[[[TXPBBindChildRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindChildRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBBindChildRequest*)[[[TXPBBindChildRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBBindChildRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindChildRequest*)[[[TXPBBindChildRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindChildRequestBuilder*) builder {
  return [[TXPBBindChildRequestBuilder alloc] init];
}
+ (TXPBBindChildRequestBuilder*) builderWithPrototype:(TXPBBindChildRequest*) prototype {
  return [[TXPBBindChildRequest builder] mergeFrom:prototype];
}
- (TXPBBindChildRequestBuilder*) builder {
  return [TXPBBindChildRequest builder];
}
- (TXPBBindChildRequestBuilder*) toBuilder {
  return [TXPBBindChildRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasParentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentType", NSStringFromTXPBParentType(self.parentType)];
  }
  if (self.hasChildUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserId", [NSNumber numberWithLongLong:self.childUserId]];
  }
  if (self.hasBirthday) {
    [output appendFormat:@"%@%@: %@\n", indent, @"birthday", [NSNumber numberWithLongLong:self.birthday]];
  }
  if (self.hasGuarder) {
    [output appendFormat:@"%@%@: %@\n", indent, @"guarder", self.guarder];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasParentType) {
    [dictionary setObject: @(self.parentType) forKey: @"parentType"];
  }
  if (self.hasChildUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.childUserId] forKey: @"childUserId"];
  }
  if (self.hasBirthday) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.birthday] forKey: @"birthday"];
  }
  if (self.hasGuarder) {
    [dictionary setObject: self.guarder forKey: @"guarder"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBBindChildRequest class]]) {
    return NO;
  }
  TXPBBindChildRequest *otherMessage = other;
  return
      self.hasParentType == otherMessage.hasParentType &&
      (!self.hasParentType || self.parentType == otherMessage.parentType) &&
      self.hasChildUserId == otherMessage.hasChildUserId &&
      (!self.hasChildUserId || self.childUserId == otherMessage.childUserId) &&
      self.hasBirthday == otherMessage.hasBirthday &&
      (!self.hasBirthday || self.birthday == otherMessage.birthday) &&
      self.hasGuarder == otherMessage.hasGuarder &&
      (!self.hasGuarder || [self.guarder isEqual:otherMessage.guarder]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasParentType) {
    hashCode = hashCode * 31 + self.parentType;
  }
  if (self.hasChildUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.childUserId] hash];
  }
  if (self.hasBirthday) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.birthday] hash];
  }
  if (self.hasGuarder) {
    hashCode = hashCode * 31 + [self.guarder hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBBindChildRequestBuilder()
@property (strong) TXPBBindChildRequest* resultBindChildRequest;
@end

@implementation TXPBBindChildRequestBuilder
@synthesize resultBindChildRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBindChildRequest = [[TXPBBindChildRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBindChildRequest;
}
- (TXPBBindChildRequestBuilder*) clear {
  self.resultBindChildRequest = [[TXPBBindChildRequest alloc] init];
  return self;
}
- (TXPBBindChildRequestBuilder*) clone {
  return [TXPBBindChildRequest builderWithPrototype:resultBindChildRequest];
}
- (TXPBBindChildRequest*) defaultInstance {
  return [TXPBBindChildRequest defaultInstance];
}
- (TXPBBindChildRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBBindChildRequest*) buildPartial {
  TXPBBindChildRequest* returnMe = resultBindChildRequest;
  self.resultBindChildRequest = nil;
  return returnMe;
}
- (TXPBBindChildRequestBuilder*) mergeFrom:(TXPBBindChildRequest*) other {
  if (other == [TXPBBindChildRequest defaultInstance]) {
    return self;
  }
  if (other.hasParentType) {
    [self setParentType:other.parentType];
  }
  if (other.hasChildUserId) {
    [self setChildUserId:other.childUserId];
  }
  if (other.hasBirthday) {
    [self setBirthday:other.birthday];
  }
  if (other.hasGuarder) {
    [self setGuarder:other.guarder];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBBindChildRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBBindChildRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        TXPBParentType value = (TXPBParentType)[input readEnum];
        if (TXPBParentTypeIsValidValue(value)) {
          [self setParentType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 16: {
        [self setChildUserId:[input readInt64]];
        break;
      }
      case 24: {
        [self setBirthday:[input readInt64]];
        break;
      }
      case 34: {
        [self setGuarder:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasParentType {
  return resultBindChildRequest.hasParentType;
}
- (TXPBParentType) parentType {
  return resultBindChildRequest.parentType;
}
- (TXPBBindChildRequestBuilder*) setParentType:(TXPBParentType) value {
  resultBindChildRequest.hasParentType = YES;
  resultBindChildRequest.parentType = value;
  return self;
}
- (TXPBBindChildRequestBuilder*) clearParentType {
  resultBindChildRequest.hasParentType = NO;
  resultBindChildRequest.parentType = TXPBParentTypeFather;
  return self;
}
- (BOOL) hasChildUserId {
  return resultBindChildRequest.hasChildUserId;
}
- (SInt64) childUserId {
  return resultBindChildRequest.childUserId;
}
- (TXPBBindChildRequestBuilder*) setChildUserId:(SInt64) value {
  resultBindChildRequest.hasChildUserId = YES;
  resultBindChildRequest.childUserId = value;
  return self;
}
- (TXPBBindChildRequestBuilder*) clearChildUserId {
  resultBindChildRequest.hasChildUserId = NO;
  resultBindChildRequest.childUserId = 0L;
  return self;
}
- (BOOL) hasBirthday {
  return resultBindChildRequest.hasBirthday;
}
- (SInt64) birthday {
  return resultBindChildRequest.birthday;
}
- (TXPBBindChildRequestBuilder*) setBirthday:(SInt64) value {
  resultBindChildRequest.hasBirthday = YES;
  resultBindChildRequest.birthday = value;
  return self;
}
- (TXPBBindChildRequestBuilder*) clearBirthday {
  resultBindChildRequest.hasBirthday = NO;
  resultBindChildRequest.birthday = 0L;
  return self;
}
- (BOOL) hasGuarder {
  return resultBindChildRequest.hasGuarder;
}
- (NSString*) guarder {
  return resultBindChildRequest.guarder;
}
- (TXPBBindChildRequestBuilder*) setGuarder:(NSString*) value {
  resultBindChildRequest.hasGuarder = YES;
  resultBindChildRequest.guarder = value;
  return self;
}
- (TXPBBindChildRequestBuilder*) clearGuarder {
  resultBindChildRequest.hasGuarder = NO;
  resultBindChildRequest.guarder = @"";
  return self;
}
@end

@interface TXPBBindChildResponse ()
@property (strong) TXPBUser* parent;
@property (strong) TXPBUser* child;
@end

@implementation TXPBBindChildResponse

- (BOOL) hasParent {
  return !!hasParent_;
}
- (void) setHasParent:(BOOL) _value_ {
  hasParent_ = !!_value_;
}
@synthesize parent;
- (BOOL) hasChild {
  return !!hasChild_;
}
- (void) setHasChild:(BOOL) _value_ {
  hasChild_ = !!_value_;
}
@synthesize child;
- (instancetype) init {
  if ((self = [super init])) {
    self.parent = [TXPBUser defaultInstance];
    self.child = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBBindChildResponse* defaultTXPBBindChildResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBBindChildResponse class]) {
    defaultTXPBBindChildResponseInstance = [[TXPBBindChildResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBBindChildResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBBindChildResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasParent) {
    return NO;
  }
  if (!self.hasChild) {
    return NO;
  }
  if (!self.parent.isInitialized) {
    return NO;
  }
  if (!self.child.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasParent) {
    [output writeMessage:1 value:self.parent];
  }
  if (self.hasChild) {
    [output writeMessage:2 value:self.child];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasParent) {
    size_ += computeMessageSize(1, self.parent);
  }
  if (self.hasChild) {
    size_ += computeMessageSize(2, self.child);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBBindChildResponse*) parseFromData:(NSData*) data {
  return (TXPBBindChildResponse*)[[[TXPBBindChildResponse builder] mergeFromData:data] build];
}
+ (TXPBBindChildResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindChildResponse*)[[[TXPBBindChildResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindChildResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBBindChildResponse*)[[[TXPBBindChildResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBBindChildResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindChildResponse*)[[[TXPBBindChildResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindChildResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBBindChildResponse*)[[[TXPBBindChildResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBBindChildResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindChildResponse*)[[[TXPBBindChildResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindChildResponseBuilder*) builder {
  return [[TXPBBindChildResponseBuilder alloc] init];
}
+ (TXPBBindChildResponseBuilder*) builderWithPrototype:(TXPBBindChildResponse*) prototype {
  return [[TXPBBindChildResponse builder] mergeFrom:prototype];
}
- (TXPBBindChildResponseBuilder*) builder {
  return [TXPBBindChildResponse builder];
}
- (TXPBBindChildResponseBuilder*) toBuilder {
  return [TXPBBindChildResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasParent) {
    [output appendFormat:@"%@%@ {\n", indent, @"parent"];
    [self.parent writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasChild) {
    [output appendFormat:@"%@%@ {\n", indent, @"child"];
    [self.child writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasParent) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.parent storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"parent"];
  }
  if (self.hasChild) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.child storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"child"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBBindChildResponse class]]) {
    return NO;
  }
  TXPBBindChildResponse *otherMessage = other;
  return
      self.hasParent == otherMessage.hasParent &&
      (!self.hasParent || [self.parent isEqual:otherMessage.parent]) &&
      self.hasChild == otherMessage.hasChild &&
      (!self.hasChild || [self.child isEqual:otherMessage.child]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasParent) {
    hashCode = hashCode * 31 + [self.parent hash];
  }
  if (self.hasChild) {
    hashCode = hashCode * 31 + [self.child hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBBindChildResponseBuilder()
@property (strong) TXPBBindChildResponse* resultBindChildResponse;
@end

@implementation TXPBBindChildResponseBuilder
@synthesize resultBindChildResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBindChildResponse = [[TXPBBindChildResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBindChildResponse;
}
- (TXPBBindChildResponseBuilder*) clear {
  self.resultBindChildResponse = [[TXPBBindChildResponse alloc] init];
  return self;
}
- (TXPBBindChildResponseBuilder*) clone {
  return [TXPBBindChildResponse builderWithPrototype:resultBindChildResponse];
}
- (TXPBBindChildResponse*) defaultInstance {
  return [TXPBBindChildResponse defaultInstance];
}
- (TXPBBindChildResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBBindChildResponse*) buildPartial {
  TXPBBindChildResponse* returnMe = resultBindChildResponse;
  self.resultBindChildResponse = nil;
  return returnMe;
}
- (TXPBBindChildResponseBuilder*) mergeFrom:(TXPBBindChildResponse*) other {
  if (other == [TXPBBindChildResponse defaultInstance]) {
    return self;
  }
  if (other.hasParent) {
    [self mergeParent:other.parent];
  }
  if (other.hasChild) {
    [self mergeChild:other.child];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBBindChildResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBBindChildResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasParent) {
          [subBuilder mergeFrom:self.parent];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setParent:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasChild) {
          [subBuilder mergeFrom:self.child];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setChild:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasParent {
  return resultBindChildResponse.hasParent;
}
- (TXPBUser*) parent {
  return resultBindChildResponse.parent;
}
- (TXPBBindChildResponseBuilder*) setParent:(TXPBUser*) value {
  resultBindChildResponse.hasParent = YES;
  resultBindChildResponse.parent = value;
  return self;
}
- (TXPBBindChildResponseBuilder*) setParentBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setParent:[builderForValue build]];
}
- (TXPBBindChildResponseBuilder*) mergeParent:(TXPBUser*) value {
  if (resultBindChildResponse.hasParent &&
      resultBindChildResponse.parent != [TXPBUser defaultInstance]) {
    resultBindChildResponse.parent =
      [[[TXPBUser builderWithPrototype:resultBindChildResponse.parent] mergeFrom:value] buildPartial];
  } else {
    resultBindChildResponse.parent = value;
  }
  resultBindChildResponse.hasParent = YES;
  return self;
}
- (TXPBBindChildResponseBuilder*) clearParent {
  resultBindChildResponse.hasParent = NO;
  resultBindChildResponse.parent = [TXPBUser defaultInstance];
  return self;
}
- (BOOL) hasChild {
  return resultBindChildResponse.hasChild;
}
- (TXPBUser*) child {
  return resultBindChildResponse.child;
}
- (TXPBBindChildResponseBuilder*) setChild:(TXPBUser*) value {
  resultBindChildResponse.hasChild = YES;
  resultBindChildResponse.child = value;
  return self;
}
- (TXPBBindChildResponseBuilder*) setChildBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setChild:[builderForValue build]];
}
- (TXPBBindChildResponseBuilder*) mergeChild:(TXPBUser*) value {
  if (resultBindChildResponse.hasChild &&
      resultBindChildResponse.child != [TXPBUser defaultInstance]) {
    resultBindChildResponse.child =
      [[[TXPBUser builderWithPrototype:resultBindChildResponse.child] mergeFrom:value] buildPartial];
  } else {
    resultBindChildResponse.child = value;
  }
  resultBindChildResponse.hasChild = YES;
  return self;
}
- (TXPBBindChildResponseBuilder*) clearChild {
  resultBindChildResponse.hasChild = NO;
  resultBindChildResponse.child = [TXPBUser defaultInstance];
  return self;
}
@end

@interface TXPBSetPasswordRequest ()
@property (strong) NSString* code;
@property (strong) NSString* password;
@property (strong) NSString* mobile;
@end

@implementation TXPBSetPasswordRequest

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (BOOL) hasMobile {
  return !!hasMobile_;
}
- (void) setHasMobile:(BOOL) _value_ {
  hasMobile_ = !!_value_;
}
@synthesize mobile;
- (instancetype) init {
  if ((self = [super init])) {
    self.code = @"";
    self.password = @"";
    self.mobile = @"";
  }
  return self;
}
static TXPBSetPasswordRequest* defaultTXPBSetPasswordRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSetPasswordRequest class]) {
    defaultTXPBSetPasswordRequestInstance = [[TXPBSetPasswordRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSetPasswordRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSetPasswordRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasPassword) {
    return NO;
  }
  if (!self.hasMobile) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeString:1 value:self.code];
  }
  if (self.hasPassword) {
    [output writeString:2 value:self.password];
  }
  if (self.hasMobile) {
    [output writeString:3 value:self.mobile];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCode) {
    size_ += computeStringSize(1, self.code);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(2, self.password);
  }
  if (self.hasMobile) {
    size_ += computeStringSize(3, self.mobile);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSetPasswordRequest*) parseFromData:(NSData*) data {
  return (TXPBSetPasswordRequest*)[[[TXPBSetPasswordRequest builder] mergeFromData:data] build];
}
+ (TXPBSetPasswordRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSetPasswordRequest*)[[[TXPBSetPasswordRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSetPasswordRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSetPasswordRequest*)[[[TXPBSetPasswordRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSetPasswordRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSetPasswordRequest*)[[[TXPBSetPasswordRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSetPasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSetPasswordRequest*)[[[TXPBSetPasswordRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSetPasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSetPasswordRequest*)[[[TXPBSetPasswordRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSetPasswordRequestBuilder*) builder {
  return [[TXPBSetPasswordRequestBuilder alloc] init];
}
+ (TXPBSetPasswordRequestBuilder*) builderWithPrototype:(TXPBSetPasswordRequest*) prototype {
  return [[TXPBSetPasswordRequest builder] mergeFrom:prototype];
}
- (TXPBSetPasswordRequestBuilder*) builder {
  return [TXPBSetPasswordRequest builder];
}
- (TXPBSetPasswordRequestBuilder*) toBuilder {
  return [TXPBSetPasswordRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  if (self.hasMobile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobile", self.mobile];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasPassword) {
    [dictionary setObject: self.password forKey: @"password"];
  }
  if (self.hasMobile) {
    [dictionary setObject: self.mobile forKey: @"mobile"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSetPasswordRequest class]]) {
    return NO;
  }
  TXPBSetPasswordRequest *otherMessage = other;
  return
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      self.hasMobile == otherMessage.hasMobile &&
      (!self.hasMobile || [self.mobile isEqual:otherMessage.mobile]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  if (self.hasMobile) {
    hashCode = hashCode * 31 + [self.mobile hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSetPasswordRequestBuilder()
@property (strong) TXPBSetPasswordRequest* resultSetPasswordRequest;
@end

@implementation TXPBSetPasswordRequestBuilder
@synthesize resultSetPasswordRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetPasswordRequest = [[TXPBSetPasswordRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetPasswordRequest;
}
- (TXPBSetPasswordRequestBuilder*) clear {
  self.resultSetPasswordRequest = [[TXPBSetPasswordRequest alloc] init];
  return self;
}
- (TXPBSetPasswordRequestBuilder*) clone {
  return [TXPBSetPasswordRequest builderWithPrototype:resultSetPasswordRequest];
}
- (TXPBSetPasswordRequest*) defaultInstance {
  return [TXPBSetPasswordRequest defaultInstance];
}
- (TXPBSetPasswordRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSetPasswordRequest*) buildPartial {
  TXPBSetPasswordRequest* returnMe = resultSetPasswordRequest;
  self.resultSetPasswordRequest = nil;
  return returnMe;
}
- (TXPBSetPasswordRequestBuilder*) mergeFrom:(TXPBSetPasswordRequest*) other {
  if (other == [TXPBSetPasswordRequest defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  if (other.hasMobile) {
    [self setMobile:other.mobile];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSetPasswordRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSetPasswordRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCode:[input readString]];
        break;
      }
      case 18: {
        [self setPassword:[input readString]];
        break;
      }
      case 26: {
        [self setMobile:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return resultSetPasswordRequest.hasCode;
}
- (NSString*) code {
  return resultSetPasswordRequest.code;
}
- (TXPBSetPasswordRequestBuilder*) setCode:(NSString*) value {
  resultSetPasswordRequest.hasCode = YES;
  resultSetPasswordRequest.code = value;
  return self;
}
- (TXPBSetPasswordRequestBuilder*) clearCode {
  resultSetPasswordRequest.hasCode = NO;
  resultSetPasswordRequest.code = @"";
  return self;
}
- (BOOL) hasPassword {
  return resultSetPasswordRequest.hasPassword;
}
- (NSString*) password {
  return resultSetPasswordRequest.password;
}
- (TXPBSetPasswordRequestBuilder*) setPassword:(NSString*) value {
  resultSetPasswordRequest.hasPassword = YES;
  resultSetPasswordRequest.password = value;
  return self;
}
- (TXPBSetPasswordRequestBuilder*) clearPassword {
  resultSetPasswordRequest.hasPassword = NO;
  resultSetPasswordRequest.password = @"";
  return self;
}
- (BOOL) hasMobile {
  return resultSetPasswordRequest.hasMobile;
}
- (NSString*) mobile {
  return resultSetPasswordRequest.mobile;
}
- (TXPBSetPasswordRequestBuilder*) setMobile:(NSString*) value {
  resultSetPasswordRequest.hasMobile = YES;
  resultSetPasswordRequest.mobile = value;
  return self;
}
- (TXPBSetPasswordRequestBuilder*) clearMobile {
  resultSetPasswordRequest.hasMobile = NO;
  resultSetPasswordRequest.mobile = @"";
  return self;
}
@end

@interface TXPBSetPasswordResponse ()
@end

@implementation TXPBSetPasswordResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBSetPasswordResponse* defaultTXPBSetPasswordResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSetPasswordResponse class]) {
    defaultTXPBSetPasswordResponseInstance = [[TXPBSetPasswordResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSetPasswordResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSetPasswordResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSetPasswordResponse*) parseFromData:(NSData*) data {
  return (TXPBSetPasswordResponse*)[[[TXPBSetPasswordResponse builder] mergeFromData:data] build];
}
+ (TXPBSetPasswordResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSetPasswordResponse*)[[[TXPBSetPasswordResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSetPasswordResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSetPasswordResponse*)[[[TXPBSetPasswordResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSetPasswordResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSetPasswordResponse*)[[[TXPBSetPasswordResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSetPasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSetPasswordResponse*)[[[TXPBSetPasswordResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSetPasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSetPasswordResponse*)[[[TXPBSetPasswordResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSetPasswordResponseBuilder*) builder {
  return [[TXPBSetPasswordResponseBuilder alloc] init];
}
+ (TXPBSetPasswordResponseBuilder*) builderWithPrototype:(TXPBSetPasswordResponse*) prototype {
  return [[TXPBSetPasswordResponse builder] mergeFrom:prototype];
}
- (TXPBSetPasswordResponseBuilder*) builder {
  return [TXPBSetPasswordResponse builder];
}
- (TXPBSetPasswordResponseBuilder*) toBuilder {
  return [TXPBSetPasswordResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSetPasswordResponse class]]) {
    return NO;
  }
  TXPBSetPasswordResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSetPasswordResponseBuilder()
@property (strong) TXPBSetPasswordResponse* resultSetPasswordResponse;
@end

@implementation TXPBSetPasswordResponseBuilder
@synthesize resultSetPasswordResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSetPasswordResponse = [[TXPBSetPasswordResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSetPasswordResponse;
}
- (TXPBSetPasswordResponseBuilder*) clear {
  self.resultSetPasswordResponse = [[TXPBSetPasswordResponse alloc] init];
  return self;
}
- (TXPBSetPasswordResponseBuilder*) clone {
  return [TXPBSetPasswordResponse builderWithPrototype:resultSetPasswordResponse];
}
- (TXPBSetPasswordResponse*) defaultInstance {
  return [TXPBSetPasswordResponse defaultInstance];
}
- (TXPBSetPasswordResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSetPasswordResponse*) buildPartial {
  TXPBSetPasswordResponse* returnMe = resultSetPasswordResponse;
  self.resultSetPasswordResponse = nil;
  return returnMe;
}
- (TXPBSetPasswordResponseBuilder*) mergeFrom:(TXPBSetPasswordResponse*) other {
  if (other == [TXPBSetPasswordResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSetPasswordResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSetPasswordResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBUpdatePasswordRequest ()
@property (strong) NSString* oldPassword;
@property (strong) NS_RETURNS_NOT_RETAINED NSString* newPassword;
@end

@implementation TXPBUpdatePasswordRequest

- (BOOL) hasOldPassword {
  return !!hasOldPassword_;
}
- (void) setHasOldPassword:(BOOL) _value_ {
  hasOldPassword_ = !!_value_;
}
@synthesize oldPassword;
- (BOOL) hasNewPassword {
  return !!hasNewPassword_;
}
- (void) setHasNewPassword:(BOOL) _value_ {
  hasNewPassword_ = !!_value_;
}
@synthesize newPassword;
- (instancetype) init {
  if ((self = [super init])) {
    self.oldPassword = @"";
    self.newPassword = @"";
  }
  return self;
}
static TXPBUpdatePasswordRequest* defaultTXPBUpdatePasswordRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdatePasswordRequest class]) {
    defaultTXPBUpdatePasswordRequestInstance = [[TXPBUpdatePasswordRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdatePasswordRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdatePasswordRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOldPassword) {
    return NO;
  }
  if (!self.hasNewPassword) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOldPassword) {
    [output writeString:1 value:self.oldPassword];
  }
  if (self.hasNewPassword) {
    [output writeString:2 value:self.newPassword];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOldPassword) {
    size_ += computeStringSize(1, self.oldPassword);
  }
  if (self.hasNewPassword) {
    size_ += computeStringSize(2, self.newPassword);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdatePasswordRequest*) parseFromData:(NSData*) data {
  return (TXPBUpdatePasswordRequest*)[[[TXPBUpdatePasswordRequest builder] mergeFromData:data] build];
}
+ (TXPBUpdatePasswordRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdatePasswordRequest*)[[[TXPBUpdatePasswordRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdatePasswordRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdatePasswordRequest*)[[[TXPBUpdatePasswordRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdatePasswordRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdatePasswordRequest*)[[[TXPBUpdatePasswordRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdatePasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdatePasswordRequest*)[[[TXPBUpdatePasswordRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdatePasswordRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdatePasswordRequest*)[[[TXPBUpdatePasswordRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdatePasswordRequestBuilder*) builder {
  return [[TXPBUpdatePasswordRequestBuilder alloc] init];
}
+ (TXPBUpdatePasswordRequestBuilder*) builderWithPrototype:(TXPBUpdatePasswordRequest*) prototype {
  return [[TXPBUpdatePasswordRequest builder] mergeFrom:prototype];
}
- (TXPBUpdatePasswordRequestBuilder*) builder {
  return [TXPBUpdatePasswordRequest builder];
}
- (TXPBUpdatePasswordRequestBuilder*) toBuilder {
  return [TXPBUpdatePasswordRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOldPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"oldPassword", self.oldPassword];
  }
  if (self.hasNewPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"newPassword", self.newPassword];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasOldPassword) {
    [dictionary setObject: self.oldPassword forKey: @"oldPassword"];
  }
  if (self.hasNewPassword) {
    [dictionary setObject: self.newPassword forKey: @"newPassword"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdatePasswordRequest class]]) {
    return NO;
  }
  TXPBUpdatePasswordRequest *otherMessage = other;
  return
      self.hasOldPassword == otherMessage.hasOldPassword &&
      (!self.hasOldPassword || [self.oldPassword isEqual:otherMessage.oldPassword]) &&
      self.hasNewPassword == otherMessage.hasNewPassword &&
      (!self.hasNewPassword || [self.newPassword isEqual:otherMessage.newPassword]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasOldPassword) {
    hashCode = hashCode * 31 + [self.oldPassword hash];
  }
  if (self.hasNewPassword) {
    hashCode = hashCode * 31 + [self.newPassword hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdatePasswordRequestBuilder()
@property (strong) TXPBUpdatePasswordRequest* resultUpdatePasswordRequest;
@end

@implementation TXPBUpdatePasswordRequestBuilder
@synthesize resultUpdatePasswordRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdatePasswordRequest = [[TXPBUpdatePasswordRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdatePasswordRequest;
}
- (TXPBUpdatePasswordRequestBuilder*) clear {
  self.resultUpdatePasswordRequest = [[TXPBUpdatePasswordRequest alloc] init];
  return self;
}
- (TXPBUpdatePasswordRequestBuilder*) clone {
  return [TXPBUpdatePasswordRequest builderWithPrototype:resultUpdatePasswordRequest];
}
- (TXPBUpdatePasswordRequest*) defaultInstance {
  return [TXPBUpdatePasswordRequest defaultInstance];
}
- (TXPBUpdatePasswordRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdatePasswordRequest*) buildPartial {
  TXPBUpdatePasswordRequest* returnMe = resultUpdatePasswordRequest;
  self.resultUpdatePasswordRequest = nil;
  return returnMe;
}
- (TXPBUpdatePasswordRequestBuilder*) mergeFrom:(TXPBUpdatePasswordRequest*) other {
  if (other == [TXPBUpdatePasswordRequest defaultInstance]) {
    return self;
  }
  if (other.hasOldPassword) {
    [self setOldPassword:other.oldPassword];
  }
  if (other.hasNewPassword) {
    [self setNewPassword:other.newPassword];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdatePasswordRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdatePasswordRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setOldPassword:[input readString]];
        break;
      }
      case 18: {
        [self setNewPassword:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasOldPassword {
  return resultUpdatePasswordRequest.hasOldPassword;
}
- (NSString*) oldPassword {
  return resultUpdatePasswordRequest.oldPassword;
}
- (TXPBUpdatePasswordRequestBuilder*) setOldPassword:(NSString*) value {
  resultUpdatePasswordRequest.hasOldPassword = YES;
  resultUpdatePasswordRequest.oldPassword = value;
  return self;
}
- (TXPBUpdatePasswordRequestBuilder*) clearOldPassword {
  resultUpdatePasswordRequest.hasOldPassword = NO;
  resultUpdatePasswordRequest.oldPassword = @"";
  return self;
}
- (BOOL) hasNewPassword {
  return resultUpdatePasswordRequest.hasNewPassword;
}
- (NSString*) newPassword {
  return resultUpdatePasswordRequest.newPassword;
}
- (TXPBUpdatePasswordRequestBuilder*) setNewPassword:(NSString*) value {
  resultUpdatePasswordRequest.hasNewPassword = YES;
  resultUpdatePasswordRequest.newPassword = value;
  return self;
}
- (TXPBUpdatePasswordRequestBuilder*) clearNewPassword {
  resultUpdatePasswordRequest.hasNewPassword = NO;
  resultUpdatePasswordRequest.newPassword = @"";
  return self;
}
@end

@interface TXPBUpdatePasswordResponse ()
@end

@implementation TXPBUpdatePasswordResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBUpdatePasswordResponse* defaultTXPBUpdatePasswordResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdatePasswordResponse class]) {
    defaultTXPBUpdatePasswordResponseInstance = [[TXPBUpdatePasswordResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdatePasswordResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdatePasswordResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdatePasswordResponse*) parseFromData:(NSData*) data {
  return (TXPBUpdatePasswordResponse*)[[[TXPBUpdatePasswordResponse builder] mergeFromData:data] build];
}
+ (TXPBUpdatePasswordResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdatePasswordResponse*)[[[TXPBUpdatePasswordResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdatePasswordResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdatePasswordResponse*)[[[TXPBUpdatePasswordResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdatePasswordResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdatePasswordResponse*)[[[TXPBUpdatePasswordResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdatePasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdatePasswordResponse*)[[[TXPBUpdatePasswordResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdatePasswordResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdatePasswordResponse*)[[[TXPBUpdatePasswordResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdatePasswordResponseBuilder*) builder {
  return [[TXPBUpdatePasswordResponseBuilder alloc] init];
}
+ (TXPBUpdatePasswordResponseBuilder*) builderWithPrototype:(TXPBUpdatePasswordResponse*) prototype {
  return [[TXPBUpdatePasswordResponse builder] mergeFrom:prototype];
}
- (TXPBUpdatePasswordResponseBuilder*) builder {
  return [TXPBUpdatePasswordResponse builder];
}
- (TXPBUpdatePasswordResponseBuilder*) toBuilder {
  return [TXPBUpdatePasswordResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdatePasswordResponse class]]) {
    return NO;
  }
  TXPBUpdatePasswordResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdatePasswordResponseBuilder()
@property (strong) TXPBUpdatePasswordResponse* resultUpdatePasswordResponse;
@end

@implementation TXPBUpdatePasswordResponseBuilder
@synthesize resultUpdatePasswordResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdatePasswordResponse = [[TXPBUpdatePasswordResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdatePasswordResponse;
}
- (TXPBUpdatePasswordResponseBuilder*) clear {
  self.resultUpdatePasswordResponse = [[TXPBUpdatePasswordResponse alloc] init];
  return self;
}
- (TXPBUpdatePasswordResponseBuilder*) clone {
  return [TXPBUpdatePasswordResponse builderWithPrototype:resultUpdatePasswordResponse];
}
- (TXPBUpdatePasswordResponse*) defaultInstance {
  return [TXPBUpdatePasswordResponse defaultInstance];
}
- (TXPBUpdatePasswordResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdatePasswordResponse*) buildPartial {
  TXPBUpdatePasswordResponse* returnMe = resultUpdatePasswordResponse;
  self.resultUpdatePasswordResponse = nil;
  return returnMe;
}
- (TXPBUpdatePasswordResponseBuilder*) mergeFrom:(TXPBUpdatePasswordResponse*) other {
  if (other == [TXPBUpdatePasswordResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdatePasswordResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdatePasswordResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBBindingParentInfo ()
@property (strong) TXPBUser* user;
@property TXPBParentType parentType;
@property BOOL isMaster;
@end

@implementation TXPBBindingParentInfo

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (BOOL) hasParentType {
  return !!hasParentType_;
}
- (void) setHasParentType:(BOOL) _value_ {
  hasParentType_ = !!_value_;
}
@synthesize parentType;
- (BOOL) hasIsMaster {
  return !!hasIsMaster_;
}
- (void) setHasIsMaster:(BOOL) _value_ {
  hasIsMaster_ = !!_value_;
}
- (BOOL) isMaster {
  return !!isMaster_;
}
- (void) setIsMaster:(BOOL) _value_ {
  isMaster_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.user = [TXPBUser defaultInstance];
    self.parentType = TXPBParentTypeFather;
    self.isMaster = NO;
  }
  return self;
}
static TXPBBindingParentInfo* defaultTXPBBindingParentInfoInstance = nil;
+ (void) initialize {
  if (self == [TXPBBindingParentInfo class]) {
    defaultTXPBBindingParentInfoInstance = [[TXPBBindingParentInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBBindingParentInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBBindingParentInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.hasParentType) {
    return NO;
  }
  if (!self.hasIsMaster) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  if (self.hasParentType) {
    [output writeEnum:2 value:self.parentType];
  }
  if (self.hasIsMaster) {
    [output writeBool:3 value:self.isMaster];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  if (self.hasParentType) {
    size_ += computeEnumSize(2, self.parentType);
  }
  if (self.hasIsMaster) {
    size_ += computeBoolSize(3, self.isMaster);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBBindingParentInfo*) parseFromData:(NSData*) data {
  return (TXPBBindingParentInfo*)[[[TXPBBindingParentInfo builder] mergeFromData:data] build];
}
+ (TXPBBindingParentInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindingParentInfo*)[[[TXPBBindingParentInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindingParentInfo*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBBindingParentInfo*)[[[TXPBBindingParentInfo builder] mergeFromInputStream:input] build];
}
+ (TXPBBindingParentInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindingParentInfo*)[[[TXPBBindingParentInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindingParentInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBBindingParentInfo*)[[[TXPBBindingParentInfo builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBBindingParentInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBBindingParentInfo*)[[[TXPBBindingParentInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBBindingParentInfoBuilder*) builder {
  return [[TXPBBindingParentInfoBuilder alloc] init];
}
+ (TXPBBindingParentInfoBuilder*) builderWithPrototype:(TXPBBindingParentInfo*) prototype {
  return [[TXPBBindingParentInfo builder] mergeFrom:prototype];
}
- (TXPBBindingParentInfoBuilder*) builder {
  return [TXPBBindingParentInfo builder];
}
- (TXPBBindingParentInfoBuilder*) toBuilder {
  return [TXPBBindingParentInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasParentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentType", NSStringFromTXPBParentType(self.parentType)];
  }
  if (self.hasIsMaster) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isMaster", [NSNumber numberWithBool:self.isMaster]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  if (self.hasParentType) {
    [dictionary setObject: @(self.parentType) forKey: @"parentType"];
  }
  if (self.hasIsMaster) {
    [dictionary setObject: [NSNumber numberWithBool:self.isMaster] forKey: @"isMaster"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBBindingParentInfo class]]) {
    return NO;
  }
  TXPBBindingParentInfo *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      self.hasParentType == otherMessage.hasParentType &&
      (!self.hasParentType || self.parentType == otherMessage.parentType) &&
      self.hasIsMaster == otherMessage.hasIsMaster &&
      (!self.hasIsMaster || self.isMaster == otherMessage.isMaster) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  if (self.hasParentType) {
    hashCode = hashCode * 31 + self.parentType;
  }
  if (self.hasIsMaster) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isMaster] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBBindingParentInfoBuilder()
@property (strong) TXPBBindingParentInfo* resultBindingParentInfo;
@end

@implementation TXPBBindingParentInfoBuilder
@synthesize resultBindingParentInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultBindingParentInfo = [[TXPBBindingParentInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultBindingParentInfo;
}
- (TXPBBindingParentInfoBuilder*) clear {
  self.resultBindingParentInfo = [[TXPBBindingParentInfo alloc] init];
  return self;
}
- (TXPBBindingParentInfoBuilder*) clone {
  return [TXPBBindingParentInfo builderWithPrototype:resultBindingParentInfo];
}
- (TXPBBindingParentInfo*) defaultInstance {
  return [TXPBBindingParentInfo defaultInstance];
}
- (TXPBBindingParentInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBBindingParentInfo*) buildPartial {
  TXPBBindingParentInfo* returnMe = resultBindingParentInfo;
  self.resultBindingParentInfo = nil;
  return returnMe;
}
- (TXPBBindingParentInfoBuilder*) mergeFrom:(TXPBBindingParentInfo*) other {
  if (other == [TXPBBindingParentInfo defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  if (other.hasParentType) {
    [self setParentType:other.parentType];
  }
  if (other.hasIsMaster) {
    [self setIsMaster:other.isMaster];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBBindingParentInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBBindingParentInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        TXPBParentType value = (TXPBParentType)[input readEnum];
        if (TXPBParentTypeIsValidValue(value)) {
          [self setParentType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setIsMaster:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return resultBindingParentInfo.hasUser;
}
- (TXPBUser*) user {
  return resultBindingParentInfo.user;
}
- (TXPBBindingParentInfoBuilder*) setUser:(TXPBUser*) value {
  resultBindingParentInfo.hasUser = YES;
  resultBindingParentInfo.user = value;
  return self;
}
- (TXPBBindingParentInfoBuilder*) setUserBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (TXPBBindingParentInfoBuilder*) mergeUser:(TXPBUser*) value {
  if (resultBindingParentInfo.hasUser &&
      resultBindingParentInfo.user != [TXPBUser defaultInstance]) {
    resultBindingParentInfo.user =
      [[[TXPBUser builderWithPrototype:resultBindingParentInfo.user] mergeFrom:value] buildPartial];
  } else {
    resultBindingParentInfo.user = value;
  }
  resultBindingParentInfo.hasUser = YES;
  return self;
}
- (TXPBBindingParentInfoBuilder*) clearUser {
  resultBindingParentInfo.hasUser = NO;
  resultBindingParentInfo.user = [TXPBUser defaultInstance];
  return self;
}
- (BOOL) hasParentType {
  return resultBindingParentInfo.hasParentType;
}
- (TXPBParentType) parentType {
  return resultBindingParentInfo.parentType;
}
- (TXPBBindingParentInfoBuilder*) setParentType:(TXPBParentType) value {
  resultBindingParentInfo.hasParentType = YES;
  resultBindingParentInfo.parentType = value;
  return self;
}
- (TXPBBindingParentInfoBuilder*) clearParentType {
  resultBindingParentInfo.hasParentType = NO;
  resultBindingParentInfo.parentType = TXPBParentTypeFather;
  return self;
}
- (BOOL) hasIsMaster {
  return resultBindingParentInfo.hasIsMaster;
}
- (BOOL) isMaster {
  return resultBindingParentInfo.isMaster;
}
- (TXPBBindingParentInfoBuilder*) setIsMaster:(BOOL) value {
  resultBindingParentInfo.hasIsMaster = YES;
  resultBindingParentInfo.isMaster = value;
  return self;
}
- (TXPBBindingParentInfoBuilder*) clearIsMaster {
  resultBindingParentInfo.hasIsMaster = NO;
  resultBindingParentInfo.isMaster = NO;
  return self;
}
@end

@interface TXPBGetBindingParentListRequest ()
@end

@implementation TXPBGetBindingParentListRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetBindingParentListRequest* defaultTXPBGetBindingParentListRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetBindingParentListRequest class]) {
    defaultTXPBGetBindingParentListRequestInstance = [[TXPBGetBindingParentListRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetBindingParentListRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetBindingParentListRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetBindingParentListRequest*) parseFromData:(NSData*) data {
  return (TXPBGetBindingParentListRequest*)[[[TXPBGetBindingParentListRequest builder] mergeFromData:data] build];
}
+ (TXPBGetBindingParentListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetBindingParentListRequest*)[[[TXPBGetBindingParentListRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetBindingParentListRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetBindingParentListRequest*)[[[TXPBGetBindingParentListRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBGetBindingParentListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetBindingParentListRequest*)[[[TXPBGetBindingParentListRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetBindingParentListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetBindingParentListRequest*)[[[TXPBGetBindingParentListRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetBindingParentListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetBindingParentListRequest*)[[[TXPBGetBindingParentListRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetBindingParentListRequestBuilder*) builder {
  return [[TXPBGetBindingParentListRequestBuilder alloc] init];
}
+ (TXPBGetBindingParentListRequestBuilder*) builderWithPrototype:(TXPBGetBindingParentListRequest*) prototype {
  return [[TXPBGetBindingParentListRequest builder] mergeFrom:prototype];
}
- (TXPBGetBindingParentListRequestBuilder*) builder {
  return [TXPBGetBindingParentListRequest builder];
}
- (TXPBGetBindingParentListRequestBuilder*) toBuilder {
  return [TXPBGetBindingParentListRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetBindingParentListRequest class]]) {
    return NO;
  }
  TXPBGetBindingParentListRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetBindingParentListRequestBuilder()
@property (strong) TXPBGetBindingParentListRequest* resultGetBindingParentListRequest;
@end

@implementation TXPBGetBindingParentListRequestBuilder
@synthesize resultGetBindingParentListRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetBindingParentListRequest = [[TXPBGetBindingParentListRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetBindingParentListRequest;
}
- (TXPBGetBindingParentListRequestBuilder*) clear {
  self.resultGetBindingParentListRequest = [[TXPBGetBindingParentListRequest alloc] init];
  return self;
}
- (TXPBGetBindingParentListRequestBuilder*) clone {
  return [TXPBGetBindingParentListRequest builderWithPrototype:resultGetBindingParentListRequest];
}
- (TXPBGetBindingParentListRequest*) defaultInstance {
  return [TXPBGetBindingParentListRequest defaultInstance];
}
- (TXPBGetBindingParentListRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetBindingParentListRequest*) buildPartial {
  TXPBGetBindingParentListRequest* returnMe = resultGetBindingParentListRequest;
  self.resultGetBindingParentListRequest = nil;
  return returnMe;
}
- (TXPBGetBindingParentListRequestBuilder*) mergeFrom:(TXPBGetBindingParentListRequest*) other {
  if (other == [TXPBGetBindingParentListRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetBindingParentListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetBindingParentListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetBindingParentListResponse ()
@property (strong) NSMutableArray * bindParentsArray;
@end

@implementation TXPBGetBindingParentListResponse

@synthesize bindParentsArray;
@dynamic bindParents;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetBindingParentListResponse* defaultTXPBGetBindingParentListResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetBindingParentListResponse class]) {
    defaultTXPBGetBindingParentListResponseInstance = [[TXPBGetBindingParentListResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetBindingParentListResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetBindingParentListResponseInstance;
}
- (NSArray *)bindParents {
  return bindParentsArray;
}
- (TXPBBindingParentInfo*)bindParentsAtIndex:(NSUInteger)index {
  return [bindParentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitbindParents = YES;
   [self.bindParents enumerateObjectsUsingBlock:^(TXPBBindingParentInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbindParents = NO;
      *stop = YES;
    }
  }];
  if (!isInitbindParents) return isInitbindParents;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.bindParentsArray enumerateObjectsUsingBlock:^(TXPBBindingParentInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.bindParentsArray enumerateObjectsUsingBlock:^(TXPBBindingParentInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetBindingParentListResponse*) parseFromData:(NSData*) data {
  return (TXPBGetBindingParentListResponse*)[[[TXPBGetBindingParentListResponse builder] mergeFromData:data] build];
}
+ (TXPBGetBindingParentListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetBindingParentListResponse*)[[[TXPBGetBindingParentListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetBindingParentListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetBindingParentListResponse*)[[[TXPBGetBindingParentListResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBGetBindingParentListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetBindingParentListResponse*)[[[TXPBGetBindingParentListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetBindingParentListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetBindingParentListResponse*)[[[TXPBGetBindingParentListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetBindingParentListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetBindingParentListResponse*)[[[TXPBGetBindingParentListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetBindingParentListResponseBuilder*) builder {
  return [[TXPBGetBindingParentListResponseBuilder alloc] init];
}
+ (TXPBGetBindingParentListResponseBuilder*) builderWithPrototype:(TXPBGetBindingParentListResponse*) prototype {
  return [[TXPBGetBindingParentListResponse builder] mergeFrom:prototype];
}
- (TXPBGetBindingParentListResponseBuilder*) builder {
  return [TXPBGetBindingParentListResponse builder];
}
- (TXPBGetBindingParentListResponseBuilder*) toBuilder {
  return [TXPBGetBindingParentListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.bindParentsArray enumerateObjectsUsingBlock:^(TXPBBindingParentInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"bindParents"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBBindingParentInfo* element in self.bindParentsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"bindParents"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetBindingParentListResponse class]]) {
    return NO;
  }
  TXPBGetBindingParentListResponse *otherMessage = other;
  return
      [self.bindParentsArray isEqualToArray:otherMessage.bindParentsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.bindParentsArray enumerateObjectsUsingBlock:^(TXPBBindingParentInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetBindingParentListResponseBuilder()
@property (strong) TXPBGetBindingParentListResponse* resultGetBindingParentListResponse;
@end

@implementation TXPBGetBindingParentListResponseBuilder
@synthesize resultGetBindingParentListResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetBindingParentListResponse = [[TXPBGetBindingParentListResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetBindingParentListResponse;
}
- (TXPBGetBindingParentListResponseBuilder*) clear {
  self.resultGetBindingParentListResponse = [[TXPBGetBindingParentListResponse alloc] init];
  return self;
}
- (TXPBGetBindingParentListResponseBuilder*) clone {
  return [TXPBGetBindingParentListResponse builderWithPrototype:resultGetBindingParentListResponse];
}
- (TXPBGetBindingParentListResponse*) defaultInstance {
  return [TXPBGetBindingParentListResponse defaultInstance];
}
- (TXPBGetBindingParentListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetBindingParentListResponse*) buildPartial {
  TXPBGetBindingParentListResponse* returnMe = resultGetBindingParentListResponse;
  self.resultGetBindingParentListResponse = nil;
  return returnMe;
}
- (TXPBGetBindingParentListResponseBuilder*) mergeFrom:(TXPBGetBindingParentListResponse*) other {
  if (other == [TXPBGetBindingParentListResponse defaultInstance]) {
    return self;
  }
  if (other.bindParentsArray.count > 0) {
    if (resultGetBindingParentListResponse.bindParentsArray == nil) {
      resultGetBindingParentListResponse.bindParentsArray = [[NSMutableArray alloc] initWithArray:other.bindParentsArray];
    } else {
      [resultGetBindingParentListResponse.bindParentsArray addObjectsFromArray:other.bindParentsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetBindingParentListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetBindingParentListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBBindingParentInfoBuilder* subBuilder = [TXPBBindingParentInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBindParents:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)bindParents {
  return resultGetBindingParentListResponse.bindParentsArray;
}
- (TXPBBindingParentInfo*)bindParentsAtIndex:(NSUInteger)index {
  return [resultGetBindingParentListResponse bindParentsAtIndex:index];
}
- (TXPBGetBindingParentListResponseBuilder *)addBindParents:(TXPBBindingParentInfo*)value {
  if (resultGetBindingParentListResponse.bindParentsArray == nil) {
    resultGetBindingParentListResponse.bindParentsArray = [[NSMutableArray alloc]init];
  }
  [resultGetBindingParentListResponse.bindParentsArray addObject:value];
  return self;
}
- (TXPBGetBindingParentListResponseBuilder *)setBindParentsArray:(NSArray *)array {
  resultGetBindingParentListResponse.bindParentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBGetBindingParentListResponseBuilder *)clearBindParents {
  resultGetBindingParentListResponse.bindParentsArray = nil;
  return self;
}
@end

@interface TXPBUpdateBindRequest ()
@property SInt64 parentId;
@property TXPBParentType parentType;
@end

@implementation TXPBUpdateBindRequest

- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) _value_ {
  hasParentId_ = !!_value_;
}
@synthesize parentId;
- (BOOL) hasParentType {
  return !!hasParentType_;
}
- (void) setHasParentType:(BOOL) _value_ {
  hasParentType_ = !!_value_;
}
@synthesize parentType;
- (instancetype) init {
  if ((self = [super init])) {
    self.parentId = 0L;
    self.parentType = TXPBParentTypeFather;
  }
  return self;
}
static TXPBUpdateBindRequest* defaultTXPBUpdateBindRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateBindRequest class]) {
    defaultTXPBUpdateBindRequestInstance = [[TXPBUpdateBindRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateBindRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateBindRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasParentId) {
    return NO;
  }
  if (!self.hasParentType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasParentId) {
    [output writeInt64:1 value:self.parentId];
  }
  if (self.hasParentType) {
    [output writeEnum:2 value:self.parentType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasParentId) {
    size_ += computeInt64Size(1, self.parentId);
  }
  if (self.hasParentType) {
    size_ += computeEnumSize(2, self.parentType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateBindRequest*) parseFromData:(NSData*) data {
  return (TXPBUpdateBindRequest*)[[[TXPBUpdateBindRequest builder] mergeFromData:data] build];
}
+ (TXPBUpdateBindRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateBindRequest*)[[[TXPBUpdateBindRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateBindRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateBindRequest*)[[[TXPBUpdateBindRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateBindRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateBindRequest*)[[[TXPBUpdateBindRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateBindRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateBindRequest*)[[[TXPBUpdateBindRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateBindRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateBindRequest*)[[[TXPBUpdateBindRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateBindRequestBuilder*) builder {
  return [[TXPBUpdateBindRequestBuilder alloc] init];
}
+ (TXPBUpdateBindRequestBuilder*) builderWithPrototype:(TXPBUpdateBindRequest*) prototype {
  return [[TXPBUpdateBindRequest builder] mergeFrom:prototype];
}
- (TXPBUpdateBindRequestBuilder*) builder {
  return [TXPBUpdateBindRequest builder];
}
- (TXPBUpdateBindRequestBuilder*) toBuilder {
  return [TXPBUpdateBindRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithLongLong:self.parentId]];
  }
  if (self.hasParentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentType", NSStringFromTXPBParentType(self.parentType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasParentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentId] forKey: @"parentId"];
  }
  if (self.hasParentType) {
    [dictionary setObject: @(self.parentType) forKey: @"parentType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateBindRequest class]]) {
    return NO;
  }
  TXPBUpdateBindRequest *otherMessage = other;
  return
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      self.hasParentType == otherMessage.hasParentType &&
      (!self.hasParentType || self.parentType == otherMessage.parentType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentId] hash];
  }
  if (self.hasParentType) {
    hashCode = hashCode * 31 + self.parentType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateBindRequestBuilder()
@property (strong) TXPBUpdateBindRequest* resultUpdateBindRequest;
@end

@implementation TXPBUpdateBindRequestBuilder
@synthesize resultUpdateBindRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateBindRequest = [[TXPBUpdateBindRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateBindRequest;
}
- (TXPBUpdateBindRequestBuilder*) clear {
  self.resultUpdateBindRequest = [[TXPBUpdateBindRequest alloc] init];
  return self;
}
- (TXPBUpdateBindRequestBuilder*) clone {
  return [TXPBUpdateBindRequest builderWithPrototype:resultUpdateBindRequest];
}
- (TXPBUpdateBindRequest*) defaultInstance {
  return [TXPBUpdateBindRequest defaultInstance];
}
- (TXPBUpdateBindRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateBindRequest*) buildPartial {
  TXPBUpdateBindRequest* returnMe = resultUpdateBindRequest;
  self.resultUpdateBindRequest = nil;
  return returnMe;
}
- (TXPBUpdateBindRequestBuilder*) mergeFrom:(TXPBUpdateBindRequest*) other {
  if (other == [TXPBUpdateBindRequest defaultInstance]) {
    return self;
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  if (other.hasParentType) {
    [self setParentType:other.parentType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateBindRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateBindRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setParentId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBParentType value = (TXPBParentType)[input readEnum];
        if (TXPBParentTypeIsValidValue(value)) {
          [self setParentType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasParentId {
  return resultUpdateBindRequest.hasParentId;
}
- (SInt64) parentId {
  return resultUpdateBindRequest.parentId;
}
- (TXPBUpdateBindRequestBuilder*) setParentId:(SInt64) value {
  resultUpdateBindRequest.hasParentId = YES;
  resultUpdateBindRequest.parentId = value;
  return self;
}
- (TXPBUpdateBindRequestBuilder*) clearParentId {
  resultUpdateBindRequest.hasParentId = NO;
  resultUpdateBindRequest.parentId = 0L;
  return self;
}
- (BOOL) hasParentType {
  return resultUpdateBindRequest.hasParentType;
}
- (TXPBParentType) parentType {
  return resultUpdateBindRequest.parentType;
}
- (TXPBUpdateBindRequestBuilder*) setParentType:(TXPBParentType) value {
  resultUpdateBindRequest.hasParentType = YES;
  resultUpdateBindRequest.parentType = value;
  return self;
}
- (TXPBUpdateBindRequestBuilder*) clearParentType {
  resultUpdateBindRequest.hasParentType = NO;
  resultUpdateBindRequest.parentType = TXPBParentTypeFather;
  return self;
}
@end

@interface TXPBUpdateBindResponse ()
@property (strong) TXPBUser* user;
@end

@implementation TXPBUpdateBindResponse

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (instancetype) init {
  if ((self = [super init])) {
    self.user = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBUpdateBindResponse* defaultTXPBUpdateBindResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateBindResponse class]) {
    defaultTXPBUpdateBindResponseInstance = [[TXPBUpdateBindResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateBindResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateBindResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateBindResponse*) parseFromData:(NSData*) data {
  return (TXPBUpdateBindResponse*)[[[TXPBUpdateBindResponse builder] mergeFromData:data] build];
}
+ (TXPBUpdateBindResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateBindResponse*)[[[TXPBUpdateBindResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateBindResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateBindResponse*)[[[TXPBUpdateBindResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateBindResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateBindResponse*)[[[TXPBUpdateBindResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateBindResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateBindResponse*)[[[TXPBUpdateBindResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateBindResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateBindResponse*)[[[TXPBUpdateBindResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateBindResponseBuilder*) builder {
  return [[TXPBUpdateBindResponseBuilder alloc] init];
}
+ (TXPBUpdateBindResponseBuilder*) builderWithPrototype:(TXPBUpdateBindResponse*) prototype {
  return [[TXPBUpdateBindResponse builder] mergeFrom:prototype];
}
- (TXPBUpdateBindResponseBuilder*) builder {
  return [TXPBUpdateBindResponse builder];
}
- (TXPBUpdateBindResponseBuilder*) toBuilder {
  return [TXPBUpdateBindResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateBindResponse class]]) {
    return NO;
  }
  TXPBUpdateBindResponse *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateBindResponseBuilder()
@property (strong) TXPBUpdateBindResponse* resultUpdateBindResponse;
@end

@implementation TXPBUpdateBindResponseBuilder
@synthesize resultUpdateBindResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateBindResponse = [[TXPBUpdateBindResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateBindResponse;
}
- (TXPBUpdateBindResponseBuilder*) clear {
  self.resultUpdateBindResponse = [[TXPBUpdateBindResponse alloc] init];
  return self;
}
- (TXPBUpdateBindResponseBuilder*) clone {
  return [TXPBUpdateBindResponse builderWithPrototype:resultUpdateBindResponse];
}
- (TXPBUpdateBindResponse*) defaultInstance {
  return [TXPBUpdateBindResponse defaultInstance];
}
- (TXPBUpdateBindResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateBindResponse*) buildPartial {
  TXPBUpdateBindResponse* returnMe = resultUpdateBindResponse;
  self.resultUpdateBindResponse = nil;
  return returnMe;
}
- (TXPBUpdateBindResponseBuilder*) mergeFrom:(TXPBUpdateBindResponse*) other {
  if (other == [TXPBUpdateBindResponse defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateBindResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateBindResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return resultUpdateBindResponse.hasUser;
}
- (TXPBUser*) user {
  return resultUpdateBindResponse.user;
}
- (TXPBUpdateBindResponseBuilder*) setUser:(TXPBUser*) value {
  resultUpdateBindResponse.hasUser = YES;
  resultUpdateBindResponse.user = value;
  return self;
}
- (TXPBUpdateBindResponseBuilder*) setUserBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (TXPBUpdateBindResponseBuilder*) mergeUser:(TXPBUser*) value {
  if (resultUpdateBindResponse.hasUser &&
      resultUpdateBindResponse.user != [TXPBUser defaultInstance]) {
    resultUpdateBindResponse.user =
      [[[TXPBUser builderWithPrototype:resultUpdateBindResponse.user] mergeFrom:value] buildPartial];
  } else {
    resultUpdateBindResponse.user = value;
  }
  resultUpdateBindResponse.hasUser = YES;
  return self;
}
- (TXPBUpdateBindResponseBuilder*) clearUser {
  resultUpdateBindResponse.hasUser = NO;
  resultUpdateBindResponse.user = [TXPBUser defaultInstance];
  return self;
}
@end

@interface TXPBUpdateUserInfoRequest ()
@property (strong) TXPBUser* user;
@end

@implementation TXPBUpdateUserInfoRequest

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (instancetype) init {
  if ((self = [super init])) {
    self.user = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBUpdateUserInfoRequest* defaultTXPBUpdateUserInfoRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateUserInfoRequest class]) {
    defaultTXPBUpdateUserInfoRequestInstance = [[TXPBUpdateUserInfoRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateUserInfoRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateUserInfoRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateUserInfoRequest*) parseFromData:(NSData*) data {
  return (TXPBUpdateUserInfoRequest*)[[[TXPBUpdateUserInfoRequest builder] mergeFromData:data] build];
}
+ (TXPBUpdateUserInfoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateUserInfoRequest*)[[[TXPBUpdateUserInfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateUserInfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateUserInfoRequest*)[[[TXPBUpdateUserInfoRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateUserInfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateUserInfoRequest*)[[[TXPBUpdateUserInfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateUserInfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateUserInfoRequest*)[[[TXPBUpdateUserInfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateUserInfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateUserInfoRequest*)[[[TXPBUpdateUserInfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateUserInfoRequestBuilder*) builder {
  return [[TXPBUpdateUserInfoRequestBuilder alloc] init];
}
+ (TXPBUpdateUserInfoRequestBuilder*) builderWithPrototype:(TXPBUpdateUserInfoRequest*) prototype {
  return [[TXPBUpdateUserInfoRequest builder] mergeFrom:prototype];
}
- (TXPBUpdateUserInfoRequestBuilder*) builder {
  return [TXPBUpdateUserInfoRequest builder];
}
- (TXPBUpdateUserInfoRequestBuilder*) toBuilder {
  return [TXPBUpdateUserInfoRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateUserInfoRequest class]]) {
    return NO;
  }
  TXPBUpdateUserInfoRequest *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateUserInfoRequestBuilder()
@property (strong) TXPBUpdateUserInfoRequest* resultUpdateUserInfoRequest;
@end

@implementation TXPBUpdateUserInfoRequestBuilder
@synthesize resultUpdateUserInfoRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateUserInfoRequest = [[TXPBUpdateUserInfoRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateUserInfoRequest;
}
- (TXPBUpdateUserInfoRequestBuilder*) clear {
  self.resultUpdateUserInfoRequest = [[TXPBUpdateUserInfoRequest alloc] init];
  return self;
}
- (TXPBUpdateUserInfoRequestBuilder*) clone {
  return [TXPBUpdateUserInfoRequest builderWithPrototype:resultUpdateUserInfoRequest];
}
- (TXPBUpdateUserInfoRequest*) defaultInstance {
  return [TXPBUpdateUserInfoRequest defaultInstance];
}
- (TXPBUpdateUserInfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateUserInfoRequest*) buildPartial {
  TXPBUpdateUserInfoRequest* returnMe = resultUpdateUserInfoRequest;
  self.resultUpdateUserInfoRequest = nil;
  return returnMe;
}
- (TXPBUpdateUserInfoRequestBuilder*) mergeFrom:(TXPBUpdateUserInfoRequest*) other {
  if (other == [TXPBUpdateUserInfoRequest defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateUserInfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateUserInfoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return resultUpdateUserInfoRequest.hasUser;
}
- (TXPBUser*) user {
  return resultUpdateUserInfoRequest.user;
}
- (TXPBUpdateUserInfoRequestBuilder*) setUser:(TXPBUser*) value {
  resultUpdateUserInfoRequest.hasUser = YES;
  resultUpdateUserInfoRequest.user = value;
  return self;
}
- (TXPBUpdateUserInfoRequestBuilder*) setUserBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (TXPBUpdateUserInfoRequestBuilder*) mergeUser:(TXPBUser*) value {
  if (resultUpdateUserInfoRequest.hasUser &&
      resultUpdateUserInfoRequest.user != [TXPBUser defaultInstance]) {
    resultUpdateUserInfoRequest.user =
      [[[TXPBUser builderWithPrototype:resultUpdateUserInfoRequest.user] mergeFrom:value] buildPartial];
  } else {
    resultUpdateUserInfoRequest.user = value;
  }
  resultUpdateUserInfoRequest.hasUser = YES;
  return self;
}
- (TXPBUpdateUserInfoRequestBuilder*) clearUser {
  resultUpdateUserInfoRequest.hasUser = NO;
  resultUpdateUserInfoRequest.user = [TXPBUser defaultInstance];
  return self;
}
@end

@interface TXPBUpdateUserInfoResponse ()
@end

@implementation TXPBUpdateUserInfoResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBUpdateUserInfoResponse* defaultTXPBUpdateUserInfoResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateUserInfoResponse class]) {
    defaultTXPBUpdateUserInfoResponseInstance = [[TXPBUpdateUserInfoResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateUserInfoResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateUserInfoResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateUserInfoResponse*) parseFromData:(NSData*) data {
  return (TXPBUpdateUserInfoResponse*)[[[TXPBUpdateUserInfoResponse builder] mergeFromData:data] build];
}
+ (TXPBUpdateUserInfoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateUserInfoResponse*)[[[TXPBUpdateUserInfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateUserInfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateUserInfoResponse*)[[[TXPBUpdateUserInfoResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateUserInfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateUserInfoResponse*)[[[TXPBUpdateUserInfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateUserInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateUserInfoResponse*)[[[TXPBUpdateUserInfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateUserInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateUserInfoResponse*)[[[TXPBUpdateUserInfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateUserInfoResponseBuilder*) builder {
  return [[TXPBUpdateUserInfoResponseBuilder alloc] init];
}
+ (TXPBUpdateUserInfoResponseBuilder*) builderWithPrototype:(TXPBUpdateUserInfoResponse*) prototype {
  return [[TXPBUpdateUserInfoResponse builder] mergeFrom:prototype];
}
- (TXPBUpdateUserInfoResponseBuilder*) builder {
  return [TXPBUpdateUserInfoResponse builder];
}
- (TXPBUpdateUserInfoResponseBuilder*) toBuilder {
  return [TXPBUpdateUserInfoResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateUserInfoResponse class]]) {
    return NO;
  }
  TXPBUpdateUserInfoResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateUserInfoResponseBuilder()
@property (strong) TXPBUpdateUserInfoResponse* resultUpdateUserInfoResponse;
@end

@implementation TXPBUpdateUserInfoResponseBuilder
@synthesize resultUpdateUserInfoResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateUserInfoResponse = [[TXPBUpdateUserInfoResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateUserInfoResponse;
}
- (TXPBUpdateUserInfoResponseBuilder*) clear {
  self.resultUpdateUserInfoResponse = [[TXPBUpdateUserInfoResponse alloc] init];
  return self;
}
- (TXPBUpdateUserInfoResponseBuilder*) clone {
  return [TXPBUpdateUserInfoResponse builderWithPrototype:resultUpdateUserInfoResponse];
}
- (TXPBUpdateUserInfoResponse*) defaultInstance {
  return [TXPBUpdateUserInfoResponse defaultInstance];
}
- (TXPBUpdateUserInfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateUserInfoResponse*) buildPartial {
  TXPBUpdateUserInfoResponse* returnMe = resultUpdateUserInfoResponse;
  self.resultUpdateUserInfoResponse = nil;
  return returnMe;
}
- (TXPBUpdateUserInfoResponseBuilder*) mergeFrom:(TXPBUpdateUserInfoResponse*) other {
  if (other == [TXPBUpdateUserInfoResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateUserInfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateUserInfoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBActiveInviteUserRequest ()
@property (strong) NSString* mobile;
@property (strong) NSString* code;
@property TXPBParentType parentType;
@property (strong) NSString* password;
@end

@implementation TXPBActiveInviteUserRequest

- (BOOL) hasMobile {
  return !!hasMobile_;
}
- (void) setHasMobile:(BOOL) _value_ {
  hasMobile_ = !!_value_;
}
@synthesize mobile;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (BOOL) hasParentType {
  return !!hasParentType_;
}
- (void) setHasParentType:(BOOL) _value_ {
  hasParentType_ = !!_value_;
}
@synthesize parentType;
- (BOOL) hasPassword {
  return !!hasPassword_;
}
- (void) setHasPassword:(BOOL) _value_ {
  hasPassword_ = !!_value_;
}
@synthesize password;
- (instancetype) init {
  if ((self = [super init])) {
    self.mobile = @"";
    self.code = @"";
    self.parentType = TXPBParentTypeFather;
    self.password = @"";
  }
  return self;
}
static TXPBActiveInviteUserRequest* defaultTXPBActiveInviteUserRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBActiveInviteUserRequest class]) {
    defaultTXPBActiveInviteUserRequestInstance = [[TXPBActiveInviteUserRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBActiveInviteUserRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBActiveInviteUserRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMobile) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  if (!self.hasParentType) {
    return NO;
  }
  if (!self.hasPassword) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobile) {
    [output writeString:1 value:self.mobile];
  }
  if (self.hasCode) {
    [output writeString:2 value:self.code];
  }
  if (self.hasParentType) {
    [output writeEnum:3 value:self.parentType];
  }
  if (self.hasPassword) {
    [output writeString:4 value:self.password];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMobile) {
    size_ += computeStringSize(1, self.mobile);
  }
  if (self.hasCode) {
    size_ += computeStringSize(2, self.code);
  }
  if (self.hasParentType) {
    size_ += computeEnumSize(3, self.parentType);
  }
  if (self.hasPassword) {
    size_ += computeStringSize(4, self.password);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBActiveInviteUserRequest*) parseFromData:(NSData*) data {
  return (TXPBActiveInviteUserRequest*)[[[TXPBActiveInviteUserRequest builder] mergeFromData:data] build];
}
+ (TXPBActiveInviteUserRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveInviteUserRequest*)[[[TXPBActiveInviteUserRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveInviteUserRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBActiveInviteUserRequest*)[[[TXPBActiveInviteUserRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBActiveInviteUserRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveInviteUserRequest*)[[[TXPBActiveInviteUserRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveInviteUserRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBActiveInviteUserRequest*)[[[TXPBActiveInviteUserRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBActiveInviteUserRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveInviteUserRequest*)[[[TXPBActiveInviteUserRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveInviteUserRequestBuilder*) builder {
  return [[TXPBActiveInviteUserRequestBuilder alloc] init];
}
+ (TXPBActiveInviteUserRequestBuilder*) builderWithPrototype:(TXPBActiveInviteUserRequest*) prototype {
  return [[TXPBActiveInviteUserRequest builder] mergeFrom:prototype];
}
- (TXPBActiveInviteUserRequestBuilder*) builder {
  return [TXPBActiveInviteUserRequest builder];
}
- (TXPBActiveInviteUserRequestBuilder*) toBuilder {
  return [TXPBActiveInviteUserRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMobile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobile", self.mobile];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  if (self.hasParentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentType", NSStringFromTXPBParentType(self.parentType)];
  }
  if (self.hasPassword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"password", self.password];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMobile) {
    [dictionary setObject: self.mobile forKey: @"mobile"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  if (self.hasParentType) {
    [dictionary setObject: @(self.parentType) forKey: @"parentType"];
  }
  if (self.hasPassword) {
    [dictionary setObject: self.password forKey: @"password"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBActiveInviteUserRequest class]]) {
    return NO;
  }
  TXPBActiveInviteUserRequest *otherMessage = other;
  return
      self.hasMobile == otherMessage.hasMobile &&
      (!self.hasMobile || [self.mobile isEqual:otherMessage.mobile]) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      self.hasParentType == otherMessage.hasParentType &&
      (!self.hasParentType || self.parentType == otherMessage.parentType) &&
      self.hasPassword == otherMessage.hasPassword &&
      (!self.hasPassword || [self.password isEqual:otherMessage.password]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMobile) {
    hashCode = hashCode * 31 + [self.mobile hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  if (self.hasParentType) {
    hashCode = hashCode * 31 + self.parentType;
  }
  if (self.hasPassword) {
    hashCode = hashCode * 31 + [self.password hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBActiveInviteUserRequestBuilder()
@property (strong) TXPBActiveInviteUserRequest* resultActiveInviteUserRequest;
@end

@implementation TXPBActiveInviteUserRequestBuilder
@synthesize resultActiveInviteUserRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultActiveInviteUserRequest = [[TXPBActiveInviteUserRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultActiveInviteUserRequest;
}
- (TXPBActiveInviteUserRequestBuilder*) clear {
  self.resultActiveInviteUserRequest = [[TXPBActiveInviteUserRequest alloc] init];
  return self;
}
- (TXPBActiveInviteUserRequestBuilder*) clone {
  return [TXPBActiveInviteUserRequest builderWithPrototype:resultActiveInviteUserRequest];
}
- (TXPBActiveInviteUserRequest*) defaultInstance {
  return [TXPBActiveInviteUserRequest defaultInstance];
}
- (TXPBActiveInviteUserRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBActiveInviteUserRequest*) buildPartial {
  TXPBActiveInviteUserRequest* returnMe = resultActiveInviteUserRequest;
  self.resultActiveInviteUserRequest = nil;
  return returnMe;
}
- (TXPBActiveInviteUserRequestBuilder*) mergeFrom:(TXPBActiveInviteUserRequest*) other {
  if (other == [TXPBActiveInviteUserRequest defaultInstance]) {
    return self;
  }
  if (other.hasMobile) {
    [self setMobile:other.mobile];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasParentType) {
    [self setParentType:other.parentType];
  }
  if (other.hasPassword) {
    [self setPassword:other.password];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBActiveInviteUserRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBActiveInviteUserRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMobile:[input readString]];
        break;
      }
      case 18: {
        [self setCode:[input readString]];
        break;
      }
      case 24: {
        TXPBParentType value = (TXPBParentType)[input readEnum];
        if (TXPBParentTypeIsValidValue(value)) {
          [self setParentType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setPassword:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMobile {
  return resultActiveInviteUserRequest.hasMobile;
}
- (NSString*) mobile {
  return resultActiveInviteUserRequest.mobile;
}
- (TXPBActiveInviteUserRequestBuilder*) setMobile:(NSString*) value {
  resultActiveInviteUserRequest.hasMobile = YES;
  resultActiveInviteUserRequest.mobile = value;
  return self;
}
- (TXPBActiveInviteUserRequestBuilder*) clearMobile {
  resultActiveInviteUserRequest.hasMobile = NO;
  resultActiveInviteUserRequest.mobile = @"";
  return self;
}
- (BOOL) hasCode {
  return resultActiveInviteUserRequest.hasCode;
}
- (NSString*) code {
  return resultActiveInviteUserRequest.code;
}
- (TXPBActiveInviteUserRequestBuilder*) setCode:(NSString*) value {
  resultActiveInviteUserRequest.hasCode = YES;
  resultActiveInviteUserRequest.code = value;
  return self;
}
- (TXPBActiveInviteUserRequestBuilder*) clearCode {
  resultActiveInviteUserRequest.hasCode = NO;
  resultActiveInviteUserRequest.code = @"";
  return self;
}
- (BOOL) hasParentType {
  return resultActiveInviteUserRequest.hasParentType;
}
- (TXPBParentType) parentType {
  return resultActiveInviteUserRequest.parentType;
}
- (TXPBActiveInviteUserRequestBuilder*) setParentType:(TXPBParentType) value {
  resultActiveInviteUserRequest.hasParentType = YES;
  resultActiveInviteUserRequest.parentType = value;
  return self;
}
- (TXPBActiveInviteUserRequestBuilder*) clearParentType {
  resultActiveInviteUserRequest.hasParentType = NO;
  resultActiveInviteUserRequest.parentType = TXPBParentTypeFather;
  return self;
}
- (BOOL) hasPassword {
  return resultActiveInviteUserRequest.hasPassword;
}
- (NSString*) password {
  return resultActiveInviteUserRequest.password;
}
- (TXPBActiveInviteUserRequestBuilder*) setPassword:(NSString*) value {
  resultActiveInviteUserRequest.hasPassword = YES;
  resultActiveInviteUserRequest.password = value;
  return self;
}
- (TXPBActiveInviteUserRequestBuilder*) clearPassword {
  resultActiveInviteUserRequest.hasPassword = NO;
  resultActiveInviteUserRequest.password = @"";
  return self;
}
@end

@interface TXPBActiveInviteUserResponse ()
@property (strong) TXPBUser* user;
@end

@implementation TXPBActiveInviteUserResponse

- (BOOL) hasUser {
  return !!hasUser_;
}
- (void) setHasUser:(BOOL) _value_ {
  hasUser_ = !!_value_;
}
@synthesize user;
- (instancetype) init {
  if ((self = [super init])) {
    self.user = [TXPBUser defaultInstance];
  }
  return self;
}
static TXPBActiveInviteUserResponse* defaultTXPBActiveInviteUserResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBActiveInviteUserResponse class]) {
    defaultTXPBActiveInviteUserResponseInstance = [[TXPBActiveInviteUserResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBActiveInviteUserResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBActiveInviteUserResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUser) {
    return NO;
  }
  if (!self.user.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUser) {
    [output writeMessage:1 value:self.user];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUser) {
    size_ += computeMessageSize(1, self.user);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBActiveInviteUserResponse*) parseFromData:(NSData*) data {
  return (TXPBActiveInviteUserResponse*)[[[TXPBActiveInviteUserResponse builder] mergeFromData:data] build];
}
+ (TXPBActiveInviteUserResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveInviteUserResponse*)[[[TXPBActiveInviteUserResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveInviteUserResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBActiveInviteUserResponse*)[[[TXPBActiveInviteUserResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBActiveInviteUserResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveInviteUserResponse*)[[[TXPBActiveInviteUserResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveInviteUserResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBActiveInviteUserResponse*)[[[TXPBActiveInviteUserResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBActiveInviteUserResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActiveInviteUserResponse*)[[[TXPBActiveInviteUserResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActiveInviteUserResponseBuilder*) builder {
  return [[TXPBActiveInviteUserResponseBuilder alloc] init];
}
+ (TXPBActiveInviteUserResponseBuilder*) builderWithPrototype:(TXPBActiveInviteUserResponse*) prototype {
  return [[TXPBActiveInviteUserResponse builder] mergeFrom:prototype];
}
- (TXPBActiveInviteUserResponseBuilder*) builder {
  return [TXPBActiveInviteUserResponse builder];
}
- (TXPBActiveInviteUserResponseBuilder*) toBuilder {
  return [TXPBActiveInviteUserResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUser) {
    [output appendFormat:@"%@%@ {\n", indent, @"user"];
    [self.user writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUser) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.user storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"user"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBActiveInviteUserResponse class]]) {
    return NO;
  }
  TXPBActiveInviteUserResponse *otherMessage = other;
  return
      self.hasUser == otherMessage.hasUser &&
      (!self.hasUser || [self.user isEqual:otherMessage.user]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUser) {
    hashCode = hashCode * 31 + [self.user hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBActiveInviteUserResponseBuilder()
@property (strong) TXPBActiveInviteUserResponse* resultActiveInviteUserResponse;
@end

@implementation TXPBActiveInviteUserResponseBuilder
@synthesize resultActiveInviteUserResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultActiveInviteUserResponse = [[TXPBActiveInviteUserResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultActiveInviteUserResponse;
}
- (TXPBActiveInviteUserResponseBuilder*) clear {
  self.resultActiveInviteUserResponse = [[TXPBActiveInviteUserResponse alloc] init];
  return self;
}
- (TXPBActiveInviteUserResponseBuilder*) clone {
  return [TXPBActiveInviteUserResponse builderWithPrototype:resultActiveInviteUserResponse];
}
- (TXPBActiveInviteUserResponse*) defaultInstance {
  return [TXPBActiveInviteUserResponse defaultInstance];
}
- (TXPBActiveInviteUserResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBActiveInviteUserResponse*) buildPartial {
  TXPBActiveInviteUserResponse* returnMe = resultActiveInviteUserResponse;
  self.resultActiveInviteUserResponse = nil;
  return returnMe;
}
- (TXPBActiveInviteUserResponseBuilder*) mergeFrom:(TXPBActiveInviteUserResponse*) other {
  if (other == [TXPBActiveInviteUserResponse defaultInstance]) {
    return self;
  }
  if (other.hasUser) {
    [self mergeUser:other.user];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBActiveInviteUserResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBActiveInviteUserResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        if (self.hasUser) {
          [subBuilder mergeFrom:self.user];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUser:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUser {
  return resultActiveInviteUserResponse.hasUser;
}
- (TXPBUser*) user {
  return resultActiveInviteUserResponse.user;
}
- (TXPBActiveInviteUserResponseBuilder*) setUser:(TXPBUser*) value {
  resultActiveInviteUserResponse.hasUser = YES;
  resultActiveInviteUserResponse.user = value;
  return self;
}
- (TXPBActiveInviteUserResponseBuilder*) setUserBuilder:(TXPBUserBuilder*) builderForValue {
  return [self setUser:[builderForValue build]];
}
- (TXPBActiveInviteUserResponseBuilder*) mergeUser:(TXPBUser*) value {
  if (resultActiveInviteUserResponse.hasUser &&
      resultActiveInviteUserResponse.user != [TXPBUser defaultInstance]) {
    resultActiveInviteUserResponse.user =
      [[[TXPBUser builderWithPrototype:resultActiveInviteUserResponse.user] mergeFrom:value] buildPartial];
  } else {
    resultActiveInviteUserResponse.user = value;
  }
  resultActiveInviteUserResponse.hasUser = YES;
  return self;
}
- (TXPBActiveInviteUserResponseBuilder*) clearUser {
  resultActiveInviteUserResponse.hasUser = NO;
  resultActiveInviteUserResponse.user = [TXPBUser defaultInstance];
  return self;
}
@end

@interface TXPBRelieveBindRequest ()
@property SInt64 parentId;
@end

@implementation TXPBRelieveBindRequest

- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) _value_ {
  hasParentId_ = !!_value_;
}
@synthesize parentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.parentId = 0L;
  }
  return self;
}
static TXPBRelieveBindRequest* defaultTXPBRelieveBindRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBRelieveBindRequest class]) {
    defaultTXPBRelieveBindRequestInstance = [[TXPBRelieveBindRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBRelieveBindRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBRelieveBindRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasParentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasParentId) {
    [output writeInt64:1 value:self.parentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasParentId) {
    size_ += computeInt64Size(1, self.parentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBRelieveBindRequest*) parseFromData:(NSData*) data {
  return (TXPBRelieveBindRequest*)[[[TXPBRelieveBindRequest builder] mergeFromData:data] build];
}
+ (TXPBRelieveBindRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRelieveBindRequest*)[[[TXPBRelieveBindRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBRelieveBindRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBRelieveBindRequest*)[[[TXPBRelieveBindRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBRelieveBindRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRelieveBindRequest*)[[[TXPBRelieveBindRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRelieveBindRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBRelieveBindRequest*)[[[TXPBRelieveBindRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBRelieveBindRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRelieveBindRequest*)[[[TXPBRelieveBindRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRelieveBindRequestBuilder*) builder {
  return [[TXPBRelieveBindRequestBuilder alloc] init];
}
+ (TXPBRelieveBindRequestBuilder*) builderWithPrototype:(TXPBRelieveBindRequest*) prototype {
  return [[TXPBRelieveBindRequest builder] mergeFrom:prototype];
}
- (TXPBRelieveBindRequestBuilder*) builder {
  return [TXPBRelieveBindRequest builder];
}
- (TXPBRelieveBindRequestBuilder*) toBuilder {
  return [TXPBRelieveBindRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithLongLong:self.parentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasParentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentId] forKey: @"parentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBRelieveBindRequest class]]) {
    return NO;
  }
  TXPBRelieveBindRequest *otherMessage = other;
  return
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBRelieveBindRequestBuilder()
@property (strong) TXPBRelieveBindRequest* resultRelieveBindRequest;
@end

@implementation TXPBRelieveBindRequestBuilder
@synthesize resultRelieveBindRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRelieveBindRequest = [[TXPBRelieveBindRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRelieveBindRequest;
}
- (TXPBRelieveBindRequestBuilder*) clear {
  self.resultRelieveBindRequest = [[TXPBRelieveBindRequest alloc] init];
  return self;
}
- (TXPBRelieveBindRequestBuilder*) clone {
  return [TXPBRelieveBindRequest builderWithPrototype:resultRelieveBindRequest];
}
- (TXPBRelieveBindRequest*) defaultInstance {
  return [TXPBRelieveBindRequest defaultInstance];
}
- (TXPBRelieveBindRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBRelieveBindRequest*) buildPartial {
  TXPBRelieveBindRequest* returnMe = resultRelieveBindRequest;
  self.resultRelieveBindRequest = nil;
  return returnMe;
}
- (TXPBRelieveBindRequestBuilder*) mergeFrom:(TXPBRelieveBindRequest*) other {
  if (other == [TXPBRelieveBindRequest defaultInstance]) {
    return self;
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBRelieveBindRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBRelieveBindRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setParentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasParentId {
  return resultRelieveBindRequest.hasParentId;
}
- (SInt64) parentId {
  return resultRelieveBindRequest.parentId;
}
- (TXPBRelieveBindRequestBuilder*) setParentId:(SInt64) value {
  resultRelieveBindRequest.hasParentId = YES;
  resultRelieveBindRequest.parentId = value;
  return self;
}
- (TXPBRelieveBindRequestBuilder*) clearParentId {
  resultRelieveBindRequest.hasParentId = NO;
  resultRelieveBindRequest.parentId = 0L;
  return self;
}
@end

@interface TXPBRelieveBindResponse ()
@end

@implementation TXPBRelieveBindResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBRelieveBindResponse* defaultTXPBRelieveBindResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBRelieveBindResponse class]) {
    defaultTXPBRelieveBindResponseInstance = [[TXPBRelieveBindResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBRelieveBindResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBRelieveBindResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBRelieveBindResponse*) parseFromData:(NSData*) data {
  return (TXPBRelieveBindResponse*)[[[TXPBRelieveBindResponse builder] mergeFromData:data] build];
}
+ (TXPBRelieveBindResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRelieveBindResponse*)[[[TXPBRelieveBindResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBRelieveBindResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBRelieveBindResponse*)[[[TXPBRelieveBindResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBRelieveBindResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRelieveBindResponse*)[[[TXPBRelieveBindResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRelieveBindResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBRelieveBindResponse*)[[[TXPBRelieveBindResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBRelieveBindResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBRelieveBindResponse*)[[[TXPBRelieveBindResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBRelieveBindResponseBuilder*) builder {
  return [[TXPBRelieveBindResponseBuilder alloc] init];
}
+ (TXPBRelieveBindResponseBuilder*) builderWithPrototype:(TXPBRelieveBindResponse*) prototype {
  return [[TXPBRelieveBindResponse builder] mergeFrom:prototype];
}
- (TXPBRelieveBindResponseBuilder*) builder {
  return [TXPBRelieveBindResponse builder];
}
- (TXPBRelieveBindResponseBuilder*) toBuilder {
  return [TXPBRelieveBindResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBRelieveBindResponse class]]) {
    return NO;
  }
  TXPBRelieveBindResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBRelieveBindResponseBuilder()
@property (strong) TXPBRelieveBindResponse* resultRelieveBindResponse;
@end

@implementation TXPBRelieveBindResponseBuilder
@synthesize resultRelieveBindResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultRelieveBindResponse = [[TXPBRelieveBindResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultRelieveBindResponse;
}
- (TXPBRelieveBindResponseBuilder*) clear {
  self.resultRelieveBindResponse = [[TXPBRelieveBindResponse alloc] init];
  return self;
}
- (TXPBRelieveBindResponseBuilder*) clone {
  return [TXPBRelieveBindResponse builderWithPrototype:resultRelieveBindResponse];
}
- (TXPBRelieveBindResponse*) defaultInstance {
  return [TXPBRelieveBindResponse defaultInstance];
}
- (TXPBRelieveBindResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBRelieveBindResponse*) buildPartial {
  TXPBRelieveBindResponse* returnMe = resultRelieveBindResponse;
  self.resultRelieveBindResponse = nil;
  return returnMe;
}
- (TXPBRelieveBindResponseBuilder*) mergeFrom:(TXPBRelieveBindResponse*) other {
  if (other == [TXPBRelieveBindResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBRelieveBindResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBRelieveBindResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBUpdateMobileRequest ()
@property (strong) NSString* mobile;
@property (strong) NSString* code;
@end

@implementation TXPBUpdateMobileRequest

- (BOOL) hasMobile {
  return !!hasMobile_;
}
- (void) setHasMobile:(BOOL) _value_ {
  hasMobile_ = !!_value_;
}
@synthesize mobile;
- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) _value_ {
  hasCode_ = !!_value_;
}
@synthesize code;
- (instancetype) init {
  if ((self = [super init])) {
    self.mobile = @"";
    self.code = @"";
  }
  return self;
}
static TXPBUpdateMobileRequest* defaultTXPBUpdateMobileRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateMobileRequest class]) {
    defaultTXPBUpdateMobileRequestInstance = [[TXPBUpdateMobileRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateMobileRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateMobileRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMobile) {
    return NO;
  }
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobile) {
    [output writeString:3 value:self.mobile];
  }
  if (self.hasCode) {
    [output writeString:4 value:self.code];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMobile) {
    size_ += computeStringSize(3, self.mobile);
  }
  if (self.hasCode) {
    size_ += computeStringSize(4, self.code);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateMobileRequest*) parseFromData:(NSData*) data {
  return (TXPBUpdateMobileRequest*)[[[TXPBUpdateMobileRequest builder] mergeFromData:data] build];
}
+ (TXPBUpdateMobileRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateMobileRequest*)[[[TXPBUpdateMobileRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateMobileRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateMobileRequest*)[[[TXPBUpdateMobileRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateMobileRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateMobileRequest*)[[[TXPBUpdateMobileRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateMobileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateMobileRequest*)[[[TXPBUpdateMobileRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateMobileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateMobileRequest*)[[[TXPBUpdateMobileRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateMobileRequestBuilder*) builder {
  return [[TXPBUpdateMobileRequestBuilder alloc] init];
}
+ (TXPBUpdateMobileRequestBuilder*) builderWithPrototype:(TXPBUpdateMobileRequest*) prototype {
  return [[TXPBUpdateMobileRequest builder] mergeFrom:prototype];
}
- (TXPBUpdateMobileRequestBuilder*) builder {
  return [TXPBUpdateMobileRequest builder];
}
- (TXPBUpdateMobileRequestBuilder*) toBuilder {
  return [TXPBUpdateMobileRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMobile) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobile", self.mobile];
  }
  if (self.hasCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"code", self.code];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMobile) {
    [dictionary setObject: self.mobile forKey: @"mobile"];
  }
  if (self.hasCode) {
    [dictionary setObject: self.code forKey: @"code"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateMobileRequest class]]) {
    return NO;
  }
  TXPBUpdateMobileRequest *otherMessage = other;
  return
      self.hasMobile == otherMessage.hasMobile &&
      (!self.hasMobile || [self.mobile isEqual:otherMessage.mobile]) &&
      self.hasCode == otherMessage.hasCode &&
      (!self.hasCode || [self.code isEqual:otherMessage.code]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMobile) {
    hashCode = hashCode * 31 + [self.mobile hash];
  }
  if (self.hasCode) {
    hashCode = hashCode * 31 + [self.code hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateMobileRequestBuilder()
@property (strong) TXPBUpdateMobileRequest* resultUpdateMobileRequest;
@end

@implementation TXPBUpdateMobileRequestBuilder
@synthesize resultUpdateMobileRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateMobileRequest = [[TXPBUpdateMobileRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateMobileRequest;
}
- (TXPBUpdateMobileRequestBuilder*) clear {
  self.resultUpdateMobileRequest = [[TXPBUpdateMobileRequest alloc] init];
  return self;
}
- (TXPBUpdateMobileRequestBuilder*) clone {
  return [TXPBUpdateMobileRequest builderWithPrototype:resultUpdateMobileRequest];
}
- (TXPBUpdateMobileRequest*) defaultInstance {
  return [TXPBUpdateMobileRequest defaultInstance];
}
- (TXPBUpdateMobileRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateMobileRequest*) buildPartial {
  TXPBUpdateMobileRequest* returnMe = resultUpdateMobileRequest;
  self.resultUpdateMobileRequest = nil;
  return returnMe;
}
- (TXPBUpdateMobileRequestBuilder*) mergeFrom:(TXPBUpdateMobileRequest*) other {
  if (other == [TXPBUpdateMobileRequest defaultInstance]) {
    return self;
  }
  if (other.hasMobile) {
    [self setMobile:other.mobile];
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateMobileRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateMobileRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 26: {
        [self setMobile:[input readString]];
        break;
      }
      case 34: {
        [self setCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasMobile {
  return resultUpdateMobileRequest.hasMobile;
}
- (NSString*) mobile {
  return resultUpdateMobileRequest.mobile;
}
- (TXPBUpdateMobileRequestBuilder*) setMobile:(NSString*) value {
  resultUpdateMobileRequest.hasMobile = YES;
  resultUpdateMobileRequest.mobile = value;
  return self;
}
- (TXPBUpdateMobileRequestBuilder*) clearMobile {
  resultUpdateMobileRequest.hasMobile = NO;
  resultUpdateMobileRequest.mobile = @"";
  return self;
}
- (BOOL) hasCode {
  return resultUpdateMobileRequest.hasCode;
}
- (NSString*) code {
  return resultUpdateMobileRequest.code;
}
- (TXPBUpdateMobileRequestBuilder*) setCode:(NSString*) value {
  resultUpdateMobileRequest.hasCode = YES;
  resultUpdateMobileRequest.code = value;
  return self;
}
- (TXPBUpdateMobileRequestBuilder*) clearCode {
  resultUpdateMobileRequest.hasCode = NO;
  resultUpdateMobileRequest.code = @"";
  return self;
}
@end

@interface TXPBUpdateMobileResponse ()
@end

@implementation TXPBUpdateMobileResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBUpdateMobileResponse* defaultTXPBUpdateMobileResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateMobileResponse class]) {
    defaultTXPBUpdateMobileResponseInstance = [[TXPBUpdateMobileResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateMobileResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateMobileResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateMobileResponse*) parseFromData:(NSData*) data {
  return (TXPBUpdateMobileResponse*)[[[TXPBUpdateMobileResponse builder] mergeFromData:data] build];
}
+ (TXPBUpdateMobileResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateMobileResponse*)[[[TXPBUpdateMobileResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateMobileResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateMobileResponse*)[[[TXPBUpdateMobileResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateMobileResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateMobileResponse*)[[[TXPBUpdateMobileResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateMobileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateMobileResponse*)[[[TXPBUpdateMobileResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateMobileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateMobileResponse*)[[[TXPBUpdateMobileResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateMobileResponseBuilder*) builder {
  return [[TXPBUpdateMobileResponseBuilder alloc] init];
}
+ (TXPBUpdateMobileResponseBuilder*) builderWithPrototype:(TXPBUpdateMobileResponse*) prototype {
  return [[TXPBUpdateMobileResponse builder] mergeFrom:prototype];
}
- (TXPBUpdateMobileResponseBuilder*) builder {
  return [TXPBUpdateMobileResponse builder];
}
- (TXPBUpdateMobileResponseBuilder*) toBuilder {
  return [TXPBUpdateMobileResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateMobileResponse class]]) {
    return NO;
  }
  TXPBUpdateMobileResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateMobileResponseBuilder()
@property (strong) TXPBUpdateMobileResponse* resultUpdateMobileResponse;
@end

@implementation TXPBUpdateMobileResponseBuilder
@synthesize resultUpdateMobileResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateMobileResponse = [[TXPBUpdateMobileResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateMobileResponse;
}
- (TXPBUpdateMobileResponseBuilder*) clear {
  self.resultUpdateMobileResponse = [[TXPBUpdateMobileResponse alloc] init];
  return self;
}
- (TXPBUpdateMobileResponseBuilder*) clone {
  return [TXPBUpdateMobileResponse builderWithPrototype:resultUpdateMobileResponse];
}
- (TXPBUpdateMobileResponse*) defaultInstance {
  return [TXPBUpdateMobileResponse defaultInstance];
}
- (TXPBUpdateMobileResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateMobileResponse*) buildPartial {
  TXPBUpdateMobileResponse* returnMe = resultUpdateMobileResponse;
  self.resultUpdateMobileResponse = nil;
  return returnMe;
}
- (TXPBUpdateMobileResponseBuilder*) mergeFrom:(TXPBUpdateMobileResponse*) other {
  if (other == [TXPBUpdateMobileResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateMobileResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateMobileResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBUserProfile ()
@property (strong) NSString* option;
@property (strong) NSString* value;
@end

@implementation TXPBUserProfile

- (BOOL) hasOption {
  return !!hasOption_;
}
- (void) setHasOption:(BOOL) _value_ {
  hasOption_ = !!_value_;
}
@synthesize option;
- (BOOL) hasValue {
  return !!hasValue_;
}
- (void) setHasValue:(BOOL) _value_ {
  hasValue_ = !!_value_;
}
@synthesize value;
- (instancetype) init {
  if ((self = [super init])) {
    self.option = @"";
    self.value = @"";
  }
  return self;
}
static TXPBUserProfile* defaultTXPBUserProfileInstance = nil;
+ (void) initialize {
  if (self == [TXPBUserProfile class]) {
    defaultTXPBUserProfileInstance = [[TXPBUserProfile alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUserProfileInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUserProfileInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOption) {
    return NO;
  }
  if (!self.hasValue) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOption) {
    [output writeString:1 value:self.option];
  }
  if (self.hasValue) {
    [output writeString:2 value:self.value];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasOption) {
    size_ += computeStringSize(1, self.option);
  }
  if (self.hasValue) {
    size_ += computeStringSize(2, self.value);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUserProfile*) parseFromData:(NSData*) data {
  return (TXPBUserProfile*)[[[TXPBUserProfile builder] mergeFromData:data] build];
}
+ (TXPBUserProfile*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserProfile*)[[[TXPBUserProfile builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserProfile*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUserProfile*)[[[TXPBUserProfile builder] mergeFromInputStream:input] build];
}
+ (TXPBUserProfile*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserProfile*)[[[TXPBUserProfile builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserProfile*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUserProfile*)[[[TXPBUserProfile builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUserProfile*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserProfile*)[[[TXPBUserProfile builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserProfileBuilder*) builder {
  return [[TXPBUserProfileBuilder alloc] init];
}
+ (TXPBUserProfileBuilder*) builderWithPrototype:(TXPBUserProfile*) prototype {
  return [[TXPBUserProfile builder] mergeFrom:prototype];
}
- (TXPBUserProfileBuilder*) builder {
  return [TXPBUserProfile builder];
}
- (TXPBUserProfileBuilder*) toBuilder {
  return [TXPBUserProfile builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasOption) {
    [output appendFormat:@"%@%@: %@\n", indent, @"option", self.option];
  }
  if (self.hasValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"value", self.value];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasOption) {
    [dictionary setObject: self.option forKey: @"option"];
  }
  if (self.hasValue) {
    [dictionary setObject: self.value forKey: @"value"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUserProfile class]]) {
    return NO;
  }
  TXPBUserProfile *otherMessage = other;
  return
      self.hasOption == otherMessage.hasOption &&
      (!self.hasOption || [self.option isEqual:otherMessage.option]) &&
      self.hasValue == otherMessage.hasValue &&
      (!self.hasValue || [self.value isEqual:otherMessage.value]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasOption) {
    hashCode = hashCode * 31 + [self.option hash];
  }
  if (self.hasValue) {
    hashCode = hashCode * 31 + [self.value hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUserProfileBuilder()
@property (strong) TXPBUserProfile* resultUserProfile;
@end

@implementation TXPBUserProfileBuilder
@synthesize resultUserProfile;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserProfile = [[TXPBUserProfile alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserProfile;
}
- (TXPBUserProfileBuilder*) clear {
  self.resultUserProfile = [[TXPBUserProfile alloc] init];
  return self;
}
- (TXPBUserProfileBuilder*) clone {
  return [TXPBUserProfile builderWithPrototype:resultUserProfile];
}
- (TXPBUserProfile*) defaultInstance {
  return [TXPBUserProfile defaultInstance];
}
- (TXPBUserProfile*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUserProfile*) buildPartial {
  TXPBUserProfile* returnMe = resultUserProfile;
  self.resultUserProfile = nil;
  return returnMe;
}
- (TXPBUserProfileBuilder*) mergeFrom:(TXPBUserProfile*) other {
  if (other == [TXPBUserProfile defaultInstance]) {
    return self;
  }
  if (other.hasOption) {
    [self setOption:other.option];
  }
  if (other.hasValue) {
    [self setValue:other.value];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUserProfileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUserProfileBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setOption:[input readString]];
        break;
      }
      case 18: {
        [self setValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasOption {
  return resultUserProfile.hasOption;
}
- (NSString*) option {
  return resultUserProfile.option;
}
- (TXPBUserProfileBuilder*) setOption:(NSString*) value {
  resultUserProfile.hasOption = YES;
  resultUserProfile.option = value;
  return self;
}
- (TXPBUserProfileBuilder*) clearOption {
  resultUserProfile.hasOption = NO;
  resultUserProfile.option = @"";
  return self;
}
- (BOOL) hasValue {
  return resultUserProfile.hasValue;
}
- (NSString*) value {
  return resultUserProfile.value;
}
- (TXPBUserProfileBuilder*) setValue:(NSString*) value {
  resultUserProfile.hasValue = YES;
  resultUserProfile.value = value;
  return self;
}
- (TXPBUserProfileBuilder*) clearValue {
  resultUserProfile.hasValue = NO;
  resultUserProfile.value = @"";
  return self;
}
@end

@interface TXPBSaveUserProfileRequest ()
@property (strong) NSMutableArray * userProfilesArray;
@end

@implementation TXPBSaveUserProfileRequest

@synthesize userProfilesArray;
@dynamic userProfiles;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBSaveUserProfileRequest* defaultTXPBSaveUserProfileRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSaveUserProfileRequest class]) {
    defaultTXPBSaveUserProfileRequestInstance = [[TXPBSaveUserProfileRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSaveUserProfileRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSaveUserProfileRequestInstance;
}
- (NSArray *)userProfiles {
  return userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [userProfilesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInituserProfiles = YES;
   [self.userProfiles enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserProfiles = NO;
      *stop = YES;
    }
  }];
  if (!isInituserProfiles) return isInituserProfiles;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSaveUserProfileRequest*) parseFromData:(NSData*) data {
  return (TXPBSaveUserProfileRequest*)[[[TXPBSaveUserProfileRequest builder] mergeFromData:data] build];
}
+ (TXPBSaveUserProfileRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSaveUserProfileRequest*)[[[TXPBSaveUserProfileRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSaveUserProfileRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSaveUserProfileRequest*)[[[TXPBSaveUserProfileRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSaveUserProfileRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSaveUserProfileRequest*)[[[TXPBSaveUserProfileRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSaveUserProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSaveUserProfileRequest*)[[[TXPBSaveUserProfileRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSaveUserProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSaveUserProfileRequest*)[[[TXPBSaveUserProfileRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSaveUserProfileRequestBuilder*) builder {
  return [[TXPBSaveUserProfileRequestBuilder alloc] init];
}
+ (TXPBSaveUserProfileRequestBuilder*) builderWithPrototype:(TXPBSaveUserProfileRequest*) prototype {
  return [[TXPBSaveUserProfileRequest builder] mergeFrom:prototype];
}
- (TXPBSaveUserProfileRequestBuilder*) builder {
  return [TXPBSaveUserProfileRequest builder];
}
- (TXPBSaveUserProfileRequestBuilder*) toBuilder {
  return [TXPBSaveUserProfileRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userProfiles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBUserProfile* element in self.userProfilesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"userProfiles"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSaveUserProfileRequest class]]) {
    return NO;
  }
  TXPBSaveUserProfileRequest *otherMessage = other;
  return
      [self.userProfilesArray isEqualToArray:otherMessage.userProfilesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSaveUserProfileRequestBuilder()
@property (strong) TXPBSaveUserProfileRequest* resultSaveUserProfileRequest;
@end

@implementation TXPBSaveUserProfileRequestBuilder
@synthesize resultSaveUserProfileRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSaveUserProfileRequest = [[TXPBSaveUserProfileRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSaveUserProfileRequest;
}
- (TXPBSaveUserProfileRequestBuilder*) clear {
  self.resultSaveUserProfileRequest = [[TXPBSaveUserProfileRequest alloc] init];
  return self;
}
- (TXPBSaveUserProfileRequestBuilder*) clone {
  return [TXPBSaveUserProfileRequest builderWithPrototype:resultSaveUserProfileRequest];
}
- (TXPBSaveUserProfileRequest*) defaultInstance {
  return [TXPBSaveUserProfileRequest defaultInstance];
}
- (TXPBSaveUserProfileRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSaveUserProfileRequest*) buildPartial {
  TXPBSaveUserProfileRequest* returnMe = resultSaveUserProfileRequest;
  self.resultSaveUserProfileRequest = nil;
  return returnMe;
}
- (TXPBSaveUserProfileRequestBuilder*) mergeFrom:(TXPBSaveUserProfileRequest*) other {
  if (other == [TXPBSaveUserProfileRequest defaultInstance]) {
    return self;
  }
  if (other.userProfilesArray.count > 0) {
    if (resultSaveUserProfileRequest.userProfilesArray == nil) {
      resultSaveUserProfileRequest.userProfilesArray = [[NSMutableArray alloc] initWithArray:other.userProfilesArray];
    } else {
      [resultSaveUserProfileRequest.userProfilesArray addObjectsFromArray:other.userProfilesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSaveUserProfileRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSaveUserProfileRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserProfileBuilder* subBuilder = [TXPBUserProfile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserProfiles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)userProfiles {
  return resultSaveUserProfileRequest.userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [resultSaveUserProfileRequest userProfilesAtIndex:index];
}
- (TXPBSaveUserProfileRequestBuilder *)addUserProfiles:(TXPBUserProfile*)value {
  if (resultSaveUserProfileRequest.userProfilesArray == nil) {
    resultSaveUserProfileRequest.userProfilesArray = [[NSMutableArray alloc]init];
  }
  [resultSaveUserProfileRequest.userProfilesArray addObject:value];
  return self;
}
- (TXPBSaveUserProfileRequestBuilder *)setUserProfilesArray:(NSArray *)array {
  resultSaveUserProfileRequest.userProfilesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSaveUserProfileRequestBuilder *)clearUserProfiles {
  resultSaveUserProfileRequest.userProfilesArray = nil;
  return self;
}
@end

@interface TXPBSaveUserProfileResponse ()
@end

@implementation TXPBSaveUserProfileResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBSaveUserProfileResponse* defaultTXPBSaveUserProfileResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSaveUserProfileResponse class]) {
    defaultTXPBSaveUserProfileResponseInstance = [[TXPBSaveUserProfileResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSaveUserProfileResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSaveUserProfileResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSaveUserProfileResponse*) parseFromData:(NSData*) data {
  return (TXPBSaveUserProfileResponse*)[[[TXPBSaveUserProfileResponse builder] mergeFromData:data] build];
}
+ (TXPBSaveUserProfileResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSaveUserProfileResponse*)[[[TXPBSaveUserProfileResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSaveUserProfileResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSaveUserProfileResponse*)[[[TXPBSaveUserProfileResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSaveUserProfileResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSaveUserProfileResponse*)[[[TXPBSaveUserProfileResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSaveUserProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSaveUserProfileResponse*)[[[TXPBSaveUserProfileResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSaveUserProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSaveUserProfileResponse*)[[[TXPBSaveUserProfileResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSaveUserProfileResponseBuilder*) builder {
  return [[TXPBSaveUserProfileResponseBuilder alloc] init];
}
+ (TXPBSaveUserProfileResponseBuilder*) builderWithPrototype:(TXPBSaveUserProfileResponse*) prototype {
  return [[TXPBSaveUserProfileResponse builder] mergeFrom:prototype];
}
- (TXPBSaveUserProfileResponseBuilder*) builder {
  return [TXPBSaveUserProfileResponse builder];
}
- (TXPBSaveUserProfileResponseBuilder*) toBuilder {
  return [TXPBSaveUserProfileResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSaveUserProfileResponse class]]) {
    return NO;
  }
  TXPBSaveUserProfileResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSaveUserProfileResponseBuilder()
@property (strong) TXPBSaveUserProfileResponse* resultSaveUserProfileResponse;
@end

@implementation TXPBSaveUserProfileResponseBuilder
@synthesize resultSaveUserProfileResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSaveUserProfileResponse = [[TXPBSaveUserProfileResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSaveUserProfileResponse;
}
- (TXPBSaveUserProfileResponseBuilder*) clear {
  self.resultSaveUserProfileResponse = [[TXPBSaveUserProfileResponse alloc] init];
  return self;
}
- (TXPBSaveUserProfileResponseBuilder*) clone {
  return [TXPBSaveUserProfileResponse builderWithPrototype:resultSaveUserProfileResponse];
}
- (TXPBSaveUserProfileResponse*) defaultInstance {
  return [TXPBSaveUserProfileResponse defaultInstance];
}
- (TXPBSaveUserProfileResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSaveUserProfileResponse*) buildPartial {
  TXPBSaveUserProfileResponse* returnMe = resultSaveUserProfileResponse;
  self.resultSaveUserProfileResponse = nil;
  return returnMe;
}
- (TXPBSaveUserProfileResponseBuilder*) mergeFrom:(TXPBSaveUserProfileResponse*) other {
  if (other == [TXPBSaveUserProfileResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSaveUserProfileResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSaveUserProfileResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchUserProfileRequest ()
@end

@implementation TXPBFetchUserProfileRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchUserProfileRequest* defaultTXPBFetchUserProfileRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserProfileRequest class]) {
    defaultTXPBFetchUserProfileRequestInstance = [[TXPBFetchUserProfileRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserProfileRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserProfileRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserProfileRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchUserProfileRequest*)[[[TXPBFetchUserProfileRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchUserProfileRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserProfileRequest*)[[[TXPBFetchUserProfileRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserProfileRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserProfileRequest*)[[[TXPBFetchUserProfileRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserProfileRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserProfileRequest*)[[[TXPBFetchUserProfileRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserProfileRequest*)[[[TXPBFetchUserProfileRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserProfileRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserProfileRequest*)[[[TXPBFetchUserProfileRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserProfileRequestBuilder*) builder {
  return [[TXPBFetchUserProfileRequestBuilder alloc] init];
}
+ (TXPBFetchUserProfileRequestBuilder*) builderWithPrototype:(TXPBFetchUserProfileRequest*) prototype {
  return [[TXPBFetchUserProfileRequest builder] mergeFrom:prototype];
}
- (TXPBFetchUserProfileRequestBuilder*) builder {
  return [TXPBFetchUserProfileRequest builder];
}
- (TXPBFetchUserProfileRequestBuilder*) toBuilder {
  return [TXPBFetchUserProfileRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserProfileRequest class]]) {
    return NO;
  }
  TXPBFetchUserProfileRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserProfileRequestBuilder()
@property (strong) TXPBFetchUserProfileRequest* resultFetchUserProfileRequest;
@end

@implementation TXPBFetchUserProfileRequestBuilder
@synthesize resultFetchUserProfileRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserProfileRequest = [[TXPBFetchUserProfileRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserProfileRequest;
}
- (TXPBFetchUserProfileRequestBuilder*) clear {
  self.resultFetchUserProfileRequest = [[TXPBFetchUserProfileRequest alloc] init];
  return self;
}
- (TXPBFetchUserProfileRequestBuilder*) clone {
  return [TXPBFetchUserProfileRequest builderWithPrototype:resultFetchUserProfileRequest];
}
- (TXPBFetchUserProfileRequest*) defaultInstance {
  return [TXPBFetchUserProfileRequest defaultInstance];
}
- (TXPBFetchUserProfileRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserProfileRequest*) buildPartial {
  TXPBFetchUserProfileRequest* returnMe = resultFetchUserProfileRequest;
  self.resultFetchUserProfileRequest = nil;
  return returnMe;
}
- (TXPBFetchUserProfileRequestBuilder*) mergeFrom:(TXPBFetchUserProfileRequest*) other {
  if (other == [TXPBFetchUserProfileRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserProfileRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserProfileRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchUserProfileResponse ()
@property (strong) NSMutableArray * userProfilesArray;
@end

@implementation TXPBFetchUserProfileResponse

@synthesize userProfilesArray;
@dynamic userProfiles;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchUserProfileResponse* defaultTXPBFetchUserProfileResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserProfileResponse class]) {
    defaultTXPBFetchUserProfileResponseInstance = [[TXPBFetchUserProfileResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserProfileResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserProfileResponseInstance;
}
- (NSArray *)userProfiles {
  return userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [userProfilesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInituserProfiles = YES;
   [self.userProfiles enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserProfiles = NO;
      *stop = YES;
    }
  }];
  if (!isInituserProfiles) return isInituserProfiles;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserProfileResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchUserProfileResponse*)[[[TXPBFetchUserProfileResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchUserProfileResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserProfileResponse*)[[[TXPBFetchUserProfileResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserProfileResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserProfileResponse*)[[[TXPBFetchUserProfileResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserProfileResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserProfileResponse*)[[[TXPBFetchUserProfileResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserProfileResponse*)[[[TXPBFetchUserProfileResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserProfileResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserProfileResponse*)[[[TXPBFetchUserProfileResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserProfileResponseBuilder*) builder {
  return [[TXPBFetchUserProfileResponseBuilder alloc] init];
}
+ (TXPBFetchUserProfileResponseBuilder*) builderWithPrototype:(TXPBFetchUserProfileResponse*) prototype {
  return [[TXPBFetchUserProfileResponse builder] mergeFrom:prototype];
}
- (TXPBFetchUserProfileResponseBuilder*) builder {
  return [TXPBFetchUserProfileResponse builder];
}
- (TXPBFetchUserProfileResponseBuilder*) toBuilder {
  return [TXPBFetchUserProfileResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userProfiles"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBUserProfile* element in self.userProfilesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"userProfiles"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserProfileResponse class]]) {
    return NO;
  }
  TXPBFetchUserProfileResponse *otherMessage = other;
  return
      [self.userProfilesArray isEqualToArray:otherMessage.userProfilesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.userProfilesArray enumerateObjectsUsingBlock:^(TXPBUserProfile *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserProfileResponseBuilder()
@property (strong) TXPBFetchUserProfileResponse* resultFetchUserProfileResponse;
@end

@implementation TXPBFetchUserProfileResponseBuilder
@synthesize resultFetchUserProfileResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserProfileResponse = [[TXPBFetchUserProfileResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserProfileResponse;
}
- (TXPBFetchUserProfileResponseBuilder*) clear {
  self.resultFetchUserProfileResponse = [[TXPBFetchUserProfileResponse alloc] init];
  return self;
}
- (TXPBFetchUserProfileResponseBuilder*) clone {
  return [TXPBFetchUserProfileResponse builderWithPrototype:resultFetchUserProfileResponse];
}
- (TXPBFetchUserProfileResponse*) defaultInstance {
  return [TXPBFetchUserProfileResponse defaultInstance];
}
- (TXPBFetchUserProfileResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserProfileResponse*) buildPartial {
  TXPBFetchUserProfileResponse* returnMe = resultFetchUserProfileResponse;
  self.resultFetchUserProfileResponse = nil;
  return returnMe;
}
- (TXPBFetchUserProfileResponseBuilder*) mergeFrom:(TXPBFetchUserProfileResponse*) other {
  if (other == [TXPBFetchUserProfileResponse defaultInstance]) {
    return self;
  }
  if (other.userProfilesArray.count > 0) {
    if (resultFetchUserProfileResponse.userProfilesArray == nil) {
      resultFetchUserProfileResponse.userProfilesArray = [[NSMutableArray alloc] initWithArray:other.userProfilesArray];
    } else {
      [resultFetchUserProfileResponse.userProfilesArray addObjectsFromArray:other.userProfilesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserProfileResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserProfileResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserProfileBuilder* subBuilder = [TXPBUserProfile builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserProfiles:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)userProfiles {
  return resultFetchUserProfileResponse.userProfilesArray;
}
- (TXPBUserProfile*)userProfilesAtIndex:(NSUInteger)index {
  return [resultFetchUserProfileResponse userProfilesAtIndex:index];
}
- (TXPBFetchUserProfileResponseBuilder *)addUserProfiles:(TXPBUserProfile*)value {
  if (resultFetchUserProfileResponse.userProfilesArray == nil) {
    resultFetchUserProfileResponse.userProfilesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchUserProfileResponse.userProfilesArray addObject:value];
  return self;
}
- (TXPBFetchUserProfileResponseBuilder *)setUserProfilesArray:(NSArray *)array {
  resultFetchUserProfileResponse.userProfilesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchUserProfileResponseBuilder *)clearUserProfiles {
  resultFetchUserProfileResponse.userProfilesArray = nil;
  return self;
}
@end

@interface TXPBLogOutRequest ()
@end

@implementation TXPBLogOutRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBLogOutRequest* defaultTXPBLogOutRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBLogOutRequest class]) {
    defaultTXPBLogOutRequestInstance = [[TXPBLogOutRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBLogOutRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBLogOutRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBLogOutRequest*) parseFromData:(NSData*) data {
  return (TXPBLogOutRequest*)[[[TXPBLogOutRequest builder] mergeFromData:data] build];
}
+ (TXPBLogOutRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLogOutRequest*)[[[TXPBLogOutRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBLogOutRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBLogOutRequest*)[[[TXPBLogOutRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBLogOutRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLogOutRequest*)[[[TXPBLogOutRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLogOutRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBLogOutRequest*)[[[TXPBLogOutRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBLogOutRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLogOutRequest*)[[[TXPBLogOutRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLogOutRequestBuilder*) builder {
  return [[TXPBLogOutRequestBuilder alloc] init];
}
+ (TXPBLogOutRequestBuilder*) builderWithPrototype:(TXPBLogOutRequest*) prototype {
  return [[TXPBLogOutRequest builder] mergeFrom:prototype];
}
- (TXPBLogOutRequestBuilder*) builder {
  return [TXPBLogOutRequest builder];
}
- (TXPBLogOutRequestBuilder*) toBuilder {
  return [TXPBLogOutRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBLogOutRequest class]]) {
    return NO;
  }
  TXPBLogOutRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBLogOutRequestBuilder()
@property (strong) TXPBLogOutRequest* resultLogOutRequest;
@end

@implementation TXPBLogOutRequestBuilder
@synthesize resultLogOutRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLogOutRequest = [[TXPBLogOutRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLogOutRequest;
}
- (TXPBLogOutRequestBuilder*) clear {
  self.resultLogOutRequest = [[TXPBLogOutRequest alloc] init];
  return self;
}
- (TXPBLogOutRequestBuilder*) clone {
  return [TXPBLogOutRequest builderWithPrototype:resultLogOutRequest];
}
- (TXPBLogOutRequest*) defaultInstance {
  return [TXPBLogOutRequest defaultInstance];
}
- (TXPBLogOutRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBLogOutRequest*) buildPartial {
  TXPBLogOutRequest* returnMe = resultLogOutRequest;
  self.resultLogOutRequest = nil;
  return returnMe;
}
- (TXPBLogOutRequestBuilder*) mergeFrom:(TXPBLogOutRequest*) other {
  if (other == [TXPBLogOutRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBLogOutRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBLogOutRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBLogOutResponse ()
@end

@implementation TXPBLogOutResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBLogOutResponse* defaultTXPBLogOutResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBLogOutResponse class]) {
    defaultTXPBLogOutResponseInstance = [[TXPBLogOutResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBLogOutResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBLogOutResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBLogOutResponse*) parseFromData:(NSData*) data {
  return (TXPBLogOutResponse*)[[[TXPBLogOutResponse builder] mergeFromData:data] build];
}
+ (TXPBLogOutResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLogOutResponse*)[[[TXPBLogOutResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBLogOutResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBLogOutResponse*)[[[TXPBLogOutResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBLogOutResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLogOutResponse*)[[[TXPBLogOutResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLogOutResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBLogOutResponse*)[[[TXPBLogOutResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBLogOutResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLogOutResponse*)[[[TXPBLogOutResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLogOutResponseBuilder*) builder {
  return [[TXPBLogOutResponseBuilder alloc] init];
}
+ (TXPBLogOutResponseBuilder*) builderWithPrototype:(TXPBLogOutResponse*) prototype {
  return [[TXPBLogOutResponse builder] mergeFrom:prototype];
}
- (TXPBLogOutResponseBuilder*) builder {
  return [TXPBLogOutResponse builder];
}
- (TXPBLogOutResponseBuilder*) toBuilder {
  return [TXPBLogOutResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBLogOutResponse class]]) {
    return NO;
  }
  TXPBLogOutResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBLogOutResponseBuilder()
@property (strong) TXPBLogOutResponse* resultLogOutResponse;
@end

@implementation TXPBLogOutResponseBuilder
@synthesize resultLogOutResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLogOutResponse = [[TXPBLogOutResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLogOutResponse;
}
- (TXPBLogOutResponseBuilder*) clear {
  self.resultLogOutResponse = [[TXPBLogOutResponse alloc] init];
  return self;
}
- (TXPBLogOutResponseBuilder*) clone {
  return [TXPBLogOutResponse builderWithPrototype:resultLogOutResponse];
}
- (TXPBLogOutResponse*) defaultInstance {
  return [TXPBLogOutResponse defaultInstance];
}
- (TXPBLogOutResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBLogOutResponse*) buildPartial {
  TXPBLogOutResponse* returnMe = resultLogOutResponse;
  self.resultLogOutResponse = nil;
  return returnMe;
}
- (TXPBLogOutResponseBuilder*) mergeFrom:(TXPBLogOutResponse*) other {
  if (other == [TXPBLogOutResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBLogOutResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBLogOutResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBLike ()
@property SInt64 userId;
@property (strong) NSString* nickName;
@property (strong) NSString* userAvatarUrl;
@property SInt64 targetId;
@property SInt64 commentId;
@end

@implementation TXPBLike

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) _value_ {
  hasNickName_ = !!_value_;
}
@synthesize nickName;
- (BOOL) hasUserAvatarUrl {
  return !!hasUserAvatarUrl_;
}
- (void) setHasUserAvatarUrl:(BOOL) _value_ {
  hasUserAvatarUrl_ = !!_value_;
}
@synthesize userAvatarUrl;
- (BOOL) hasTargetId {
  return !!hasTargetId_;
}
- (void) setHasTargetId:(BOOL) _value_ {
  hasTargetId_ = !!_value_;
}
@synthesize targetId;
- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) _value_ {
  hasCommentId_ = !!_value_;
}
@synthesize commentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0L;
    self.nickName = @"";
    self.userAvatarUrl = @"";
    self.targetId = 0L;
    self.commentId = 0L;
  }
  return self;
}
static TXPBLike* defaultTXPBLikeInstance = nil;
+ (void) initialize {
  if (self == [TXPBLike class]) {
    defaultTXPBLikeInstance = [[TXPBLike alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBLikeInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBLikeInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasTargetId) {
    return NO;
  }
  if (!self.hasCommentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeInt64:1 value:self.userId];
  }
  if (self.hasNickName) {
    [output writeString:2 value:self.nickName];
  }
  if (self.hasUserAvatarUrl) {
    [output writeString:3 value:self.userAvatarUrl];
  }
  if (self.hasTargetId) {
    [output writeInt64:4 value:self.targetId];
  }
  if (self.hasCommentId) {
    [output writeInt64:5 value:self.commentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeInt64Size(1, self.userId);
  }
  if (self.hasNickName) {
    size_ += computeStringSize(2, self.nickName);
  }
  if (self.hasUserAvatarUrl) {
    size_ += computeStringSize(3, self.userAvatarUrl);
  }
  if (self.hasTargetId) {
    size_ += computeInt64Size(4, self.targetId);
  }
  if (self.hasCommentId) {
    size_ += computeInt64Size(5, self.commentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBLike*) parseFromData:(NSData*) data {
  return (TXPBLike*)[[[TXPBLike builder] mergeFromData:data] build];
}
+ (TXPBLike*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLike*)[[[TXPBLike builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBLike*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBLike*)[[[TXPBLike builder] mergeFromInputStream:input] build];
}
+ (TXPBLike*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLike*)[[[TXPBLike builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLike*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBLike*)[[[TXPBLike builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBLike*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLike*)[[[TXPBLike builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLikeBuilder*) builder {
  return [[TXPBLikeBuilder alloc] init];
}
+ (TXPBLikeBuilder*) builderWithPrototype:(TXPBLike*) prototype {
  return [[TXPBLike builder] mergeFrom:prototype];
}
- (TXPBLikeBuilder*) builder {
  return [TXPBLike builder];
}
- (TXPBLikeBuilder*) toBuilder {
  return [TXPBLike builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickName", self.nickName];
  }
  if (self.hasUserAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userAvatarUrl", self.userAvatarUrl];
  }
  if (self.hasTargetId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetId", [NSNumber numberWithLongLong:self.targetId]];
  }
  if (self.hasCommentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentId", [NSNumber numberWithLongLong:self.commentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasNickName) {
    [dictionary setObject: self.nickName forKey: @"nickName"];
  }
  if (self.hasUserAvatarUrl) {
    [dictionary setObject: self.userAvatarUrl forKey: @"userAvatarUrl"];
  }
  if (self.hasTargetId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.targetId] forKey: @"targetId"];
  }
  if (self.hasCommentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.commentId] forKey: @"commentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBLike class]]) {
    return NO;
  }
  TXPBLike *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasNickName == otherMessage.hasNickName &&
      (!self.hasNickName || [self.nickName isEqual:otherMessage.nickName]) &&
      self.hasUserAvatarUrl == otherMessage.hasUserAvatarUrl &&
      (!self.hasUserAvatarUrl || [self.userAvatarUrl isEqual:otherMessage.userAvatarUrl]) &&
      self.hasTargetId == otherMessage.hasTargetId &&
      (!self.hasTargetId || self.targetId == otherMessage.targetId) &&
      self.hasCommentId == otherMessage.hasCommentId &&
      (!self.hasCommentId || self.commentId == otherMessage.commentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasNickName) {
    hashCode = hashCode * 31 + [self.nickName hash];
  }
  if (self.hasUserAvatarUrl) {
    hashCode = hashCode * 31 + [self.userAvatarUrl hash];
  }
  if (self.hasTargetId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.targetId] hash];
  }
  if (self.hasCommentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.commentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBLikeBuilder()
@property (strong) TXPBLike* resultLike;
@end

@implementation TXPBLikeBuilder
@synthesize resultLike;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLike = [[TXPBLike alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLike;
}
- (TXPBLikeBuilder*) clear {
  self.resultLike = [[TXPBLike alloc] init];
  return self;
}
- (TXPBLikeBuilder*) clone {
  return [TXPBLike builderWithPrototype:resultLike];
}
- (TXPBLike*) defaultInstance {
  return [TXPBLike defaultInstance];
}
- (TXPBLike*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBLike*) buildPartial {
  TXPBLike* returnMe = resultLike;
  self.resultLike = nil;
  return returnMe;
}
- (TXPBLikeBuilder*) mergeFrom:(TXPBLike*) other {
  if (other == [TXPBLike defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  if (other.hasUserAvatarUrl) {
    [self setUserAvatarUrl:other.userAvatarUrl];
  }
  if (other.hasTargetId) {
    [self setTargetId:other.targetId];
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBLikeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBLikeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 18: {
        [self setNickName:[input readString]];
        break;
      }
      case 26: {
        [self setUserAvatarUrl:[input readString]];
        break;
      }
      case 32: {
        [self setTargetId:[input readInt64]];
        break;
      }
      case 40: {
        [self setCommentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultLike.hasUserId;
}
- (SInt64) userId {
  return resultLike.userId;
}
- (TXPBLikeBuilder*) setUserId:(SInt64) value {
  resultLike.hasUserId = YES;
  resultLike.userId = value;
  return self;
}
- (TXPBLikeBuilder*) clearUserId {
  resultLike.hasUserId = NO;
  resultLike.userId = 0L;
  return self;
}
- (BOOL) hasNickName {
  return resultLike.hasNickName;
}
- (NSString*) nickName {
  return resultLike.nickName;
}
- (TXPBLikeBuilder*) setNickName:(NSString*) value {
  resultLike.hasNickName = YES;
  resultLike.nickName = value;
  return self;
}
- (TXPBLikeBuilder*) clearNickName {
  resultLike.hasNickName = NO;
  resultLike.nickName = @"";
  return self;
}
- (BOOL) hasUserAvatarUrl {
  return resultLike.hasUserAvatarUrl;
}
- (NSString*) userAvatarUrl {
  return resultLike.userAvatarUrl;
}
- (TXPBLikeBuilder*) setUserAvatarUrl:(NSString*) value {
  resultLike.hasUserAvatarUrl = YES;
  resultLike.userAvatarUrl = value;
  return self;
}
- (TXPBLikeBuilder*) clearUserAvatarUrl {
  resultLike.hasUserAvatarUrl = NO;
  resultLike.userAvatarUrl = @"";
  return self;
}
- (BOOL) hasTargetId {
  return resultLike.hasTargetId;
}
- (SInt64) targetId {
  return resultLike.targetId;
}
- (TXPBLikeBuilder*) setTargetId:(SInt64) value {
  resultLike.hasTargetId = YES;
  resultLike.targetId = value;
  return self;
}
- (TXPBLikeBuilder*) clearTargetId {
  resultLike.hasTargetId = NO;
  resultLike.targetId = 0L;
  return self;
}
- (BOOL) hasCommentId {
  return resultLike.hasCommentId;
}
- (SInt64) commentId {
  return resultLike.commentId;
}
- (TXPBLikeBuilder*) setCommentId:(SInt64) value {
  resultLike.hasCommentId = YES;
  resultLike.commentId = value;
  return self;
}
- (TXPBLikeBuilder*) clearCommentId {
  resultLike.hasCommentId = NO;
  resultLike.commentId = 0L;
  return self;
}
@end

@interface TXPBFeed ()
@property SInt64 id;
@property (strong) NSString* content;
@property SInt64 createOn;
@property (strong) NSMutableArray * attachesArray;
@property (strong) NSMutableArray * likesArray;
@property (strong) NSMutableArray * commentsArray;
@property SInt64 userId;
@property (strong) NSString* userNickName;
@property (strong) NSString* userAvatarUrl;
@property BOOL hasMoreComment;
@property TXPBUserType userType;
@end

@implementation TXPBFeed

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
@synthesize attachesArray;
@dynamic attaches;
@synthesize likesArray;
@dynamic likes;
@synthesize commentsArray;
@dynamic comments;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasUserNickName {
  return !!hasUserNickName_;
}
- (void) setHasUserNickName:(BOOL) _value_ {
  hasUserNickName_ = !!_value_;
}
@synthesize userNickName;
- (BOOL) hasUserAvatarUrl {
  return !!hasUserAvatarUrl_;
}
- (void) setHasUserAvatarUrl:(BOOL) _value_ {
  hasUserAvatarUrl_ = !!_value_;
}
@synthesize userAvatarUrl;
- (BOOL) hasHasMoreComment {
  return !!hasHasMoreComment_;
}
- (void) setHasHasMoreComment:(BOOL) _value_ {
  hasHasMoreComment_ = !!_value_;
}
- (BOOL) hasMoreComment {
  return !!hasMoreComment_;
}
- (void) setHasMoreComment:(BOOL) _value_ {
  hasMoreComment_ = !!_value_;
}
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) _value_ {
  hasUserType_ = !!_value_;
}
@synthesize userType;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.content = @"";
    self.createOn = 0L;
    self.userId = 0L;
    self.userNickName = @"";
    self.userAvatarUrl = @"";
    self.hasMoreComment = NO;
    self.userType = TXPBUserTypeChild;
  }
  return self;
}
static TXPBFeed* defaultTXPBFeedInstance = nil;
+ (void) initialize {
  if (self == [TXPBFeed class]) {
    defaultTXPBFeedInstance = [[TXPBFeed alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFeedInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFeedInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (NSArray *)likes {
  return likesArray;
}
- (TXPBLike*)likesAtIndex:(NSUInteger)index {
  return [likesArray objectAtIndex:index];
}
- (NSArray *)comments {
  return commentsArray;
}
- (TXPBComment*)commentsAtIndex:(NSUInteger)index {
  return [commentsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUserNickName) {
    return NO;
  }
  if (!self.hasUserAvatarUrl) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  __block BOOL isInitlikes = YES;
   [self.likes enumerateObjectsUsingBlock:^(TXPBLike *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitlikes = NO;
      *stop = YES;
    }
  }];
  if (!isInitlikes) return isInitlikes;
  __block BOOL isInitcomments = YES;
   [self.comments enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcomments = NO;
      *stop = YES;
    }
  }];
  if (!isInitcomments) return isInitcomments;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasCreateOn) {
    [output writeInt64:3 value:self.createOn];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.likesArray enumerateObjectsUsingBlock:^(TXPBLike *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  if (self.hasUserId) {
    [output writeInt64:7 value:self.userId];
  }
  if (self.hasUserNickName) {
    [output writeString:8 value:self.userNickName];
  }
  if (self.hasUserAvatarUrl) {
    [output writeString:9 value:self.userAvatarUrl];
  }
  if (self.hasHasMoreComment) {
    [output writeBool:10 value:self.hasMoreComment];
  }
  if (self.hasUserType) {
    [output writeEnum:11 value:self.userType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(3, self.createOn);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  [self.likesArray enumerateObjectsUsingBlock:^(TXPBLike *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  if (self.hasUserId) {
    size_ += computeInt64Size(7, self.userId);
  }
  if (self.hasUserNickName) {
    size_ += computeStringSize(8, self.userNickName);
  }
  if (self.hasUserAvatarUrl) {
    size_ += computeStringSize(9, self.userAvatarUrl);
  }
  if (self.hasHasMoreComment) {
    size_ += computeBoolSize(10, self.hasMoreComment);
  }
  if (self.hasUserType) {
    size_ += computeEnumSize(11, self.userType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFeed*) parseFromData:(NSData*) data {
  return (TXPBFeed*)[[[TXPBFeed builder] mergeFromData:data] build];
}
+ (TXPBFeed*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeed*)[[[TXPBFeed builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeed*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFeed*)[[[TXPBFeed builder] mergeFromInputStream:input] build];
}
+ (TXPBFeed*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeed*)[[[TXPBFeed builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeed*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFeed*)[[[TXPBFeed builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFeed*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeed*)[[[TXPBFeed builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeedBuilder*) builder {
  return [[TXPBFeedBuilder alloc] init];
}
+ (TXPBFeedBuilder*) builderWithPrototype:(TXPBFeed*) prototype {
  return [[TXPBFeed builder] mergeFrom:prototype];
}
- (TXPBFeedBuilder*) builder {
  return [TXPBFeed builder];
}
- (TXPBFeedBuilder*) toBuilder {
  return [TXPBFeed builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.likesArray enumerateObjectsUsingBlock:^(TXPBLike *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"likes"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"comments"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasUserNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userNickName", self.userNickName];
  }
  if (self.hasUserAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userAvatarUrl", self.userAvatarUrl];
  }
  if (self.hasHasMoreComment) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMoreComment", [NSNumber numberWithBool:self.hasMoreComment]];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userType", NSStringFromTXPBUserType(self.userType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  for (TXPBLike* element in self.likesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"likes"];
  }
  for (TXPBComment* element in self.commentsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"comments"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasUserNickName) {
    [dictionary setObject: self.userNickName forKey: @"userNickName"];
  }
  if (self.hasUserAvatarUrl) {
    [dictionary setObject: self.userAvatarUrl forKey: @"userAvatarUrl"];
  }
  if (self.hasHasMoreComment) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMoreComment] forKey: @"hasMoreComment"];
  }
  if (self.hasUserType) {
    [dictionary setObject: @(self.userType) forKey: @"userType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFeed class]]) {
    return NO;
  }
  TXPBFeed *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      [self.likesArray isEqualToArray:otherMessage.likesArray] &&
      [self.commentsArray isEqualToArray:otherMessage.commentsArray] &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserNickName == otherMessage.hasUserNickName &&
      (!self.hasUserNickName || [self.userNickName isEqual:otherMessage.userNickName]) &&
      self.hasUserAvatarUrl == otherMessage.hasUserAvatarUrl &&
      (!self.hasUserAvatarUrl || [self.userAvatarUrl isEqual:otherMessage.userAvatarUrl]) &&
      self.hasHasMoreComment == otherMessage.hasHasMoreComment &&
      (!self.hasHasMoreComment || self.hasMoreComment == otherMessage.hasMoreComment) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.likesArray enumerateObjectsUsingBlock:^(TXPBLike *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.commentsArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasUserNickName) {
    hashCode = hashCode * 31 + [self.userNickName hash];
  }
  if (self.hasUserAvatarUrl) {
    hashCode = hashCode * 31 + [self.userAvatarUrl hash];
  }
  if (self.hasHasMoreComment) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMoreComment] hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + self.userType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFeedBuilder()
@property (strong) TXPBFeed* resultFeed;
@end

@implementation TXPBFeedBuilder
@synthesize resultFeed;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFeed = [[TXPBFeed alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFeed;
}
- (TXPBFeedBuilder*) clear {
  self.resultFeed = [[TXPBFeed alloc] init];
  return self;
}
- (TXPBFeedBuilder*) clone {
  return [TXPBFeed builderWithPrototype:resultFeed];
}
- (TXPBFeed*) defaultInstance {
  return [TXPBFeed defaultInstance];
}
- (TXPBFeed*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFeed*) buildPartial {
  TXPBFeed* returnMe = resultFeed;
  self.resultFeed = nil;
  return returnMe;
}
- (TXPBFeedBuilder*) mergeFrom:(TXPBFeed*) other {
  if (other == [TXPBFeed defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.attachesArray.count > 0) {
    if (resultFeed.attachesArray == nil) {
      resultFeed.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultFeed.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  if (other.likesArray.count > 0) {
    if (resultFeed.likesArray == nil) {
      resultFeed.likesArray = [[NSMutableArray alloc] initWithArray:other.likesArray];
    } else {
      [resultFeed.likesArray addObjectsFromArray:other.likesArray];
    }
  }
  if (other.commentsArray.count > 0) {
    if (resultFeed.commentsArray == nil) {
      resultFeed.commentsArray = [[NSMutableArray alloc] initWithArray:other.commentsArray];
    } else {
      [resultFeed.commentsArray addObjectsFromArray:other.commentsArray];
    }
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserNickName) {
    [self setUserNickName:other.userNickName];
  }
  if (other.hasUserAvatarUrl) {
    [self setUserAvatarUrl:other.userAvatarUrl];
  }
  if (other.hasHasMoreComment) {
    [self setHasMoreComment:other.hasMoreComment];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFeedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFeedBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 24: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 34: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        TXPBLikeBuilder* subBuilder = [TXPBLike builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLikes:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        TXPBCommentBuilder* subBuilder = [TXPBComment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addComments:[subBuilder buildPartial]];
        break;
      }
      case 56: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 66: {
        [self setUserNickName:[input readString]];
        break;
      }
      case 74: {
        [self setUserAvatarUrl:[input readString]];
        break;
      }
      case 80: {
        [self setHasMoreComment:[input readBool]];
        break;
      }
      case 88: {
        TXPBUserType value = (TXPBUserType)[input readEnum];
        if (TXPBUserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:11 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultFeed.hasId;
}
- (SInt64) id {
  return resultFeed.id;
}
- (TXPBFeedBuilder*) setId:(SInt64) value {
  resultFeed.hasId = YES;
  resultFeed.id = value;
  return self;
}
- (TXPBFeedBuilder*) clearId {
  resultFeed.hasId = NO;
  resultFeed.id = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultFeed.hasContent;
}
- (NSString*) content {
  return resultFeed.content;
}
- (TXPBFeedBuilder*) setContent:(NSString*) value {
  resultFeed.hasContent = YES;
  resultFeed.content = value;
  return self;
}
- (TXPBFeedBuilder*) clearContent {
  resultFeed.hasContent = NO;
  resultFeed.content = @"";
  return self;
}
- (BOOL) hasCreateOn {
  return resultFeed.hasCreateOn;
}
- (SInt64) createOn {
  return resultFeed.createOn;
}
- (TXPBFeedBuilder*) setCreateOn:(SInt64) value {
  resultFeed.hasCreateOn = YES;
  resultFeed.createOn = value;
  return self;
}
- (TXPBFeedBuilder*) clearCreateOn {
  resultFeed.hasCreateOn = NO;
  resultFeed.createOn = 0L;
  return self;
}
- (NSMutableArray *)attaches {
  return resultFeed.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultFeed attachesAtIndex:index];
}
- (TXPBFeedBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultFeed.attachesArray == nil) {
    resultFeed.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultFeed.attachesArray addObject:value];
  return self;
}
- (TXPBFeedBuilder *)setAttachesArray:(NSArray *)array {
  resultFeed.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFeedBuilder *)clearAttaches {
  resultFeed.attachesArray = nil;
  return self;
}
- (NSMutableArray *)likes {
  return resultFeed.likesArray;
}
- (TXPBLike*)likesAtIndex:(NSUInteger)index {
  return [resultFeed likesAtIndex:index];
}
- (TXPBFeedBuilder *)addLikes:(TXPBLike*)value {
  if (resultFeed.likesArray == nil) {
    resultFeed.likesArray = [[NSMutableArray alloc]init];
  }
  [resultFeed.likesArray addObject:value];
  return self;
}
- (TXPBFeedBuilder *)setLikesArray:(NSArray *)array {
  resultFeed.likesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFeedBuilder *)clearLikes {
  resultFeed.likesArray = nil;
  return self;
}
- (NSMutableArray *)comments {
  return resultFeed.commentsArray;
}
- (TXPBComment*)commentsAtIndex:(NSUInteger)index {
  return [resultFeed commentsAtIndex:index];
}
- (TXPBFeedBuilder *)addComments:(TXPBComment*)value {
  if (resultFeed.commentsArray == nil) {
    resultFeed.commentsArray = [[NSMutableArray alloc]init];
  }
  [resultFeed.commentsArray addObject:value];
  return self;
}
- (TXPBFeedBuilder *)setCommentsArray:(NSArray *)array {
  resultFeed.commentsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFeedBuilder *)clearComments {
  resultFeed.commentsArray = nil;
  return self;
}
- (BOOL) hasUserId {
  return resultFeed.hasUserId;
}
- (SInt64) userId {
  return resultFeed.userId;
}
- (TXPBFeedBuilder*) setUserId:(SInt64) value {
  resultFeed.hasUserId = YES;
  resultFeed.userId = value;
  return self;
}
- (TXPBFeedBuilder*) clearUserId {
  resultFeed.hasUserId = NO;
  resultFeed.userId = 0L;
  return self;
}
- (BOOL) hasUserNickName {
  return resultFeed.hasUserNickName;
}
- (NSString*) userNickName {
  return resultFeed.userNickName;
}
- (TXPBFeedBuilder*) setUserNickName:(NSString*) value {
  resultFeed.hasUserNickName = YES;
  resultFeed.userNickName = value;
  return self;
}
- (TXPBFeedBuilder*) clearUserNickName {
  resultFeed.hasUserNickName = NO;
  resultFeed.userNickName = @"";
  return self;
}
- (BOOL) hasUserAvatarUrl {
  return resultFeed.hasUserAvatarUrl;
}
- (NSString*) userAvatarUrl {
  return resultFeed.userAvatarUrl;
}
- (TXPBFeedBuilder*) setUserAvatarUrl:(NSString*) value {
  resultFeed.hasUserAvatarUrl = YES;
  resultFeed.userAvatarUrl = value;
  return self;
}
- (TXPBFeedBuilder*) clearUserAvatarUrl {
  resultFeed.hasUserAvatarUrl = NO;
  resultFeed.userAvatarUrl = @"";
  return self;
}
- (BOOL) hasHasMoreComment {
  return resultFeed.hasHasMoreComment;
}
- (BOOL) hasMoreComment {
  return resultFeed.hasMoreComment;
}
- (TXPBFeedBuilder*) setHasMoreComment:(BOOL) value {
  resultFeed.hasHasMoreComment = YES;
  resultFeed.hasMoreComment = value;
  return self;
}
- (TXPBFeedBuilder*) clearHasMoreComment {
  resultFeed.hasHasMoreComment = NO;
  resultFeed.hasMoreComment = NO;
  return self;
}
- (BOOL) hasUserType {
  return resultFeed.hasUserType;
}
- (TXPBUserType) userType {
  return resultFeed.userType;
}
- (TXPBFeedBuilder*) setUserType:(TXPBUserType) value {
  resultFeed.hasUserType = YES;
  resultFeed.userType = value;
  return self;
}
- (TXPBFeedBuilder*) clearUserType {
  resultFeed.hasUserType = NO;
  resultFeed.userType = TXPBUserTypeChild;
  return self;
}
@end

@interface TXPBSendFeedRequest ()
@property (strong) PBAppendableArray * departmentIdsArray;
@property (strong) NSString* content;
@property (strong) NSMutableArray * attachesArray;
@property BOOL syncDepartmentPhoto;
@end

@implementation TXPBSendFeedRequest

@synthesize departmentIdsArray;
@dynamic departmentIds;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
@synthesize attachesArray;
@dynamic attaches;
- (BOOL) hasSyncDepartmentPhoto {
  return !!hasSyncDepartmentPhoto_;
}
- (void) setHasSyncDepartmentPhoto:(BOOL) _value_ {
  hasSyncDepartmentPhoto_ = !!_value_;
}
- (BOOL) syncDepartmentPhoto {
  return !!syncDepartmentPhoto_;
}
- (void) setSyncDepartmentPhoto:(BOOL) _value_ {
  syncDepartmentPhoto_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.content = @"";
    self.syncDepartmentPhoto = NO;
  }
  return self;
}
static TXPBSendFeedRequest* defaultTXPBSendFeedRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendFeedRequest class]) {
    defaultTXPBSendFeedRequestInstance = [[TXPBSendFeedRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendFeedRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendFeedRequestInstance;
}
- (PBArray *)departmentIds {
  return departmentIdsArray;
}
- (SInt64)departmentIdsAtIndex:(NSUInteger)index {
  return [departmentIdsArray int64AtIndex:index];
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger departmentIdsArrayCount = self.departmentIdsArray.count;
  if (departmentIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.departmentIdsArray.data;
    for (NSUInteger i = 0; i < departmentIdsArrayCount; ++i) {
      [output writeInt64:2 value:values[i]];
    }
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasSyncDepartmentPhoto) {
    [output writeBool:5 value:self.syncDepartmentPhoto];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.departmentIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.departmentIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasSyncDepartmentPhoto) {
    size_ += computeBoolSize(5, self.syncDepartmentPhoto);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendFeedRequest*) parseFromData:(NSData*) data {
  return (TXPBSendFeedRequest*)[[[TXPBSendFeedRequest builder] mergeFromData:data] build];
}
+ (TXPBSendFeedRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedRequest*)[[[TXPBSendFeedRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendFeedRequest*)[[[TXPBSendFeedRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSendFeedRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedRequest*)[[[TXPBSendFeedRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendFeedRequest*)[[[TXPBSendFeedRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedRequest*)[[[TXPBSendFeedRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedRequestBuilder*) builder {
  return [[TXPBSendFeedRequestBuilder alloc] init];
}
+ (TXPBSendFeedRequestBuilder*) builderWithPrototype:(TXPBSendFeedRequest*) prototype {
  return [[TXPBSendFeedRequest builder] mergeFrom:prototype];
}
- (TXPBSendFeedRequestBuilder*) builder {
  return [TXPBSendFeedRequest builder];
}
- (TXPBSendFeedRequestBuilder*) toBuilder {
  return [TXPBSendFeedRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.departmentIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentIds", obj];
  }];
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasSyncDepartmentPhoto) {
    [output appendFormat:@"%@%@: %@\n", indent, @"syncDepartmentPhoto", [NSNumber numberWithBool:self.syncDepartmentPhoto]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * departmentIdsArrayArray = [NSMutableArray new];
  NSUInteger departmentIdsArrayCount=self.departmentIdsArray.count;
  for(int i=0;i<departmentIdsArrayCount;i++){
    [departmentIdsArrayArray addObject: @([self.departmentIdsArray int64AtIndex:i])];
  }
  [dictionary setObject: departmentIdsArrayArray forKey: @"departmentIds"];
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  if (self.hasSyncDepartmentPhoto) {
    [dictionary setObject: [NSNumber numberWithBool:self.syncDepartmentPhoto] forKey: @"syncDepartmentPhoto"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendFeedRequest class]]) {
    return NO;
  }
  TXPBSendFeedRequest *otherMessage = other;
  return
      [self.departmentIdsArray isEqualToArray:otherMessage.departmentIdsArray] &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      self.hasSyncDepartmentPhoto == otherMessage.hasSyncDepartmentPhoto &&
      (!self.hasSyncDepartmentPhoto || self.syncDepartmentPhoto == otherMessage.syncDepartmentPhoto) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.departmentIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasSyncDepartmentPhoto) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.syncDepartmentPhoto] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendFeedRequestBuilder()
@property (strong) TXPBSendFeedRequest* resultSendFeedRequest;
@end

@implementation TXPBSendFeedRequestBuilder
@synthesize resultSendFeedRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendFeedRequest = [[TXPBSendFeedRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendFeedRequest;
}
- (TXPBSendFeedRequestBuilder*) clear {
  self.resultSendFeedRequest = [[TXPBSendFeedRequest alloc] init];
  return self;
}
- (TXPBSendFeedRequestBuilder*) clone {
  return [TXPBSendFeedRequest builderWithPrototype:resultSendFeedRequest];
}
- (TXPBSendFeedRequest*) defaultInstance {
  return [TXPBSendFeedRequest defaultInstance];
}
- (TXPBSendFeedRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendFeedRequest*) buildPartial {
  TXPBSendFeedRequest* returnMe = resultSendFeedRequest;
  self.resultSendFeedRequest = nil;
  return returnMe;
}
- (TXPBSendFeedRequestBuilder*) mergeFrom:(TXPBSendFeedRequest*) other {
  if (other == [TXPBSendFeedRequest defaultInstance]) {
    return self;
  }
  if (other.departmentIdsArray.count > 0) {
    if (resultSendFeedRequest.departmentIdsArray == nil) {
      resultSendFeedRequest.departmentIdsArray = [other.departmentIdsArray copy];
    } else {
      [resultSendFeedRequest.departmentIdsArray appendArray:other.departmentIdsArray];
    }
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.attachesArray.count > 0) {
    if (resultSendFeedRequest.attachesArray == nil) {
      resultSendFeedRequest.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultSendFeedRequest.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  if (other.hasSyncDepartmentPhoto) {
    [self setSyncDepartmentPhoto:other.syncDepartmentPhoto];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 16: {
        [self addDepartmentIds:[input readInt64]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 34: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setSyncDepartmentPhoto:[input readBool]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)departmentIds {
  return resultSendFeedRequest.departmentIdsArray;
}
- (SInt64)departmentIdsAtIndex:(NSUInteger)index {
  return [resultSendFeedRequest departmentIdsAtIndex:index];
}
- (TXPBSendFeedRequestBuilder *)addDepartmentIds:(SInt64)value {
  if (resultSendFeedRequest.departmentIdsArray == nil) {
    resultSendFeedRequest.departmentIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultSendFeedRequest.departmentIdsArray addInt64:value];
  return self;
}
- (TXPBSendFeedRequestBuilder *)setDepartmentIdsArray:(NSArray *)array {
  resultSendFeedRequest.departmentIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBSendFeedRequestBuilder *)setDepartmentIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  resultSendFeedRequest.departmentIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBSendFeedRequestBuilder *)clearDepartmentIds {
  resultSendFeedRequest.departmentIdsArray = nil;
  return self;
}
- (BOOL) hasContent {
  return resultSendFeedRequest.hasContent;
}
- (NSString*) content {
  return resultSendFeedRequest.content;
}
- (TXPBSendFeedRequestBuilder*) setContent:(NSString*) value {
  resultSendFeedRequest.hasContent = YES;
  resultSendFeedRequest.content = value;
  return self;
}
- (TXPBSendFeedRequestBuilder*) clearContent {
  resultSendFeedRequest.hasContent = NO;
  resultSendFeedRequest.content = @"";
  return self;
}
- (NSMutableArray *)attaches {
  return resultSendFeedRequest.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultSendFeedRequest attachesAtIndex:index];
}
- (TXPBSendFeedRequestBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultSendFeedRequest.attachesArray == nil) {
    resultSendFeedRequest.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultSendFeedRequest.attachesArray addObject:value];
  return self;
}
- (TXPBSendFeedRequestBuilder *)setAttachesArray:(NSArray *)array {
  resultSendFeedRequest.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSendFeedRequestBuilder *)clearAttaches {
  resultSendFeedRequest.attachesArray = nil;
  return self;
}
- (BOOL) hasSyncDepartmentPhoto {
  return resultSendFeedRequest.hasSyncDepartmentPhoto;
}
- (BOOL) syncDepartmentPhoto {
  return resultSendFeedRequest.syncDepartmentPhoto;
}
- (TXPBSendFeedRequestBuilder*) setSyncDepartmentPhoto:(BOOL) value {
  resultSendFeedRequest.hasSyncDepartmentPhoto = YES;
  resultSendFeedRequest.syncDepartmentPhoto = value;
  return self;
}
- (TXPBSendFeedRequestBuilder*) clearSyncDepartmentPhoto {
  resultSendFeedRequest.hasSyncDepartmentPhoto = NO;
  resultSendFeedRequest.syncDepartmentPhoto = NO;
  return self;
}
@end

@interface TXPBSendFeedResponse ()
@property SInt64 feedId;
@property SInt32 bonus;
@end

@implementation TXPBSendFeedResponse

- (BOOL) hasFeedId {
  return !!hasFeedId_;
}
- (void) setHasFeedId:(BOOL) _value_ {
  hasFeedId_ = !!_value_;
}
@synthesize feedId;
- (BOOL) hasBonus {
  return !!hasBonus_;
}
- (void) setHasBonus:(BOOL) _value_ {
  hasBonus_ = !!_value_;
}
@synthesize bonus;
- (instancetype) init {
  if ((self = [super init])) {
    self.feedId = 0L;
    self.bonus = 0;
  }
  return self;
}
static TXPBSendFeedResponse* defaultTXPBSendFeedResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendFeedResponse class]) {
    defaultTXPBSendFeedResponseInstance = [[TXPBSendFeedResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendFeedResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendFeedResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFeedId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFeedId) {
    [output writeInt64:1 value:self.feedId];
  }
  if (self.hasBonus) {
    [output writeInt32:2 value:self.bonus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFeedId) {
    size_ += computeInt64Size(1, self.feedId);
  }
  if (self.hasBonus) {
    size_ += computeInt32Size(2, self.bonus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendFeedResponse*) parseFromData:(NSData*) data {
  return (TXPBSendFeedResponse*)[[[TXPBSendFeedResponse builder] mergeFromData:data] build];
}
+ (TXPBSendFeedResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedResponse*)[[[TXPBSendFeedResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendFeedResponse*)[[[TXPBSendFeedResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSendFeedResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedResponse*)[[[TXPBSendFeedResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendFeedResponse*)[[[TXPBSendFeedResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendFeedResponse*)[[[TXPBSendFeedResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendFeedResponseBuilder*) builder {
  return [[TXPBSendFeedResponseBuilder alloc] init];
}
+ (TXPBSendFeedResponseBuilder*) builderWithPrototype:(TXPBSendFeedResponse*) prototype {
  return [[TXPBSendFeedResponse builder] mergeFrom:prototype];
}
- (TXPBSendFeedResponseBuilder*) builder {
  return [TXPBSendFeedResponse builder];
}
- (TXPBSendFeedResponseBuilder*) toBuilder {
  return [TXPBSendFeedResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFeedId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"feedId", [NSNumber numberWithLongLong:self.feedId]];
  }
  if (self.hasBonus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bonus", [NSNumber numberWithInteger:self.bonus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFeedId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.feedId] forKey: @"feedId"];
  }
  if (self.hasBonus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bonus] forKey: @"bonus"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendFeedResponse class]]) {
    return NO;
  }
  TXPBSendFeedResponse *otherMessage = other;
  return
      self.hasFeedId == otherMessage.hasFeedId &&
      (!self.hasFeedId || self.feedId == otherMessage.feedId) &&
      self.hasBonus == otherMessage.hasBonus &&
      (!self.hasBonus || self.bonus == otherMessage.bonus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFeedId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.feedId] hash];
  }
  if (self.hasBonus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bonus] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendFeedResponseBuilder()
@property (strong) TXPBSendFeedResponse* resultSendFeedResponse;
@end

@implementation TXPBSendFeedResponseBuilder
@synthesize resultSendFeedResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendFeedResponse = [[TXPBSendFeedResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendFeedResponse;
}
- (TXPBSendFeedResponseBuilder*) clear {
  self.resultSendFeedResponse = [[TXPBSendFeedResponse alloc] init];
  return self;
}
- (TXPBSendFeedResponseBuilder*) clone {
  return [TXPBSendFeedResponse builderWithPrototype:resultSendFeedResponse];
}
- (TXPBSendFeedResponse*) defaultInstance {
  return [TXPBSendFeedResponse defaultInstance];
}
- (TXPBSendFeedResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendFeedResponse*) buildPartial {
  TXPBSendFeedResponse* returnMe = resultSendFeedResponse;
  self.resultSendFeedResponse = nil;
  return returnMe;
}
- (TXPBSendFeedResponseBuilder*) mergeFrom:(TXPBSendFeedResponse*) other {
  if (other == [TXPBSendFeedResponse defaultInstance]) {
    return self;
  }
  if (other.hasFeedId) {
    [self setFeedId:other.feedId];
  }
  if (other.hasBonus) {
    [self setBonus:other.bonus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFeedId:[input readInt64]];
        break;
      }
      case 16: {
        [self setBonus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasFeedId {
  return resultSendFeedResponse.hasFeedId;
}
- (SInt64) feedId {
  return resultSendFeedResponse.feedId;
}
- (TXPBSendFeedResponseBuilder*) setFeedId:(SInt64) value {
  resultSendFeedResponse.hasFeedId = YES;
  resultSendFeedResponse.feedId = value;
  return self;
}
- (TXPBSendFeedResponseBuilder*) clearFeedId {
  resultSendFeedResponse.hasFeedId = NO;
  resultSendFeedResponse.feedId = 0L;
  return self;
}
- (BOOL) hasBonus {
  return resultSendFeedResponse.hasBonus;
}
- (SInt32) bonus {
  return resultSendFeedResponse.bonus;
}
- (TXPBSendFeedResponseBuilder*) setBonus:(SInt32) value {
  resultSendFeedResponse.hasBonus = YES;
  resultSendFeedResponse.bonus = value;
  return self;
}
- (TXPBSendFeedResponseBuilder*) clearBonus {
  resultSendFeedResponse.hasBonus = NO;
  resultSendFeedResponse.bonus = 0;
  return self;
}
@end

@interface TXPBActivity ()
@property SInt64 id;
@property (strong) NSString* title;
@property (strong) NSMutableArray * picUrlArray;
@property (strong) NSString* avatarUrl;
@property (strong) NSString* nickname;
@property SInt64 createOn;
@property (strong) NSString* url;
@end

@implementation TXPBActivity

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
@synthesize picUrlArray;
@dynamic picUrl;
- (BOOL) hasAvatarUrl {
  return !!hasAvatarUrl_;
}
- (void) setHasAvatarUrl:(BOOL) _value_ {
  hasAvatarUrl_ = !!_value_;
}
@synthesize avatarUrl;
- (BOOL) hasNickname {
  return !!hasNickname_;
}
- (void) setHasNickname:(BOOL) _value_ {
  hasNickname_ = !!_value_;
}
@synthesize nickname;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.title = @"";
    self.avatarUrl = @"";
    self.nickname = @"";
    self.createOn = 0L;
    self.url = @"";
  }
  return self;
}
static TXPBActivity* defaultTXPBActivityInstance = nil;
+ (void) initialize {
  if (self == [TXPBActivity class]) {
    defaultTXPBActivityInstance = [[TXPBActivity alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBActivityInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBActivityInstance;
}
- (NSArray *)picUrl {
  return picUrlArray;
}
- (NSString*)picUrlAtIndex:(NSUInteger)index {
  return [picUrlArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasAvatarUrl) {
    return NO;
  }
  if (!self.hasNickname) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUrl) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  [self.picUrlArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:3 value:element];
  }];
  if (self.hasAvatarUrl) {
    [output writeString:4 value:self.avatarUrl];
  }
  if (self.hasNickname) {
    [output writeString:5 value:self.nickname];
  }
  if (self.hasCreateOn) {
    [output writeInt64:6 value:self.createOn];
  }
  if (self.hasUrl) {
    [output writeString:7 value:self.url];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(2, self.title);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.picUrlArray.count;
    [self.picUrlArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasAvatarUrl) {
    size_ += computeStringSize(4, self.avatarUrl);
  }
  if (self.hasNickname) {
    size_ += computeStringSize(5, self.nickname);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(6, self.createOn);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(7, self.url);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBActivity*) parseFromData:(NSData*) data {
  return (TXPBActivity*)[[[TXPBActivity builder] mergeFromData:data] build];
}
+ (TXPBActivity*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActivity*)[[[TXPBActivity builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBActivity*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBActivity*)[[[TXPBActivity builder] mergeFromInputStream:input] build];
}
+ (TXPBActivity*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActivity*)[[[TXPBActivity builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBActivity*)[[[TXPBActivity builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBActivity*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBActivity*)[[[TXPBActivity builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBActivityBuilder*) builder {
  return [[TXPBActivityBuilder alloc] init];
}
+ (TXPBActivityBuilder*) builderWithPrototype:(TXPBActivity*) prototype {
  return [[TXPBActivity builder] mergeFrom:prototype];
}
- (TXPBActivityBuilder*) builder {
  return [TXPBActivity builder];
}
- (TXPBActivityBuilder*) toBuilder {
  return [TXPBActivity builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  [self.picUrlArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"picUrl", obj];
  }];
  if (self.hasAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatarUrl", self.avatarUrl];
  }
  if (self.hasNickname) {
    [output appendFormat:@"%@%@: %@\n", indent, @"nickname", self.nickname];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  [dictionary setObject:self.picUrl forKey: @"picUrl"];
  if (self.hasAvatarUrl) {
    [dictionary setObject: self.avatarUrl forKey: @"avatarUrl"];
  }
  if (self.hasNickname) {
    [dictionary setObject: self.nickname forKey: @"nickname"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBActivity class]]) {
    return NO;
  }
  TXPBActivity *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      [self.picUrlArray isEqualToArray:otherMessage.picUrlArray] &&
      self.hasAvatarUrl == otherMessage.hasAvatarUrl &&
      (!self.hasAvatarUrl || [self.avatarUrl isEqual:otherMessage.avatarUrl]) &&
      self.hasNickname == otherMessage.hasNickname &&
      (!self.hasNickname || [self.nickname isEqual:otherMessage.nickname]) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  [self.picUrlArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAvatarUrl) {
    hashCode = hashCode * 31 + [self.avatarUrl hash];
  }
  if (self.hasNickname) {
    hashCode = hashCode * 31 + [self.nickname hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBActivityBuilder()
@property (strong) TXPBActivity* resultActivity;
@end

@implementation TXPBActivityBuilder
@synthesize resultActivity;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultActivity = [[TXPBActivity alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultActivity;
}
- (TXPBActivityBuilder*) clear {
  self.resultActivity = [[TXPBActivity alloc] init];
  return self;
}
- (TXPBActivityBuilder*) clone {
  return [TXPBActivity builderWithPrototype:resultActivity];
}
- (TXPBActivity*) defaultInstance {
  return [TXPBActivity defaultInstance];
}
- (TXPBActivity*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBActivity*) buildPartial {
  TXPBActivity* returnMe = resultActivity;
  self.resultActivity = nil;
  return returnMe;
}
- (TXPBActivityBuilder*) mergeFrom:(TXPBActivity*) other {
  if (other == [TXPBActivity defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.picUrlArray.count > 0) {
    if (resultActivity.picUrlArray == nil) {
      resultActivity.picUrlArray = [[NSMutableArray alloc] initWithArray:other.picUrlArray];
    } else {
      [resultActivity.picUrlArray addObjectsFromArray:other.picUrlArray];
    }
  }
  if (other.hasAvatarUrl) {
    [self setAvatarUrl:other.avatarUrl];
  }
  if (other.hasNickname) {
    [self setNickname:other.nickname];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBActivityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBActivityBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self addPicUrl:[input readString]];
        break;
      }
      case 34: {
        [self setAvatarUrl:[input readString]];
        break;
      }
      case 42: {
        [self setNickname:[input readString]];
        break;
      }
      case 48: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 58: {
        [self setUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultActivity.hasId;
}
- (SInt64) id {
  return resultActivity.id;
}
- (TXPBActivityBuilder*) setId:(SInt64) value {
  resultActivity.hasId = YES;
  resultActivity.id = value;
  return self;
}
- (TXPBActivityBuilder*) clearId {
  resultActivity.hasId = NO;
  resultActivity.id = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultActivity.hasTitle;
}
- (NSString*) title {
  return resultActivity.title;
}
- (TXPBActivityBuilder*) setTitle:(NSString*) value {
  resultActivity.hasTitle = YES;
  resultActivity.title = value;
  return self;
}
- (TXPBActivityBuilder*) clearTitle {
  resultActivity.hasTitle = NO;
  resultActivity.title = @"";
  return self;
}
- (NSMutableArray *)picUrl {
  return resultActivity.picUrlArray;
}
- (NSString*)picUrlAtIndex:(NSUInteger)index {
  return [resultActivity picUrlAtIndex:index];
}
- (TXPBActivityBuilder *)addPicUrl:(NSString*)value {
  if (resultActivity.picUrlArray == nil) {
    resultActivity.picUrlArray = [[NSMutableArray alloc]init];
  }
  [resultActivity.picUrlArray addObject:value];
  return self;
}
- (TXPBActivityBuilder *)setPicUrlArray:(NSArray *)array {
  resultActivity.picUrlArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (TXPBActivityBuilder *)clearPicUrl {
  resultActivity.picUrlArray = nil;
  return self;
}
- (BOOL) hasAvatarUrl {
  return resultActivity.hasAvatarUrl;
}
- (NSString*) avatarUrl {
  return resultActivity.avatarUrl;
}
- (TXPBActivityBuilder*) setAvatarUrl:(NSString*) value {
  resultActivity.hasAvatarUrl = YES;
  resultActivity.avatarUrl = value;
  return self;
}
- (TXPBActivityBuilder*) clearAvatarUrl {
  resultActivity.hasAvatarUrl = NO;
  resultActivity.avatarUrl = @"";
  return self;
}
- (BOOL) hasNickname {
  return resultActivity.hasNickname;
}
- (NSString*) nickname {
  return resultActivity.nickname;
}
- (TXPBActivityBuilder*) setNickname:(NSString*) value {
  resultActivity.hasNickname = YES;
  resultActivity.nickname = value;
  return self;
}
- (TXPBActivityBuilder*) clearNickname {
  resultActivity.hasNickname = NO;
  resultActivity.nickname = @"";
  return self;
}
- (BOOL) hasCreateOn {
  return resultActivity.hasCreateOn;
}
- (SInt64) createOn {
  return resultActivity.createOn;
}
- (TXPBActivityBuilder*) setCreateOn:(SInt64) value {
  resultActivity.hasCreateOn = YES;
  resultActivity.createOn = value;
  return self;
}
- (TXPBActivityBuilder*) clearCreateOn {
  resultActivity.hasCreateOn = NO;
  resultActivity.createOn = 0L;
  return self;
}
- (BOOL) hasUrl {
  return resultActivity.hasUrl;
}
- (NSString*) url {
  return resultActivity.url;
}
- (TXPBActivityBuilder*) setUrl:(NSString*) value {
  resultActivity.hasUrl = YES;
  resultActivity.url = value;
  return self;
}
- (TXPBActivityBuilder*) clearUrl {
  resultActivity.hasUrl = NO;
  resultActivity.url = @"";
  return self;
}
@end

@interface TXPBFetchFeedRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@property BOOL isInbox;
@property SInt64 departmentId;
@end

@implementation TXPBFetchFeedRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasIsInbox {
  return !!hasIsInbox_;
}
- (void) setHasIsInbox:(BOOL) _value_ {
  hasIsInbox_ = !!_value_;
}
- (BOOL) isInbox {
  return !!isInbox_;
}
- (void) setIsInbox:(BOOL) _value_ {
  isInbox_ = !!_value_;
}
- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
    self.isInbox = NO;
    self.departmentId = 0L;
  }
  return self;
}
static TXPBFetchFeedRequest* defaultTXPBFetchFeedRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchFeedRequest class]) {
    defaultTXPBFetchFeedRequestInstance = [[TXPBFetchFeedRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchFeedRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchFeedRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIsInbox) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasIsInbox) {
    [output writeBool:3 value:self.isInbox];
  }
  if (self.hasDepartmentId) {
    [output writeInt64:4 value:self.departmentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasIsInbox) {
    size_ += computeBoolSize(3, self.isInbox);
  }
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(4, self.departmentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchFeedRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchFeedRequest*)[[[TXPBFetchFeedRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchFeedRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedRequest*)[[[TXPBFetchFeedRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchFeedRequest*)[[[TXPBFetchFeedRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchFeedRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedRequest*)[[[TXPBFetchFeedRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchFeedRequest*)[[[TXPBFetchFeedRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedRequest*)[[[TXPBFetchFeedRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedRequestBuilder*) builder {
  return [[TXPBFetchFeedRequestBuilder alloc] init];
}
+ (TXPBFetchFeedRequestBuilder*) builderWithPrototype:(TXPBFetchFeedRequest*) prototype {
  return [[TXPBFetchFeedRequest builder] mergeFrom:prototype];
}
- (TXPBFetchFeedRequestBuilder*) builder {
  return [TXPBFetchFeedRequest builder];
}
- (TXPBFetchFeedRequestBuilder*) toBuilder {
  return [TXPBFetchFeedRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasIsInbox) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isInbox", [NSNumber numberWithBool:self.isInbox]];
  }
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasIsInbox) {
    [dictionary setObject: [NSNumber numberWithBool:self.isInbox] forKey: @"isInbox"];
  }
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchFeedRequest class]]) {
    return NO;
  }
  TXPBFetchFeedRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasIsInbox == otherMessage.hasIsInbox &&
      (!self.hasIsInbox || self.isInbox == otherMessage.isInbox) &&
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasIsInbox) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isInbox] hash];
  }
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchFeedRequestBuilder()
@property (strong) TXPBFetchFeedRequest* resultFetchFeedRequest;
@end

@implementation TXPBFetchFeedRequestBuilder
@synthesize resultFetchFeedRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchFeedRequest = [[TXPBFetchFeedRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchFeedRequest;
}
- (TXPBFetchFeedRequestBuilder*) clear {
  self.resultFetchFeedRequest = [[TXPBFetchFeedRequest alloc] init];
  return self;
}
- (TXPBFetchFeedRequestBuilder*) clone {
  return [TXPBFetchFeedRequest builderWithPrototype:resultFetchFeedRequest];
}
- (TXPBFetchFeedRequest*) defaultInstance {
  return [TXPBFetchFeedRequest defaultInstance];
}
- (TXPBFetchFeedRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchFeedRequest*) buildPartial {
  TXPBFetchFeedRequest* returnMe = resultFetchFeedRequest;
  self.resultFetchFeedRequest = nil;
  return returnMe;
}
- (TXPBFetchFeedRequestBuilder*) mergeFrom:(TXPBFetchFeedRequest*) other {
  if (other == [TXPBFetchFeedRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasIsInbox) {
    [self setIsInbox:other.isInbox];
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setIsInbox:[input readBool]];
        break;
      }
      case 32: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchFeedRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchFeedRequest.maxId;
}
- (TXPBFetchFeedRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchFeedRequest.hasMaxId = YES;
  resultFetchFeedRequest.maxId = value;
  return self;
}
- (TXPBFetchFeedRequestBuilder*) clearMaxId {
  resultFetchFeedRequest.hasMaxId = NO;
  resultFetchFeedRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchFeedRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchFeedRequest.sinceId;
}
- (TXPBFetchFeedRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchFeedRequest.hasSinceId = YES;
  resultFetchFeedRequest.sinceId = value;
  return self;
}
- (TXPBFetchFeedRequestBuilder*) clearSinceId {
  resultFetchFeedRequest.hasSinceId = NO;
  resultFetchFeedRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasIsInbox {
  return resultFetchFeedRequest.hasIsInbox;
}
- (BOOL) isInbox {
  return resultFetchFeedRequest.isInbox;
}
- (TXPBFetchFeedRequestBuilder*) setIsInbox:(BOOL) value {
  resultFetchFeedRequest.hasIsInbox = YES;
  resultFetchFeedRequest.isInbox = value;
  return self;
}
- (TXPBFetchFeedRequestBuilder*) clearIsInbox {
  resultFetchFeedRequest.hasIsInbox = NO;
  resultFetchFeedRequest.isInbox = NO;
  return self;
}
- (BOOL) hasDepartmentId {
  return resultFetchFeedRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultFetchFeedRequest.departmentId;
}
- (TXPBFetchFeedRequestBuilder*) setDepartmentId:(SInt64) value {
  resultFetchFeedRequest.hasDepartmentId = YES;
  resultFetchFeedRequest.departmentId = value;
  return self;
}
- (TXPBFetchFeedRequestBuilder*) clearDepartmentId {
  resultFetchFeedRequest.hasDepartmentId = NO;
  resultFetchFeedRequest.departmentId = 0L;
  return self;
}
@end

@interface TXPBFetchFeedResponse ()
@property (strong) NSMutableArray * feedsArray;
@property BOOL hasMore;
@property SInt64 lastFetchTime;
@property (strong) TXPBActivity* activity;
@end

@implementation TXPBFetchFeedResponse

@synthesize feedsArray;
@dynamic feeds;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (BOOL) hasLastFetchTime {
  return !!hasLastFetchTime_;
}
- (void) setHasLastFetchTime:(BOOL) _value_ {
  hasLastFetchTime_ = !!_value_;
}
@synthesize lastFetchTime;
- (BOOL) hasActivity {
  return !!hasActivity_;
}
- (void) setHasActivity:(BOOL) _value_ {
  hasActivity_ = !!_value_;
}
@synthesize activity;
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
    self.lastFetchTime = 0L;
    self.activity = [TXPBActivity defaultInstance];
  }
  return self;
}
static TXPBFetchFeedResponse* defaultTXPBFetchFeedResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchFeedResponse class]) {
    defaultTXPBFetchFeedResponseInstance = [[TXPBFetchFeedResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchFeedResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchFeedResponseInstance;
}
- (NSArray *)feeds {
  return feedsArray;
}
- (TXPBFeed*)feedsAtIndex:(NSUInteger)index {
  return [feedsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  if (!self.hasLastFetchTime) {
    return NO;
  }
  __block BOOL isInitfeeds = YES;
   [self.feeds enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitfeeds = NO;
      *stop = YES;
    }
  }];
  if (!isInitfeeds) return isInitfeeds;
  if (self.hasActivity) {
    if (!self.activity.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  if (self.hasLastFetchTime) {
    [output writeInt64:3 value:self.lastFetchTime];
  }
  if (self.hasActivity) {
    [output writeMessage:4 value:self.activity];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  if (self.hasLastFetchTime) {
    size_ += computeInt64Size(3, self.lastFetchTime);
  }
  if (self.hasActivity) {
    size_ += computeMessageSize(4, self.activity);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchFeedResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchFeedResponse*)[[[TXPBFetchFeedResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchFeedResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedResponse*)[[[TXPBFetchFeedResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchFeedResponse*)[[[TXPBFetchFeedResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchFeedResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedResponse*)[[[TXPBFetchFeedResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchFeedResponse*)[[[TXPBFetchFeedResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchFeedResponse*)[[[TXPBFetchFeedResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchFeedResponseBuilder*) builder {
  return [[TXPBFetchFeedResponseBuilder alloc] init];
}
+ (TXPBFetchFeedResponseBuilder*) builderWithPrototype:(TXPBFetchFeedResponse*) prototype {
  return [[TXPBFetchFeedResponse builder] mergeFrom:prototype];
}
- (TXPBFetchFeedResponseBuilder*) builder {
  return [TXPBFetchFeedResponse builder];
}
- (TXPBFetchFeedResponseBuilder*) toBuilder {
  return [TXPBFetchFeedResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"feeds"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  if (self.hasLastFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastFetchTime", [NSNumber numberWithLongLong:self.lastFetchTime]];
  }
  if (self.hasActivity) {
    [output appendFormat:@"%@%@ {\n", indent, @"activity"];
    [self.activity writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBFeed* element in self.feedsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"feeds"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  if (self.hasLastFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastFetchTime] forKey: @"lastFetchTime"];
  }
  if (self.hasActivity) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.activity storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"activity"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchFeedResponse class]]) {
    return NO;
  }
  TXPBFetchFeedResponse *otherMessage = other;
  return
      [self.feedsArray isEqualToArray:otherMessage.feedsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      self.hasLastFetchTime == otherMessage.hasLastFetchTime &&
      (!self.hasLastFetchTime || self.lastFetchTime == otherMessage.lastFetchTime) &&
      self.hasActivity == otherMessage.hasActivity &&
      (!self.hasActivity || [self.activity isEqual:otherMessage.activity]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  if (self.hasLastFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastFetchTime] hash];
  }
  if (self.hasActivity) {
    hashCode = hashCode * 31 + [self.activity hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchFeedResponseBuilder()
@property (strong) TXPBFetchFeedResponse* resultFetchFeedResponse;
@end

@implementation TXPBFetchFeedResponseBuilder
@synthesize resultFetchFeedResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchFeedResponse = [[TXPBFetchFeedResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchFeedResponse;
}
- (TXPBFetchFeedResponseBuilder*) clear {
  self.resultFetchFeedResponse = [[TXPBFetchFeedResponse alloc] init];
  return self;
}
- (TXPBFetchFeedResponseBuilder*) clone {
  return [TXPBFetchFeedResponse builderWithPrototype:resultFetchFeedResponse];
}
- (TXPBFetchFeedResponse*) defaultInstance {
  return [TXPBFetchFeedResponse defaultInstance];
}
- (TXPBFetchFeedResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchFeedResponse*) buildPartial {
  TXPBFetchFeedResponse* returnMe = resultFetchFeedResponse;
  self.resultFetchFeedResponse = nil;
  return returnMe;
}
- (TXPBFetchFeedResponseBuilder*) mergeFrom:(TXPBFetchFeedResponse*) other {
  if (other == [TXPBFetchFeedResponse defaultInstance]) {
    return self;
  }
  if (other.feedsArray.count > 0) {
    if (resultFetchFeedResponse.feedsArray == nil) {
      resultFetchFeedResponse.feedsArray = [[NSMutableArray alloc] initWithArray:other.feedsArray];
    } else {
      [resultFetchFeedResponse.feedsArray addObjectsFromArray:other.feedsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  if (other.hasLastFetchTime) {
    [self setLastFetchTime:other.lastFetchTime];
  }
  if (other.hasActivity) {
    [self mergeActivity:other.activity];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBFeedBuilder* subBuilder = [TXPBFeed builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFeeds:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 24: {
        [self setLastFetchTime:[input readInt64]];
        break;
      }
      case 34: {
        TXPBActivityBuilder* subBuilder = [TXPBActivity builder];
        if (self.hasActivity) {
          [subBuilder mergeFrom:self.activity];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setActivity:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)feeds {
  return resultFetchFeedResponse.feedsArray;
}
- (TXPBFeed*)feedsAtIndex:(NSUInteger)index {
  return [resultFetchFeedResponse feedsAtIndex:index];
}
- (TXPBFetchFeedResponseBuilder *)addFeeds:(TXPBFeed*)value {
  if (resultFetchFeedResponse.feedsArray == nil) {
    resultFetchFeedResponse.feedsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchFeedResponse.feedsArray addObject:value];
  return self;
}
- (TXPBFetchFeedResponseBuilder *)setFeedsArray:(NSArray *)array {
  resultFetchFeedResponse.feedsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchFeedResponseBuilder *)clearFeeds {
  resultFetchFeedResponse.feedsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchFeedResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchFeedResponse.hasMore;
}
- (TXPBFetchFeedResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchFeedResponse.hasHasMore = YES;
  resultFetchFeedResponse.hasMore = value;
  return self;
}
- (TXPBFetchFeedResponseBuilder*) clearHasMore {
  resultFetchFeedResponse.hasHasMore = NO;
  resultFetchFeedResponse.hasMore = NO;
  return self;
}
- (BOOL) hasLastFetchTime {
  return resultFetchFeedResponse.hasLastFetchTime;
}
- (SInt64) lastFetchTime {
  return resultFetchFeedResponse.lastFetchTime;
}
- (TXPBFetchFeedResponseBuilder*) setLastFetchTime:(SInt64) value {
  resultFetchFeedResponse.hasLastFetchTime = YES;
  resultFetchFeedResponse.lastFetchTime = value;
  return self;
}
- (TXPBFetchFeedResponseBuilder*) clearLastFetchTime {
  resultFetchFeedResponse.hasLastFetchTime = NO;
  resultFetchFeedResponse.lastFetchTime = 0L;
  return self;
}
- (BOOL) hasActivity {
  return resultFetchFeedResponse.hasActivity;
}
- (TXPBActivity*) activity {
  return resultFetchFeedResponse.activity;
}
- (TXPBFetchFeedResponseBuilder*) setActivity:(TXPBActivity*) value {
  resultFetchFeedResponse.hasActivity = YES;
  resultFetchFeedResponse.activity = value;
  return self;
}
- (TXPBFetchFeedResponseBuilder*) setActivityBuilder:(TXPBActivityBuilder*) builderForValue {
  return [self setActivity:[builderForValue build]];
}
- (TXPBFetchFeedResponseBuilder*) mergeActivity:(TXPBActivity*) value {
  if (resultFetchFeedResponse.hasActivity &&
      resultFetchFeedResponse.activity != [TXPBActivity defaultInstance]) {
    resultFetchFeedResponse.activity =
      [[[TXPBActivity builderWithPrototype:resultFetchFeedResponse.activity] mergeFrom:value] buildPartial];
  } else {
    resultFetchFeedResponse.activity = value;
  }
  resultFetchFeedResponse.hasActivity = YES;
  return self;
}
- (TXPBFetchFeedResponseBuilder*) clearActivity {
  resultFetchFeedResponse.hasActivity = NO;
  resultFetchFeedResponse.activity = [TXPBActivity defaultInstance];
  return self;
}
@end

@interface TXPBFetchUserFeedRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@property SInt64 userId;
@end

@implementation TXPBFetchUserFeedRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
    self.userId = 0L;
  }
  return self;
}
static TXPBFetchUserFeedRequest* defaultTXPBFetchUserFeedRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserFeedRequest class]) {
    defaultTXPBFetchUserFeedRequestInstance = [[TXPBFetchUserFeedRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserFeedRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserFeedRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasUserId) {
    [output writeInt64:3 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(3, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserFeedRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchUserFeedRequest*)[[[TXPBFetchUserFeedRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchUserFeedRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserFeedRequest*)[[[TXPBFetchUserFeedRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserFeedRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserFeedRequest*)[[[TXPBFetchUserFeedRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserFeedRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserFeedRequest*)[[[TXPBFetchUserFeedRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserFeedRequest*)[[[TXPBFetchUserFeedRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserFeedRequest*)[[[TXPBFetchUserFeedRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserFeedRequestBuilder*) builder {
  return [[TXPBFetchUserFeedRequestBuilder alloc] init];
}
+ (TXPBFetchUserFeedRequestBuilder*) builderWithPrototype:(TXPBFetchUserFeedRequest*) prototype {
  return [[TXPBFetchUserFeedRequest builder] mergeFrom:prototype];
}
- (TXPBFetchUserFeedRequestBuilder*) builder {
  return [TXPBFetchUserFeedRequest builder];
}
- (TXPBFetchUserFeedRequestBuilder*) toBuilder {
  return [TXPBFetchUserFeedRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserFeedRequest class]]) {
    return NO;
  }
  TXPBFetchUserFeedRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserFeedRequestBuilder()
@property (strong) TXPBFetchUserFeedRequest* resultFetchUserFeedRequest;
@end

@implementation TXPBFetchUserFeedRequestBuilder
@synthesize resultFetchUserFeedRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserFeedRequest = [[TXPBFetchUserFeedRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserFeedRequest;
}
- (TXPBFetchUserFeedRequestBuilder*) clear {
  self.resultFetchUserFeedRequest = [[TXPBFetchUserFeedRequest alloc] init];
  return self;
}
- (TXPBFetchUserFeedRequestBuilder*) clone {
  return [TXPBFetchUserFeedRequest builderWithPrototype:resultFetchUserFeedRequest];
}
- (TXPBFetchUserFeedRequest*) defaultInstance {
  return [TXPBFetchUserFeedRequest defaultInstance];
}
- (TXPBFetchUserFeedRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserFeedRequest*) buildPartial {
  TXPBFetchUserFeedRequest* returnMe = resultFetchUserFeedRequest;
  self.resultFetchUserFeedRequest = nil;
  return returnMe;
}
- (TXPBFetchUserFeedRequestBuilder*) mergeFrom:(TXPBFetchUserFeedRequest*) other {
  if (other == [TXPBFetchUserFeedRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setUserId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchUserFeedRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchUserFeedRequest.maxId;
}
- (TXPBFetchUserFeedRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchUserFeedRequest.hasMaxId = YES;
  resultFetchUserFeedRequest.maxId = value;
  return self;
}
- (TXPBFetchUserFeedRequestBuilder*) clearMaxId {
  resultFetchUserFeedRequest.hasMaxId = NO;
  resultFetchUserFeedRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchUserFeedRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchUserFeedRequest.sinceId;
}
- (TXPBFetchUserFeedRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchUserFeedRequest.hasSinceId = YES;
  resultFetchUserFeedRequest.sinceId = value;
  return self;
}
- (TXPBFetchUserFeedRequestBuilder*) clearSinceId {
  resultFetchUserFeedRequest.hasSinceId = NO;
  resultFetchUserFeedRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasUserId {
  return resultFetchUserFeedRequest.hasUserId;
}
- (SInt64) userId {
  return resultFetchUserFeedRequest.userId;
}
- (TXPBFetchUserFeedRequestBuilder*) setUserId:(SInt64) value {
  resultFetchUserFeedRequest.hasUserId = YES;
  resultFetchUserFeedRequest.userId = value;
  return self;
}
- (TXPBFetchUserFeedRequestBuilder*) clearUserId {
  resultFetchUserFeedRequest.hasUserId = NO;
  resultFetchUserFeedRequest.userId = 0L;
  return self;
}
@end

@interface TXPBFetchUserFeedResponse ()
@property (strong) NSMutableArray * feedsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchUserFeedResponse

@synthesize feedsArray;
@dynamic feeds;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchUserFeedResponse* defaultTXPBFetchUserFeedResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchUserFeedResponse class]) {
    defaultTXPBFetchUserFeedResponseInstance = [[TXPBFetchUserFeedResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchUserFeedResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchUserFeedResponseInstance;
}
- (NSArray *)feeds {
  return feedsArray;
}
- (TXPBFeed*)feedsAtIndex:(NSUInteger)index {
  return [feedsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitfeeds = YES;
   [self.feeds enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitfeeds = NO;
      *stop = YES;
    }
  }];
  if (!isInitfeeds) return isInitfeeds;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchUserFeedResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchUserFeedResponse*)[[[TXPBFetchUserFeedResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchUserFeedResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserFeedResponse*)[[[TXPBFetchUserFeedResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserFeedResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchUserFeedResponse*)[[[TXPBFetchUserFeedResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchUserFeedResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserFeedResponse*)[[[TXPBFetchUserFeedResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchUserFeedResponse*)[[[TXPBFetchUserFeedResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchUserFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchUserFeedResponse*)[[[TXPBFetchUserFeedResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchUserFeedResponseBuilder*) builder {
  return [[TXPBFetchUserFeedResponseBuilder alloc] init];
}
+ (TXPBFetchUserFeedResponseBuilder*) builderWithPrototype:(TXPBFetchUserFeedResponse*) prototype {
  return [[TXPBFetchUserFeedResponse builder] mergeFrom:prototype];
}
- (TXPBFetchUserFeedResponseBuilder*) builder {
  return [TXPBFetchUserFeedResponse builder];
}
- (TXPBFetchUserFeedResponseBuilder*) toBuilder {
  return [TXPBFetchUserFeedResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"feeds"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBFeed* element in self.feedsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"feeds"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchUserFeedResponse class]]) {
    return NO;
  }
  TXPBFetchUserFeedResponse *otherMessage = other;
  return
      [self.feedsArray isEqualToArray:otherMessage.feedsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.feedsArray enumerateObjectsUsingBlock:^(TXPBFeed *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchUserFeedResponseBuilder()
@property (strong) TXPBFetchUserFeedResponse* resultFetchUserFeedResponse;
@end

@implementation TXPBFetchUserFeedResponseBuilder
@synthesize resultFetchUserFeedResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchUserFeedResponse = [[TXPBFetchUserFeedResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchUserFeedResponse;
}
- (TXPBFetchUserFeedResponseBuilder*) clear {
  self.resultFetchUserFeedResponse = [[TXPBFetchUserFeedResponse alloc] init];
  return self;
}
- (TXPBFetchUserFeedResponseBuilder*) clone {
  return [TXPBFetchUserFeedResponse builderWithPrototype:resultFetchUserFeedResponse];
}
- (TXPBFetchUserFeedResponse*) defaultInstance {
  return [TXPBFetchUserFeedResponse defaultInstance];
}
- (TXPBFetchUserFeedResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchUserFeedResponse*) buildPartial {
  TXPBFetchUserFeedResponse* returnMe = resultFetchUserFeedResponse;
  self.resultFetchUserFeedResponse = nil;
  return returnMe;
}
- (TXPBFetchUserFeedResponseBuilder*) mergeFrom:(TXPBFetchUserFeedResponse*) other {
  if (other == [TXPBFetchUserFeedResponse defaultInstance]) {
    return self;
  }
  if (other.feedsArray.count > 0) {
    if (resultFetchUserFeedResponse.feedsArray == nil) {
      resultFetchUserFeedResponse.feedsArray = [[NSMutableArray alloc] initWithArray:other.feedsArray];
    } else {
      [resultFetchUserFeedResponse.feedsArray addObjectsFromArray:other.feedsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchUserFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchUserFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBFeedBuilder* subBuilder = [TXPBFeed builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFeeds:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)feeds {
  return resultFetchUserFeedResponse.feedsArray;
}
- (TXPBFeed*)feedsAtIndex:(NSUInteger)index {
  return [resultFetchUserFeedResponse feedsAtIndex:index];
}
- (TXPBFetchUserFeedResponseBuilder *)addFeeds:(TXPBFeed*)value {
  if (resultFetchUserFeedResponse.feedsArray == nil) {
    resultFetchUserFeedResponse.feedsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchUserFeedResponse.feedsArray addObject:value];
  return self;
}
- (TXPBFetchUserFeedResponseBuilder *)setFeedsArray:(NSArray *)array {
  resultFetchUserFeedResponse.feedsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchUserFeedResponseBuilder *)clearFeeds {
  resultFetchUserFeedResponse.feedsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchUserFeedResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchUserFeedResponse.hasMore;
}
- (TXPBFetchUserFeedResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchUserFeedResponse.hasHasMore = YES;
  resultFetchUserFeedResponse.hasMore = value;
  return self;
}
- (TXPBFetchUserFeedResponseBuilder*) clearHasMore {
  resultFetchUserFeedResponse.hasHasMore = NO;
  resultFetchUserFeedResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBDeleteFeedRequest ()
@property SInt64 feedId;
@end

@implementation TXPBDeleteFeedRequest

- (BOOL) hasFeedId {
  return !!hasFeedId_;
}
- (void) setHasFeedId:(BOOL) _value_ {
  hasFeedId_ = !!_value_;
}
@synthesize feedId;
- (instancetype) init {
  if ((self = [super init])) {
    self.feedId = 0L;
  }
  return self;
}
static TXPBDeleteFeedRequest* defaultTXPBDeleteFeedRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBDeleteFeedRequest class]) {
    defaultTXPBDeleteFeedRequestInstance = [[TXPBDeleteFeedRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDeleteFeedRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDeleteFeedRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFeedId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFeedId) {
    [output writeInt64:1 value:self.feedId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFeedId) {
    size_ += computeInt64Size(1, self.feedId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDeleteFeedRequest*) parseFromData:(NSData*) data {
  return (TXPBDeleteFeedRequest*)[[[TXPBDeleteFeedRequest builder] mergeFromData:data] build];
}
+ (TXPBDeleteFeedRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteFeedRequest*)[[[TXPBDeleteFeedRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteFeedRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDeleteFeedRequest*)[[[TXPBDeleteFeedRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBDeleteFeedRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteFeedRequest*)[[[TXPBDeleteFeedRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDeleteFeedRequest*)[[[TXPBDeleteFeedRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDeleteFeedRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteFeedRequest*)[[[TXPBDeleteFeedRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteFeedRequestBuilder*) builder {
  return [[TXPBDeleteFeedRequestBuilder alloc] init];
}
+ (TXPBDeleteFeedRequestBuilder*) builderWithPrototype:(TXPBDeleteFeedRequest*) prototype {
  return [[TXPBDeleteFeedRequest builder] mergeFrom:prototype];
}
- (TXPBDeleteFeedRequestBuilder*) builder {
  return [TXPBDeleteFeedRequest builder];
}
- (TXPBDeleteFeedRequestBuilder*) toBuilder {
  return [TXPBDeleteFeedRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFeedId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"feedId", [NSNumber numberWithLongLong:self.feedId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFeedId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.feedId] forKey: @"feedId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDeleteFeedRequest class]]) {
    return NO;
  }
  TXPBDeleteFeedRequest *otherMessage = other;
  return
      self.hasFeedId == otherMessage.hasFeedId &&
      (!self.hasFeedId || self.feedId == otherMessage.feedId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFeedId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.feedId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDeleteFeedRequestBuilder()
@property (strong) TXPBDeleteFeedRequest* resultDeleteFeedRequest;
@end

@implementation TXPBDeleteFeedRequestBuilder
@synthesize resultDeleteFeedRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteFeedRequest = [[TXPBDeleteFeedRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteFeedRequest;
}
- (TXPBDeleteFeedRequestBuilder*) clear {
  self.resultDeleteFeedRequest = [[TXPBDeleteFeedRequest alloc] init];
  return self;
}
- (TXPBDeleteFeedRequestBuilder*) clone {
  return [TXPBDeleteFeedRequest builderWithPrototype:resultDeleteFeedRequest];
}
- (TXPBDeleteFeedRequest*) defaultInstance {
  return [TXPBDeleteFeedRequest defaultInstance];
}
- (TXPBDeleteFeedRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDeleteFeedRequest*) buildPartial {
  TXPBDeleteFeedRequest* returnMe = resultDeleteFeedRequest;
  self.resultDeleteFeedRequest = nil;
  return returnMe;
}
- (TXPBDeleteFeedRequestBuilder*) mergeFrom:(TXPBDeleteFeedRequest*) other {
  if (other == [TXPBDeleteFeedRequest defaultInstance]) {
    return self;
  }
  if (other.hasFeedId) {
    [self setFeedId:other.feedId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDeleteFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDeleteFeedRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setFeedId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasFeedId {
  return resultDeleteFeedRequest.hasFeedId;
}
- (SInt64) feedId {
  return resultDeleteFeedRequest.feedId;
}
- (TXPBDeleteFeedRequestBuilder*) setFeedId:(SInt64) value {
  resultDeleteFeedRequest.hasFeedId = YES;
  resultDeleteFeedRequest.feedId = value;
  return self;
}
- (TXPBDeleteFeedRequestBuilder*) clearFeedId {
  resultDeleteFeedRequest.hasFeedId = NO;
  resultDeleteFeedRequest.feedId = 0L;
  return self;
}
@end

@interface TXPBDeleteFeedResponse ()
@end

@implementation TXPBDeleteFeedResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBDeleteFeedResponse* defaultTXPBDeleteFeedResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBDeleteFeedResponse class]) {
    defaultTXPBDeleteFeedResponseInstance = [[TXPBDeleteFeedResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDeleteFeedResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDeleteFeedResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDeleteFeedResponse*) parseFromData:(NSData*) data {
  return (TXPBDeleteFeedResponse*)[[[TXPBDeleteFeedResponse builder] mergeFromData:data] build];
}
+ (TXPBDeleteFeedResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteFeedResponse*)[[[TXPBDeleteFeedResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteFeedResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDeleteFeedResponse*)[[[TXPBDeleteFeedResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBDeleteFeedResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteFeedResponse*)[[[TXPBDeleteFeedResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDeleteFeedResponse*)[[[TXPBDeleteFeedResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDeleteFeedResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteFeedResponse*)[[[TXPBDeleteFeedResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteFeedResponseBuilder*) builder {
  return [[TXPBDeleteFeedResponseBuilder alloc] init];
}
+ (TXPBDeleteFeedResponseBuilder*) builderWithPrototype:(TXPBDeleteFeedResponse*) prototype {
  return [[TXPBDeleteFeedResponse builder] mergeFrom:prototype];
}
- (TXPBDeleteFeedResponseBuilder*) builder {
  return [TXPBDeleteFeedResponse builder];
}
- (TXPBDeleteFeedResponseBuilder*) toBuilder {
  return [TXPBDeleteFeedResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDeleteFeedResponse class]]) {
    return NO;
  }
  TXPBDeleteFeedResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDeleteFeedResponseBuilder()
@property (strong) TXPBDeleteFeedResponse* resultDeleteFeedResponse;
@end

@implementation TXPBDeleteFeedResponseBuilder
@synthesize resultDeleteFeedResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteFeedResponse = [[TXPBDeleteFeedResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteFeedResponse;
}
- (TXPBDeleteFeedResponseBuilder*) clear {
  self.resultDeleteFeedResponse = [[TXPBDeleteFeedResponse alloc] init];
  return self;
}
- (TXPBDeleteFeedResponseBuilder*) clone {
  return [TXPBDeleteFeedResponse builderWithPrototype:resultDeleteFeedResponse];
}
- (TXPBDeleteFeedResponse*) defaultInstance {
  return [TXPBDeleteFeedResponse defaultInstance];
}
- (TXPBDeleteFeedResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDeleteFeedResponse*) buildPartial {
  TXPBDeleteFeedResponse* returnMe = resultDeleteFeedResponse;
  self.resultDeleteFeedResponse = nil;
  return returnMe;
}
- (TXPBDeleteFeedResponseBuilder*) mergeFrom:(TXPBDeleteFeedResponse*) other {
  if (other == [TXPBDeleteFeedResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDeleteFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDeleteFeedResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBUpdateDeviceTokenRequest ()
@property (strong) NSString* deviceToken;
@property TXPBPlatformType platformType;
@property (strong) NSString* osVersion;
@property (strong) NSString* mobileVersion;
@property (strong) NSString* deviceId;
@end

@implementation TXPBUpdateDeviceTokenRequest

- (BOOL) hasDeviceToken {
  return !!hasDeviceToken_;
}
- (void) setHasDeviceToken:(BOOL) _value_ {
  hasDeviceToken_ = !!_value_;
}
@synthesize deviceToken;
- (BOOL) hasPlatformType {
  return !!hasPlatformType_;
}
- (void) setHasPlatformType:(BOOL) _value_ {
  hasPlatformType_ = !!_value_;
}
@synthesize platformType;
- (BOOL) hasOsVersion {
  return !!hasOsVersion_;
}
- (void) setHasOsVersion:(BOOL) _value_ {
  hasOsVersion_ = !!_value_;
}
@synthesize osVersion;
- (BOOL) hasMobileVersion {
  return !!hasMobileVersion_;
}
- (void) setHasMobileVersion:(BOOL) _value_ {
  hasMobileVersion_ = !!_value_;
}
@synthesize mobileVersion;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.deviceToken = @"";
    self.platformType = TXPBPlatformTypeIos;
    self.osVersion = @"";
    self.mobileVersion = @"";
    self.deviceId = @"";
  }
  return self;
}
static TXPBUpdateDeviceTokenRequest* defaultTXPBUpdateDeviceTokenRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateDeviceTokenRequest class]) {
    defaultTXPBUpdateDeviceTokenRequestInstance = [[TXPBUpdateDeviceTokenRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateDeviceTokenRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateDeviceTokenRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDeviceToken) {
    return NO;
  }
  if (!self.hasPlatformType) {
    return NO;
  }
  if (!self.hasOsVersion) {
    return NO;
  }
  if (!self.hasMobileVersion) {
    return NO;
  }
  if (!self.hasDeviceId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDeviceToken) {
    [output writeString:1 value:self.deviceToken];
  }
  if (self.hasPlatformType) {
    [output writeEnum:2 value:self.platformType];
  }
  if (self.hasOsVersion) {
    [output writeString:3 value:self.osVersion];
  }
  if (self.hasMobileVersion) {
    [output writeString:4 value:self.mobileVersion];
  }
  if (self.hasDeviceId) {
    [output writeString:5 value:self.deviceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDeviceToken) {
    size_ += computeStringSize(1, self.deviceToken);
  }
  if (self.hasPlatformType) {
    size_ += computeEnumSize(2, self.platformType);
  }
  if (self.hasOsVersion) {
    size_ += computeStringSize(3, self.osVersion);
  }
  if (self.hasMobileVersion) {
    size_ += computeStringSize(4, self.mobileVersion);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(5, self.deviceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateDeviceTokenRequest*) parseFromData:(NSData*) data {
  return (TXPBUpdateDeviceTokenRequest*)[[[TXPBUpdateDeviceTokenRequest builder] mergeFromData:data] build];
}
+ (TXPBUpdateDeviceTokenRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateDeviceTokenRequest*)[[[TXPBUpdateDeviceTokenRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateDeviceTokenRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateDeviceTokenRequest*)[[[TXPBUpdateDeviceTokenRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateDeviceTokenRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateDeviceTokenRequest*)[[[TXPBUpdateDeviceTokenRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateDeviceTokenRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateDeviceTokenRequest*)[[[TXPBUpdateDeviceTokenRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateDeviceTokenRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateDeviceTokenRequest*)[[[TXPBUpdateDeviceTokenRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateDeviceTokenRequestBuilder*) builder {
  return [[TXPBUpdateDeviceTokenRequestBuilder alloc] init];
}
+ (TXPBUpdateDeviceTokenRequestBuilder*) builderWithPrototype:(TXPBUpdateDeviceTokenRequest*) prototype {
  return [[TXPBUpdateDeviceTokenRequest builder] mergeFrom:prototype];
}
- (TXPBUpdateDeviceTokenRequestBuilder*) builder {
  return [TXPBUpdateDeviceTokenRequest builder];
}
- (TXPBUpdateDeviceTokenRequestBuilder*) toBuilder {
  return [TXPBUpdateDeviceTokenRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDeviceToken) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceToken", self.deviceToken];
  }
  if (self.hasPlatformType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"platformType", NSStringFromTXPBPlatformType(self.platformType)];
  }
  if (self.hasOsVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"osVersion", self.osVersion];
  }
  if (self.hasMobileVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mobileVersion", self.mobileVersion];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDeviceToken) {
    [dictionary setObject: self.deviceToken forKey: @"deviceToken"];
  }
  if (self.hasPlatformType) {
    [dictionary setObject: @(self.platformType) forKey: @"platformType"];
  }
  if (self.hasOsVersion) {
    [dictionary setObject: self.osVersion forKey: @"osVersion"];
  }
  if (self.hasMobileVersion) {
    [dictionary setObject: self.mobileVersion forKey: @"mobileVersion"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateDeviceTokenRequest class]]) {
    return NO;
  }
  TXPBUpdateDeviceTokenRequest *otherMessage = other;
  return
      self.hasDeviceToken == otherMessage.hasDeviceToken &&
      (!self.hasDeviceToken || [self.deviceToken isEqual:otherMessage.deviceToken]) &&
      self.hasPlatformType == otherMessage.hasPlatformType &&
      (!self.hasPlatformType || self.platformType == otherMessage.platformType) &&
      self.hasOsVersion == otherMessage.hasOsVersion &&
      (!self.hasOsVersion || [self.osVersion isEqual:otherMessage.osVersion]) &&
      self.hasMobileVersion == otherMessage.hasMobileVersion &&
      (!self.hasMobileVersion || [self.mobileVersion isEqual:otherMessage.mobileVersion]) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDeviceToken) {
    hashCode = hashCode * 31 + [self.deviceToken hash];
  }
  if (self.hasPlatformType) {
    hashCode = hashCode * 31 + self.platformType;
  }
  if (self.hasOsVersion) {
    hashCode = hashCode * 31 + [self.osVersion hash];
  }
  if (self.hasMobileVersion) {
    hashCode = hashCode * 31 + [self.mobileVersion hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateDeviceTokenRequestBuilder()
@property (strong) TXPBUpdateDeviceTokenRequest* resultUpdateDeviceTokenRequest;
@end

@implementation TXPBUpdateDeviceTokenRequestBuilder
@synthesize resultUpdateDeviceTokenRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateDeviceTokenRequest = [[TXPBUpdateDeviceTokenRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateDeviceTokenRequest;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) clear {
  self.resultUpdateDeviceTokenRequest = [[TXPBUpdateDeviceTokenRequest alloc] init];
  return self;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) clone {
  return [TXPBUpdateDeviceTokenRequest builderWithPrototype:resultUpdateDeviceTokenRequest];
}
- (TXPBUpdateDeviceTokenRequest*) defaultInstance {
  return [TXPBUpdateDeviceTokenRequest defaultInstance];
}
- (TXPBUpdateDeviceTokenRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateDeviceTokenRequest*) buildPartial {
  TXPBUpdateDeviceTokenRequest* returnMe = resultUpdateDeviceTokenRequest;
  self.resultUpdateDeviceTokenRequest = nil;
  return returnMe;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) mergeFrom:(TXPBUpdateDeviceTokenRequest*) other {
  if (other == [TXPBUpdateDeviceTokenRequest defaultInstance]) {
    return self;
  }
  if (other.hasDeviceToken) {
    [self setDeviceToken:other.deviceToken];
  }
  if (other.hasPlatformType) {
    [self setPlatformType:other.platformType];
  }
  if (other.hasOsVersion) {
    [self setOsVersion:other.osVersion];
  }
  if (other.hasMobileVersion) {
    [self setMobileVersion:other.mobileVersion];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateDeviceTokenRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setDeviceToken:[input readString]];
        break;
      }
      case 16: {
        TXPBPlatformType value = (TXPBPlatformType)[input readEnum];
        if (TXPBPlatformTypeIsValidValue(value)) {
          [self setPlatformType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setOsVersion:[input readString]];
        break;
      }
      case 34: {
        [self setMobileVersion:[input readString]];
        break;
      }
      case 42: {
        [self setDeviceId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasDeviceToken {
  return resultUpdateDeviceTokenRequest.hasDeviceToken;
}
- (NSString*) deviceToken {
  return resultUpdateDeviceTokenRequest.deviceToken;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) setDeviceToken:(NSString*) value {
  resultUpdateDeviceTokenRequest.hasDeviceToken = YES;
  resultUpdateDeviceTokenRequest.deviceToken = value;
  return self;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) clearDeviceToken {
  resultUpdateDeviceTokenRequest.hasDeviceToken = NO;
  resultUpdateDeviceTokenRequest.deviceToken = @"";
  return self;
}
- (BOOL) hasPlatformType {
  return resultUpdateDeviceTokenRequest.hasPlatformType;
}
- (TXPBPlatformType) platformType {
  return resultUpdateDeviceTokenRequest.platformType;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) setPlatformType:(TXPBPlatformType) value {
  resultUpdateDeviceTokenRequest.hasPlatformType = YES;
  resultUpdateDeviceTokenRequest.platformType = value;
  return self;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) clearPlatformType {
  resultUpdateDeviceTokenRequest.hasPlatformType = NO;
  resultUpdateDeviceTokenRequest.platformType = TXPBPlatformTypeIos;
  return self;
}
- (BOOL) hasOsVersion {
  return resultUpdateDeviceTokenRequest.hasOsVersion;
}
- (NSString*) osVersion {
  return resultUpdateDeviceTokenRequest.osVersion;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) setOsVersion:(NSString*) value {
  resultUpdateDeviceTokenRequest.hasOsVersion = YES;
  resultUpdateDeviceTokenRequest.osVersion = value;
  return self;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) clearOsVersion {
  resultUpdateDeviceTokenRequest.hasOsVersion = NO;
  resultUpdateDeviceTokenRequest.osVersion = @"";
  return self;
}
- (BOOL) hasMobileVersion {
  return resultUpdateDeviceTokenRequest.hasMobileVersion;
}
- (NSString*) mobileVersion {
  return resultUpdateDeviceTokenRequest.mobileVersion;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) setMobileVersion:(NSString*) value {
  resultUpdateDeviceTokenRequest.hasMobileVersion = YES;
  resultUpdateDeviceTokenRequest.mobileVersion = value;
  return self;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) clearMobileVersion {
  resultUpdateDeviceTokenRequest.hasMobileVersion = NO;
  resultUpdateDeviceTokenRequest.mobileVersion = @"";
  return self;
}
- (BOOL) hasDeviceId {
  return resultUpdateDeviceTokenRequest.hasDeviceId;
}
- (NSString*) deviceId {
  return resultUpdateDeviceTokenRequest.deviceId;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) setDeviceId:(NSString*) value {
  resultUpdateDeviceTokenRequest.hasDeviceId = YES;
  resultUpdateDeviceTokenRequest.deviceId = value;
  return self;
}
- (TXPBUpdateDeviceTokenRequestBuilder*) clearDeviceId {
  resultUpdateDeviceTokenRequest.hasDeviceId = NO;
  resultUpdateDeviceTokenRequest.deviceId = @"";
  return self;
}
@end

@interface TXPBUpdateDeviceTokenResponse ()
@end

@implementation TXPBUpdateDeviceTokenResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBUpdateDeviceTokenResponse* defaultTXPBUpdateDeviceTokenResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateDeviceTokenResponse class]) {
    defaultTXPBUpdateDeviceTokenResponseInstance = [[TXPBUpdateDeviceTokenResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateDeviceTokenResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateDeviceTokenResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateDeviceTokenResponse*) parseFromData:(NSData*) data {
  return (TXPBUpdateDeviceTokenResponse*)[[[TXPBUpdateDeviceTokenResponse builder] mergeFromData:data] build];
}
+ (TXPBUpdateDeviceTokenResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateDeviceTokenResponse*)[[[TXPBUpdateDeviceTokenResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateDeviceTokenResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateDeviceTokenResponse*)[[[TXPBUpdateDeviceTokenResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateDeviceTokenResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateDeviceTokenResponse*)[[[TXPBUpdateDeviceTokenResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateDeviceTokenResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateDeviceTokenResponse*)[[[TXPBUpdateDeviceTokenResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateDeviceTokenResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateDeviceTokenResponse*)[[[TXPBUpdateDeviceTokenResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateDeviceTokenResponseBuilder*) builder {
  return [[TXPBUpdateDeviceTokenResponseBuilder alloc] init];
}
+ (TXPBUpdateDeviceTokenResponseBuilder*) builderWithPrototype:(TXPBUpdateDeviceTokenResponse*) prototype {
  return [[TXPBUpdateDeviceTokenResponse builder] mergeFrom:prototype];
}
- (TXPBUpdateDeviceTokenResponseBuilder*) builder {
  return [TXPBUpdateDeviceTokenResponse builder];
}
- (TXPBUpdateDeviceTokenResponseBuilder*) toBuilder {
  return [TXPBUpdateDeviceTokenResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateDeviceTokenResponse class]]) {
    return NO;
  }
  TXPBUpdateDeviceTokenResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateDeviceTokenResponseBuilder()
@property (strong) TXPBUpdateDeviceTokenResponse* resultUpdateDeviceTokenResponse;
@end

@implementation TXPBUpdateDeviceTokenResponseBuilder
@synthesize resultUpdateDeviceTokenResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateDeviceTokenResponse = [[TXPBUpdateDeviceTokenResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateDeviceTokenResponse;
}
- (TXPBUpdateDeviceTokenResponseBuilder*) clear {
  self.resultUpdateDeviceTokenResponse = [[TXPBUpdateDeviceTokenResponse alloc] init];
  return self;
}
- (TXPBUpdateDeviceTokenResponseBuilder*) clone {
  return [TXPBUpdateDeviceTokenResponse builderWithPrototype:resultUpdateDeviceTokenResponse];
}
- (TXPBUpdateDeviceTokenResponse*) defaultInstance {
  return [TXPBUpdateDeviceTokenResponse defaultInstance];
}
- (TXPBUpdateDeviceTokenResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateDeviceTokenResponse*) buildPartial {
  TXPBUpdateDeviceTokenResponse* returnMe = resultUpdateDeviceTokenResponse;
  self.resultUpdateDeviceTokenResponse = nil;
  return returnMe;
}
- (TXPBUpdateDeviceTokenResponseBuilder*) mergeFrom:(TXPBUpdateDeviceTokenResponse*) other {
  if (other == [TXPBUpdateDeviceTokenResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateDeviceTokenResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateDeviceTokenResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBCounter ()
@property (strong) NSString* item;
@property SInt32 count;
@end

@implementation TXPBCounter

- (BOOL) hasItem {
  return !!hasItem_;
}
- (void) setHasItem:(BOOL) _value_ {
  hasItem_ = !!_value_;
}
@synthesize item;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (instancetype) init {
  if ((self = [super init])) {
    self.item = @"";
    self.count = 0;
  }
  return self;
}
static TXPBCounter* defaultTXPBCounterInstance = nil;
+ (void) initialize {
  if (self == [TXPBCounter class]) {
    defaultTXPBCounterInstance = [[TXPBCounter alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCounterInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCounterInstance;
}
- (BOOL) isInitialized {
  if (!self.hasItem) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasItem) {
    [output writeString:1 value:self.item];
  }
  if (self.hasCount) {
    [output writeInt32:2 value:self.count];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasItem) {
    size_ += computeStringSize(1, self.item);
  }
  if (self.hasCount) {
    size_ += computeInt32Size(2, self.count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCounter*) parseFromData:(NSData*) data {
  return (TXPBCounter*)[[[TXPBCounter builder] mergeFromData:data] build];
}
+ (TXPBCounter*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCounter*)[[[TXPBCounter builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCounter*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCounter*)[[[TXPBCounter builder] mergeFromInputStream:input] build];
}
+ (TXPBCounter*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCounter*)[[[TXPBCounter builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCounter*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCounter*)[[[TXPBCounter builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCounter*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCounter*)[[[TXPBCounter builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCounterBuilder*) builder {
  return [[TXPBCounterBuilder alloc] init];
}
+ (TXPBCounterBuilder*) builderWithPrototype:(TXPBCounter*) prototype {
  return [[TXPBCounter builder] mergeFrom:prototype];
}
- (TXPBCounterBuilder*) builder {
  return [TXPBCounter builder];
}
- (TXPBCounterBuilder*) toBuilder {
  return [TXPBCounter builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasItem) {
    [output appendFormat:@"%@%@: %@\n", indent, @"item", self.item];
  }
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasItem) {
    [dictionary setObject: self.item forKey: @"item"];
  }
  if (self.hasCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.count] forKey: @"count"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCounter class]]) {
    return NO;
  }
  TXPBCounter *otherMessage = other;
  return
      self.hasItem == otherMessage.hasItem &&
      (!self.hasItem || [self.item isEqual:otherMessage.item]) &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasItem) {
    hashCode = hashCode * 31 + [self.item hash];
  }
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCounterBuilder()
@property (strong) TXPBCounter* resultCounter;
@end

@implementation TXPBCounterBuilder
@synthesize resultCounter;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCounter = [[TXPBCounter alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCounter;
}
- (TXPBCounterBuilder*) clear {
  self.resultCounter = [[TXPBCounter alloc] init];
  return self;
}
- (TXPBCounterBuilder*) clone {
  return [TXPBCounter builderWithPrototype:resultCounter];
}
- (TXPBCounter*) defaultInstance {
  return [TXPBCounter defaultInstance];
}
- (TXPBCounter*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCounter*) buildPartial {
  TXPBCounter* returnMe = resultCounter;
  self.resultCounter = nil;
  return returnMe;
}
- (TXPBCounterBuilder*) mergeFrom:(TXPBCounter*) other {
  if (other == [TXPBCounter defaultInstance]) {
    return self;
  }
  if (other.hasItem) {
    [self setItem:other.item];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCounterBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCounterBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setItem:[input readString]];
        break;
      }
      case 16: {
        [self setCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasItem {
  return resultCounter.hasItem;
}
- (NSString*) item {
  return resultCounter.item;
}
- (TXPBCounterBuilder*) setItem:(NSString*) value {
  resultCounter.hasItem = YES;
  resultCounter.item = value;
  return self;
}
- (TXPBCounterBuilder*) clearItem {
  resultCounter.hasItem = NO;
  resultCounter.item = @"";
  return self;
}
- (BOOL) hasCount {
  return resultCounter.hasCount;
}
- (SInt32) count {
  return resultCounter.count;
}
- (TXPBCounterBuilder*) setCount:(SInt32) value {
  resultCounter.hasCount = YES;
  resultCounter.count = value;
  return self;
}
- (TXPBCounterBuilder*) clearCount {
  resultCounter.hasCount = NO;
  resultCounter.count = 0;
  return self;
}
@end

@interface TXPBFetchCounterRequest ()
@end

@implementation TXPBFetchCounterRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchCounterRequest* defaultTXPBFetchCounterRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCounterRequest class]) {
    defaultTXPBFetchCounterRequestInstance = [[TXPBFetchCounterRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCounterRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCounterRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCounterRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCounterRequest*)[[[TXPBFetchCounterRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCounterRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCounterRequest*)[[[TXPBFetchCounterRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCounterRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCounterRequest*)[[[TXPBFetchCounterRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCounterRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCounterRequest*)[[[TXPBFetchCounterRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCounterRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCounterRequest*)[[[TXPBFetchCounterRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCounterRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCounterRequest*)[[[TXPBFetchCounterRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCounterRequestBuilder*) builder {
  return [[TXPBFetchCounterRequestBuilder alloc] init];
}
+ (TXPBFetchCounterRequestBuilder*) builderWithPrototype:(TXPBFetchCounterRequest*) prototype {
  return [[TXPBFetchCounterRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCounterRequestBuilder*) builder {
  return [TXPBFetchCounterRequest builder];
}
- (TXPBFetchCounterRequestBuilder*) toBuilder {
  return [TXPBFetchCounterRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCounterRequest class]]) {
    return NO;
  }
  TXPBFetchCounterRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCounterRequestBuilder()
@property (strong) TXPBFetchCounterRequest* resultFetchCounterRequest;
@end

@implementation TXPBFetchCounterRequestBuilder
@synthesize resultFetchCounterRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCounterRequest = [[TXPBFetchCounterRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCounterRequest;
}
- (TXPBFetchCounterRequestBuilder*) clear {
  self.resultFetchCounterRequest = [[TXPBFetchCounterRequest alloc] init];
  return self;
}
- (TXPBFetchCounterRequestBuilder*) clone {
  return [TXPBFetchCounterRequest builderWithPrototype:resultFetchCounterRequest];
}
- (TXPBFetchCounterRequest*) defaultInstance {
  return [TXPBFetchCounterRequest defaultInstance];
}
- (TXPBFetchCounterRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCounterRequest*) buildPartial {
  TXPBFetchCounterRequest* returnMe = resultFetchCounterRequest;
  self.resultFetchCounterRequest = nil;
  return returnMe;
}
- (TXPBFetchCounterRequestBuilder*) mergeFrom:(TXPBFetchCounterRequest*) other {
  if (other == [TXPBFetchCounterRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCounterRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCounterRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchCounterResponse ()
@property (strong) NSMutableArray * countersArray;
@end

@implementation TXPBFetchCounterResponse

@synthesize countersArray;
@dynamic counters;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchCounterResponse* defaultTXPBFetchCounterResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCounterResponse class]) {
    defaultTXPBFetchCounterResponseInstance = [[TXPBFetchCounterResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCounterResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCounterResponseInstance;
}
- (NSArray *)counters {
  return countersArray;
}
- (TXPBCounter*)countersAtIndex:(NSUInteger)index {
  return [countersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitcounters = YES;
   [self.counters enumerateObjectsUsingBlock:^(TXPBCounter *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcounters = NO;
      *stop = YES;
    }
  }];
  if (!isInitcounters) return isInitcounters;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.countersArray enumerateObjectsUsingBlock:^(TXPBCounter *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.countersArray enumerateObjectsUsingBlock:^(TXPBCounter *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCounterResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCounterResponse*)[[[TXPBFetchCounterResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCounterResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCounterResponse*)[[[TXPBFetchCounterResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCounterResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCounterResponse*)[[[TXPBFetchCounterResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCounterResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCounterResponse*)[[[TXPBFetchCounterResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCounterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCounterResponse*)[[[TXPBFetchCounterResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCounterResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCounterResponse*)[[[TXPBFetchCounterResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCounterResponseBuilder*) builder {
  return [[TXPBFetchCounterResponseBuilder alloc] init];
}
+ (TXPBFetchCounterResponseBuilder*) builderWithPrototype:(TXPBFetchCounterResponse*) prototype {
  return [[TXPBFetchCounterResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCounterResponseBuilder*) builder {
  return [TXPBFetchCounterResponse builder];
}
- (TXPBFetchCounterResponseBuilder*) toBuilder {
  return [TXPBFetchCounterResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.countersArray enumerateObjectsUsingBlock:^(TXPBCounter *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"counters"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCounter* element in self.countersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"counters"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCounterResponse class]]) {
    return NO;
  }
  TXPBFetchCounterResponse *otherMessage = other;
  return
      [self.countersArray isEqualToArray:otherMessage.countersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.countersArray enumerateObjectsUsingBlock:^(TXPBCounter *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCounterResponseBuilder()
@property (strong) TXPBFetchCounterResponse* resultFetchCounterResponse;
@end

@implementation TXPBFetchCounterResponseBuilder
@synthesize resultFetchCounterResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCounterResponse = [[TXPBFetchCounterResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCounterResponse;
}
- (TXPBFetchCounterResponseBuilder*) clear {
  self.resultFetchCounterResponse = [[TXPBFetchCounterResponse alloc] init];
  return self;
}
- (TXPBFetchCounterResponseBuilder*) clone {
  return [TXPBFetchCounterResponse builderWithPrototype:resultFetchCounterResponse];
}
- (TXPBFetchCounterResponse*) defaultInstance {
  return [TXPBFetchCounterResponse defaultInstance];
}
- (TXPBFetchCounterResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCounterResponse*) buildPartial {
  TXPBFetchCounterResponse* returnMe = resultFetchCounterResponse;
  self.resultFetchCounterResponse = nil;
  return returnMe;
}
- (TXPBFetchCounterResponseBuilder*) mergeFrom:(TXPBFetchCounterResponse*) other {
  if (other == [TXPBFetchCounterResponse defaultInstance]) {
    return self;
  }
  if (other.countersArray.count > 0) {
    if (resultFetchCounterResponse.countersArray == nil) {
      resultFetchCounterResponse.countersArray = [[NSMutableArray alloc] initWithArray:other.countersArray];
    } else {
      [resultFetchCounterResponse.countersArray addObjectsFromArray:other.countersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCounterResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCounterResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCounterBuilder* subBuilder = [TXPBCounter builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCounters:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)counters {
  return resultFetchCounterResponse.countersArray;
}
- (TXPBCounter*)countersAtIndex:(NSUInteger)index {
  return [resultFetchCounterResponse countersAtIndex:index];
}
- (TXPBFetchCounterResponseBuilder *)addCounters:(TXPBCounter*)value {
  if (resultFetchCounterResponse.countersArray == nil) {
    resultFetchCounterResponse.countersArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCounterResponse.countersArray addObject:value];
  return self;
}
- (TXPBFetchCounterResponseBuilder *)setCountersArray:(NSArray *)array {
  resultFetchCounterResponse.countersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCounterResponseBuilder *)clearCounters {
  resultFetchCounterResponse.countersArray = nil;
  return self;
}
@end

@interface TXPBComment ()
@property SInt64 id;
@property (strong) NSString* content;
@property TXPBCommentType commentType;
@property SInt64 targetId;
@property SInt64 targetUserId;
@property TXPBTargetType targetType;
@property SInt64 toUserId;
@property (strong) NSString* toUserNickName;
@property SInt64 createOn;
@property SInt64 userId;
@property (strong) NSString* userNickName;
@property (strong) NSString* userAvatarUrl;
@property TXPBUserType userType;
@property (strong) NSString* userTitle;
@end

@implementation TXPBComment

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasCommentType {
  return !!hasCommentType_;
}
- (void) setHasCommentType:(BOOL) _value_ {
  hasCommentType_ = !!_value_;
}
@synthesize commentType;
- (BOOL) hasTargetId {
  return !!hasTargetId_;
}
- (void) setHasTargetId:(BOOL) _value_ {
  hasTargetId_ = !!_value_;
}
@synthesize targetId;
- (BOOL) hasTargetUserId {
  return !!hasTargetUserId_;
}
- (void) setHasTargetUserId:(BOOL) _value_ {
  hasTargetUserId_ = !!_value_;
}
@synthesize targetUserId;
- (BOOL) hasTargetType {
  return !!hasTargetType_;
}
- (void) setHasTargetType:(BOOL) _value_ {
  hasTargetType_ = !!_value_;
}
@synthesize targetType;
- (BOOL) hasToUserId {
  return !!hasToUserId_;
}
- (void) setHasToUserId:(BOOL) _value_ {
  hasToUserId_ = !!_value_;
}
@synthesize toUserId;
- (BOOL) hasToUserNickName {
  return !!hasToUserNickName_;
}
- (void) setHasToUserNickName:(BOOL) _value_ {
  hasToUserNickName_ = !!_value_;
}
@synthesize toUserNickName;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasUserNickName {
  return !!hasUserNickName_;
}
- (void) setHasUserNickName:(BOOL) _value_ {
  hasUserNickName_ = !!_value_;
}
@synthesize userNickName;
- (BOOL) hasUserAvatarUrl {
  return !!hasUserAvatarUrl_;
}
- (void) setHasUserAvatarUrl:(BOOL) _value_ {
  hasUserAvatarUrl_ = !!_value_;
}
@synthesize userAvatarUrl;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) _value_ {
  hasUserType_ = !!_value_;
}
@synthesize userType;
- (BOOL) hasUserTitle {
  return !!hasUserTitle_;
}
- (void) setHasUserTitle:(BOOL) _value_ {
  hasUserTitle_ = !!_value_;
}
@synthesize userTitle;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.content = @"";
    self.commentType = TXPBCommentTypeLike;
    self.targetId = 0L;
    self.targetUserId = 0L;
    self.targetType = TXPBTargetTypeFeed;
    self.toUserId = 0L;
    self.toUserNickName = @"";
    self.createOn = 0L;
    self.userId = 0L;
    self.userNickName = @"";
    self.userAvatarUrl = @"";
    self.userType = TXPBUserTypeChild;
    self.userTitle = @"";
  }
  return self;
}
static TXPBComment* defaultTXPBCommentInstance = nil;
+ (void) initialize {
  if (self == [TXPBComment class]) {
    defaultTXPBCommentInstance = [[TXPBComment alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCommentInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCommentInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasCommentType) {
    return NO;
  }
  if (!self.hasTargetId) {
    return NO;
  }
  if (!self.hasTargetUserId) {
    return NO;
  }
  if (!self.hasTargetType) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasCommentType) {
    [output writeEnum:3 value:self.commentType];
  }
  if (self.hasTargetId) {
    [output writeInt64:4 value:self.targetId];
  }
  if (self.hasTargetUserId) {
    [output writeInt64:5 value:self.targetUserId];
  }
  if (self.hasTargetType) {
    [output writeEnum:6 value:self.targetType];
  }
  if (self.hasToUserId) {
    [output writeInt64:7 value:self.toUserId];
  }
  if (self.hasToUserNickName) {
    [output writeString:8 value:self.toUserNickName];
  }
  if (self.hasCreateOn) {
    [output writeInt64:9 value:self.createOn];
  }
  if (self.hasUserId) {
    [output writeInt64:10 value:self.userId];
  }
  if (self.hasUserNickName) {
    [output writeString:11 value:self.userNickName];
  }
  if (self.hasUserAvatarUrl) {
    [output writeString:12 value:self.userAvatarUrl];
  }
  if (self.hasUserType) {
    [output writeEnum:13 value:self.userType];
  }
  if (self.hasUserTitle) {
    [output writeString:14 value:self.userTitle];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  if (self.hasCommentType) {
    size_ += computeEnumSize(3, self.commentType);
  }
  if (self.hasTargetId) {
    size_ += computeInt64Size(4, self.targetId);
  }
  if (self.hasTargetUserId) {
    size_ += computeInt64Size(5, self.targetUserId);
  }
  if (self.hasTargetType) {
    size_ += computeEnumSize(6, self.targetType);
  }
  if (self.hasToUserId) {
    size_ += computeInt64Size(7, self.toUserId);
  }
  if (self.hasToUserNickName) {
    size_ += computeStringSize(8, self.toUserNickName);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(9, self.createOn);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(10, self.userId);
  }
  if (self.hasUserNickName) {
    size_ += computeStringSize(11, self.userNickName);
  }
  if (self.hasUserAvatarUrl) {
    size_ += computeStringSize(12, self.userAvatarUrl);
  }
  if (self.hasUserType) {
    size_ += computeEnumSize(13, self.userType);
  }
  if (self.hasUserTitle) {
    size_ += computeStringSize(14, self.userTitle);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBComment*) parseFromData:(NSData*) data {
  return (TXPBComment*)[[[TXPBComment builder] mergeFromData:data] build];
}
+ (TXPBComment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBComment*)[[[TXPBComment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBComment*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBComment*)[[[TXPBComment builder] mergeFromInputStream:input] build];
}
+ (TXPBComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBComment*)[[[TXPBComment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBComment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBComment*)[[[TXPBComment builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBComment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBComment*)[[[TXPBComment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCommentBuilder*) builder {
  return [[TXPBCommentBuilder alloc] init];
}
+ (TXPBCommentBuilder*) builderWithPrototype:(TXPBComment*) prototype {
  return [[TXPBComment builder] mergeFrom:prototype];
}
- (TXPBCommentBuilder*) builder {
  return [TXPBComment builder];
}
- (TXPBCommentBuilder*) toBuilder {
  return [TXPBComment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCommentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentType", NSStringFromTXPBCommentType(self.commentType)];
  }
  if (self.hasTargetId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetId", [NSNumber numberWithLongLong:self.targetId]];
  }
  if (self.hasTargetUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetUserId", [NSNumber numberWithLongLong:self.targetUserId]];
  }
  if (self.hasTargetType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetType", NSStringFromTXPBTargetType(self.targetType)];
  }
  if (self.hasToUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUserId", [NSNumber numberWithLongLong:self.toUserId]];
  }
  if (self.hasToUserNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUserNickName", self.toUserNickName];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasUserNickName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userNickName", self.userNickName];
  }
  if (self.hasUserAvatarUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userAvatarUrl", self.userAvatarUrl];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userType", NSStringFromTXPBUserType(self.userType)];
  }
  if (self.hasUserTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userTitle", self.userTitle];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasCommentType) {
    [dictionary setObject: @(self.commentType) forKey: @"commentType"];
  }
  if (self.hasTargetId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.targetId] forKey: @"targetId"];
  }
  if (self.hasTargetUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.targetUserId] forKey: @"targetUserId"];
  }
  if (self.hasTargetType) {
    [dictionary setObject: @(self.targetType) forKey: @"targetType"];
  }
  if (self.hasToUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.toUserId] forKey: @"toUserId"];
  }
  if (self.hasToUserNickName) {
    [dictionary setObject: self.toUserNickName forKey: @"toUserNickName"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasUserNickName) {
    [dictionary setObject: self.userNickName forKey: @"userNickName"];
  }
  if (self.hasUserAvatarUrl) {
    [dictionary setObject: self.userAvatarUrl forKey: @"userAvatarUrl"];
  }
  if (self.hasUserType) {
    [dictionary setObject: @(self.userType) forKey: @"userType"];
  }
  if (self.hasUserTitle) {
    [dictionary setObject: self.userTitle forKey: @"userTitle"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBComment class]]) {
    return NO;
  }
  TXPBComment *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCommentType == otherMessage.hasCommentType &&
      (!self.hasCommentType || self.commentType == otherMessage.commentType) &&
      self.hasTargetId == otherMessage.hasTargetId &&
      (!self.hasTargetId || self.targetId == otherMessage.targetId) &&
      self.hasTargetUserId == otherMessage.hasTargetUserId &&
      (!self.hasTargetUserId || self.targetUserId == otherMessage.targetUserId) &&
      self.hasTargetType == otherMessage.hasTargetType &&
      (!self.hasTargetType || self.targetType == otherMessage.targetType) &&
      self.hasToUserId == otherMessage.hasToUserId &&
      (!self.hasToUserId || self.toUserId == otherMessage.toUserId) &&
      self.hasToUserNickName == otherMessage.hasToUserNickName &&
      (!self.hasToUserNickName || [self.toUserNickName isEqual:otherMessage.toUserNickName]) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserNickName == otherMessage.hasUserNickName &&
      (!self.hasUserNickName || [self.userNickName isEqual:otherMessage.userNickName]) &&
      self.hasUserAvatarUrl == otherMessage.hasUserAvatarUrl &&
      (!self.hasUserAvatarUrl || [self.userAvatarUrl isEqual:otherMessage.userAvatarUrl]) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      self.hasUserTitle == otherMessage.hasUserTitle &&
      (!self.hasUserTitle || [self.userTitle isEqual:otherMessage.userTitle]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCommentType) {
    hashCode = hashCode * 31 + self.commentType;
  }
  if (self.hasTargetId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.targetId] hash];
  }
  if (self.hasTargetUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.targetUserId] hash];
  }
  if (self.hasTargetType) {
    hashCode = hashCode * 31 + self.targetType;
  }
  if (self.hasToUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toUserId] hash];
  }
  if (self.hasToUserNickName) {
    hashCode = hashCode * 31 + [self.toUserNickName hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasUserNickName) {
    hashCode = hashCode * 31 + [self.userNickName hash];
  }
  if (self.hasUserAvatarUrl) {
    hashCode = hashCode * 31 + [self.userAvatarUrl hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + self.userType;
  }
  if (self.hasUserTitle) {
    hashCode = hashCode * 31 + [self.userTitle hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCommentBuilder()
@property (strong) TXPBComment* resultComment;
@end

@implementation TXPBCommentBuilder
@synthesize resultComment;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultComment = [[TXPBComment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultComment;
}
- (TXPBCommentBuilder*) clear {
  self.resultComment = [[TXPBComment alloc] init];
  return self;
}
- (TXPBCommentBuilder*) clone {
  return [TXPBComment builderWithPrototype:resultComment];
}
- (TXPBComment*) defaultInstance {
  return [TXPBComment defaultInstance];
}
- (TXPBComment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBComment*) buildPartial {
  TXPBComment* returnMe = resultComment;
  self.resultComment = nil;
  return returnMe;
}
- (TXPBCommentBuilder*) mergeFrom:(TXPBComment*) other {
  if (other == [TXPBComment defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCommentType) {
    [self setCommentType:other.commentType];
  }
  if (other.hasTargetId) {
    [self setTargetId:other.targetId];
  }
  if (other.hasTargetUserId) {
    [self setTargetUserId:other.targetUserId];
  }
  if (other.hasTargetType) {
    [self setTargetType:other.targetType];
  }
  if (other.hasToUserId) {
    [self setToUserId:other.toUserId];
  }
  if (other.hasToUserNickName) {
    [self setToUserNickName:other.toUserNickName];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserNickName) {
    [self setUserNickName:other.userNickName];
  }
  if (other.hasUserAvatarUrl) {
    [self setUserAvatarUrl:other.userAvatarUrl];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasUserTitle) {
    [self setUserTitle:other.userTitle];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 24: {
        TXPBCommentType value = (TXPBCommentType)[input readEnum];
        if (TXPBCommentTypeIsValidValue(value)) {
          [self setCommentType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setTargetId:[input readInt64]];
        break;
      }
      case 40: {
        [self setTargetUserId:[input readInt64]];
        break;
      }
      case 48: {
        TXPBTargetType value = (TXPBTargetType)[input readEnum];
        if (TXPBTargetTypeIsValidValue(value)) {
          [self setTargetType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setToUserId:[input readInt64]];
        break;
      }
      case 66: {
        [self setToUserNickName:[input readString]];
        break;
      }
      case 72: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 80: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 90: {
        [self setUserNickName:[input readString]];
        break;
      }
      case 98: {
        [self setUserAvatarUrl:[input readString]];
        break;
      }
      case 104: {
        TXPBUserType value = (TXPBUserType)[input readEnum];
        if (TXPBUserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:13 value:value];
        }
        break;
      }
      case 114: {
        [self setUserTitle:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultComment.hasId;
}
- (SInt64) id {
  return resultComment.id;
}
- (TXPBCommentBuilder*) setId:(SInt64) value {
  resultComment.hasId = YES;
  resultComment.id = value;
  return self;
}
- (TXPBCommentBuilder*) clearId {
  resultComment.hasId = NO;
  resultComment.id = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultComment.hasContent;
}
- (NSString*) content {
  return resultComment.content;
}
- (TXPBCommentBuilder*) setContent:(NSString*) value {
  resultComment.hasContent = YES;
  resultComment.content = value;
  return self;
}
- (TXPBCommentBuilder*) clearContent {
  resultComment.hasContent = NO;
  resultComment.content = @"";
  return self;
}
- (BOOL) hasCommentType {
  return resultComment.hasCommentType;
}
- (TXPBCommentType) commentType {
  return resultComment.commentType;
}
- (TXPBCommentBuilder*) setCommentType:(TXPBCommentType) value {
  resultComment.hasCommentType = YES;
  resultComment.commentType = value;
  return self;
}
- (TXPBCommentBuilder*) clearCommentType {
  resultComment.hasCommentType = NO;
  resultComment.commentType = TXPBCommentTypeLike;
  return self;
}
- (BOOL) hasTargetId {
  return resultComment.hasTargetId;
}
- (SInt64) targetId {
  return resultComment.targetId;
}
- (TXPBCommentBuilder*) setTargetId:(SInt64) value {
  resultComment.hasTargetId = YES;
  resultComment.targetId = value;
  return self;
}
- (TXPBCommentBuilder*) clearTargetId {
  resultComment.hasTargetId = NO;
  resultComment.targetId = 0L;
  return self;
}
- (BOOL) hasTargetUserId {
  return resultComment.hasTargetUserId;
}
- (SInt64) targetUserId {
  return resultComment.targetUserId;
}
- (TXPBCommentBuilder*) setTargetUserId:(SInt64) value {
  resultComment.hasTargetUserId = YES;
  resultComment.targetUserId = value;
  return self;
}
- (TXPBCommentBuilder*) clearTargetUserId {
  resultComment.hasTargetUserId = NO;
  resultComment.targetUserId = 0L;
  return self;
}
- (BOOL) hasTargetType {
  return resultComment.hasTargetType;
}
- (TXPBTargetType) targetType {
  return resultComment.targetType;
}
- (TXPBCommentBuilder*) setTargetType:(TXPBTargetType) value {
  resultComment.hasTargetType = YES;
  resultComment.targetType = value;
  return self;
}
- (TXPBCommentBuilder*) clearTargetType {
  resultComment.hasTargetType = NO;
  resultComment.targetType = TXPBTargetTypeFeed;
  return self;
}
- (BOOL) hasToUserId {
  return resultComment.hasToUserId;
}
- (SInt64) toUserId {
  return resultComment.toUserId;
}
- (TXPBCommentBuilder*) setToUserId:(SInt64) value {
  resultComment.hasToUserId = YES;
  resultComment.toUserId = value;
  return self;
}
- (TXPBCommentBuilder*) clearToUserId {
  resultComment.hasToUserId = NO;
  resultComment.toUserId = 0L;
  return self;
}
- (BOOL) hasToUserNickName {
  return resultComment.hasToUserNickName;
}
- (NSString*) toUserNickName {
  return resultComment.toUserNickName;
}
- (TXPBCommentBuilder*) setToUserNickName:(NSString*) value {
  resultComment.hasToUserNickName = YES;
  resultComment.toUserNickName = value;
  return self;
}
- (TXPBCommentBuilder*) clearToUserNickName {
  resultComment.hasToUserNickName = NO;
  resultComment.toUserNickName = @"";
  return self;
}
- (BOOL) hasCreateOn {
  return resultComment.hasCreateOn;
}
- (SInt64) createOn {
  return resultComment.createOn;
}
- (TXPBCommentBuilder*) setCreateOn:(SInt64) value {
  resultComment.hasCreateOn = YES;
  resultComment.createOn = value;
  return self;
}
- (TXPBCommentBuilder*) clearCreateOn {
  resultComment.hasCreateOn = NO;
  resultComment.createOn = 0L;
  return self;
}
- (BOOL) hasUserId {
  return resultComment.hasUserId;
}
- (SInt64) userId {
  return resultComment.userId;
}
- (TXPBCommentBuilder*) setUserId:(SInt64) value {
  resultComment.hasUserId = YES;
  resultComment.userId = value;
  return self;
}
- (TXPBCommentBuilder*) clearUserId {
  resultComment.hasUserId = NO;
  resultComment.userId = 0L;
  return self;
}
- (BOOL) hasUserNickName {
  return resultComment.hasUserNickName;
}
- (NSString*) userNickName {
  return resultComment.userNickName;
}
- (TXPBCommentBuilder*) setUserNickName:(NSString*) value {
  resultComment.hasUserNickName = YES;
  resultComment.userNickName = value;
  return self;
}
- (TXPBCommentBuilder*) clearUserNickName {
  resultComment.hasUserNickName = NO;
  resultComment.userNickName = @"";
  return self;
}
- (BOOL) hasUserAvatarUrl {
  return resultComment.hasUserAvatarUrl;
}
- (NSString*) userAvatarUrl {
  return resultComment.userAvatarUrl;
}
- (TXPBCommentBuilder*) setUserAvatarUrl:(NSString*) value {
  resultComment.hasUserAvatarUrl = YES;
  resultComment.userAvatarUrl = value;
  return self;
}
- (TXPBCommentBuilder*) clearUserAvatarUrl {
  resultComment.hasUserAvatarUrl = NO;
  resultComment.userAvatarUrl = @"";
  return self;
}
- (BOOL) hasUserType {
  return resultComment.hasUserType;
}
- (TXPBUserType) userType {
  return resultComment.userType;
}
- (TXPBCommentBuilder*) setUserType:(TXPBUserType) value {
  resultComment.hasUserType = YES;
  resultComment.userType = value;
  return self;
}
- (TXPBCommentBuilder*) clearUserType {
  resultComment.hasUserType = NO;
  resultComment.userType = TXPBUserTypeChild;
  return self;
}
- (BOOL) hasUserTitle {
  return resultComment.hasUserTitle;
}
- (NSString*) userTitle {
  return resultComment.userTitle;
}
- (TXPBCommentBuilder*) setUserTitle:(NSString*) value {
  resultComment.hasUserTitle = YES;
  resultComment.userTitle = value;
  return self;
}
- (TXPBCommentBuilder*) clearUserTitle {
  resultComment.hasUserTitle = NO;
  resultComment.userTitle = @"";
  return self;
}
@end

@interface TXPBSendCommentRequest ()
@property (strong) NSString* content;
@property TXPBCommentType commentType;
@property SInt64 toUserId;
@property SInt64 targetId;
@property TXPBTargetType targetType;
@end

@implementation TXPBSendCommentRequest

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasCommentType {
  return !!hasCommentType_;
}
- (void) setHasCommentType:(BOOL) _value_ {
  hasCommentType_ = !!_value_;
}
@synthesize commentType;
- (BOOL) hasToUserId {
  return !!hasToUserId_;
}
- (void) setHasToUserId:(BOOL) _value_ {
  hasToUserId_ = !!_value_;
}
@synthesize toUserId;
- (BOOL) hasTargetId {
  return !!hasTargetId_;
}
- (void) setHasTargetId:(BOOL) _value_ {
  hasTargetId_ = !!_value_;
}
@synthesize targetId;
- (BOOL) hasTargetType {
  return !!hasTargetType_;
}
- (void) setHasTargetType:(BOOL) _value_ {
  hasTargetType_ = !!_value_;
}
@synthesize targetType;
- (instancetype) init {
  if ((self = [super init])) {
    self.content = @"";
    self.commentType = TXPBCommentTypeLike;
    self.toUserId = 0L;
    self.targetId = 0L;
    self.targetType = TXPBTargetTypeFeed;
  }
  return self;
}
static TXPBSendCommentRequest* defaultTXPBSendCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendCommentRequest class]) {
    defaultTXPBSendCommentRequestInstance = [[TXPBSendCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendCommentRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasCommentType) {
    return NO;
  }
  if (!self.hasTargetId) {
    return NO;
  }
  if (!self.hasTargetType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeString:1 value:self.content];
  }
  if (self.hasCommentType) {
    [output writeEnum:2 value:self.commentType];
  }
  if (self.hasToUserId) {
    [output writeInt64:3 value:self.toUserId];
  }
  if (self.hasTargetId) {
    [output writeInt64:4 value:self.targetId];
  }
  if (self.hasTargetType) {
    [output writeEnum:5 value:self.targetType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContent) {
    size_ += computeStringSize(1, self.content);
  }
  if (self.hasCommentType) {
    size_ += computeEnumSize(2, self.commentType);
  }
  if (self.hasToUserId) {
    size_ += computeInt64Size(3, self.toUserId);
  }
  if (self.hasTargetId) {
    size_ += computeInt64Size(4, self.targetId);
  }
  if (self.hasTargetType) {
    size_ += computeEnumSize(5, self.targetType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBSendCommentRequest*)[[[TXPBSendCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBSendCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendCommentRequest*)[[[TXPBSendCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendCommentRequest*)[[[TXPBSendCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSendCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendCommentRequest*)[[[TXPBSendCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendCommentRequest*)[[[TXPBSendCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendCommentRequest*)[[[TXPBSendCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendCommentRequestBuilder*) builder {
  return [[TXPBSendCommentRequestBuilder alloc] init];
}
+ (TXPBSendCommentRequestBuilder*) builderWithPrototype:(TXPBSendCommentRequest*) prototype {
  return [[TXPBSendCommentRequest builder] mergeFrom:prototype];
}
- (TXPBSendCommentRequestBuilder*) builder {
  return [TXPBSendCommentRequest builder];
}
- (TXPBSendCommentRequestBuilder*) toBuilder {
  return [TXPBSendCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCommentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentType", NSStringFromTXPBCommentType(self.commentType)];
  }
  if (self.hasToUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUserId", [NSNumber numberWithLongLong:self.toUserId]];
  }
  if (self.hasTargetId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetId", [NSNumber numberWithLongLong:self.targetId]];
  }
  if (self.hasTargetType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetType", NSStringFromTXPBTargetType(self.targetType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasCommentType) {
    [dictionary setObject: @(self.commentType) forKey: @"commentType"];
  }
  if (self.hasToUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.toUserId] forKey: @"toUserId"];
  }
  if (self.hasTargetId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.targetId] forKey: @"targetId"];
  }
  if (self.hasTargetType) {
    [dictionary setObject: @(self.targetType) forKey: @"targetType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendCommentRequest class]]) {
    return NO;
  }
  TXPBSendCommentRequest *otherMessage = other;
  return
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCommentType == otherMessage.hasCommentType &&
      (!self.hasCommentType || self.commentType == otherMessage.commentType) &&
      self.hasToUserId == otherMessage.hasToUserId &&
      (!self.hasToUserId || self.toUserId == otherMessage.toUserId) &&
      self.hasTargetId == otherMessage.hasTargetId &&
      (!self.hasTargetId || self.targetId == otherMessage.targetId) &&
      self.hasTargetType == otherMessage.hasTargetType &&
      (!self.hasTargetType || self.targetType == otherMessage.targetType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCommentType) {
    hashCode = hashCode * 31 + self.commentType;
  }
  if (self.hasToUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toUserId] hash];
  }
  if (self.hasTargetId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.targetId] hash];
  }
  if (self.hasTargetType) {
    hashCode = hashCode * 31 + self.targetType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendCommentRequestBuilder()
@property (strong) TXPBSendCommentRequest* resultSendCommentRequest;
@end

@implementation TXPBSendCommentRequestBuilder
@synthesize resultSendCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendCommentRequest = [[TXPBSendCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendCommentRequest;
}
- (TXPBSendCommentRequestBuilder*) clear {
  self.resultSendCommentRequest = [[TXPBSendCommentRequest alloc] init];
  return self;
}
- (TXPBSendCommentRequestBuilder*) clone {
  return [TXPBSendCommentRequest builderWithPrototype:resultSendCommentRequest];
}
- (TXPBSendCommentRequest*) defaultInstance {
  return [TXPBSendCommentRequest defaultInstance];
}
- (TXPBSendCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendCommentRequest*) buildPartial {
  TXPBSendCommentRequest* returnMe = resultSendCommentRequest;
  self.resultSendCommentRequest = nil;
  return returnMe;
}
- (TXPBSendCommentRequestBuilder*) mergeFrom:(TXPBSendCommentRequest*) other {
  if (other == [TXPBSendCommentRequest defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCommentType) {
    [self setCommentType:other.commentType];
  }
  if (other.hasToUserId) {
    [self setToUserId:other.toUserId];
  }
  if (other.hasTargetId) {
    [self setTargetId:other.targetId];
  }
  if (other.hasTargetType) {
    [self setTargetType:other.targetType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContent:[input readString]];
        break;
      }
      case 16: {
        TXPBCommentType value = (TXPBCommentType)[input readEnum];
        if (TXPBCommentTypeIsValidValue(value)) {
          [self setCommentType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setToUserId:[input readInt64]];
        break;
      }
      case 32: {
        [self setTargetId:[input readInt64]];
        break;
      }
      case 40: {
        TXPBTargetType value = (TXPBTargetType)[input readEnum];
        if (TXPBTargetTypeIsValidValue(value)) {
          [self setTargetType:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return resultSendCommentRequest.hasContent;
}
- (NSString*) content {
  return resultSendCommentRequest.content;
}
- (TXPBSendCommentRequestBuilder*) setContent:(NSString*) value {
  resultSendCommentRequest.hasContent = YES;
  resultSendCommentRequest.content = value;
  return self;
}
- (TXPBSendCommentRequestBuilder*) clearContent {
  resultSendCommentRequest.hasContent = NO;
  resultSendCommentRequest.content = @"";
  return self;
}
- (BOOL) hasCommentType {
  return resultSendCommentRequest.hasCommentType;
}
- (TXPBCommentType) commentType {
  return resultSendCommentRequest.commentType;
}
- (TXPBSendCommentRequestBuilder*) setCommentType:(TXPBCommentType) value {
  resultSendCommentRequest.hasCommentType = YES;
  resultSendCommentRequest.commentType = value;
  return self;
}
- (TXPBSendCommentRequestBuilder*) clearCommentType {
  resultSendCommentRequest.hasCommentType = NO;
  resultSendCommentRequest.commentType = TXPBCommentTypeLike;
  return self;
}
- (BOOL) hasToUserId {
  return resultSendCommentRequest.hasToUserId;
}
- (SInt64) toUserId {
  return resultSendCommentRequest.toUserId;
}
- (TXPBSendCommentRequestBuilder*) setToUserId:(SInt64) value {
  resultSendCommentRequest.hasToUserId = YES;
  resultSendCommentRequest.toUserId = value;
  return self;
}
- (TXPBSendCommentRequestBuilder*) clearToUserId {
  resultSendCommentRequest.hasToUserId = NO;
  resultSendCommentRequest.toUserId = 0L;
  return self;
}
- (BOOL) hasTargetId {
  return resultSendCommentRequest.hasTargetId;
}
- (SInt64) targetId {
  return resultSendCommentRequest.targetId;
}
- (TXPBSendCommentRequestBuilder*) setTargetId:(SInt64) value {
  resultSendCommentRequest.hasTargetId = YES;
  resultSendCommentRequest.targetId = value;
  return self;
}
- (TXPBSendCommentRequestBuilder*) clearTargetId {
  resultSendCommentRequest.hasTargetId = NO;
  resultSendCommentRequest.targetId = 0L;
  return self;
}
- (BOOL) hasTargetType {
  return resultSendCommentRequest.hasTargetType;
}
- (TXPBTargetType) targetType {
  return resultSendCommentRequest.targetType;
}
- (TXPBSendCommentRequestBuilder*) setTargetType:(TXPBTargetType) value {
  resultSendCommentRequest.hasTargetType = YES;
  resultSendCommentRequest.targetType = value;
  return self;
}
- (TXPBSendCommentRequestBuilder*) clearTargetType {
  resultSendCommentRequest.hasTargetType = NO;
  resultSendCommentRequest.targetType = TXPBTargetTypeFeed;
  return self;
}
@end

@interface TXPBSendCommentResponse ()
@property SInt64 commentId;
@property SInt32 bonus;
@end

@implementation TXPBSendCommentResponse

- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) _value_ {
  hasCommentId_ = !!_value_;
}
@synthesize commentId;
- (BOOL) hasBonus {
  return !!hasBonus_;
}
- (void) setHasBonus:(BOOL) _value_ {
  hasBonus_ = !!_value_;
}
@synthesize bonus;
- (instancetype) init {
  if ((self = [super init])) {
    self.commentId = 0L;
    self.bonus = 0;
  }
  return self;
}
static TXPBSendCommentResponse* defaultTXPBSendCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSendCommentResponse class]) {
    defaultTXPBSendCommentResponseInstance = [[TXPBSendCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSendCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSendCommentResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommentId) {
    [output writeInt64:1 value:self.commentId];
  }
  if (self.hasBonus) {
    [output writeInt32:2 value:self.bonus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCommentId) {
    size_ += computeInt64Size(1, self.commentId);
  }
  if (self.hasBonus) {
    size_ += computeInt32Size(2, self.bonus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSendCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBSendCommentResponse*)[[[TXPBSendCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBSendCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendCommentResponse*)[[[TXPBSendCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSendCommentResponse*)[[[TXPBSendCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSendCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendCommentResponse*)[[[TXPBSendCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSendCommentResponse*)[[[TXPBSendCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSendCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSendCommentResponse*)[[[TXPBSendCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSendCommentResponseBuilder*) builder {
  return [[TXPBSendCommentResponseBuilder alloc] init];
}
+ (TXPBSendCommentResponseBuilder*) builderWithPrototype:(TXPBSendCommentResponse*) prototype {
  return [[TXPBSendCommentResponse builder] mergeFrom:prototype];
}
- (TXPBSendCommentResponseBuilder*) builder {
  return [TXPBSendCommentResponse builder];
}
- (TXPBSendCommentResponseBuilder*) toBuilder {
  return [TXPBSendCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCommentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentId", [NSNumber numberWithLongLong:self.commentId]];
  }
  if (self.hasBonus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bonus", [NSNumber numberWithInteger:self.bonus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCommentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.commentId] forKey: @"commentId"];
  }
  if (self.hasBonus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bonus] forKey: @"bonus"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSendCommentResponse class]]) {
    return NO;
  }
  TXPBSendCommentResponse *otherMessage = other;
  return
      self.hasCommentId == otherMessage.hasCommentId &&
      (!self.hasCommentId || self.commentId == otherMessage.commentId) &&
      self.hasBonus == otherMessage.hasBonus &&
      (!self.hasBonus || self.bonus == otherMessage.bonus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCommentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.commentId] hash];
  }
  if (self.hasBonus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bonus] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSendCommentResponseBuilder()
@property (strong) TXPBSendCommentResponse* resultSendCommentResponse;
@end

@implementation TXPBSendCommentResponseBuilder
@synthesize resultSendCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendCommentResponse = [[TXPBSendCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendCommentResponse;
}
- (TXPBSendCommentResponseBuilder*) clear {
  self.resultSendCommentResponse = [[TXPBSendCommentResponse alloc] init];
  return self;
}
- (TXPBSendCommentResponseBuilder*) clone {
  return [TXPBSendCommentResponse builderWithPrototype:resultSendCommentResponse];
}
- (TXPBSendCommentResponse*) defaultInstance {
  return [TXPBSendCommentResponse defaultInstance];
}
- (TXPBSendCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSendCommentResponse*) buildPartial {
  TXPBSendCommentResponse* returnMe = resultSendCommentResponse;
  self.resultSendCommentResponse = nil;
  return returnMe;
}
- (TXPBSendCommentResponseBuilder*) mergeFrom:(TXPBSendCommentResponse*) other {
  if (other == [TXPBSendCommentResponse defaultInstance]) {
    return self;
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  if (other.hasBonus) {
    [self setBonus:other.bonus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSendCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSendCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCommentId:[input readInt64]];
        break;
      }
      case 16: {
        [self setBonus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCommentId {
  return resultSendCommentResponse.hasCommentId;
}
- (SInt64) commentId {
  return resultSendCommentResponse.commentId;
}
- (TXPBSendCommentResponseBuilder*) setCommentId:(SInt64) value {
  resultSendCommentResponse.hasCommentId = YES;
  resultSendCommentResponse.commentId = value;
  return self;
}
- (TXPBSendCommentResponseBuilder*) clearCommentId {
  resultSendCommentResponse.hasCommentId = NO;
  resultSendCommentResponse.commentId = 0L;
  return self;
}
- (BOOL) hasBonus {
  return resultSendCommentResponse.hasBonus;
}
- (SInt32) bonus {
  return resultSendCommentResponse.bonus;
}
- (TXPBSendCommentResponseBuilder*) setBonus:(SInt32) value {
  resultSendCommentResponse.hasBonus = YES;
  resultSendCommentResponse.bonus = value;
  return self;
}
- (TXPBSendCommentResponseBuilder*) clearBonus {
  resultSendCommentResponse.hasBonus = NO;
  resultSendCommentResponse.bonus = 0;
  return self;
}
@end

@interface TXPBDeleteCommnetsRequest ()
@property SInt64 commentId;
@end

@implementation TXPBDeleteCommnetsRequest

- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) _value_ {
  hasCommentId_ = !!_value_;
}
@synthesize commentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.commentId = 0L;
  }
  return self;
}
static TXPBDeleteCommnetsRequest* defaultTXPBDeleteCommnetsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBDeleteCommnetsRequest class]) {
    defaultTXPBDeleteCommnetsRequestInstance = [[TXPBDeleteCommnetsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDeleteCommnetsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDeleteCommnetsRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCommentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommentId) {
    [output writeInt64:1 value:self.commentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCommentId) {
    size_ += computeInt64Size(1, self.commentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDeleteCommnetsRequest*) parseFromData:(NSData*) data {
  return (TXPBDeleteCommnetsRequest*)[[[TXPBDeleteCommnetsRequest builder] mergeFromData:data] build];
}
+ (TXPBDeleteCommnetsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteCommnetsRequest*)[[[TXPBDeleteCommnetsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteCommnetsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDeleteCommnetsRequest*)[[[TXPBDeleteCommnetsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBDeleteCommnetsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteCommnetsRequest*)[[[TXPBDeleteCommnetsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteCommnetsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDeleteCommnetsRequest*)[[[TXPBDeleteCommnetsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDeleteCommnetsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteCommnetsRequest*)[[[TXPBDeleteCommnetsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteCommnetsRequestBuilder*) builder {
  return [[TXPBDeleteCommnetsRequestBuilder alloc] init];
}
+ (TXPBDeleteCommnetsRequestBuilder*) builderWithPrototype:(TXPBDeleteCommnetsRequest*) prototype {
  return [[TXPBDeleteCommnetsRequest builder] mergeFrom:prototype];
}
- (TXPBDeleteCommnetsRequestBuilder*) builder {
  return [TXPBDeleteCommnetsRequest builder];
}
- (TXPBDeleteCommnetsRequestBuilder*) toBuilder {
  return [TXPBDeleteCommnetsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCommentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentId", [NSNumber numberWithLongLong:self.commentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCommentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.commentId] forKey: @"commentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDeleteCommnetsRequest class]]) {
    return NO;
  }
  TXPBDeleteCommnetsRequest *otherMessage = other;
  return
      self.hasCommentId == otherMessage.hasCommentId &&
      (!self.hasCommentId || self.commentId == otherMessage.commentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCommentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.commentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDeleteCommnetsRequestBuilder()
@property (strong) TXPBDeleteCommnetsRequest* resultDeleteCommnetsRequest;
@end

@implementation TXPBDeleteCommnetsRequestBuilder
@synthesize resultDeleteCommnetsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteCommnetsRequest = [[TXPBDeleteCommnetsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteCommnetsRequest;
}
- (TXPBDeleteCommnetsRequestBuilder*) clear {
  self.resultDeleteCommnetsRequest = [[TXPBDeleteCommnetsRequest alloc] init];
  return self;
}
- (TXPBDeleteCommnetsRequestBuilder*) clone {
  return [TXPBDeleteCommnetsRequest builderWithPrototype:resultDeleteCommnetsRequest];
}
- (TXPBDeleteCommnetsRequest*) defaultInstance {
  return [TXPBDeleteCommnetsRequest defaultInstance];
}
- (TXPBDeleteCommnetsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDeleteCommnetsRequest*) buildPartial {
  TXPBDeleteCommnetsRequest* returnMe = resultDeleteCommnetsRequest;
  self.resultDeleteCommnetsRequest = nil;
  return returnMe;
}
- (TXPBDeleteCommnetsRequestBuilder*) mergeFrom:(TXPBDeleteCommnetsRequest*) other {
  if (other == [TXPBDeleteCommnetsRequest defaultInstance]) {
    return self;
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDeleteCommnetsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDeleteCommnetsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCommentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCommentId {
  return resultDeleteCommnetsRequest.hasCommentId;
}
- (SInt64) commentId {
  return resultDeleteCommnetsRequest.commentId;
}
- (TXPBDeleteCommnetsRequestBuilder*) setCommentId:(SInt64) value {
  resultDeleteCommnetsRequest.hasCommentId = YES;
  resultDeleteCommnetsRequest.commentId = value;
  return self;
}
- (TXPBDeleteCommnetsRequestBuilder*) clearCommentId {
  resultDeleteCommnetsRequest.hasCommentId = NO;
  resultDeleteCommnetsRequest.commentId = 0L;
  return self;
}
@end

@interface TXPBShowCommentRequest ()
@property SInt64 targetId;
@property TXPBTargetType targetType;
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBShowCommentRequest

- (BOOL) hasTargetId {
  return !!hasTargetId_;
}
- (void) setHasTargetId:(BOOL) _value_ {
  hasTargetId_ = !!_value_;
}
@synthesize targetId;
- (BOOL) hasTargetType {
  return !!hasTargetType_;
}
- (void) setHasTargetType:(BOOL) _value_ {
  hasTargetType_ = !!_value_;
}
@synthesize targetType;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.targetId = 0L;
    self.targetType = TXPBTargetTypeFeed;
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBShowCommentRequest* defaultTXPBShowCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBShowCommentRequest class]) {
    defaultTXPBShowCommentRequestInstance = [[TXPBShowCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBShowCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBShowCommentRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTargetId) {
    return NO;
  }
  if (!self.hasTargetType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTargetId) {
    [output writeInt64:1 value:self.targetId];
  }
  if (self.hasTargetType) {
    [output writeEnum:2 value:self.targetType];
  }
  if (self.hasMaxId) {
    [output writeInt64:3 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:4 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTargetId) {
    size_ += computeInt64Size(1, self.targetId);
  }
  if (self.hasTargetType) {
    size_ += computeEnumSize(2, self.targetType);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(3, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(4, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBShowCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBShowCommentRequest*)[[[TXPBShowCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBShowCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBShowCommentRequest*)[[[TXPBShowCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBShowCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBShowCommentRequest*)[[[TXPBShowCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBShowCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBShowCommentRequest*)[[[TXPBShowCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBShowCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBShowCommentRequest*)[[[TXPBShowCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBShowCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBShowCommentRequest*)[[[TXPBShowCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBShowCommentRequestBuilder*) builder {
  return [[TXPBShowCommentRequestBuilder alloc] init];
}
+ (TXPBShowCommentRequestBuilder*) builderWithPrototype:(TXPBShowCommentRequest*) prototype {
  return [[TXPBShowCommentRequest builder] mergeFrom:prototype];
}
- (TXPBShowCommentRequestBuilder*) builder {
  return [TXPBShowCommentRequest builder];
}
- (TXPBShowCommentRequestBuilder*) toBuilder {
  return [TXPBShowCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTargetId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetId", [NSNumber numberWithLongLong:self.targetId]];
  }
  if (self.hasTargetType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetType", NSStringFromTXPBTargetType(self.targetType)];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTargetId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.targetId] forKey: @"targetId"];
  }
  if (self.hasTargetType) {
    [dictionary setObject: @(self.targetType) forKey: @"targetType"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBShowCommentRequest class]]) {
    return NO;
  }
  TXPBShowCommentRequest *otherMessage = other;
  return
      self.hasTargetId == otherMessage.hasTargetId &&
      (!self.hasTargetId || self.targetId == otherMessage.targetId) &&
      self.hasTargetType == otherMessage.hasTargetType &&
      (!self.hasTargetType || self.targetType == otherMessage.targetType) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTargetId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.targetId] hash];
  }
  if (self.hasTargetType) {
    hashCode = hashCode * 31 + self.targetType;
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBShowCommentRequestBuilder()
@property (strong) TXPBShowCommentRequest* resultShowCommentRequest;
@end

@implementation TXPBShowCommentRequestBuilder
@synthesize resultShowCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultShowCommentRequest = [[TXPBShowCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultShowCommentRequest;
}
- (TXPBShowCommentRequestBuilder*) clear {
  self.resultShowCommentRequest = [[TXPBShowCommentRequest alloc] init];
  return self;
}
- (TXPBShowCommentRequestBuilder*) clone {
  return [TXPBShowCommentRequest builderWithPrototype:resultShowCommentRequest];
}
- (TXPBShowCommentRequest*) defaultInstance {
  return [TXPBShowCommentRequest defaultInstance];
}
- (TXPBShowCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBShowCommentRequest*) buildPartial {
  TXPBShowCommentRequest* returnMe = resultShowCommentRequest;
  self.resultShowCommentRequest = nil;
  return returnMe;
}
- (TXPBShowCommentRequestBuilder*) mergeFrom:(TXPBShowCommentRequest*) other {
  if (other == [TXPBShowCommentRequest defaultInstance]) {
    return self;
  }
  if (other.hasTargetId) {
    [self setTargetId:other.targetId];
  }
  if (other.hasTargetType) {
    [self setTargetType:other.targetType];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBShowCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBShowCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTargetId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBTargetType value = (TXPBTargetType)[input readEnum];
        if (TXPBTargetTypeIsValidValue(value)) {
          [self setTargetType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 32: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasTargetId {
  return resultShowCommentRequest.hasTargetId;
}
- (SInt64) targetId {
  return resultShowCommentRequest.targetId;
}
- (TXPBShowCommentRequestBuilder*) setTargetId:(SInt64) value {
  resultShowCommentRequest.hasTargetId = YES;
  resultShowCommentRequest.targetId = value;
  return self;
}
- (TXPBShowCommentRequestBuilder*) clearTargetId {
  resultShowCommentRequest.hasTargetId = NO;
  resultShowCommentRequest.targetId = 0L;
  return self;
}
- (BOOL) hasTargetType {
  return resultShowCommentRequest.hasTargetType;
}
- (TXPBTargetType) targetType {
  return resultShowCommentRequest.targetType;
}
- (TXPBShowCommentRequestBuilder*) setTargetType:(TXPBTargetType) value {
  resultShowCommentRequest.hasTargetType = YES;
  resultShowCommentRequest.targetType = value;
  return self;
}
- (TXPBShowCommentRequestBuilder*) clearTargetType {
  resultShowCommentRequest.hasTargetType = NO;
  resultShowCommentRequest.targetType = TXPBTargetTypeFeed;
  return self;
}
- (BOOL) hasMaxId {
  return resultShowCommentRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultShowCommentRequest.maxId;
}
- (TXPBShowCommentRequestBuilder*) setMaxId:(SInt64) value {
  resultShowCommentRequest.hasMaxId = YES;
  resultShowCommentRequest.maxId = value;
  return self;
}
- (TXPBShowCommentRequestBuilder*) clearMaxId {
  resultShowCommentRequest.hasMaxId = NO;
  resultShowCommentRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultShowCommentRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultShowCommentRequest.sinceId;
}
- (TXPBShowCommentRequestBuilder*) setSinceId:(SInt64) value {
  resultShowCommentRequest.hasSinceId = YES;
  resultShowCommentRequest.sinceId = value;
  return self;
}
- (TXPBShowCommentRequestBuilder*) clearSinceId {
  resultShowCommentRequest.hasSinceId = NO;
  resultShowCommentRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBShowCommentResponse ()
@property (strong) NSMutableArray * commentArray;
@property BOOL hasMore;
@end

@implementation TXPBShowCommentResponse

@synthesize commentArray;
@dynamic comment;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBShowCommentResponse* defaultTXPBShowCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBShowCommentResponse class]) {
    defaultTXPBShowCommentResponseInstance = [[TXPBShowCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBShowCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBShowCommentResponseInstance;
}
- (NSArray *)comment {
  return commentArray;
}
- (TXPBComment*)commentAtIndex:(NSUInteger)index {
  return [commentArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitcomment = YES;
   [self.comment enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcomment = NO;
      *stop = YES;
    }
  }];
  if (!isInitcomment) return isInitcomment;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.commentArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.commentArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBShowCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBShowCommentResponse*)[[[TXPBShowCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBShowCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBShowCommentResponse*)[[[TXPBShowCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBShowCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBShowCommentResponse*)[[[TXPBShowCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBShowCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBShowCommentResponse*)[[[TXPBShowCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBShowCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBShowCommentResponse*)[[[TXPBShowCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBShowCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBShowCommentResponse*)[[[TXPBShowCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBShowCommentResponseBuilder*) builder {
  return [[TXPBShowCommentResponseBuilder alloc] init];
}
+ (TXPBShowCommentResponseBuilder*) builderWithPrototype:(TXPBShowCommentResponse*) prototype {
  return [[TXPBShowCommentResponse builder] mergeFrom:prototype];
}
- (TXPBShowCommentResponseBuilder*) builder {
  return [TXPBShowCommentResponse builder];
}
- (TXPBShowCommentResponseBuilder*) toBuilder {
  return [TXPBShowCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.commentArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"comment"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBComment* element in self.commentArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"comment"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBShowCommentResponse class]]) {
    return NO;
  }
  TXPBShowCommentResponse *otherMessage = other;
  return
      [self.commentArray isEqualToArray:otherMessage.commentArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.commentArray enumerateObjectsUsingBlock:^(TXPBComment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBShowCommentResponseBuilder()
@property (strong) TXPBShowCommentResponse* resultShowCommentResponse;
@end

@implementation TXPBShowCommentResponseBuilder
@synthesize resultShowCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultShowCommentResponse = [[TXPBShowCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultShowCommentResponse;
}
- (TXPBShowCommentResponseBuilder*) clear {
  self.resultShowCommentResponse = [[TXPBShowCommentResponse alloc] init];
  return self;
}
- (TXPBShowCommentResponseBuilder*) clone {
  return [TXPBShowCommentResponse builderWithPrototype:resultShowCommentResponse];
}
- (TXPBShowCommentResponse*) defaultInstance {
  return [TXPBShowCommentResponse defaultInstance];
}
- (TXPBShowCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBShowCommentResponse*) buildPartial {
  TXPBShowCommentResponse* returnMe = resultShowCommentResponse;
  self.resultShowCommentResponse = nil;
  return returnMe;
}
- (TXPBShowCommentResponseBuilder*) mergeFrom:(TXPBShowCommentResponse*) other {
  if (other == [TXPBShowCommentResponse defaultInstance]) {
    return self;
  }
  if (other.commentArray.count > 0) {
    if (resultShowCommentResponse.commentArray == nil) {
      resultShowCommentResponse.commentArray = [[NSMutableArray alloc] initWithArray:other.commentArray];
    } else {
      [resultShowCommentResponse.commentArray addObjectsFromArray:other.commentArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBShowCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBShowCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCommentBuilder* subBuilder = [TXPBComment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addComment:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)comment {
  return resultShowCommentResponse.commentArray;
}
- (TXPBComment*)commentAtIndex:(NSUInteger)index {
  return [resultShowCommentResponse commentAtIndex:index];
}
- (TXPBShowCommentResponseBuilder *)addComment:(TXPBComment*)value {
  if (resultShowCommentResponse.commentArray == nil) {
    resultShowCommentResponse.commentArray = [[NSMutableArray alloc]init];
  }
  [resultShowCommentResponse.commentArray addObject:value];
  return self;
}
- (TXPBShowCommentResponseBuilder *)setCommentArray:(NSArray *)array {
  resultShowCommentResponse.commentArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBShowCommentResponseBuilder *)clearComment {
  resultShowCommentResponse.commentArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultShowCommentResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultShowCommentResponse.hasMore;
}
- (TXPBShowCommentResponseBuilder*) setHasMore:(BOOL) value {
  resultShowCommentResponse.hasHasMore = YES;
  resultShowCommentResponse.hasMore = value;
  return self;
}
- (TXPBShowCommentResponseBuilder*) clearHasMore {
  resultShowCommentResponse.hasHasMore = NO;
  resultShowCommentResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchConcernedCommentRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchConcernedCommentRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchConcernedCommentRequest* defaultTXPBFetchConcernedCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchConcernedCommentRequest class]) {
    defaultTXPBFetchConcernedCommentRequestInstance = [[TXPBFetchConcernedCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchConcernedCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchConcernedCommentRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchConcernedCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchConcernedCommentRequest*)[[[TXPBFetchConcernedCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchConcernedCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchConcernedCommentRequest*)[[[TXPBFetchConcernedCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchConcernedCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchConcernedCommentRequest*)[[[TXPBFetchConcernedCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchConcernedCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchConcernedCommentRequest*)[[[TXPBFetchConcernedCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchConcernedCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchConcernedCommentRequest*)[[[TXPBFetchConcernedCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchConcernedCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchConcernedCommentRequest*)[[[TXPBFetchConcernedCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchConcernedCommentRequestBuilder*) builder {
  return [[TXPBFetchConcernedCommentRequestBuilder alloc] init];
}
+ (TXPBFetchConcernedCommentRequestBuilder*) builderWithPrototype:(TXPBFetchConcernedCommentRequest*) prototype {
  return [[TXPBFetchConcernedCommentRequest builder] mergeFrom:prototype];
}
- (TXPBFetchConcernedCommentRequestBuilder*) builder {
  return [TXPBFetchConcernedCommentRequest builder];
}
- (TXPBFetchConcernedCommentRequestBuilder*) toBuilder {
  return [TXPBFetchConcernedCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchConcernedCommentRequest class]]) {
    return NO;
  }
  TXPBFetchConcernedCommentRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchConcernedCommentRequestBuilder()
@property (strong) TXPBFetchConcernedCommentRequest* resultFetchConcernedCommentRequest;
@end

@implementation TXPBFetchConcernedCommentRequestBuilder
@synthesize resultFetchConcernedCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchConcernedCommentRequest = [[TXPBFetchConcernedCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchConcernedCommentRequest;
}
- (TXPBFetchConcernedCommentRequestBuilder*) clear {
  self.resultFetchConcernedCommentRequest = [[TXPBFetchConcernedCommentRequest alloc] init];
  return self;
}
- (TXPBFetchConcernedCommentRequestBuilder*) clone {
  return [TXPBFetchConcernedCommentRequest builderWithPrototype:resultFetchConcernedCommentRequest];
}
- (TXPBFetchConcernedCommentRequest*) defaultInstance {
  return [TXPBFetchConcernedCommentRequest defaultInstance];
}
- (TXPBFetchConcernedCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchConcernedCommentRequest*) buildPartial {
  TXPBFetchConcernedCommentRequest* returnMe = resultFetchConcernedCommentRequest;
  self.resultFetchConcernedCommentRequest = nil;
  return returnMe;
}
- (TXPBFetchConcernedCommentRequestBuilder*) mergeFrom:(TXPBFetchConcernedCommentRequest*) other {
  if (other == [TXPBFetchConcernedCommentRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchConcernedCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchConcernedCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchConcernedCommentRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchConcernedCommentRequest.maxId;
}
- (TXPBFetchConcernedCommentRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchConcernedCommentRequest.hasMaxId = YES;
  resultFetchConcernedCommentRequest.maxId = value;
  return self;
}
- (TXPBFetchConcernedCommentRequestBuilder*) clearMaxId {
  resultFetchConcernedCommentRequest.hasMaxId = NO;
  resultFetchConcernedCommentRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchConcernedCommentRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchConcernedCommentRequest.sinceId;
}
- (TXPBFetchConcernedCommentRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchConcernedCommentRequest.hasSinceId = YES;
  resultFetchConcernedCommentRequest.sinceId = value;
  return self;
}
- (TXPBFetchConcernedCommentRequestBuilder*) clearSinceId {
  resultFetchConcernedCommentRequest.hasSinceId = NO;
  resultFetchConcernedCommentRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFeedComment ()
@property (strong) TXPBFeed* feed;
@property (strong) TXPBComment* comment;
@end

@implementation TXPBFeedComment

- (BOOL) hasFeed {
  return !!hasFeed_;
}
- (void) setHasFeed:(BOOL) _value_ {
  hasFeed_ = !!_value_;
}
@synthesize feed;
- (BOOL) hasComment {
  return !!hasComment_;
}
- (void) setHasComment:(BOOL) _value_ {
  hasComment_ = !!_value_;
}
@synthesize comment;
- (instancetype) init {
  if ((self = [super init])) {
    self.feed = [TXPBFeed defaultInstance];
    self.comment = [TXPBComment defaultInstance];
  }
  return self;
}
static TXPBFeedComment* defaultTXPBFeedCommentInstance = nil;
+ (void) initialize {
  if (self == [TXPBFeedComment class]) {
    defaultTXPBFeedCommentInstance = [[TXPBFeedComment alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFeedCommentInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFeedCommentInstance;
}
- (BOOL) isInitialized {
  if (!self.hasFeed) {
    return NO;
  }
  if (!self.hasComment) {
    return NO;
  }
  if (!self.feed.isInitialized) {
    return NO;
  }
  if (!self.comment.isInitialized) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFeed) {
    [output writeMessage:1 value:self.feed];
  }
  if (self.hasComment) {
    [output writeMessage:2 value:self.comment];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFeed) {
    size_ += computeMessageSize(1, self.feed);
  }
  if (self.hasComment) {
    size_ += computeMessageSize(2, self.comment);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFeedComment*) parseFromData:(NSData*) data {
  return (TXPBFeedComment*)[[[TXPBFeedComment builder] mergeFromData:data] build];
}
+ (TXPBFeedComment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeedComment*)[[[TXPBFeedComment builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeedComment*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFeedComment*)[[[TXPBFeedComment builder] mergeFromInputStream:input] build];
}
+ (TXPBFeedComment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeedComment*)[[[TXPBFeedComment builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeedComment*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFeedComment*)[[[TXPBFeedComment builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFeedComment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFeedComment*)[[[TXPBFeedComment builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFeedCommentBuilder*) builder {
  return [[TXPBFeedCommentBuilder alloc] init];
}
+ (TXPBFeedCommentBuilder*) builderWithPrototype:(TXPBFeedComment*) prototype {
  return [[TXPBFeedComment builder] mergeFrom:prototype];
}
- (TXPBFeedCommentBuilder*) builder {
  return [TXPBFeedComment builder];
}
- (TXPBFeedCommentBuilder*) toBuilder {
  return [TXPBFeedComment builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFeed) {
    [output appendFormat:@"%@%@ {\n", indent, @"feed"];
    [self.feed writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasComment) {
    [output appendFormat:@"%@%@ {\n", indent, @"comment"];
    [self.comment writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFeed) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.feed storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"feed"];
  }
  if (self.hasComment) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.comment storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"comment"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFeedComment class]]) {
    return NO;
  }
  TXPBFeedComment *otherMessage = other;
  return
      self.hasFeed == otherMessage.hasFeed &&
      (!self.hasFeed || [self.feed isEqual:otherMessage.feed]) &&
      self.hasComment == otherMessage.hasComment &&
      (!self.hasComment || [self.comment isEqual:otherMessage.comment]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFeed) {
    hashCode = hashCode * 31 + [self.feed hash];
  }
  if (self.hasComment) {
    hashCode = hashCode * 31 + [self.comment hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFeedCommentBuilder()
@property (strong) TXPBFeedComment* resultFeedComment;
@end

@implementation TXPBFeedCommentBuilder
@synthesize resultFeedComment;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFeedComment = [[TXPBFeedComment alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFeedComment;
}
- (TXPBFeedCommentBuilder*) clear {
  self.resultFeedComment = [[TXPBFeedComment alloc] init];
  return self;
}
- (TXPBFeedCommentBuilder*) clone {
  return [TXPBFeedComment builderWithPrototype:resultFeedComment];
}
- (TXPBFeedComment*) defaultInstance {
  return [TXPBFeedComment defaultInstance];
}
- (TXPBFeedComment*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFeedComment*) buildPartial {
  TXPBFeedComment* returnMe = resultFeedComment;
  self.resultFeedComment = nil;
  return returnMe;
}
- (TXPBFeedCommentBuilder*) mergeFrom:(TXPBFeedComment*) other {
  if (other == [TXPBFeedComment defaultInstance]) {
    return self;
  }
  if (other.hasFeed) {
    [self mergeFeed:other.feed];
  }
  if (other.hasComment) {
    [self mergeComment:other.comment];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFeedCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFeedCommentBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBFeedBuilder* subBuilder = [TXPBFeed builder];
        if (self.hasFeed) {
          [subBuilder mergeFrom:self.feed];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFeed:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TXPBCommentBuilder* subBuilder = [TXPBComment builder];
        if (self.hasComment) {
          [subBuilder mergeFrom:self.comment];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setComment:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasFeed {
  return resultFeedComment.hasFeed;
}
- (TXPBFeed*) feed {
  return resultFeedComment.feed;
}
- (TXPBFeedCommentBuilder*) setFeed:(TXPBFeed*) value {
  resultFeedComment.hasFeed = YES;
  resultFeedComment.feed = value;
  return self;
}
- (TXPBFeedCommentBuilder*) setFeedBuilder:(TXPBFeedBuilder*) builderForValue {
  return [self setFeed:[builderForValue build]];
}
- (TXPBFeedCommentBuilder*) mergeFeed:(TXPBFeed*) value {
  if (resultFeedComment.hasFeed &&
      resultFeedComment.feed != [TXPBFeed defaultInstance]) {
    resultFeedComment.feed =
      [[[TXPBFeed builderWithPrototype:resultFeedComment.feed] mergeFrom:value] buildPartial];
  } else {
    resultFeedComment.feed = value;
  }
  resultFeedComment.hasFeed = YES;
  return self;
}
- (TXPBFeedCommentBuilder*) clearFeed {
  resultFeedComment.hasFeed = NO;
  resultFeedComment.feed = [TXPBFeed defaultInstance];
  return self;
}
- (BOOL) hasComment {
  return resultFeedComment.hasComment;
}
- (TXPBComment*) comment {
  return resultFeedComment.comment;
}
- (TXPBFeedCommentBuilder*) setComment:(TXPBComment*) value {
  resultFeedComment.hasComment = YES;
  resultFeedComment.comment = value;
  return self;
}
- (TXPBFeedCommentBuilder*) setCommentBuilder:(TXPBCommentBuilder*) builderForValue {
  return [self setComment:[builderForValue build]];
}
- (TXPBFeedCommentBuilder*) mergeComment:(TXPBComment*) value {
  if (resultFeedComment.hasComment &&
      resultFeedComment.comment != [TXPBComment defaultInstance]) {
    resultFeedComment.comment =
      [[[TXPBComment builderWithPrototype:resultFeedComment.comment] mergeFrom:value] buildPartial];
  } else {
    resultFeedComment.comment = value;
  }
  resultFeedComment.hasComment = YES;
  return self;
}
- (TXPBFeedCommentBuilder*) clearComment {
  resultFeedComment.hasComment = NO;
  resultFeedComment.comment = [TXPBComment defaultInstance];
  return self;
}
@end

@interface TXPBFetchConcernedCommentResponse ()
@property (strong) NSMutableArray * feedCommentArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchConcernedCommentResponse

@synthesize feedCommentArray;
@dynamic feedComment;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchConcernedCommentResponse* defaultTXPBFetchConcernedCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchConcernedCommentResponse class]) {
    defaultTXPBFetchConcernedCommentResponseInstance = [[TXPBFetchConcernedCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchConcernedCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchConcernedCommentResponseInstance;
}
- (NSArray *)feedComment {
  return feedCommentArray;
}
- (TXPBFeedComment*)feedCommentAtIndex:(NSUInteger)index {
  return [feedCommentArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitfeedComment = YES;
   [self.feedComment enumerateObjectsUsingBlock:^(TXPBFeedComment *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitfeedComment = NO;
      *stop = YES;
    }
  }];
  if (!isInitfeedComment) return isInitfeedComment;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.feedCommentArray enumerateObjectsUsingBlock:^(TXPBFeedComment *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.feedCommentArray enumerateObjectsUsingBlock:^(TXPBFeedComment *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchConcernedCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchConcernedCommentResponse*)[[[TXPBFetchConcernedCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchConcernedCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchConcernedCommentResponse*)[[[TXPBFetchConcernedCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchConcernedCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchConcernedCommentResponse*)[[[TXPBFetchConcernedCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchConcernedCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchConcernedCommentResponse*)[[[TXPBFetchConcernedCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchConcernedCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchConcernedCommentResponse*)[[[TXPBFetchConcernedCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchConcernedCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchConcernedCommentResponse*)[[[TXPBFetchConcernedCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchConcernedCommentResponseBuilder*) builder {
  return [[TXPBFetchConcernedCommentResponseBuilder alloc] init];
}
+ (TXPBFetchConcernedCommentResponseBuilder*) builderWithPrototype:(TXPBFetchConcernedCommentResponse*) prototype {
  return [[TXPBFetchConcernedCommentResponse builder] mergeFrom:prototype];
}
- (TXPBFetchConcernedCommentResponseBuilder*) builder {
  return [TXPBFetchConcernedCommentResponse builder];
}
- (TXPBFetchConcernedCommentResponseBuilder*) toBuilder {
  return [TXPBFetchConcernedCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.feedCommentArray enumerateObjectsUsingBlock:^(TXPBFeedComment *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"feedComment"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBFeedComment* element in self.feedCommentArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"feedComment"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchConcernedCommentResponse class]]) {
    return NO;
  }
  TXPBFetchConcernedCommentResponse *otherMessage = other;
  return
      [self.feedCommentArray isEqualToArray:otherMessage.feedCommentArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.feedCommentArray enumerateObjectsUsingBlock:^(TXPBFeedComment *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchConcernedCommentResponseBuilder()
@property (strong) TXPBFetchConcernedCommentResponse* resultFetchConcernedCommentResponse;
@end

@implementation TXPBFetchConcernedCommentResponseBuilder
@synthesize resultFetchConcernedCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchConcernedCommentResponse = [[TXPBFetchConcernedCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchConcernedCommentResponse;
}
- (TXPBFetchConcernedCommentResponseBuilder*) clear {
  self.resultFetchConcernedCommentResponse = [[TXPBFetchConcernedCommentResponse alloc] init];
  return self;
}
- (TXPBFetchConcernedCommentResponseBuilder*) clone {
  return [TXPBFetchConcernedCommentResponse builderWithPrototype:resultFetchConcernedCommentResponse];
}
- (TXPBFetchConcernedCommentResponse*) defaultInstance {
  return [TXPBFetchConcernedCommentResponse defaultInstance];
}
- (TXPBFetchConcernedCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchConcernedCommentResponse*) buildPartial {
  TXPBFetchConcernedCommentResponse* returnMe = resultFetchConcernedCommentResponse;
  self.resultFetchConcernedCommentResponse = nil;
  return returnMe;
}
- (TXPBFetchConcernedCommentResponseBuilder*) mergeFrom:(TXPBFetchConcernedCommentResponse*) other {
  if (other == [TXPBFetchConcernedCommentResponse defaultInstance]) {
    return self;
  }
  if (other.feedCommentArray.count > 0) {
    if (resultFetchConcernedCommentResponse.feedCommentArray == nil) {
      resultFetchConcernedCommentResponse.feedCommentArray = [[NSMutableArray alloc] initWithArray:other.feedCommentArray];
    } else {
      [resultFetchConcernedCommentResponse.feedCommentArray addObjectsFromArray:other.feedCommentArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchConcernedCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchConcernedCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBFeedCommentBuilder* subBuilder = [TXPBFeedComment builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFeedComment:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)feedComment {
  return resultFetchConcernedCommentResponse.feedCommentArray;
}
- (TXPBFeedComment*)feedCommentAtIndex:(NSUInteger)index {
  return [resultFetchConcernedCommentResponse feedCommentAtIndex:index];
}
- (TXPBFetchConcernedCommentResponseBuilder *)addFeedComment:(TXPBFeedComment*)value {
  if (resultFetchConcernedCommentResponse.feedCommentArray == nil) {
    resultFetchConcernedCommentResponse.feedCommentArray = [[NSMutableArray alloc]init];
  }
  [resultFetchConcernedCommentResponse.feedCommentArray addObject:value];
  return self;
}
- (TXPBFetchConcernedCommentResponseBuilder *)setFeedCommentArray:(NSArray *)array {
  resultFetchConcernedCommentResponse.feedCommentArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchConcernedCommentResponseBuilder *)clearFeedComment {
  resultFetchConcernedCommentResponse.feedCommentArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchConcernedCommentResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchConcernedCommentResponse.hasMore;
}
- (TXPBFetchConcernedCommentResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchConcernedCommentResponse.hasHasMore = YES;
  resultFetchConcernedCommentResponse.hasMore = value;
  return self;
}
- (TXPBFetchConcernedCommentResponseBuilder*) clearHasMore {
  resultFetchConcernedCommentResponse.hasHasMore = NO;
  resultFetchConcernedCommentResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBDeleteConcernedCommentRequest ()
@end

@implementation TXPBDeleteConcernedCommentRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBDeleteConcernedCommentRequest* defaultTXPBDeleteConcernedCommentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBDeleteConcernedCommentRequest class]) {
    defaultTXPBDeleteConcernedCommentRequestInstance = [[TXPBDeleteConcernedCommentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDeleteConcernedCommentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDeleteConcernedCommentRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDeleteConcernedCommentRequest*) parseFromData:(NSData*) data {
  return (TXPBDeleteConcernedCommentRequest*)[[[TXPBDeleteConcernedCommentRequest builder] mergeFromData:data] build];
}
+ (TXPBDeleteConcernedCommentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteConcernedCommentRequest*)[[[TXPBDeleteConcernedCommentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteConcernedCommentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDeleteConcernedCommentRequest*)[[[TXPBDeleteConcernedCommentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBDeleteConcernedCommentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteConcernedCommentRequest*)[[[TXPBDeleteConcernedCommentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteConcernedCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDeleteConcernedCommentRequest*)[[[TXPBDeleteConcernedCommentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDeleteConcernedCommentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteConcernedCommentRequest*)[[[TXPBDeleteConcernedCommentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteConcernedCommentRequestBuilder*) builder {
  return [[TXPBDeleteConcernedCommentRequestBuilder alloc] init];
}
+ (TXPBDeleteConcernedCommentRequestBuilder*) builderWithPrototype:(TXPBDeleteConcernedCommentRequest*) prototype {
  return [[TXPBDeleteConcernedCommentRequest builder] mergeFrom:prototype];
}
- (TXPBDeleteConcernedCommentRequestBuilder*) builder {
  return [TXPBDeleteConcernedCommentRequest builder];
}
- (TXPBDeleteConcernedCommentRequestBuilder*) toBuilder {
  return [TXPBDeleteConcernedCommentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDeleteConcernedCommentRequest class]]) {
    return NO;
  }
  TXPBDeleteConcernedCommentRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDeleteConcernedCommentRequestBuilder()
@property (strong) TXPBDeleteConcernedCommentRequest* resultDeleteConcernedCommentRequest;
@end

@implementation TXPBDeleteConcernedCommentRequestBuilder
@synthesize resultDeleteConcernedCommentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteConcernedCommentRequest = [[TXPBDeleteConcernedCommentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteConcernedCommentRequest;
}
- (TXPBDeleteConcernedCommentRequestBuilder*) clear {
  self.resultDeleteConcernedCommentRequest = [[TXPBDeleteConcernedCommentRequest alloc] init];
  return self;
}
- (TXPBDeleteConcernedCommentRequestBuilder*) clone {
  return [TXPBDeleteConcernedCommentRequest builderWithPrototype:resultDeleteConcernedCommentRequest];
}
- (TXPBDeleteConcernedCommentRequest*) defaultInstance {
  return [TXPBDeleteConcernedCommentRequest defaultInstance];
}
- (TXPBDeleteConcernedCommentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDeleteConcernedCommentRequest*) buildPartial {
  TXPBDeleteConcernedCommentRequest* returnMe = resultDeleteConcernedCommentRequest;
  self.resultDeleteConcernedCommentRequest = nil;
  return returnMe;
}
- (TXPBDeleteConcernedCommentRequestBuilder*) mergeFrom:(TXPBDeleteConcernedCommentRequest*) other {
  if (other == [TXPBDeleteConcernedCommentRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDeleteConcernedCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDeleteConcernedCommentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBDeleteConcernedCommentResponse ()
@end

@implementation TXPBDeleteConcernedCommentResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBDeleteConcernedCommentResponse* defaultTXPBDeleteConcernedCommentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBDeleteConcernedCommentResponse class]) {
    defaultTXPBDeleteConcernedCommentResponseInstance = [[TXPBDeleteConcernedCommentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDeleteConcernedCommentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDeleteConcernedCommentResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDeleteConcernedCommentResponse*) parseFromData:(NSData*) data {
  return (TXPBDeleteConcernedCommentResponse*)[[[TXPBDeleteConcernedCommentResponse builder] mergeFromData:data] build];
}
+ (TXPBDeleteConcernedCommentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteConcernedCommentResponse*)[[[TXPBDeleteConcernedCommentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteConcernedCommentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDeleteConcernedCommentResponse*)[[[TXPBDeleteConcernedCommentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBDeleteConcernedCommentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteConcernedCommentResponse*)[[[TXPBDeleteConcernedCommentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteConcernedCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDeleteConcernedCommentResponse*)[[[TXPBDeleteConcernedCommentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDeleteConcernedCommentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteConcernedCommentResponse*)[[[TXPBDeleteConcernedCommentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteConcernedCommentResponseBuilder*) builder {
  return [[TXPBDeleteConcernedCommentResponseBuilder alloc] init];
}
+ (TXPBDeleteConcernedCommentResponseBuilder*) builderWithPrototype:(TXPBDeleteConcernedCommentResponse*) prototype {
  return [[TXPBDeleteConcernedCommentResponse builder] mergeFrom:prototype];
}
- (TXPBDeleteConcernedCommentResponseBuilder*) builder {
  return [TXPBDeleteConcernedCommentResponse builder];
}
- (TXPBDeleteConcernedCommentResponseBuilder*) toBuilder {
  return [TXPBDeleteConcernedCommentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDeleteConcernedCommentResponse class]]) {
    return NO;
  }
  TXPBDeleteConcernedCommentResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDeleteConcernedCommentResponseBuilder()
@property (strong) TXPBDeleteConcernedCommentResponse* resultDeleteConcernedCommentResponse;
@end

@implementation TXPBDeleteConcernedCommentResponseBuilder
@synthesize resultDeleteConcernedCommentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteConcernedCommentResponse = [[TXPBDeleteConcernedCommentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteConcernedCommentResponse;
}
- (TXPBDeleteConcernedCommentResponseBuilder*) clear {
  self.resultDeleteConcernedCommentResponse = [[TXPBDeleteConcernedCommentResponse alloc] init];
  return self;
}
- (TXPBDeleteConcernedCommentResponseBuilder*) clone {
  return [TXPBDeleteConcernedCommentResponse builderWithPrototype:resultDeleteConcernedCommentResponse];
}
- (TXPBDeleteConcernedCommentResponse*) defaultInstance {
  return [TXPBDeleteConcernedCommentResponse defaultInstance];
}
- (TXPBDeleteConcernedCommentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDeleteConcernedCommentResponse*) buildPartial {
  TXPBDeleteConcernedCommentResponse* returnMe = resultDeleteConcernedCommentResponse;
  self.resultDeleteConcernedCommentResponse = nil;
  return returnMe;
}
- (TXPBDeleteConcernedCommentResponseBuilder*) mergeFrom:(TXPBDeleteConcernedCommentResponse*) other {
  if (other == [TXPBDeleteConcernedCommentResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDeleteConcernedCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDeleteConcernedCommentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBPost ()
@property SInt64 id;
@property (strong) NSString* title;
@property (strong) NSString* summary;
@property (strong) NSString* content;
@property (strong) NSString* coverImageUrl;
@property SInt64 createdOn;
@property TXPBPostType postType;
@property SInt64 orderValue;
@property (strong) NSString* postUrl;
@end

@implementation TXPBPost

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasSummary {
  return !!hasSummary_;
}
- (void) setHasSummary:(BOOL) _value_ {
  hasSummary_ = !!_value_;
}
@synthesize summary;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasCoverImageUrl {
  return !!hasCoverImageUrl_;
}
- (void) setHasCoverImageUrl:(BOOL) _value_ {
  hasCoverImageUrl_ = !!_value_;
}
@synthesize coverImageUrl;
- (BOOL) hasCreatedOn {
  return !!hasCreatedOn_;
}
- (void) setHasCreatedOn:(BOOL) _value_ {
  hasCreatedOn_ = !!_value_;
}
@synthesize createdOn;
- (BOOL) hasPostType {
  return !!hasPostType_;
}
- (void) setHasPostType:(BOOL) _value_ {
  hasPostType_ = !!_value_;
}
@synthesize postType;
- (BOOL) hasOrderValue {
  return !!hasOrderValue_;
}
- (void) setHasOrderValue:(BOOL) _value_ {
  hasOrderValue_ = !!_value_;
}
@synthesize orderValue;
- (BOOL) hasPostUrl {
  return !!hasPostUrl_;
}
- (void) setHasPostUrl:(BOOL) _value_ {
  hasPostUrl_ = !!_value_;
}
@synthesize postUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.title = @"";
    self.summary = @"";
    self.content = @"";
    self.coverImageUrl = @"";
    self.createdOn = 0L;
    self.postType = TXPBPostTypeActivity;
    self.orderValue = 0L;
    self.postUrl = @"";
  }
  return self;
}
static TXPBPost* defaultTXPBPostInstance = nil;
+ (void) initialize {
  if (self == [TXPBPost class]) {
    defaultTXPBPostInstance = [[TXPBPost alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPostInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPostInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasSummary) {
    [output writeString:3 value:self.summary];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasCoverImageUrl) {
    [output writeString:5 value:self.coverImageUrl];
  }
  if (self.hasCreatedOn) {
    [output writeInt64:6 value:self.createdOn];
  }
  if (self.hasPostType) {
    [output writeEnum:7 value:self.postType];
  }
  if (self.hasOrderValue) {
    [output writeInt64:8 value:self.orderValue];
  }
  if (self.hasPostUrl) {
    [output writeString:9 value:self.postUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(2, self.title);
  }
  if (self.hasSummary) {
    size_ += computeStringSize(3, self.summary);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasCoverImageUrl) {
    size_ += computeStringSize(5, self.coverImageUrl);
  }
  if (self.hasCreatedOn) {
    size_ += computeInt64Size(6, self.createdOn);
  }
  if (self.hasPostType) {
    size_ += computeEnumSize(7, self.postType);
  }
  if (self.hasOrderValue) {
    size_ += computeInt64Size(8, self.orderValue);
  }
  if (self.hasPostUrl) {
    size_ += computeStringSize(9, self.postUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPost*) parseFromData:(NSData*) data {
  return (TXPBPost*)[[[TXPBPost builder] mergeFromData:data] build];
}
+ (TXPBPost*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPost*)[[[TXPBPost builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPost*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPost*)[[[TXPBPost builder] mergeFromInputStream:input] build];
}
+ (TXPBPost*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPost*)[[[TXPBPost builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPost*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPost*)[[[TXPBPost builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPost*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPost*)[[[TXPBPost builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPostBuilder*) builder {
  return [[TXPBPostBuilder alloc] init];
}
+ (TXPBPostBuilder*) builderWithPrototype:(TXPBPost*) prototype {
  return [[TXPBPost builder] mergeFrom:prototype];
}
- (TXPBPostBuilder*) builder {
  return [TXPBPost builder];
}
- (TXPBPostBuilder*) toBuilder {
  return [TXPBPost builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasSummary) {
    [output appendFormat:@"%@%@: %@\n", indent, @"summary", self.summary];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCoverImageUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coverImageUrl", self.coverImageUrl];
  }
  if (self.hasCreatedOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdOn", [NSNumber numberWithLongLong:self.createdOn]];
  }
  if (self.hasPostType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postType", NSStringFromTXPBPostType(self.postType)];
  }
  if (self.hasOrderValue) {
    [output appendFormat:@"%@%@: %@\n", indent, @"orderValue", [NSNumber numberWithLongLong:self.orderValue]];
  }
  if (self.hasPostUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postUrl", self.postUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasSummary) {
    [dictionary setObject: self.summary forKey: @"summary"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasCoverImageUrl) {
    [dictionary setObject: self.coverImageUrl forKey: @"coverImageUrl"];
  }
  if (self.hasCreatedOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdOn] forKey: @"createdOn"];
  }
  if (self.hasPostType) {
    [dictionary setObject: @(self.postType) forKey: @"postType"];
  }
  if (self.hasOrderValue) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.orderValue] forKey: @"orderValue"];
  }
  if (self.hasPostUrl) {
    [dictionary setObject: self.postUrl forKey: @"postUrl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPost class]]) {
    return NO;
  }
  TXPBPost *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasSummary == otherMessage.hasSummary &&
      (!self.hasSummary || [self.summary isEqual:otherMessage.summary]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCoverImageUrl == otherMessage.hasCoverImageUrl &&
      (!self.hasCoverImageUrl || [self.coverImageUrl isEqual:otherMessage.coverImageUrl]) &&
      self.hasCreatedOn == otherMessage.hasCreatedOn &&
      (!self.hasCreatedOn || self.createdOn == otherMessage.createdOn) &&
      self.hasPostType == otherMessage.hasPostType &&
      (!self.hasPostType || self.postType == otherMessage.postType) &&
      self.hasOrderValue == otherMessage.hasOrderValue &&
      (!self.hasOrderValue || self.orderValue == otherMessage.orderValue) &&
      self.hasPostUrl == otherMessage.hasPostUrl &&
      (!self.hasPostUrl || [self.postUrl isEqual:otherMessage.postUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasSummary) {
    hashCode = hashCode * 31 + [self.summary hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCoverImageUrl) {
    hashCode = hashCode * 31 + [self.coverImageUrl hash];
  }
  if (self.hasCreatedOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdOn] hash];
  }
  if (self.hasPostType) {
    hashCode = hashCode * 31 + self.postType;
  }
  if (self.hasOrderValue) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.orderValue] hash];
  }
  if (self.hasPostUrl) {
    hashCode = hashCode * 31 + [self.postUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPostBuilder()
@property (strong) TXPBPost* resultPost;
@end

@implementation TXPBPostBuilder
@synthesize resultPost;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPost = [[TXPBPost alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPost;
}
- (TXPBPostBuilder*) clear {
  self.resultPost = [[TXPBPost alloc] init];
  return self;
}
- (TXPBPostBuilder*) clone {
  return [TXPBPost builderWithPrototype:resultPost];
}
- (TXPBPost*) defaultInstance {
  return [TXPBPost defaultInstance];
}
- (TXPBPost*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPost*) buildPartial {
  TXPBPost* returnMe = resultPost;
  self.resultPost = nil;
  return returnMe;
}
- (TXPBPostBuilder*) mergeFrom:(TXPBPost*) other {
  if (other == [TXPBPost defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasSummary) {
    [self setSummary:other.summary];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCoverImageUrl) {
    [self setCoverImageUrl:other.coverImageUrl];
  }
  if (other.hasCreatedOn) {
    [self setCreatedOn:other.createdOn];
  }
  if (other.hasPostType) {
    [self setPostType:other.postType];
  }
  if (other.hasOrderValue) {
    [self setOrderValue:other.orderValue];
  }
  if (other.hasPostUrl) {
    [self setPostUrl:other.postUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPostBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPostBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setSummary:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 42: {
        [self setCoverImageUrl:[input readString]];
        break;
      }
      case 48: {
        [self setCreatedOn:[input readInt64]];
        break;
      }
      case 56: {
        TXPBPostType value = (TXPBPostType)[input readEnum];
        if (TXPBPostTypeIsValidValue(value)) {
          [self setPostType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        [self setOrderValue:[input readInt64]];
        break;
      }
      case 74: {
        [self setPostUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultPost.hasId;
}
- (SInt64) id {
  return resultPost.id;
}
- (TXPBPostBuilder*) setId:(SInt64) value {
  resultPost.hasId = YES;
  resultPost.id = value;
  return self;
}
- (TXPBPostBuilder*) clearId {
  resultPost.hasId = NO;
  resultPost.id = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultPost.hasTitle;
}
- (NSString*) title {
  return resultPost.title;
}
- (TXPBPostBuilder*) setTitle:(NSString*) value {
  resultPost.hasTitle = YES;
  resultPost.title = value;
  return self;
}
- (TXPBPostBuilder*) clearTitle {
  resultPost.hasTitle = NO;
  resultPost.title = @"";
  return self;
}
- (BOOL) hasSummary {
  return resultPost.hasSummary;
}
- (NSString*) summary {
  return resultPost.summary;
}
- (TXPBPostBuilder*) setSummary:(NSString*) value {
  resultPost.hasSummary = YES;
  resultPost.summary = value;
  return self;
}
- (TXPBPostBuilder*) clearSummary {
  resultPost.hasSummary = NO;
  resultPost.summary = @"";
  return self;
}
- (BOOL) hasContent {
  return resultPost.hasContent;
}
- (NSString*) content {
  return resultPost.content;
}
- (TXPBPostBuilder*) setContent:(NSString*) value {
  resultPost.hasContent = YES;
  resultPost.content = value;
  return self;
}
- (TXPBPostBuilder*) clearContent {
  resultPost.hasContent = NO;
  resultPost.content = @"";
  return self;
}
- (BOOL) hasCoverImageUrl {
  return resultPost.hasCoverImageUrl;
}
- (NSString*) coverImageUrl {
  return resultPost.coverImageUrl;
}
- (TXPBPostBuilder*) setCoverImageUrl:(NSString*) value {
  resultPost.hasCoverImageUrl = YES;
  resultPost.coverImageUrl = value;
  return self;
}
- (TXPBPostBuilder*) clearCoverImageUrl {
  resultPost.hasCoverImageUrl = NO;
  resultPost.coverImageUrl = @"";
  return self;
}
- (BOOL) hasCreatedOn {
  return resultPost.hasCreatedOn;
}
- (SInt64) createdOn {
  return resultPost.createdOn;
}
- (TXPBPostBuilder*) setCreatedOn:(SInt64) value {
  resultPost.hasCreatedOn = YES;
  resultPost.createdOn = value;
  return self;
}
- (TXPBPostBuilder*) clearCreatedOn {
  resultPost.hasCreatedOn = NO;
  resultPost.createdOn = 0L;
  return self;
}
- (BOOL) hasPostType {
  return resultPost.hasPostType;
}
- (TXPBPostType) postType {
  return resultPost.postType;
}
- (TXPBPostBuilder*) setPostType:(TXPBPostType) value {
  resultPost.hasPostType = YES;
  resultPost.postType = value;
  return self;
}
- (TXPBPostBuilder*) clearPostType {
  resultPost.hasPostType = NO;
  resultPost.postType = TXPBPostTypeActivity;
  return self;
}
- (BOOL) hasOrderValue {
  return resultPost.hasOrderValue;
}
- (SInt64) orderValue {
  return resultPost.orderValue;
}
- (TXPBPostBuilder*) setOrderValue:(SInt64) value {
  resultPost.hasOrderValue = YES;
  resultPost.orderValue = value;
  return self;
}
- (TXPBPostBuilder*) clearOrderValue {
  resultPost.hasOrderValue = NO;
  resultPost.orderValue = 0L;
  return self;
}
- (BOOL) hasPostUrl {
  return resultPost.hasPostUrl;
}
- (NSString*) postUrl {
  return resultPost.postUrl;
}
- (TXPBPostBuilder*) setPostUrl:(NSString*) value {
  resultPost.hasPostUrl = YES;
  resultPost.postUrl = value;
  return self;
}
- (TXPBPostBuilder*) clearPostUrl {
  resultPost.hasPostUrl = NO;
  resultPost.postUrl = @"";
  return self;
}
@end

@interface TXPBFetchPostRequest ()
@property SInt64 gardenId;
@property SInt64 maxId;
@property SInt64 sinceId;
@property TXPBPostType postType;
@end

@implementation TXPBFetchPostRequest

- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasPostType {
  return !!hasPostType_;
}
- (void) setHasPostType:(BOOL) _value_ {
  hasPostType_ = !!_value_;
}
@synthesize postType;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenId = 0L;
    self.maxId = 0L;
    self.sinceId = 0L;
    self.postType = TXPBPostTypeActivity;
  }
  return self;
}
static TXPBFetchPostRequest* defaultTXPBFetchPostRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPostRequest class]) {
    defaultTXPBFetchPostRequestInstance = [[TXPBFetchPostRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPostRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPostRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenId) {
    return NO;
  }
  if (!self.hasPostType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenId) {
    [output writeInt64:1 value:self.gardenId];
  }
  if (self.hasMaxId) {
    [output writeInt64:2 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:3 value:self.sinceId];
  }
  if (self.hasPostType) {
    [output writeEnum:4 value:self.postType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenId) {
    size_ += computeInt64Size(1, self.gardenId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(2, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(3, self.sinceId);
  }
  if (self.hasPostType) {
    size_ += computeEnumSize(4, self.postType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPostRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchPostRequest*)[[[TXPBFetchPostRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchPostRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostRequest*)[[[TXPBFetchPostRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPostRequest*)[[[TXPBFetchPostRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPostRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostRequest*)[[[TXPBFetchPostRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPostRequest*)[[[TXPBFetchPostRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPostRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostRequest*)[[[TXPBFetchPostRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostRequestBuilder*) builder {
  return [[TXPBFetchPostRequestBuilder alloc] init];
}
+ (TXPBFetchPostRequestBuilder*) builderWithPrototype:(TXPBFetchPostRequest*) prototype {
  return [[TXPBFetchPostRequest builder] mergeFrom:prototype];
}
- (TXPBFetchPostRequestBuilder*) builder {
  return [TXPBFetchPostRequest builder];
}
- (TXPBFetchPostRequestBuilder*) toBuilder {
  return [TXPBFetchPostRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasPostType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postType", NSStringFromTXPBPostType(self.postType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasPostType) {
    [dictionary setObject: @(self.postType) forKey: @"postType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPostRequest class]]) {
    return NO;
  }
  TXPBFetchPostRequest *otherMessage = other;
  return
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasPostType == otherMessage.hasPostType &&
      (!self.hasPostType || self.postType == otherMessage.postType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasPostType) {
    hashCode = hashCode * 31 + self.postType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPostRequestBuilder()
@property (strong) TXPBFetchPostRequest* resultFetchPostRequest;
@end

@implementation TXPBFetchPostRequestBuilder
@synthesize resultFetchPostRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPostRequest = [[TXPBFetchPostRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPostRequest;
}
- (TXPBFetchPostRequestBuilder*) clear {
  self.resultFetchPostRequest = [[TXPBFetchPostRequest alloc] init];
  return self;
}
- (TXPBFetchPostRequestBuilder*) clone {
  return [TXPBFetchPostRequest builderWithPrototype:resultFetchPostRequest];
}
- (TXPBFetchPostRequest*) defaultInstance {
  return [TXPBFetchPostRequest defaultInstance];
}
- (TXPBFetchPostRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPostRequest*) buildPartial {
  TXPBFetchPostRequest* returnMe = resultFetchPostRequest;
  self.resultFetchPostRequest = nil;
  return returnMe;
}
- (TXPBFetchPostRequestBuilder*) mergeFrom:(TXPBFetchPostRequest*) other {
  if (other == [TXPBFetchPostRequest defaultInstance]) {
    return self;
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasPostType) {
    [self setPostType:other.postType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPostRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPostRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 16: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 24: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 32: {
        TXPBPostType value = (TXPBPostType)[input readEnum];
        if (TXPBPostTypeIsValidValue(value)) {
          [self setPostType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasGardenId {
  return resultFetchPostRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultFetchPostRequest.gardenId;
}
- (TXPBFetchPostRequestBuilder*) setGardenId:(SInt64) value {
  resultFetchPostRequest.hasGardenId = YES;
  resultFetchPostRequest.gardenId = value;
  return self;
}
- (TXPBFetchPostRequestBuilder*) clearGardenId {
  resultFetchPostRequest.hasGardenId = NO;
  resultFetchPostRequest.gardenId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchPostRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchPostRequest.maxId;
}
- (TXPBFetchPostRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchPostRequest.hasMaxId = YES;
  resultFetchPostRequest.maxId = value;
  return self;
}
- (TXPBFetchPostRequestBuilder*) clearMaxId {
  resultFetchPostRequest.hasMaxId = NO;
  resultFetchPostRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchPostRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchPostRequest.sinceId;
}
- (TXPBFetchPostRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchPostRequest.hasSinceId = YES;
  resultFetchPostRequest.sinceId = value;
  return self;
}
- (TXPBFetchPostRequestBuilder*) clearSinceId {
  resultFetchPostRequest.hasSinceId = NO;
  resultFetchPostRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasPostType {
  return resultFetchPostRequest.hasPostType;
}
- (TXPBPostType) postType {
  return resultFetchPostRequest.postType;
}
- (TXPBFetchPostRequestBuilder*) setPostType:(TXPBPostType) value {
  resultFetchPostRequest.hasPostType = YES;
  resultFetchPostRequest.postType = value;
  return self;
}
- (TXPBFetchPostRequestBuilder*) clearPostType {
  resultFetchPostRequest.hasPostType = NO;
  resultFetchPostRequest.postType = TXPBPostTypeActivity;
  return self;
}
@end

@interface TXPBFetchPostResponse ()
@property (strong) NSMutableArray * postArray;
@property BOOL hasMore;
@property SInt64 lastFetchTime;
@end

@implementation TXPBFetchPostResponse

@synthesize postArray;
@dynamic post;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (BOOL) hasLastFetchTime {
  return !!hasLastFetchTime_;
}
- (void) setHasLastFetchTime:(BOOL) _value_ {
  hasLastFetchTime_ = !!_value_;
}
@synthesize lastFetchTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
    self.lastFetchTime = 0L;
  }
  return self;
}
static TXPBFetchPostResponse* defaultTXPBFetchPostResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPostResponse class]) {
    defaultTXPBFetchPostResponseInstance = [[TXPBFetchPostResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPostResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPostResponseInstance;
}
- (NSArray *)post {
  return postArray;
}
- (TXPBPost*)postAtIndex:(NSUInteger)index {
  return [postArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitpost = YES;
   [self.post enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitpost = NO;
      *stop = YES;
    }
  }];
  if (!isInitpost) return isInitpost;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  if (self.hasLastFetchTime) {
    [output writeInt64:3 value:self.lastFetchTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  if (self.hasLastFetchTime) {
    size_ += computeInt64Size(3, self.lastFetchTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPostResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchPostResponse*)[[[TXPBFetchPostResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchPostResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostResponse*)[[[TXPBFetchPostResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPostResponse*)[[[TXPBFetchPostResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPostResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostResponse*)[[[TXPBFetchPostResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPostResponse*)[[[TXPBFetchPostResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPostResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostResponse*)[[[TXPBFetchPostResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostResponseBuilder*) builder {
  return [[TXPBFetchPostResponseBuilder alloc] init];
}
+ (TXPBFetchPostResponseBuilder*) builderWithPrototype:(TXPBFetchPostResponse*) prototype {
  return [[TXPBFetchPostResponse builder] mergeFrom:prototype];
}
- (TXPBFetchPostResponseBuilder*) builder {
  return [TXPBFetchPostResponse builder];
}
- (TXPBFetchPostResponseBuilder*) toBuilder {
  return [TXPBFetchPostResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"post"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  if (self.hasLastFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastFetchTime", [NSNumber numberWithLongLong:self.lastFetchTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBPost* element in self.postArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"post"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  if (self.hasLastFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastFetchTime] forKey: @"lastFetchTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPostResponse class]]) {
    return NO;
  }
  TXPBFetchPostResponse *otherMessage = other;
  return
      [self.postArray isEqualToArray:otherMessage.postArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      self.hasLastFetchTime == otherMessage.hasLastFetchTime &&
      (!self.hasLastFetchTime || self.lastFetchTime == otherMessage.lastFetchTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  if (self.hasLastFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastFetchTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPostResponseBuilder()
@property (strong) TXPBFetchPostResponse* resultFetchPostResponse;
@end

@implementation TXPBFetchPostResponseBuilder
@synthesize resultFetchPostResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPostResponse = [[TXPBFetchPostResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPostResponse;
}
- (TXPBFetchPostResponseBuilder*) clear {
  self.resultFetchPostResponse = [[TXPBFetchPostResponse alloc] init];
  return self;
}
- (TXPBFetchPostResponseBuilder*) clone {
  return [TXPBFetchPostResponse builderWithPrototype:resultFetchPostResponse];
}
- (TXPBFetchPostResponse*) defaultInstance {
  return [TXPBFetchPostResponse defaultInstance];
}
- (TXPBFetchPostResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPostResponse*) buildPartial {
  TXPBFetchPostResponse* returnMe = resultFetchPostResponse;
  self.resultFetchPostResponse = nil;
  return returnMe;
}
- (TXPBFetchPostResponseBuilder*) mergeFrom:(TXPBFetchPostResponse*) other {
  if (other == [TXPBFetchPostResponse defaultInstance]) {
    return self;
  }
  if (other.postArray.count > 0) {
    if (resultFetchPostResponse.postArray == nil) {
      resultFetchPostResponse.postArray = [[NSMutableArray alloc] initWithArray:other.postArray];
    } else {
      [resultFetchPostResponse.postArray addObjectsFromArray:other.postArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  if (other.hasLastFetchTime) {
    [self setLastFetchTime:other.lastFetchTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPostResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPostResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBPostBuilder* subBuilder = [TXPBPost builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPost:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 24: {
        [self setLastFetchTime:[input readInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)post {
  return resultFetchPostResponse.postArray;
}
- (TXPBPost*)postAtIndex:(NSUInteger)index {
  return [resultFetchPostResponse postAtIndex:index];
}
- (TXPBFetchPostResponseBuilder *)addPost:(TXPBPost*)value {
  if (resultFetchPostResponse.postArray == nil) {
    resultFetchPostResponse.postArray = [[NSMutableArray alloc]init];
  }
  [resultFetchPostResponse.postArray addObject:value];
  return self;
}
- (TXPBFetchPostResponseBuilder *)setPostArray:(NSArray *)array {
  resultFetchPostResponse.postArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchPostResponseBuilder *)clearPost {
  resultFetchPostResponse.postArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchPostResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchPostResponse.hasMore;
}
- (TXPBFetchPostResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchPostResponse.hasHasMore = YES;
  resultFetchPostResponse.hasMore = value;
  return self;
}
- (TXPBFetchPostResponseBuilder*) clearHasMore {
  resultFetchPostResponse.hasHasMore = NO;
  resultFetchPostResponse.hasMore = NO;
  return self;
}
- (BOOL) hasLastFetchTime {
  return resultFetchPostResponse.hasLastFetchTime;
}
- (SInt64) lastFetchTime {
  return resultFetchPostResponse.lastFetchTime;
}
- (TXPBFetchPostResponseBuilder*) setLastFetchTime:(SInt64) value {
  resultFetchPostResponse.hasLastFetchTime = YES;
  resultFetchPostResponse.lastFetchTime = value;
  return self;
}
- (TXPBFetchPostResponseBuilder*) clearLastFetchTime {
  resultFetchPostResponse.hasLastFetchTime = NO;
  resultFetchPostResponse.lastFetchTime = 0L;
  return self;
}
@end

@interface TXPBFetchPostDetailRequest ()
@property SInt64 postId;
@property TXPBPostType postType;
@end

@implementation TXPBFetchPostDetailRequest

- (BOOL) hasPostId {
  return !!hasPostId_;
}
- (void) setHasPostId:(BOOL) _value_ {
  hasPostId_ = !!_value_;
}
@synthesize postId;
- (BOOL) hasPostType {
  return !!hasPostType_;
}
- (void) setHasPostType:(BOOL) _value_ {
  hasPostType_ = !!_value_;
}
@synthesize postType;
- (instancetype) init {
  if ((self = [super init])) {
    self.postId = 0L;
    self.postType = TXPBPostTypeActivity;
  }
  return self;
}
static TXPBFetchPostDetailRequest* defaultTXPBFetchPostDetailRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPostDetailRequest class]) {
    defaultTXPBFetchPostDetailRequestInstance = [[TXPBFetchPostDetailRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPostDetailRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPostDetailRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPostId) {
    [output writeInt64:1 value:self.postId];
  }
  if (self.hasPostType) {
    [output writeEnum:2 value:self.postType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPostId) {
    size_ += computeInt64Size(1, self.postId);
  }
  if (self.hasPostType) {
    size_ += computeEnumSize(2, self.postType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPostDetailRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchPostDetailRequest*)[[[TXPBFetchPostDetailRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchPostDetailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostDetailRequest*)[[[TXPBFetchPostDetailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostDetailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPostDetailRequest*)[[[TXPBFetchPostDetailRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPostDetailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostDetailRequest*)[[[TXPBFetchPostDetailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPostDetailRequest*)[[[TXPBFetchPostDetailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPostDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostDetailRequest*)[[[TXPBFetchPostDetailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostDetailRequestBuilder*) builder {
  return [[TXPBFetchPostDetailRequestBuilder alloc] init];
}
+ (TXPBFetchPostDetailRequestBuilder*) builderWithPrototype:(TXPBFetchPostDetailRequest*) prototype {
  return [[TXPBFetchPostDetailRequest builder] mergeFrom:prototype];
}
- (TXPBFetchPostDetailRequestBuilder*) builder {
  return [TXPBFetchPostDetailRequest builder];
}
- (TXPBFetchPostDetailRequestBuilder*) toBuilder {
  return [TXPBFetchPostDetailRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPostId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postId", [NSNumber numberWithLongLong:self.postId]];
  }
  if (self.hasPostType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postType", NSStringFromTXPBPostType(self.postType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPostId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.postId] forKey: @"postId"];
  }
  if (self.hasPostType) {
    [dictionary setObject: @(self.postType) forKey: @"postType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPostDetailRequest class]]) {
    return NO;
  }
  TXPBFetchPostDetailRequest *otherMessage = other;
  return
      self.hasPostId == otherMessage.hasPostId &&
      (!self.hasPostId || self.postId == otherMessage.postId) &&
      self.hasPostType == otherMessage.hasPostType &&
      (!self.hasPostType || self.postType == otherMessage.postType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPostId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.postId] hash];
  }
  if (self.hasPostType) {
    hashCode = hashCode * 31 + self.postType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPostDetailRequestBuilder()
@property (strong) TXPBFetchPostDetailRequest* resultFetchPostDetailRequest;
@end

@implementation TXPBFetchPostDetailRequestBuilder
@synthesize resultFetchPostDetailRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPostDetailRequest = [[TXPBFetchPostDetailRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPostDetailRequest;
}
- (TXPBFetchPostDetailRequestBuilder*) clear {
  self.resultFetchPostDetailRequest = [[TXPBFetchPostDetailRequest alloc] init];
  return self;
}
- (TXPBFetchPostDetailRequestBuilder*) clone {
  return [TXPBFetchPostDetailRequest builderWithPrototype:resultFetchPostDetailRequest];
}
- (TXPBFetchPostDetailRequest*) defaultInstance {
  return [TXPBFetchPostDetailRequest defaultInstance];
}
- (TXPBFetchPostDetailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPostDetailRequest*) buildPartial {
  TXPBFetchPostDetailRequest* returnMe = resultFetchPostDetailRequest;
  self.resultFetchPostDetailRequest = nil;
  return returnMe;
}
- (TXPBFetchPostDetailRequestBuilder*) mergeFrom:(TXPBFetchPostDetailRequest*) other {
  if (other == [TXPBFetchPostDetailRequest defaultInstance]) {
    return self;
  }
  if (other.hasPostId) {
    [self setPostId:other.postId];
  }
  if (other.hasPostType) {
    [self setPostType:other.postType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPostDetailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPostDetailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPostId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBPostType value = (TXPBPostType)[input readEnum];
        if (TXPBPostTypeIsValidValue(value)) {
          [self setPostType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasPostId {
  return resultFetchPostDetailRequest.hasPostId;
}
- (SInt64) postId {
  return resultFetchPostDetailRequest.postId;
}
- (TXPBFetchPostDetailRequestBuilder*) setPostId:(SInt64) value {
  resultFetchPostDetailRequest.hasPostId = YES;
  resultFetchPostDetailRequest.postId = value;
  return self;
}
- (TXPBFetchPostDetailRequestBuilder*) clearPostId {
  resultFetchPostDetailRequest.hasPostId = NO;
  resultFetchPostDetailRequest.postId = 0L;
  return self;
}
- (BOOL) hasPostType {
  return resultFetchPostDetailRequest.hasPostType;
}
- (TXPBPostType) postType {
  return resultFetchPostDetailRequest.postType;
}
- (TXPBFetchPostDetailRequestBuilder*) setPostType:(TXPBPostType) value {
  resultFetchPostDetailRequest.hasPostType = YES;
  resultFetchPostDetailRequest.postType = value;
  return self;
}
- (TXPBFetchPostDetailRequestBuilder*) clearPostType {
  resultFetchPostDetailRequest.hasPostType = NO;
  resultFetchPostDetailRequest.postType = TXPBPostTypeActivity;
  return self;
}
@end

@interface TXPBFetchPostDetailResponse ()
@property (strong) TXPBPost* post;
@property (strong) NSString* postHtml;
@property (strong) NSString* postUrl;
@end

@implementation TXPBFetchPostDetailResponse

- (BOOL) hasPost {
  return !!hasPost_;
}
- (void) setHasPost:(BOOL) _value_ {
  hasPost_ = !!_value_;
}
@synthesize post;
- (BOOL) hasPostHtml {
  return !!hasPostHtml_;
}
- (void) setHasPostHtml:(BOOL) _value_ {
  hasPostHtml_ = !!_value_;
}
@synthesize postHtml;
- (BOOL) hasPostUrl {
  return !!hasPostUrl_;
}
- (void) setHasPostUrl:(BOOL) _value_ {
  hasPostUrl_ = !!_value_;
}
@synthesize postUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.post = [TXPBPost defaultInstance];
    self.postHtml = @"";
    self.postUrl = @"";
  }
  return self;
}
static TXPBFetchPostDetailResponse* defaultTXPBFetchPostDetailResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPostDetailResponse class]) {
    defaultTXPBFetchPostDetailResponseInstance = [[TXPBFetchPostDetailResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPostDetailResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPostDetailResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasPost) {
    if (!self.post.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPost) {
    [output writeMessage:1 value:self.post];
  }
  if (self.hasPostHtml) {
    [output writeString:2 value:self.postHtml];
  }
  if (self.hasPostUrl) {
    [output writeString:3 value:self.postUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPost) {
    size_ += computeMessageSize(1, self.post);
  }
  if (self.hasPostHtml) {
    size_ += computeStringSize(2, self.postHtml);
  }
  if (self.hasPostUrl) {
    size_ += computeStringSize(3, self.postUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPostDetailResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchPostDetailResponse*)[[[TXPBFetchPostDetailResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchPostDetailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostDetailResponse*)[[[TXPBFetchPostDetailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostDetailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPostDetailResponse*)[[[TXPBFetchPostDetailResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPostDetailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostDetailResponse*)[[[TXPBFetchPostDetailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPostDetailResponse*)[[[TXPBFetchPostDetailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPostDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostDetailResponse*)[[[TXPBFetchPostDetailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostDetailResponseBuilder*) builder {
  return [[TXPBFetchPostDetailResponseBuilder alloc] init];
}
+ (TXPBFetchPostDetailResponseBuilder*) builderWithPrototype:(TXPBFetchPostDetailResponse*) prototype {
  return [[TXPBFetchPostDetailResponse builder] mergeFrom:prototype];
}
- (TXPBFetchPostDetailResponseBuilder*) builder {
  return [TXPBFetchPostDetailResponse builder];
}
- (TXPBFetchPostDetailResponseBuilder*) toBuilder {
  return [TXPBFetchPostDetailResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPost) {
    [output appendFormat:@"%@%@ {\n", indent, @"post"];
    [self.post writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPostHtml) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postHtml", self.postHtml];
  }
  if (self.hasPostUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postUrl", self.postUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPost) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.post storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"post"];
  }
  if (self.hasPostHtml) {
    [dictionary setObject: self.postHtml forKey: @"postHtml"];
  }
  if (self.hasPostUrl) {
    [dictionary setObject: self.postUrl forKey: @"postUrl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPostDetailResponse class]]) {
    return NO;
  }
  TXPBFetchPostDetailResponse *otherMessage = other;
  return
      self.hasPost == otherMessage.hasPost &&
      (!self.hasPost || [self.post isEqual:otherMessage.post]) &&
      self.hasPostHtml == otherMessage.hasPostHtml &&
      (!self.hasPostHtml || [self.postHtml isEqual:otherMessage.postHtml]) &&
      self.hasPostUrl == otherMessage.hasPostUrl &&
      (!self.hasPostUrl || [self.postUrl isEqual:otherMessage.postUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPost) {
    hashCode = hashCode * 31 + [self.post hash];
  }
  if (self.hasPostHtml) {
    hashCode = hashCode * 31 + [self.postHtml hash];
  }
  if (self.hasPostUrl) {
    hashCode = hashCode * 31 + [self.postUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPostDetailResponseBuilder()
@property (strong) TXPBFetchPostDetailResponse* resultFetchPostDetailResponse;
@end

@implementation TXPBFetchPostDetailResponseBuilder
@synthesize resultFetchPostDetailResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPostDetailResponse = [[TXPBFetchPostDetailResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPostDetailResponse;
}
- (TXPBFetchPostDetailResponseBuilder*) clear {
  self.resultFetchPostDetailResponse = [[TXPBFetchPostDetailResponse alloc] init];
  return self;
}
- (TXPBFetchPostDetailResponseBuilder*) clone {
  return [TXPBFetchPostDetailResponse builderWithPrototype:resultFetchPostDetailResponse];
}
- (TXPBFetchPostDetailResponse*) defaultInstance {
  return [TXPBFetchPostDetailResponse defaultInstance];
}
- (TXPBFetchPostDetailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPostDetailResponse*) buildPartial {
  TXPBFetchPostDetailResponse* returnMe = resultFetchPostDetailResponse;
  self.resultFetchPostDetailResponse = nil;
  return returnMe;
}
- (TXPBFetchPostDetailResponseBuilder*) mergeFrom:(TXPBFetchPostDetailResponse*) other {
  if (other == [TXPBFetchPostDetailResponse defaultInstance]) {
    return self;
  }
  if (other.hasPost) {
    [self mergePost:other.post];
  }
  if (other.hasPostHtml) {
    [self setPostHtml:other.postHtml];
  }
  if (other.hasPostUrl) {
    [self setPostUrl:other.postUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPostDetailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPostDetailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBPostBuilder* subBuilder = [TXPBPost builder];
        if (self.hasPost) {
          [subBuilder mergeFrom:self.post];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPost:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setPostHtml:[input readString]];
        break;
      }
      case 26: {
        [self setPostUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPost {
  return resultFetchPostDetailResponse.hasPost;
}
- (TXPBPost*) post {
  return resultFetchPostDetailResponse.post;
}
- (TXPBFetchPostDetailResponseBuilder*) setPost:(TXPBPost*) value {
  resultFetchPostDetailResponse.hasPost = YES;
  resultFetchPostDetailResponse.post = value;
  return self;
}
- (TXPBFetchPostDetailResponseBuilder*) setPostBuilder:(TXPBPostBuilder*) builderForValue {
  return [self setPost:[builderForValue build]];
}
- (TXPBFetchPostDetailResponseBuilder*) mergePost:(TXPBPost*) value {
  if (resultFetchPostDetailResponse.hasPost &&
      resultFetchPostDetailResponse.post != [TXPBPost defaultInstance]) {
    resultFetchPostDetailResponse.post =
      [[[TXPBPost builderWithPrototype:resultFetchPostDetailResponse.post] mergeFrom:value] buildPartial];
  } else {
    resultFetchPostDetailResponse.post = value;
  }
  resultFetchPostDetailResponse.hasPost = YES;
  return self;
}
- (TXPBFetchPostDetailResponseBuilder*) clearPost {
  resultFetchPostDetailResponse.hasPost = NO;
  resultFetchPostDetailResponse.post = [TXPBPost defaultInstance];
  return self;
}
- (BOOL) hasPostHtml {
  return resultFetchPostDetailResponse.hasPostHtml;
}
- (NSString*) postHtml {
  return resultFetchPostDetailResponse.postHtml;
}
- (TXPBFetchPostDetailResponseBuilder*) setPostHtml:(NSString*) value {
  resultFetchPostDetailResponse.hasPostHtml = YES;
  resultFetchPostDetailResponse.postHtml = value;
  return self;
}
- (TXPBFetchPostDetailResponseBuilder*) clearPostHtml {
  resultFetchPostDetailResponse.hasPostHtml = NO;
  resultFetchPostDetailResponse.postHtml = @"";
  return self;
}
- (BOOL) hasPostUrl {
  return resultFetchPostDetailResponse.hasPostUrl;
}
- (NSString*) postUrl {
  return resultFetchPostDetailResponse.postUrl;
}
- (TXPBFetchPostDetailResponseBuilder*) setPostUrl:(NSString*) value {
  resultFetchPostDetailResponse.hasPostUrl = YES;
  resultFetchPostDetailResponse.postUrl = value;
  return self;
}
- (TXPBFetchPostDetailResponseBuilder*) clearPostUrl {
  resultFetchPostDetailResponse.hasPostUrl = NO;
  resultFetchPostDetailResponse.postUrl = @"";
  return self;
}
@end

@interface TXPBFetchGardenIntroRequest ()
@end

@implementation TXPBFetchGardenIntroRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchGardenIntroRequest* defaultTXPBFetchGardenIntroRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchGardenIntroRequest class]) {
    defaultTXPBFetchGardenIntroRequestInstance = [[TXPBFetchGardenIntroRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchGardenIntroRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchGardenIntroRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchGardenIntroRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchGardenIntroRequest*)[[[TXPBFetchGardenIntroRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchGardenIntroRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenIntroRequest*)[[[TXPBFetchGardenIntroRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenIntroRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchGardenIntroRequest*)[[[TXPBFetchGardenIntroRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchGardenIntroRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenIntroRequest*)[[[TXPBFetchGardenIntroRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenIntroRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchGardenIntroRequest*)[[[TXPBFetchGardenIntroRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchGardenIntroRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenIntroRequest*)[[[TXPBFetchGardenIntroRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenIntroRequestBuilder*) builder {
  return [[TXPBFetchGardenIntroRequestBuilder alloc] init];
}
+ (TXPBFetchGardenIntroRequestBuilder*) builderWithPrototype:(TXPBFetchGardenIntroRequest*) prototype {
  return [[TXPBFetchGardenIntroRequest builder] mergeFrom:prototype];
}
- (TXPBFetchGardenIntroRequestBuilder*) builder {
  return [TXPBFetchGardenIntroRequest builder];
}
- (TXPBFetchGardenIntroRequestBuilder*) toBuilder {
  return [TXPBFetchGardenIntroRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchGardenIntroRequest class]]) {
    return NO;
  }
  TXPBFetchGardenIntroRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchGardenIntroRequestBuilder()
@property (strong) TXPBFetchGardenIntroRequest* resultFetchGardenIntroRequest;
@end

@implementation TXPBFetchGardenIntroRequestBuilder
@synthesize resultFetchGardenIntroRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchGardenIntroRequest = [[TXPBFetchGardenIntroRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchGardenIntroRequest;
}
- (TXPBFetchGardenIntroRequestBuilder*) clear {
  self.resultFetchGardenIntroRequest = [[TXPBFetchGardenIntroRequest alloc] init];
  return self;
}
- (TXPBFetchGardenIntroRequestBuilder*) clone {
  return [TXPBFetchGardenIntroRequest builderWithPrototype:resultFetchGardenIntroRequest];
}
- (TXPBFetchGardenIntroRequest*) defaultInstance {
  return [TXPBFetchGardenIntroRequest defaultInstance];
}
- (TXPBFetchGardenIntroRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchGardenIntroRequest*) buildPartial {
  TXPBFetchGardenIntroRequest* returnMe = resultFetchGardenIntroRequest;
  self.resultFetchGardenIntroRequest = nil;
  return returnMe;
}
- (TXPBFetchGardenIntroRequestBuilder*) mergeFrom:(TXPBFetchGardenIntroRequest*) other {
  if (other == [TXPBFetchGardenIntroRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchGardenIntroRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchGardenIntroRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchGardenIntroResponse ()
@property (strong) TXPBPost* post;
@property (strong) NSString* postHtml;
@property (strong) NSString* postUrl;
@end

@implementation TXPBFetchGardenIntroResponse

- (BOOL) hasPost {
  return !!hasPost_;
}
- (void) setHasPost:(BOOL) _value_ {
  hasPost_ = !!_value_;
}
@synthesize post;
- (BOOL) hasPostHtml {
  return !!hasPostHtml_;
}
- (void) setHasPostHtml:(BOOL) _value_ {
  hasPostHtml_ = !!_value_;
}
@synthesize postHtml;
- (BOOL) hasPostUrl {
  return !!hasPostUrl_;
}
- (void) setHasPostUrl:(BOOL) _value_ {
  hasPostUrl_ = !!_value_;
}
@synthesize postUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.post = [TXPBPost defaultInstance];
    self.postHtml = @"";
    self.postUrl = @"";
  }
  return self;
}
static TXPBFetchGardenIntroResponse* defaultTXPBFetchGardenIntroResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchGardenIntroResponse class]) {
    defaultTXPBFetchGardenIntroResponseInstance = [[TXPBFetchGardenIntroResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchGardenIntroResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchGardenIntroResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasPost) {
    if (!self.post.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPost) {
    [output writeMessage:1 value:self.post];
  }
  if (self.hasPostHtml) {
    [output writeString:2 value:self.postHtml];
  }
  if (self.hasPostUrl) {
    [output writeString:3 value:self.postUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPost) {
    size_ += computeMessageSize(1, self.post);
  }
  if (self.hasPostHtml) {
    size_ += computeStringSize(2, self.postHtml);
  }
  if (self.hasPostUrl) {
    size_ += computeStringSize(3, self.postUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchGardenIntroResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchGardenIntroResponse*)[[[TXPBFetchGardenIntroResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchGardenIntroResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenIntroResponse*)[[[TXPBFetchGardenIntroResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenIntroResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchGardenIntroResponse*)[[[TXPBFetchGardenIntroResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchGardenIntroResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenIntroResponse*)[[[TXPBFetchGardenIntroResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenIntroResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchGardenIntroResponse*)[[[TXPBFetchGardenIntroResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchGardenIntroResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchGardenIntroResponse*)[[[TXPBFetchGardenIntroResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchGardenIntroResponseBuilder*) builder {
  return [[TXPBFetchGardenIntroResponseBuilder alloc] init];
}
+ (TXPBFetchGardenIntroResponseBuilder*) builderWithPrototype:(TXPBFetchGardenIntroResponse*) prototype {
  return [[TXPBFetchGardenIntroResponse builder] mergeFrom:prototype];
}
- (TXPBFetchGardenIntroResponseBuilder*) builder {
  return [TXPBFetchGardenIntroResponse builder];
}
- (TXPBFetchGardenIntroResponseBuilder*) toBuilder {
  return [TXPBFetchGardenIntroResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPost) {
    [output appendFormat:@"%@%@ {\n", indent, @"post"];
    [self.post writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPostHtml) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postHtml", self.postHtml];
  }
  if (self.hasPostUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postUrl", self.postUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPost) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.post storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"post"];
  }
  if (self.hasPostHtml) {
    [dictionary setObject: self.postHtml forKey: @"postHtml"];
  }
  if (self.hasPostUrl) {
    [dictionary setObject: self.postUrl forKey: @"postUrl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchGardenIntroResponse class]]) {
    return NO;
  }
  TXPBFetchGardenIntroResponse *otherMessage = other;
  return
      self.hasPost == otherMessage.hasPost &&
      (!self.hasPost || [self.post isEqual:otherMessage.post]) &&
      self.hasPostHtml == otherMessage.hasPostHtml &&
      (!self.hasPostHtml || [self.postHtml isEqual:otherMessage.postHtml]) &&
      self.hasPostUrl == otherMessage.hasPostUrl &&
      (!self.hasPostUrl || [self.postUrl isEqual:otherMessage.postUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPost) {
    hashCode = hashCode * 31 + [self.post hash];
  }
  if (self.hasPostHtml) {
    hashCode = hashCode * 31 + [self.postHtml hash];
  }
  if (self.hasPostUrl) {
    hashCode = hashCode * 31 + [self.postUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchGardenIntroResponseBuilder()
@property (strong) TXPBFetchGardenIntroResponse* resultFetchGardenIntroResponse;
@end

@implementation TXPBFetchGardenIntroResponseBuilder
@synthesize resultFetchGardenIntroResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchGardenIntroResponse = [[TXPBFetchGardenIntroResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchGardenIntroResponse;
}
- (TXPBFetchGardenIntroResponseBuilder*) clear {
  self.resultFetchGardenIntroResponse = [[TXPBFetchGardenIntroResponse alloc] init];
  return self;
}
- (TXPBFetchGardenIntroResponseBuilder*) clone {
  return [TXPBFetchGardenIntroResponse builderWithPrototype:resultFetchGardenIntroResponse];
}
- (TXPBFetchGardenIntroResponse*) defaultInstance {
  return [TXPBFetchGardenIntroResponse defaultInstance];
}
- (TXPBFetchGardenIntroResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchGardenIntroResponse*) buildPartial {
  TXPBFetchGardenIntroResponse* returnMe = resultFetchGardenIntroResponse;
  self.resultFetchGardenIntroResponse = nil;
  return returnMe;
}
- (TXPBFetchGardenIntroResponseBuilder*) mergeFrom:(TXPBFetchGardenIntroResponse*) other {
  if (other == [TXPBFetchGardenIntroResponse defaultInstance]) {
    return self;
  }
  if (other.hasPost) {
    [self mergePost:other.post];
  }
  if (other.hasPostHtml) {
    [self setPostHtml:other.postHtml];
  }
  if (other.hasPostUrl) {
    [self setPostUrl:other.postUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchGardenIntroResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchGardenIntroResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBPostBuilder* subBuilder = [TXPBPost builder];
        if (self.hasPost) {
          [subBuilder mergeFrom:self.post];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPost:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setPostHtml:[input readString]];
        break;
      }
      case 26: {
        [self setPostUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPost {
  return resultFetchGardenIntroResponse.hasPost;
}
- (TXPBPost*) post {
  return resultFetchGardenIntroResponse.post;
}
- (TXPBFetchGardenIntroResponseBuilder*) setPost:(TXPBPost*) value {
  resultFetchGardenIntroResponse.hasPost = YES;
  resultFetchGardenIntroResponse.post = value;
  return self;
}
- (TXPBFetchGardenIntroResponseBuilder*) setPostBuilder:(TXPBPostBuilder*) builderForValue {
  return [self setPost:[builderForValue build]];
}
- (TXPBFetchGardenIntroResponseBuilder*) mergePost:(TXPBPost*) value {
  if (resultFetchGardenIntroResponse.hasPost &&
      resultFetchGardenIntroResponse.post != [TXPBPost defaultInstance]) {
    resultFetchGardenIntroResponse.post =
      [[[TXPBPost builderWithPrototype:resultFetchGardenIntroResponse.post] mergeFrom:value] buildPartial];
  } else {
    resultFetchGardenIntroResponse.post = value;
  }
  resultFetchGardenIntroResponse.hasPost = YES;
  return self;
}
- (TXPBFetchGardenIntroResponseBuilder*) clearPost {
  resultFetchGardenIntroResponse.hasPost = NO;
  resultFetchGardenIntroResponse.post = [TXPBPost defaultInstance];
  return self;
}
- (BOOL) hasPostHtml {
  return resultFetchGardenIntroResponse.hasPostHtml;
}
- (NSString*) postHtml {
  return resultFetchGardenIntroResponse.postHtml;
}
- (TXPBFetchGardenIntroResponseBuilder*) setPostHtml:(NSString*) value {
  resultFetchGardenIntroResponse.hasPostHtml = YES;
  resultFetchGardenIntroResponse.postHtml = value;
  return self;
}
- (TXPBFetchGardenIntroResponseBuilder*) clearPostHtml {
  resultFetchGardenIntroResponse.hasPostHtml = NO;
  resultFetchGardenIntroResponse.postHtml = @"";
  return self;
}
- (BOOL) hasPostUrl {
  return resultFetchGardenIntroResponse.hasPostUrl;
}
- (NSString*) postUrl {
  return resultFetchGardenIntroResponse.postUrl;
}
- (TXPBFetchGardenIntroResponseBuilder*) setPostUrl:(NSString*) value {
  resultFetchGardenIntroResponse.hasPostUrl = YES;
  resultFetchGardenIntroResponse.postUrl = value;
  return self;
}
- (TXPBFetchGardenIntroResponseBuilder*) clearPostUrl {
  resultFetchGardenIntroResponse.hasPostUrl = NO;
  resultFetchGardenIntroResponse.postUrl = @"";
  return self;
}
@end

@interface TXPBFetchAgreementRequest ()
@end

@implementation TXPBFetchAgreementRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchAgreementRequest* defaultTXPBFetchAgreementRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAgreementRequest class]) {
    defaultTXPBFetchAgreementRequestInstance = [[TXPBFetchAgreementRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAgreementRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAgreementRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAgreementRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchAgreementRequest*)[[[TXPBFetchAgreementRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchAgreementRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAgreementRequest*)[[[TXPBFetchAgreementRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAgreementRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAgreementRequest*)[[[TXPBFetchAgreementRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAgreementRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAgreementRequest*)[[[TXPBFetchAgreementRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAgreementRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAgreementRequest*)[[[TXPBFetchAgreementRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAgreementRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAgreementRequest*)[[[TXPBFetchAgreementRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAgreementRequestBuilder*) builder {
  return [[TXPBFetchAgreementRequestBuilder alloc] init];
}
+ (TXPBFetchAgreementRequestBuilder*) builderWithPrototype:(TXPBFetchAgreementRequest*) prototype {
  return [[TXPBFetchAgreementRequest builder] mergeFrom:prototype];
}
- (TXPBFetchAgreementRequestBuilder*) builder {
  return [TXPBFetchAgreementRequest builder];
}
- (TXPBFetchAgreementRequestBuilder*) toBuilder {
  return [TXPBFetchAgreementRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAgreementRequest class]]) {
    return NO;
  }
  TXPBFetchAgreementRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAgreementRequestBuilder()
@property (strong) TXPBFetchAgreementRequest* resultFetchAgreementRequest;
@end

@implementation TXPBFetchAgreementRequestBuilder
@synthesize resultFetchAgreementRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAgreementRequest = [[TXPBFetchAgreementRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAgreementRequest;
}
- (TXPBFetchAgreementRequestBuilder*) clear {
  self.resultFetchAgreementRequest = [[TXPBFetchAgreementRequest alloc] init];
  return self;
}
- (TXPBFetchAgreementRequestBuilder*) clone {
  return [TXPBFetchAgreementRequest builderWithPrototype:resultFetchAgreementRequest];
}
- (TXPBFetchAgreementRequest*) defaultInstance {
  return [TXPBFetchAgreementRequest defaultInstance];
}
- (TXPBFetchAgreementRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAgreementRequest*) buildPartial {
  TXPBFetchAgreementRequest* returnMe = resultFetchAgreementRequest;
  self.resultFetchAgreementRequest = nil;
  return returnMe;
}
- (TXPBFetchAgreementRequestBuilder*) mergeFrom:(TXPBFetchAgreementRequest*) other {
  if (other == [TXPBFetchAgreementRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAgreementRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAgreementRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchAgreementResponse ()
@property (strong) TXPBPost* post;
@property (strong) NSString* postHtml;
@property (strong) NSString* postUrl;
@end

@implementation TXPBFetchAgreementResponse

- (BOOL) hasPost {
  return !!hasPost_;
}
- (void) setHasPost:(BOOL) _value_ {
  hasPost_ = !!_value_;
}
@synthesize post;
- (BOOL) hasPostHtml {
  return !!hasPostHtml_;
}
- (void) setHasPostHtml:(BOOL) _value_ {
  hasPostHtml_ = !!_value_;
}
@synthesize postHtml;
- (BOOL) hasPostUrl {
  return !!hasPostUrl_;
}
- (void) setHasPostUrl:(BOOL) _value_ {
  hasPostUrl_ = !!_value_;
}
@synthesize postUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.post = [TXPBPost defaultInstance];
    self.postHtml = @"";
    self.postUrl = @"";
  }
  return self;
}
static TXPBFetchAgreementResponse* defaultTXPBFetchAgreementResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAgreementResponse class]) {
    defaultTXPBFetchAgreementResponseInstance = [[TXPBFetchAgreementResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAgreementResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAgreementResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasPost) {
    if (!self.post.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPost) {
    [output writeMessage:1 value:self.post];
  }
  if (self.hasPostHtml) {
    [output writeString:2 value:self.postHtml];
  }
  if (self.hasPostUrl) {
    [output writeString:3 value:self.postUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPost) {
    size_ += computeMessageSize(1, self.post);
  }
  if (self.hasPostHtml) {
    size_ += computeStringSize(2, self.postHtml);
  }
  if (self.hasPostUrl) {
    size_ += computeStringSize(3, self.postUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAgreementResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchAgreementResponse*)[[[TXPBFetchAgreementResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchAgreementResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAgreementResponse*)[[[TXPBFetchAgreementResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAgreementResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAgreementResponse*)[[[TXPBFetchAgreementResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAgreementResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAgreementResponse*)[[[TXPBFetchAgreementResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAgreementResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAgreementResponse*)[[[TXPBFetchAgreementResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAgreementResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAgreementResponse*)[[[TXPBFetchAgreementResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAgreementResponseBuilder*) builder {
  return [[TXPBFetchAgreementResponseBuilder alloc] init];
}
+ (TXPBFetchAgreementResponseBuilder*) builderWithPrototype:(TXPBFetchAgreementResponse*) prototype {
  return [[TXPBFetchAgreementResponse builder] mergeFrom:prototype];
}
- (TXPBFetchAgreementResponseBuilder*) builder {
  return [TXPBFetchAgreementResponse builder];
}
- (TXPBFetchAgreementResponseBuilder*) toBuilder {
  return [TXPBFetchAgreementResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPost) {
    [output appendFormat:@"%@%@ {\n", indent, @"post"];
    [self.post writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasPostHtml) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postHtml", self.postHtml];
  }
  if (self.hasPostUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"postUrl", self.postUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPost) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.post storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"post"];
  }
  if (self.hasPostHtml) {
    [dictionary setObject: self.postHtml forKey: @"postHtml"];
  }
  if (self.hasPostUrl) {
    [dictionary setObject: self.postUrl forKey: @"postUrl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAgreementResponse class]]) {
    return NO;
  }
  TXPBFetchAgreementResponse *otherMessage = other;
  return
      self.hasPost == otherMessage.hasPost &&
      (!self.hasPost || [self.post isEqual:otherMessage.post]) &&
      self.hasPostHtml == otherMessage.hasPostHtml &&
      (!self.hasPostHtml || [self.postHtml isEqual:otherMessage.postHtml]) &&
      self.hasPostUrl == otherMessage.hasPostUrl &&
      (!self.hasPostUrl || [self.postUrl isEqual:otherMessage.postUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPost) {
    hashCode = hashCode * 31 + [self.post hash];
  }
  if (self.hasPostHtml) {
    hashCode = hashCode * 31 + [self.postHtml hash];
  }
  if (self.hasPostUrl) {
    hashCode = hashCode * 31 + [self.postUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAgreementResponseBuilder()
@property (strong) TXPBFetchAgreementResponse* resultFetchAgreementResponse;
@end

@implementation TXPBFetchAgreementResponseBuilder
@synthesize resultFetchAgreementResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAgreementResponse = [[TXPBFetchAgreementResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAgreementResponse;
}
- (TXPBFetchAgreementResponseBuilder*) clear {
  self.resultFetchAgreementResponse = [[TXPBFetchAgreementResponse alloc] init];
  return self;
}
- (TXPBFetchAgreementResponseBuilder*) clone {
  return [TXPBFetchAgreementResponse builderWithPrototype:resultFetchAgreementResponse];
}
- (TXPBFetchAgreementResponse*) defaultInstance {
  return [TXPBFetchAgreementResponse defaultInstance];
}
- (TXPBFetchAgreementResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAgreementResponse*) buildPartial {
  TXPBFetchAgreementResponse* returnMe = resultFetchAgreementResponse;
  self.resultFetchAgreementResponse = nil;
  return returnMe;
}
- (TXPBFetchAgreementResponseBuilder*) mergeFrom:(TXPBFetchAgreementResponse*) other {
  if (other == [TXPBFetchAgreementResponse defaultInstance]) {
    return self;
  }
  if (other.hasPost) {
    [self mergePost:other.post];
  }
  if (other.hasPostHtml) {
    [self setPostHtml:other.postHtml];
  }
  if (other.hasPostUrl) {
    [self setPostUrl:other.postUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAgreementResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAgreementResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBPostBuilder* subBuilder = [TXPBPost builder];
        if (self.hasPost) {
          [subBuilder mergeFrom:self.post];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPost:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setPostHtml:[input readString]];
        break;
      }
      case 26: {
        [self setPostUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasPost {
  return resultFetchAgreementResponse.hasPost;
}
- (TXPBPost*) post {
  return resultFetchAgreementResponse.post;
}
- (TXPBFetchAgreementResponseBuilder*) setPost:(TXPBPost*) value {
  resultFetchAgreementResponse.hasPost = YES;
  resultFetchAgreementResponse.post = value;
  return self;
}
- (TXPBFetchAgreementResponseBuilder*) setPostBuilder:(TXPBPostBuilder*) builderForValue {
  return [self setPost:[builderForValue build]];
}
- (TXPBFetchAgreementResponseBuilder*) mergePost:(TXPBPost*) value {
  if (resultFetchAgreementResponse.hasPost &&
      resultFetchAgreementResponse.post != [TXPBPost defaultInstance]) {
    resultFetchAgreementResponse.post =
      [[[TXPBPost builderWithPrototype:resultFetchAgreementResponse.post] mergeFrom:value] buildPartial];
  } else {
    resultFetchAgreementResponse.post = value;
  }
  resultFetchAgreementResponse.hasPost = YES;
  return self;
}
- (TXPBFetchAgreementResponseBuilder*) clearPost {
  resultFetchAgreementResponse.hasPost = NO;
  resultFetchAgreementResponse.post = [TXPBPost defaultInstance];
  return self;
}
- (BOOL) hasPostHtml {
  return resultFetchAgreementResponse.hasPostHtml;
}
- (NSString*) postHtml {
  return resultFetchAgreementResponse.postHtml;
}
- (TXPBFetchAgreementResponseBuilder*) setPostHtml:(NSString*) value {
  resultFetchAgreementResponse.hasPostHtml = YES;
  resultFetchAgreementResponse.postHtml = value;
  return self;
}
- (TXPBFetchAgreementResponseBuilder*) clearPostHtml {
  resultFetchAgreementResponse.hasPostHtml = NO;
  resultFetchAgreementResponse.postHtml = @"";
  return self;
}
- (BOOL) hasPostUrl {
  return resultFetchAgreementResponse.hasPostUrl;
}
- (NSString*) postUrl {
  return resultFetchAgreementResponse.postUrl;
}
- (TXPBFetchAgreementResponseBuilder*) setPostUrl:(NSString*) value {
  resultFetchAgreementResponse.hasPostUrl = YES;
  resultFetchAgreementResponse.postUrl = value;
  return self;
}
- (TXPBFetchAgreementResponseBuilder*) clearPostUrl {
  resultFetchAgreementResponse.hasPostUrl = NO;
  resultFetchAgreementResponse.postUrl = @"";
  return self;
}
@end

@interface TXPBPostGroup ()
@property SInt64 id;
@property (strong) NSMutableArray * postArray;
@end

@implementation TXPBPostGroup

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
@synthesize postArray;
@dynamic post;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
  }
  return self;
}
static TXPBPostGroup* defaultTXPBPostGroupInstance = nil;
+ (void) initialize {
  if (self == [TXPBPostGroup class]) {
    defaultTXPBPostGroupInstance = [[TXPBPostGroup alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPostGroupInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPostGroupInstance;
}
- (NSArray *)post {
  return postArray;
}
- (TXPBPost*)postAtIndex:(NSUInteger)index {
  return [postArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitpost = YES;
   [self.post enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitpost = NO;
      *stop = YES;
    }
  }];
  if (!isInitpost) return isInitpost;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPostGroup*) parseFromData:(NSData*) data {
  return (TXPBPostGroup*)[[[TXPBPostGroup builder] mergeFromData:data] build];
}
+ (TXPBPostGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPostGroup*)[[[TXPBPostGroup builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPostGroup*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPostGroup*)[[[TXPBPostGroup builder] mergeFromInputStream:input] build];
}
+ (TXPBPostGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPostGroup*)[[[TXPBPostGroup builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPostGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPostGroup*)[[[TXPBPostGroup builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPostGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPostGroup*)[[[TXPBPostGroup builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPostGroupBuilder*) builder {
  return [[TXPBPostGroupBuilder alloc] init];
}
+ (TXPBPostGroupBuilder*) builderWithPrototype:(TXPBPostGroup*) prototype {
  return [[TXPBPostGroup builder] mergeFrom:prototype];
}
- (TXPBPostGroupBuilder*) builder {
  return [TXPBPostGroup builder];
}
- (TXPBPostGroupBuilder*) toBuilder {
  return [TXPBPostGroup builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"post"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  for (TXPBPost* element in self.postArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"post"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPostGroup class]]) {
    return NO;
  }
  TXPBPostGroup *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      [self.postArray isEqualToArray:otherMessage.postArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  [self.postArray enumerateObjectsUsingBlock:^(TXPBPost *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPostGroupBuilder()
@property (strong) TXPBPostGroup* resultPostGroup;
@end

@implementation TXPBPostGroupBuilder
@synthesize resultPostGroup;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPostGroup = [[TXPBPostGroup alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPostGroup;
}
- (TXPBPostGroupBuilder*) clear {
  self.resultPostGroup = [[TXPBPostGroup alloc] init];
  return self;
}
- (TXPBPostGroupBuilder*) clone {
  return [TXPBPostGroup builderWithPrototype:resultPostGroup];
}
- (TXPBPostGroup*) defaultInstance {
  return [TXPBPostGroup defaultInstance];
}
- (TXPBPostGroup*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPostGroup*) buildPartial {
  TXPBPostGroup* returnMe = resultPostGroup;
  self.resultPostGroup = nil;
  return returnMe;
}
- (TXPBPostGroupBuilder*) mergeFrom:(TXPBPostGroup*) other {
  if (other == [TXPBPostGroup defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.postArray.count > 0) {
    if (resultPostGroup.postArray == nil) {
      resultPostGroup.postArray = [[NSMutableArray alloc] initWithArray:other.postArray];
    } else {
      [resultPostGroup.postArray addObjectsFromArray:other.postArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPostGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPostGroupBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        TXPBPostBuilder* subBuilder = [TXPBPost builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPost:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultPostGroup.hasId;
}
- (SInt64) id {
  return resultPostGroup.id;
}
- (TXPBPostGroupBuilder*) setId:(SInt64) value {
  resultPostGroup.hasId = YES;
  resultPostGroup.id = value;
  return self;
}
- (TXPBPostGroupBuilder*) clearId {
  resultPostGroup.hasId = NO;
  resultPostGroup.id = 0L;
  return self;
}
- (NSMutableArray *)post {
  return resultPostGroup.postArray;
}
- (TXPBPost*)postAtIndex:(NSUInteger)index {
  return [resultPostGroup postAtIndex:index];
}
- (TXPBPostGroupBuilder *)addPost:(TXPBPost*)value {
  if (resultPostGroup.postArray == nil) {
    resultPostGroup.postArray = [[NSMutableArray alloc]init];
  }
  [resultPostGroup.postArray addObject:value];
  return self;
}
- (TXPBPostGroupBuilder *)setPostArray:(NSArray *)array {
  resultPostGroup.postArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBPostGroupBuilder *)clearPost {
  resultPostGroup.postArray = nil;
  return self;
}
@end

@interface TXPBFetchPostGroupRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@property SInt64 gardenId;
@end

@implementation TXPBFetchPostGroupRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
    self.gardenId = 0L;
  }
  return self;
}
static TXPBFetchPostGroupRequest* defaultTXPBFetchPostGroupRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPostGroupRequest class]) {
    defaultTXPBFetchPostGroupRequestInstance = [[TXPBFetchPostGroupRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPostGroupRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPostGroupRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasGardenId) {
    [output writeInt64:3 value:self.gardenId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasGardenId) {
    size_ += computeInt64Size(3, self.gardenId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPostGroupRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchPostGroupRequest*)[[[TXPBFetchPostGroupRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchPostGroupRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostGroupRequest*)[[[TXPBFetchPostGroupRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostGroupRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPostGroupRequest*)[[[TXPBFetchPostGroupRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPostGroupRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostGroupRequest*)[[[TXPBFetchPostGroupRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostGroupRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPostGroupRequest*)[[[TXPBFetchPostGroupRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPostGroupRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostGroupRequest*)[[[TXPBFetchPostGroupRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostGroupRequestBuilder*) builder {
  return [[TXPBFetchPostGroupRequestBuilder alloc] init];
}
+ (TXPBFetchPostGroupRequestBuilder*) builderWithPrototype:(TXPBFetchPostGroupRequest*) prototype {
  return [[TXPBFetchPostGroupRequest builder] mergeFrom:prototype];
}
- (TXPBFetchPostGroupRequestBuilder*) builder {
  return [TXPBFetchPostGroupRequest builder];
}
- (TXPBFetchPostGroupRequestBuilder*) toBuilder {
  return [TXPBFetchPostGroupRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPostGroupRequest class]]) {
    return NO;
  }
  TXPBFetchPostGroupRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPostGroupRequestBuilder()
@property (strong) TXPBFetchPostGroupRequest* resultFetchPostGroupRequest;
@end

@implementation TXPBFetchPostGroupRequestBuilder
@synthesize resultFetchPostGroupRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPostGroupRequest = [[TXPBFetchPostGroupRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPostGroupRequest;
}
- (TXPBFetchPostGroupRequestBuilder*) clear {
  self.resultFetchPostGroupRequest = [[TXPBFetchPostGroupRequest alloc] init];
  return self;
}
- (TXPBFetchPostGroupRequestBuilder*) clone {
  return [TXPBFetchPostGroupRequest builderWithPrototype:resultFetchPostGroupRequest];
}
- (TXPBFetchPostGroupRequest*) defaultInstance {
  return [TXPBFetchPostGroupRequest defaultInstance];
}
- (TXPBFetchPostGroupRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPostGroupRequest*) buildPartial {
  TXPBFetchPostGroupRequest* returnMe = resultFetchPostGroupRequest;
  self.resultFetchPostGroupRequest = nil;
  return returnMe;
}
- (TXPBFetchPostGroupRequestBuilder*) mergeFrom:(TXPBFetchPostGroupRequest*) other {
  if (other == [TXPBFetchPostGroupRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPostGroupRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPostGroupRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setGardenId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchPostGroupRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchPostGroupRequest.maxId;
}
- (TXPBFetchPostGroupRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchPostGroupRequest.hasMaxId = YES;
  resultFetchPostGroupRequest.maxId = value;
  return self;
}
- (TXPBFetchPostGroupRequestBuilder*) clearMaxId {
  resultFetchPostGroupRequest.hasMaxId = NO;
  resultFetchPostGroupRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchPostGroupRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchPostGroupRequest.sinceId;
}
- (TXPBFetchPostGroupRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchPostGroupRequest.hasSinceId = YES;
  resultFetchPostGroupRequest.sinceId = value;
  return self;
}
- (TXPBFetchPostGroupRequestBuilder*) clearSinceId {
  resultFetchPostGroupRequest.hasSinceId = NO;
  resultFetchPostGroupRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasGardenId {
  return resultFetchPostGroupRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultFetchPostGroupRequest.gardenId;
}
- (TXPBFetchPostGroupRequestBuilder*) setGardenId:(SInt64) value {
  resultFetchPostGroupRequest.hasGardenId = YES;
  resultFetchPostGroupRequest.gardenId = value;
  return self;
}
- (TXPBFetchPostGroupRequestBuilder*) clearGardenId {
  resultFetchPostGroupRequest.hasGardenId = NO;
  resultFetchPostGroupRequest.gardenId = 0L;
  return self;
}
@end

@interface TXPBFetchPostGroupResponse ()
@property (strong) NSMutableArray * postGroupArray;
@property BOOL hasMore;
@property SInt64 lastFetchTime;
@end

@implementation TXPBFetchPostGroupResponse

@synthesize postGroupArray;
@dynamic postGroup;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (BOOL) hasLastFetchTime {
  return !!hasLastFetchTime_;
}
- (void) setHasLastFetchTime:(BOOL) _value_ {
  hasLastFetchTime_ = !!_value_;
}
@synthesize lastFetchTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
    self.lastFetchTime = 0L;
  }
  return self;
}
static TXPBFetchPostGroupResponse* defaultTXPBFetchPostGroupResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPostGroupResponse class]) {
    defaultTXPBFetchPostGroupResponseInstance = [[TXPBFetchPostGroupResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPostGroupResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPostGroupResponseInstance;
}
- (NSArray *)postGroup {
  return postGroupArray;
}
- (TXPBPostGroup*)postGroupAtIndex:(NSUInteger)index {
  return [postGroupArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  if (!self.hasLastFetchTime) {
    return NO;
  }
  __block BOOL isInitpostGroup = YES;
   [self.postGroup enumerateObjectsUsingBlock:^(TXPBPostGroup *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitpostGroup = NO;
      *stop = YES;
    }
  }];
  if (!isInitpostGroup) return isInitpostGroup;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.postGroupArray enumerateObjectsUsingBlock:^(TXPBPostGroup *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  if (self.hasLastFetchTime) {
    [output writeInt64:3 value:self.lastFetchTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.postGroupArray enumerateObjectsUsingBlock:^(TXPBPostGroup *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  if (self.hasLastFetchTime) {
    size_ += computeInt64Size(3, self.lastFetchTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPostGroupResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchPostGroupResponse*)[[[TXPBFetchPostGroupResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchPostGroupResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostGroupResponse*)[[[TXPBFetchPostGroupResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostGroupResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPostGroupResponse*)[[[TXPBFetchPostGroupResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPostGroupResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostGroupResponse*)[[[TXPBFetchPostGroupResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostGroupResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPostGroupResponse*)[[[TXPBFetchPostGroupResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPostGroupResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPostGroupResponse*)[[[TXPBFetchPostGroupResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPostGroupResponseBuilder*) builder {
  return [[TXPBFetchPostGroupResponseBuilder alloc] init];
}
+ (TXPBFetchPostGroupResponseBuilder*) builderWithPrototype:(TXPBFetchPostGroupResponse*) prototype {
  return [[TXPBFetchPostGroupResponse builder] mergeFrom:prototype];
}
- (TXPBFetchPostGroupResponseBuilder*) builder {
  return [TXPBFetchPostGroupResponse builder];
}
- (TXPBFetchPostGroupResponseBuilder*) toBuilder {
  return [TXPBFetchPostGroupResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.postGroupArray enumerateObjectsUsingBlock:^(TXPBPostGroup *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"postGroup"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  if (self.hasLastFetchTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastFetchTime", [NSNumber numberWithLongLong:self.lastFetchTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBPostGroup* element in self.postGroupArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"postGroup"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  if (self.hasLastFetchTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastFetchTime] forKey: @"lastFetchTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPostGroupResponse class]]) {
    return NO;
  }
  TXPBFetchPostGroupResponse *otherMessage = other;
  return
      [self.postGroupArray isEqualToArray:otherMessage.postGroupArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      self.hasLastFetchTime == otherMessage.hasLastFetchTime &&
      (!self.hasLastFetchTime || self.lastFetchTime == otherMessage.lastFetchTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.postGroupArray enumerateObjectsUsingBlock:^(TXPBPostGroup *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  if (self.hasLastFetchTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastFetchTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPostGroupResponseBuilder()
@property (strong) TXPBFetchPostGroupResponse* resultFetchPostGroupResponse;
@end

@implementation TXPBFetchPostGroupResponseBuilder
@synthesize resultFetchPostGroupResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPostGroupResponse = [[TXPBFetchPostGroupResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPostGroupResponse;
}
- (TXPBFetchPostGroupResponseBuilder*) clear {
  self.resultFetchPostGroupResponse = [[TXPBFetchPostGroupResponse alloc] init];
  return self;
}
- (TXPBFetchPostGroupResponseBuilder*) clone {
  return [TXPBFetchPostGroupResponse builderWithPrototype:resultFetchPostGroupResponse];
}
- (TXPBFetchPostGroupResponse*) defaultInstance {
  return [TXPBFetchPostGroupResponse defaultInstance];
}
- (TXPBFetchPostGroupResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPostGroupResponse*) buildPartial {
  TXPBFetchPostGroupResponse* returnMe = resultFetchPostGroupResponse;
  self.resultFetchPostGroupResponse = nil;
  return returnMe;
}
- (TXPBFetchPostGroupResponseBuilder*) mergeFrom:(TXPBFetchPostGroupResponse*) other {
  if (other == [TXPBFetchPostGroupResponse defaultInstance]) {
    return self;
  }
  if (other.postGroupArray.count > 0) {
    if (resultFetchPostGroupResponse.postGroupArray == nil) {
      resultFetchPostGroupResponse.postGroupArray = [[NSMutableArray alloc] initWithArray:other.postGroupArray];
    } else {
      [resultFetchPostGroupResponse.postGroupArray addObjectsFromArray:other.postGroupArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  if (other.hasLastFetchTime) {
    [self setLastFetchTime:other.lastFetchTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPostGroupResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPostGroupResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBPostGroupBuilder* subBuilder = [TXPBPostGroup builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPostGroup:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 24: {
        [self setLastFetchTime:[input readInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)postGroup {
  return resultFetchPostGroupResponse.postGroupArray;
}
- (TXPBPostGroup*)postGroupAtIndex:(NSUInteger)index {
  return [resultFetchPostGroupResponse postGroupAtIndex:index];
}
- (TXPBFetchPostGroupResponseBuilder *)addPostGroup:(TXPBPostGroup*)value {
  if (resultFetchPostGroupResponse.postGroupArray == nil) {
    resultFetchPostGroupResponse.postGroupArray = [[NSMutableArray alloc]init];
  }
  [resultFetchPostGroupResponse.postGroupArray addObject:value];
  return self;
}
- (TXPBFetchPostGroupResponseBuilder *)setPostGroupArray:(NSArray *)array {
  resultFetchPostGroupResponse.postGroupArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchPostGroupResponseBuilder *)clearPostGroup {
  resultFetchPostGroupResponse.postGroupArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchPostGroupResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchPostGroupResponse.hasMore;
}
- (TXPBFetchPostGroupResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchPostGroupResponse.hasHasMore = YES;
  resultFetchPostGroupResponse.hasMore = value;
  return self;
}
- (TXPBFetchPostGroupResponseBuilder*) clearHasMore {
  resultFetchPostGroupResponse.hasHasMore = NO;
  resultFetchPostGroupResponse.hasMore = NO;
  return self;
}
- (BOOL) hasLastFetchTime {
  return resultFetchPostGroupResponse.hasLastFetchTime;
}
- (SInt64) lastFetchTime {
  return resultFetchPostGroupResponse.lastFetchTime;
}
- (TXPBFetchPostGroupResponseBuilder*) setLastFetchTime:(SInt64) value {
  resultFetchPostGroupResponse.hasLastFetchTime = YES;
  resultFetchPostGroupResponse.lastFetchTime = value;
  return self;
}
- (TXPBFetchPostGroupResponseBuilder*) clearLastFetchTime {
  resultFetchPostGroupResponse.hasLastFetchTime = NO;
  resultFetchPostGroupResponse.lastFetchTime = 0L;
  return self;
}
@end

@interface TXPBMuteRequest ()
@property SInt64 departmentId;
@property (strong) PBAppendableArray * childUserIdsArray;
@property TXPBMuteType type;
@property BOOL cover;
@end

@implementation TXPBMuteRequest

- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
@synthesize childUserIdsArray;
@dynamic childUserIds;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasCover {
  return !!hasCover_;
}
- (void) setHasCover:(BOOL) _value_ {
  hasCover_ = !!_value_;
}
- (BOOL) cover {
  return !!cover_;
}
- (void) setCover:(BOOL) _value_ {
  cover_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.departmentId = 0L;
    self.type = TXPBMuteTypeMuteChat;
    self.cover = NO;
  }
  return self;
}
static TXPBMuteRequest* defaultTXPBMuteRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBMuteRequest class]) {
    defaultTXPBMuteRequestInstance = [[TXPBMuteRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBMuteRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBMuteRequestInstance;
}
- (PBArray *)childUserIds {
  return childUserIdsArray;
}
- (SInt64)childUserIdsAtIndex:(NSUInteger)index {
  return [childUserIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasDepartmentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartmentId) {
    [output writeInt64:1 value:self.departmentId];
  }
  const NSUInteger childUserIdsArrayCount = self.childUserIdsArray.count;
  if (childUserIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.childUserIdsArray.data;
    for (NSUInteger i = 0; i < childUserIdsArrayCount; ++i) {
      [output writeInt64:2 value:values[i]];
    }
  }
  if (self.hasType) {
    [output writeEnum:3 value:self.type];
  }
  if (self.hasCover) {
    [output writeBool:4 value:self.cover];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(1, self.departmentId);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.childUserIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.childUserIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasType) {
    size_ += computeEnumSize(3, self.type);
  }
  if (self.hasCover) {
    size_ += computeBoolSize(4, self.cover);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBMuteRequest*) parseFromData:(NSData*) data {
  return (TXPBMuteRequest*)[[[TXPBMuteRequest builder] mergeFromData:data] build];
}
+ (TXPBMuteRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMuteRequest*)[[[TXPBMuteRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBMuteRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBMuteRequest*)[[[TXPBMuteRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBMuteRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMuteRequest*)[[[TXPBMuteRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMuteRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBMuteRequest*)[[[TXPBMuteRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBMuteRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMuteRequest*)[[[TXPBMuteRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMuteRequestBuilder*) builder {
  return [[TXPBMuteRequestBuilder alloc] init];
}
+ (TXPBMuteRequestBuilder*) builderWithPrototype:(TXPBMuteRequest*) prototype {
  return [[TXPBMuteRequest builder] mergeFrom:prototype];
}
- (TXPBMuteRequestBuilder*) builder {
  return [TXPBMuteRequest builder];
}
- (TXPBMuteRequestBuilder*) toBuilder {
  return [TXPBMuteRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  [self.childUserIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserIds", obj];
  }];
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBMuteType(self.type)];
  }
  if (self.hasCover) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cover", [NSNumber numberWithBool:self.cover]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  NSMutableArray * childUserIdsArrayArray = [NSMutableArray new];
  NSUInteger childUserIdsArrayCount=self.childUserIdsArray.count;
  for(int i=0;i<childUserIdsArrayCount;i++){
    [childUserIdsArrayArray addObject: @([self.childUserIdsArray int64AtIndex:i])];
  }
  [dictionary setObject: childUserIdsArrayArray forKey: @"childUserIds"];
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasCover) {
    [dictionary setObject: [NSNumber numberWithBool:self.cover] forKey: @"cover"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBMuteRequest class]]) {
    return NO;
  }
  TXPBMuteRequest *otherMessage = other;
  return
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      [self.childUserIdsArray isEqualToArray:otherMessage.childUserIdsArray] &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasCover == otherMessage.hasCover &&
      (!self.hasCover || self.cover == otherMessage.cover) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  [self.childUserIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasCover) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.cover] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBMuteRequestBuilder()
@property (strong) TXPBMuteRequest* resultMuteRequest;
@end

@implementation TXPBMuteRequestBuilder
@synthesize resultMuteRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMuteRequest = [[TXPBMuteRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMuteRequest;
}
- (TXPBMuteRequestBuilder*) clear {
  self.resultMuteRequest = [[TXPBMuteRequest alloc] init];
  return self;
}
- (TXPBMuteRequestBuilder*) clone {
  return [TXPBMuteRequest builderWithPrototype:resultMuteRequest];
}
- (TXPBMuteRequest*) defaultInstance {
  return [TXPBMuteRequest defaultInstance];
}
- (TXPBMuteRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBMuteRequest*) buildPartial {
  TXPBMuteRequest* returnMe = resultMuteRequest;
  self.resultMuteRequest = nil;
  return returnMe;
}
- (TXPBMuteRequestBuilder*) mergeFrom:(TXPBMuteRequest*) other {
  if (other == [TXPBMuteRequest defaultInstance]) {
    return self;
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  if (other.childUserIdsArray.count > 0) {
    if (resultMuteRequest.childUserIdsArray == nil) {
      resultMuteRequest.childUserIdsArray = [other.childUserIdsArray copy];
    } else {
      [resultMuteRequest.childUserIdsArray appendArray:other.childUserIdsArray];
    }
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCover) {
    [self setCover:other.cover];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBMuteRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBMuteRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
      case 16: {
        [self addChildUserIds:[input readInt64]];
        break;
      }
      case 24: {
        TXPBMuteType value = (TXPBMuteType)[input readEnum];
        if (TXPBMuteTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setCover:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasDepartmentId {
  return resultMuteRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultMuteRequest.departmentId;
}
- (TXPBMuteRequestBuilder*) setDepartmentId:(SInt64) value {
  resultMuteRequest.hasDepartmentId = YES;
  resultMuteRequest.departmentId = value;
  return self;
}
- (TXPBMuteRequestBuilder*) clearDepartmentId {
  resultMuteRequest.hasDepartmentId = NO;
  resultMuteRequest.departmentId = 0L;
  return self;
}
- (PBAppendableArray *)childUserIds {
  return resultMuteRequest.childUserIdsArray;
}
- (SInt64)childUserIdsAtIndex:(NSUInteger)index {
  return [resultMuteRequest childUserIdsAtIndex:index];
}
- (TXPBMuteRequestBuilder *)addChildUserIds:(SInt64)value {
  if (resultMuteRequest.childUserIdsArray == nil) {
    resultMuteRequest.childUserIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultMuteRequest.childUserIdsArray addInt64:value];
  return self;
}
- (TXPBMuteRequestBuilder *)setChildUserIdsArray:(NSArray *)array {
  resultMuteRequest.childUserIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBMuteRequestBuilder *)setChildUserIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  resultMuteRequest.childUserIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBMuteRequestBuilder *)clearChildUserIds {
  resultMuteRequest.childUserIdsArray = nil;
  return self;
}
- (BOOL) hasType {
  return resultMuteRequest.hasType;
}
- (TXPBMuteType) type {
  return resultMuteRequest.type;
}
- (TXPBMuteRequestBuilder*) setType:(TXPBMuteType) value {
  resultMuteRequest.hasType = YES;
  resultMuteRequest.type = value;
  return self;
}
- (TXPBMuteRequestBuilder*) clearType {
  resultMuteRequest.hasType = NO;
  resultMuteRequest.type = TXPBMuteTypeMuteChat;
  return self;
}
- (BOOL) hasCover {
  return resultMuteRequest.hasCover;
}
- (BOOL) cover {
  return resultMuteRequest.cover;
}
- (TXPBMuteRequestBuilder*) setCover:(BOOL) value {
  resultMuteRequest.hasCover = YES;
  resultMuteRequest.cover = value;
  return self;
}
- (TXPBMuteRequestBuilder*) clearCover {
  resultMuteRequest.hasCover = NO;
  resultMuteRequest.cover = NO;
  return self;
}
@end

@interface TXPBMuteResponse ()
@end

@implementation TXPBMuteResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBMuteResponse* defaultTXPBMuteResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBMuteResponse class]) {
    defaultTXPBMuteResponseInstance = [[TXPBMuteResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBMuteResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBMuteResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBMuteResponse*) parseFromData:(NSData*) data {
  return (TXPBMuteResponse*)[[[TXPBMuteResponse builder] mergeFromData:data] build];
}
+ (TXPBMuteResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMuteResponse*)[[[TXPBMuteResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBMuteResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBMuteResponse*)[[[TXPBMuteResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBMuteResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMuteResponse*)[[[TXPBMuteResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMuteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBMuteResponse*)[[[TXPBMuteResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBMuteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMuteResponse*)[[[TXPBMuteResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMuteResponseBuilder*) builder {
  return [[TXPBMuteResponseBuilder alloc] init];
}
+ (TXPBMuteResponseBuilder*) builderWithPrototype:(TXPBMuteResponse*) prototype {
  return [[TXPBMuteResponse builder] mergeFrom:prototype];
}
- (TXPBMuteResponseBuilder*) builder {
  return [TXPBMuteResponse builder];
}
- (TXPBMuteResponseBuilder*) toBuilder {
  return [TXPBMuteResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBMuteResponse class]]) {
    return NO;
  }
  TXPBMuteResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBMuteResponseBuilder()
@property (strong) TXPBMuteResponse* resultMuteResponse;
@end

@implementation TXPBMuteResponseBuilder
@synthesize resultMuteResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMuteResponse = [[TXPBMuteResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMuteResponse;
}
- (TXPBMuteResponseBuilder*) clear {
  self.resultMuteResponse = [[TXPBMuteResponse alloc] init];
  return self;
}
- (TXPBMuteResponseBuilder*) clone {
  return [TXPBMuteResponse builderWithPrototype:resultMuteResponse];
}
- (TXPBMuteResponse*) defaultInstance {
  return [TXPBMuteResponse defaultInstance];
}
- (TXPBMuteResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBMuteResponse*) buildPartial {
  TXPBMuteResponse* returnMe = resultMuteResponse;
  self.resultMuteResponse = nil;
  return returnMe;
}
- (TXPBMuteResponseBuilder*) mergeFrom:(TXPBMuteResponse*) other {
  if (other == [TXPBMuteResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBMuteResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBMuteResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBUnMuteRequest ()
@property SInt64 departmentId;
@property SInt64 childUserIds;
@property TXPBMuteType type;
@end

@implementation TXPBUnMuteRequest

- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (BOOL) hasChildUserIds {
  return !!hasChildUserIds_;
}
- (void) setHasChildUserIds:(BOOL) _value_ {
  hasChildUserIds_ = !!_value_;
}
@synthesize childUserIds;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (instancetype) init {
  if ((self = [super init])) {
    self.departmentId = 0L;
    self.childUserIds = 0L;
    self.type = TXPBMuteTypeMuteChat;
  }
  return self;
}
static TXPBUnMuteRequest* defaultTXPBUnMuteRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUnMuteRequest class]) {
    defaultTXPBUnMuteRequestInstance = [[TXPBUnMuteRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUnMuteRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUnMuteRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDepartmentId) {
    return NO;
  }
  if (!self.hasChildUserIds) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartmentId) {
    [output writeInt64:1 value:self.departmentId];
  }
  if (self.hasChildUserIds) {
    [output writeInt64:2 value:self.childUserIds];
  }
  if (self.hasType) {
    [output writeEnum:3 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(1, self.departmentId);
  }
  if (self.hasChildUserIds) {
    size_ += computeInt64Size(2, self.childUserIds);
  }
  if (self.hasType) {
    size_ += computeEnumSize(3, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUnMuteRequest*) parseFromData:(NSData*) data {
  return (TXPBUnMuteRequest*)[[[TXPBUnMuteRequest builder] mergeFromData:data] build];
}
+ (TXPBUnMuteRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUnMuteRequest*)[[[TXPBUnMuteRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUnMuteRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUnMuteRequest*)[[[TXPBUnMuteRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUnMuteRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUnMuteRequest*)[[[TXPBUnMuteRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUnMuteRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUnMuteRequest*)[[[TXPBUnMuteRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUnMuteRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUnMuteRequest*)[[[TXPBUnMuteRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUnMuteRequestBuilder*) builder {
  return [[TXPBUnMuteRequestBuilder alloc] init];
}
+ (TXPBUnMuteRequestBuilder*) builderWithPrototype:(TXPBUnMuteRequest*) prototype {
  return [[TXPBUnMuteRequest builder] mergeFrom:prototype];
}
- (TXPBUnMuteRequestBuilder*) builder {
  return [TXPBUnMuteRequest builder];
}
- (TXPBUnMuteRequestBuilder*) toBuilder {
  return [TXPBUnMuteRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  if (self.hasChildUserIds) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserIds", [NSNumber numberWithLongLong:self.childUserIds]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBMuteType(self.type)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  if (self.hasChildUserIds) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.childUserIds] forKey: @"childUserIds"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUnMuteRequest class]]) {
    return NO;
  }
  TXPBUnMuteRequest *otherMessage = other;
  return
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      self.hasChildUserIds == otherMessage.hasChildUserIds &&
      (!self.hasChildUserIds || self.childUserIds == otherMessage.childUserIds) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  if (self.hasChildUserIds) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.childUserIds] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUnMuteRequestBuilder()
@property (strong) TXPBUnMuteRequest* resultUnMuteRequest;
@end

@implementation TXPBUnMuteRequestBuilder
@synthesize resultUnMuteRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUnMuteRequest = [[TXPBUnMuteRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUnMuteRequest;
}
- (TXPBUnMuteRequestBuilder*) clear {
  self.resultUnMuteRequest = [[TXPBUnMuteRequest alloc] init];
  return self;
}
- (TXPBUnMuteRequestBuilder*) clone {
  return [TXPBUnMuteRequest builderWithPrototype:resultUnMuteRequest];
}
- (TXPBUnMuteRequest*) defaultInstance {
  return [TXPBUnMuteRequest defaultInstance];
}
- (TXPBUnMuteRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUnMuteRequest*) buildPartial {
  TXPBUnMuteRequest* returnMe = resultUnMuteRequest;
  self.resultUnMuteRequest = nil;
  return returnMe;
}
- (TXPBUnMuteRequestBuilder*) mergeFrom:(TXPBUnMuteRequest*) other {
  if (other == [TXPBUnMuteRequest defaultInstance]) {
    return self;
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  if (other.hasChildUserIds) {
    [self setChildUserIds:other.childUserIds];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUnMuteRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUnMuteRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
      case 16: {
        [self setChildUserIds:[input readInt64]];
        break;
      }
      case 24: {
        TXPBMuteType value = (TXPBMuteType)[input readEnum];
        if (TXPBMuteTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasDepartmentId {
  return resultUnMuteRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultUnMuteRequest.departmentId;
}
- (TXPBUnMuteRequestBuilder*) setDepartmentId:(SInt64) value {
  resultUnMuteRequest.hasDepartmentId = YES;
  resultUnMuteRequest.departmentId = value;
  return self;
}
- (TXPBUnMuteRequestBuilder*) clearDepartmentId {
  resultUnMuteRequest.hasDepartmentId = NO;
  resultUnMuteRequest.departmentId = 0L;
  return self;
}
- (BOOL) hasChildUserIds {
  return resultUnMuteRequest.hasChildUserIds;
}
- (SInt64) childUserIds {
  return resultUnMuteRequest.childUserIds;
}
- (TXPBUnMuteRequestBuilder*) setChildUserIds:(SInt64) value {
  resultUnMuteRequest.hasChildUserIds = YES;
  resultUnMuteRequest.childUserIds = value;
  return self;
}
- (TXPBUnMuteRequestBuilder*) clearChildUserIds {
  resultUnMuteRequest.hasChildUserIds = NO;
  resultUnMuteRequest.childUserIds = 0L;
  return self;
}
- (BOOL) hasType {
  return resultUnMuteRequest.hasType;
}
- (TXPBMuteType) type {
  return resultUnMuteRequest.type;
}
- (TXPBUnMuteRequestBuilder*) setType:(TXPBMuteType) value {
  resultUnMuteRequest.hasType = YES;
  resultUnMuteRequest.type = value;
  return self;
}
- (TXPBUnMuteRequestBuilder*) clearType {
  resultUnMuteRequest.hasType = NO;
  resultUnMuteRequest.type = TXPBMuteTypeMuteChat;
  return self;
}
@end

@interface TXPBUnMuteResponse ()
@end

@implementation TXPBUnMuteResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBUnMuteResponse* defaultTXPBUnMuteResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUnMuteResponse class]) {
    defaultTXPBUnMuteResponseInstance = [[TXPBUnMuteResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUnMuteResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUnMuteResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUnMuteResponse*) parseFromData:(NSData*) data {
  return (TXPBUnMuteResponse*)[[[TXPBUnMuteResponse builder] mergeFromData:data] build];
}
+ (TXPBUnMuteResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUnMuteResponse*)[[[TXPBUnMuteResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUnMuteResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUnMuteResponse*)[[[TXPBUnMuteResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUnMuteResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUnMuteResponse*)[[[TXPBUnMuteResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUnMuteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUnMuteResponse*)[[[TXPBUnMuteResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUnMuteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUnMuteResponse*)[[[TXPBUnMuteResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUnMuteResponseBuilder*) builder {
  return [[TXPBUnMuteResponseBuilder alloc] init];
}
+ (TXPBUnMuteResponseBuilder*) builderWithPrototype:(TXPBUnMuteResponse*) prototype {
  return [[TXPBUnMuteResponse builder] mergeFrom:prototype];
}
- (TXPBUnMuteResponseBuilder*) builder {
  return [TXPBUnMuteResponse builder];
}
- (TXPBUnMuteResponseBuilder*) toBuilder {
  return [TXPBUnMuteResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUnMuteResponse class]]) {
    return NO;
  }
  TXPBUnMuteResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUnMuteResponseBuilder()
@property (strong) TXPBUnMuteResponse* resultUnMuteResponse;
@end

@implementation TXPBUnMuteResponseBuilder
@synthesize resultUnMuteResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUnMuteResponse = [[TXPBUnMuteResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUnMuteResponse;
}
- (TXPBUnMuteResponseBuilder*) clear {
  self.resultUnMuteResponse = [[TXPBUnMuteResponse alloc] init];
  return self;
}
- (TXPBUnMuteResponseBuilder*) clone {
  return [TXPBUnMuteResponse builderWithPrototype:resultUnMuteResponse];
}
- (TXPBUnMuteResponse*) defaultInstance {
  return [TXPBUnMuteResponse defaultInstance];
}
- (TXPBUnMuteResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUnMuteResponse*) buildPartial {
  TXPBUnMuteResponse* returnMe = resultUnMuteResponse;
  self.resultUnMuteResponse = nil;
  return returnMe;
}
- (TXPBUnMuteResponseBuilder*) mergeFrom:(TXPBUnMuteResponse*) other {
  if (other == [TXPBUnMuteResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUnMuteResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUnMuteResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchMuteRequest ()
@property SInt64 departmentId;
@property TXPBMuteType type;
@end

@implementation TXPBFetchMuteRequest

- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (instancetype) init {
  if ((self = [super init])) {
    self.departmentId = 0L;
    self.type = TXPBMuteTypeMuteChat;
  }
  return self;
}
static TXPBFetchMuteRequest* defaultTXPBFetchMuteRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchMuteRequest class]) {
    defaultTXPBFetchMuteRequestInstance = [[TXPBFetchMuteRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchMuteRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchMuteRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDepartmentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartmentId) {
    [output writeInt64:1 value:self.departmentId];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(1, self.departmentId);
  }
  if (self.hasType) {
    size_ += computeEnumSize(2, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchMuteRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchMuteRequest*)[[[TXPBFetchMuteRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchMuteRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchMuteRequest*)[[[TXPBFetchMuteRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchMuteRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchMuteRequest*)[[[TXPBFetchMuteRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchMuteRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchMuteRequest*)[[[TXPBFetchMuteRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchMuteRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchMuteRequest*)[[[TXPBFetchMuteRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchMuteRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchMuteRequest*)[[[TXPBFetchMuteRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchMuteRequestBuilder*) builder {
  return [[TXPBFetchMuteRequestBuilder alloc] init];
}
+ (TXPBFetchMuteRequestBuilder*) builderWithPrototype:(TXPBFetchMuteRequest*) prototype {
  return [[TXPBFetchMuteRequest builder] mergeFrom:prototype];
}
- (TXPBFetchMuteRequestBuilder*) builder {
  return [TXPBFetchMuteRequest builder];
}
- (TXPBFetchMuteRequestBuilder*) toBuilder {
  return [TXPBFetchMuteRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBMuteType(self.type)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchMuteRequest class]]) {
    return NO;
  }
  TXPBFetchMuteRequest *otherMessage = other;
  return
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchMuteRequestBuilder()
@property (strong) TXPBFetchMuteRequest* resultFetchMuteRequest;
@end

@implementation TXPBFetchMuteRequestBuilder
@synthesize resultFetchMuteRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchMuteRequest = [[TXPBFetchMuteRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchMuteRequest;
}
- (TXPBFetchMuteRequestBuilder*) clear {
  self.resultFetchMuteRequest = [[TXPBFetchMuteRequest alloc] init];
  return self;
}
- (TXPBFetchMuteRequestBuilder*) clone {
  return [TXPBFetchMuteRequest builderWithPrototype:resultFetchMuteRequest];
}
- (TXPBFetchMuteRequest*) defaultInstance {
  return [TXPBFetchMuteRequest defaultInstance];
}
- (TXPBFetchMuteRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchMuteRequest*) buildPartial {
  TXPBFetchMuteRequest* returnMe = resultFetchMuteRequest;
  self.resultFetchMuteRequest = nil;
  return returnMe;
}
- (TXPBFetchMuteRequestBuilder*) mergeFrom:(TXPBFetchMuteRequest*) other {
  if (other == [TXPBFetchMuteRequest defaultInstance]) {
    return self;
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchMuteRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchMuteRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBMuteType value = (TXPBMuteType)[input readEnum];
        if (TXPBMuteTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasDepartmentId {
  return resultFetchMuteRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultFetchMuteRequest.departmentId;
}
- (TXPBFetchMuteRequestBuilder*) setDepartmentId:(SInt64) value {
  resultFetchMuteRequest.hasDepartmentId = YES;
  resultFetchMuteRequest.departmentId = value;
  return self;
}
- (TXPBFetchMuteRequestBuilder*) clearDepartmentId {
  resultFetchMuteRequest.hasDepartmentId = NO;
  resultFetchMuteRequest.departmentId = 0L;
  return self;
}
- (BOOL) hasType {
  return resultFetchMuteRequest.hasType;
}
- (TXPBMuteType) type {
  return resultFetchMuteRequest.type;
}
- (TXPBFetchMuteRequestBuilder*) setType:(TXPBMuteType) value {
  resultFetchMuteRequest.hasType = YES;
  resultFetchMuteRequest.type = value;
  return self;
}
- (TXPBFetchMuteRequestBuilder*) clearType {
  resultFetchMuteRequest.hasType = NO;
  resultFetchMuteRequest.type = TXPBMuteTypeMuteChat;
  return self;
}
@end

@interface TXPBFetchMuteResponse ()
@property (strong) PBAppendableArray * childUserIdsArray;
@end

@implementation TXPBFetchMuteResponse

@synthesize childUserIdsArray;
@dynamic childUserIds;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchMuteResponse* defaultTXPBFetchMuteResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchMuteResponse class]) {
    defaultTXPBFetchMuteResponseInstance = [[TXPBFetchMuteResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchMuteResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchMuteResponseInstance;
}
- (PBArray *)childUserIds {
  return childUserIdsArray;
}
- (SInt64)childUserIdsAtIndex:(NSUInteger)index {
  return [childUserIdsArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger childUserIdsArrayCount = self.childUserIdsArray.count;
  if (childUserIdsArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.childUserIdsArray.data;
    for (NSUInteger i = 0; i < childUserIdsArrayCount; ++i) {
      [output writeInt64:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.childUserIdsArray.count;
    const SInt64 *values = (const SInt64 *)self.childUserIdsArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchMuteResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchMuteResponse*)[[[TXPBFetchMuteResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchMuteResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchMuteResponse*)[[[TXPBFetchMuteResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchMuteResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchMuteResponse*)[[[TXPBFetchMuteResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchMuteResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchMuteResponse*)[[[TXPBFetchMuteResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchMuteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchMuteResponse*)[[[TXPBFetchMuteResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchMuteResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchMuteResponse*)[[[TXPBFetchMuteResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchMuteResponseBuilder*) builder {
  return [[TXPBFetchMuteResponseBuilder alloc] init];
}
+ (TXPBFetchMuteResponseBuilder*) builderWithPrototype:(TXPBFetchMuteResponse*) prototype {
  return [[TXPBFetchMuteResponse builder] mergeFrom:prototype];
}
- (TXPBFetchMuteResponseBuilder*) builder {
  return [TXPBFetchMuteResponse builder];
}
- (TXPBFetchMuteResponseBuilder*) toBuilder {
  return [TXPBFetchMuteResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.childUserIdsArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserIds", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * childUserIdsArrayArray = [NSMutableArray new];
  NSUInteger childUserIdsArrayCount=self.childUserIdsArray.count;
  for(int i=0;i<childUserIdsArrayCount;i++){
    [childUserIdsArrayArray addObject: @([self.childUserIdsArray int64AtIndex:i])];
  }
  [dictionary setObject: childUserIdsArrayArray forKey: @"childUserIds"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchMuteResponse class]]) {
    return NO;
  }
  TXPBFetchMuteResponse *otherMessage = other;
  return
      [self.childUserIdsArray isEqualToArray:otherMessage.childUserIdsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.childUserIdsArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchMuteResponseBuilder()
@property (strong) TXPBFetchMuteResponse* resultFetchMuteResponse;
@end

@implementation TXPBFetchMuteResponseBuilder
@synthesize resultFetchMuteResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchMuteResponse = [[TXPBFetchMuteResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchMuteResponse;
}
- (TXPBFetchMuteResponseBuilder*) clear {
  self.resultFetchMuteResponse = [[TXPBFetchMuteResponse alloc] init];
  return self;
}
- (TXPBFetchMuteResponseBuilder*) clone {
  return [TXPBFetchMuteResponse builderWithPrototype:resultFetchMuteResponse];
}
- (TXPBFetchMuteResponse*) defaultInstance {
  return [TXPBFetchMuteResponse defaultInstance];
}
- (TXPBFetchMuteResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchMuteResponse*) buildPartial {
  TXPBFetchMuteResponse* returnMe = resultFetchMuteResponse;
  self.resultFetchMuteResponse = nil;
  return returnMe;
}
- (TXPBFetchMuteResponseBuilder*) mergeFrom:(TXPBFetchMuteResponse*) other {
  if (other == [TXPBFetchMuteResponse defaultInstance]) {
    return self;
  }
  if (other.childUserIdsArray.count > 0) {
    if (resultFetchMuteResponse.childUserIdsArray == nil) {
      resultFetchMuteResponse.childUserIdsArray = [other.childUserIdsArray copy];
    } else {
      [resultFetchMuteResponse.childUserIdsArray appendArray:other.childUserIdsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchMuteResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchMuteResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addChildUserIds:[input readInt64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)childUserIds {
  return resultFetchMuteResponse.childUserIdsArray;
}
- (SInt64)childUserIdsAtIndex:(NSUInteger)index {
  return [resultFetchMuteResponse childUserIdsAtIndex:index];
}
- (TXPBFetchMuteResponseBuilder *)addChildUserIds:(SInt64)value {
  if (resultFetchMuteResponse.childUserIdsArray == nil) {
    resultFetchMuteResponse.childUserIdsArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultFetchMuteResponse.childUserIdsArray addInt64:value];
  return self;
}
- (TXPBFetchMuteResponseBuilder *)setChildUserIdsArray:(NSArray *)array {
  resultFetchMuteResponse.childUserIdsArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBFetchMuteResponseBuilder *)setChildUserIdsValues:(const SInt64 *)values count:(NSUInteger)count {
  resultFetchMuteResponse.childUserIdsArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBFetchMuteResponseBuilder *)clearChildUserIds {
  resultFetchMuteResponse.childUserIdsArray = nil;
  return self;
}
@end

@interface TXPBReadGardenMailRequest ()
@property SInt64 id;
@end

@implementation TXPBReadGardenMailRequest

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
  }
  return self;
}
static TXPBReadGardenMailRequest* defaultTXPBReadGardenMailRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBReadGardenMailRequest class]) {
    defaultTXPBReadGardenMailRequestInstance = [[TXPBReadGardenMailRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReadGardenMailRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReadGardenMailRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReadGardenMailRequest*) parseFromData:(NSData*) data {
  return (TXPBReadGardenMailRequest*)[[[TXPBReadGardenMailRequest builder] mergeFromData:data] build];
}
+ (TXPBReadGardenMailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadGardenMailRequest*)[[[TXPBReadGardenMailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadGardenMailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReadGardenMailRequest*)[[[TXPBReadGardenMailRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBReadGardenMailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadGardenMailRequest*)[[[TXPBReadGardenMailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadGardenMailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReadGardenMailRequest*)[[[TXPBReadGardenMailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReadGardenMailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadGardenMailRequest*)[[[TXPBReadGardenMailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadGardenMailRequestBuilder*) builder {
  return [[TXPBReadGardenMailRequestBuilder alloc] init];
}
+ (TXPBReadGardenMailRequestBuilder*) builderWithPrototype:(TXPBReadGardenMailRequest*) prototype {
  return [[TXPBReadGardenMailRequest builder] mergeFrom:prototype];
}
- (TXPBReadGardenMailRequestBuilder*) builder {
  return [TXPBReadGardenMailRequest builder];
}
- (TXPBReadGardenMailRequestBuilder*) toBuilder {
  return [TXPBReadGardenMailRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReadGardenMailRequest class]]) {
    return NO;
  }
  TXPBReadGardenMailRequest *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReadGardenMailRequestBuilder()
@property (strong) TXPBReadGardenMailRequest* resultReadGardenMailRequest;
@end

@implementation TXPBReadGardenMailRequestBuilder
@synthesize resultReadGardenMailRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadGardenMailRequest = [[TXPBReadGardenMailRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadGardenMailRequest;
}
- (TXPBReadGardenMailRequestBuilder*) clear {
  self.resultReadGardenMailRequest = [[TXPBReadGardenMailRequest alloc] init];
  return self;
}
- (TXPBReadGardenMailRequestBuilder*) clone {
  return [TXPBReadGardenMailRequest builderWithPrototype:resultReadGardenMailRequest];
}
- (TXPBReadGardenMailRequest*) defaultInstance {
  return [TXPBReadGardenMailRequest defaultInstance];
}
- (TXPBReadGardenMailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReadGardenMailRequest*) buildPartial {
  TXPBReadGardenMailRequest* returnMe = resultReadGardenMailRequest;
  self.resultReadGardenMailRequest = nil;
  return returnMe;
}
- (TXPBReadGardenMailRequestBuilder*) mergeFrom:(TXPBReadGardenMailRequest*) other {
  if (other == [TXPBReadGardenMailRequest defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReadGardenMailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReadGardenMailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultReadGardenMailRequest.hasId;
}
- (SInt64) id {
  return resultReadGardenMailRequest.id;
}
- (TXPBReadGardenMailRequestBuilder*) setId:(SInt64) value {
  resultReadGardenMailRequest.hasId = YES;
  resultReadGardenMailRequest.id = value;
  return self;
}
- (TXPBReadGardenMailRequestBuilder*) clearId {
  resultReadGardenMailRequest.hasId = NO;
  resultReadGardenMailRequest.id = 0L;
  return self;
}
@end

@interface TXPBReadGardenMailResponse ()
@end

@implementation TXPBReadGardenMailResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBReadGardenMailResponse* defaultTXPBReadGardenMailResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBReadGardenMailResponse class]) {
    defaultTXPBReadGardenMailResponseInstance = [[TXPBReadGardenMailResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReadGardenMailResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReadGardenMailResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReadGardenMailResponse*) parseFromData:(NSData*) data {
  return (TXPBReadGardenMailResponse*)[[[TXPBReadGardenMailResponse builder] mergeFromData:data] build];
}
+ (TXPBReadGardenMailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadGardenMailResponse*)[[[TXPBReadGardenMailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadGardenMailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReadGardenMailResponse*)[[[TXPBReadGardenMailResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBReadGardenMailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadGardenMailResponse*)[[[TXPBReadGardenMailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadGardenMailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReadGardenMailResponse*)[[[TXPBReadGardenMailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReadGardenMailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadGardenMailResponse*)[[[TXPBReadGardenMailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadGardenMailResponseBuilder*) builder {
  return [[TXPBReadGardenMailResponseBuilder alloc] init];
}
+ (TXPBReadGardenMailResponseBuilder*) builderWithPrototype:(TXPBReadGardenMailResponse*) prototype {
  return [[TXPBReadGardenMailResponse builder] mergeFrom:prototype];
}
- (TXPBReadGardenMailResponseBuilder*) builder {
  return [TXPBReadGardenMailResponse builder];
}
- (TXPBReadGardenMailResponseBuilder*) toBuilder {
  return [TXPBReadGardenMailResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReadGardenMailResponse class]]) {
    return NO;
  }
  TXPBReadGardenMailResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReadGardenMailResponseBuilder()
@property (strong) TXPBReadGardenMailResponse* resultReadGardenMailResponse;
@end

@implementation TXPBReadGardenMailResponseBuilder
@synthesize resultReadGardenMailResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadGardenMailResponse = [[TXPBReadGardenMailResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadGardenMailResponse;
}
- (TXPBReadGardenMailResponseBuilder*) clear {
  self.resultReadGardenMailResponse = [[TXPBReadGardenMailResponse alloc] init];
  return self;
}
- (TXPBReadGardenMailResponseBuilder*) clone {
  return [TXPBReadGardenMailResponse builderWithPrototype:resultReadGardenMailResponse];
}
- (TXPBReadGardenMailResponse*) defaultInstance {
  return [TXPBReadGardenMailResponse defaultInstance];
}
- (TXPBReadGardenMailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReadGardenMailResponse*) buildPartial {
  TXPBReadGardenMailResponse* returnMe = resultReadGardenMailResponse;
  self.resultReadGardenMailResponse = nil;
  return returnMe;
}
- (TXPBReadGardenMailResponseBuilder*) mergeFrom:(TXPBReadGardenMailResponse*) other {
  if (other == [TXPBReadGardenMailResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReadGardenMailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReadGardenMailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBReadFeedMedicineRequest ()
@property SInt64 id;
@end

@implementation TXPBReadFeedMedicineRequest

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
  }
  return self;
}
static TXPBReadFeedMedicineRequest* defaultTXPBReadFeedMedicineRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBReadFeedMedicineRequest class]) {
    defaultTXPBReadFeedMedicineRequestInstance = [[TXPBReadFeedMedicineRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReadFeedMedicineRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReadFeedMedicineRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReadFeedMedicineRequest*) parseFromData:(NSData*) data {
  return (TXPBReadFeedMedicineRequest*)[[[TXPBReadFeedMedicineRequest builder] mergeFromData:data] build];
}
+ (TXPBReadFeedMedicineRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineRequest*)[[[TXPBReadFeedMedicineRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReadFeedMedicineRequest*)[[[TXPBReadFeedMedicineRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBReadFeedMedicineRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineRequest*)[[[TXPBReadFeedMedicineRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReadFeedMedicineRequest*)[[[TXPBReadFeedMedicineRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReadFeedMedicineRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineRequest*)[[[TXPBReadFeedMedicineRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineRequestBuilder*) builder {
  return [[TXPBReadFeedMedicineRequestBuilder alloc] init];
}
+ (TXPBReadFeedMedicineRequestBuilder*) builderWithPrototype:(TXPBReadFeedMedicineRequest*) prototype {
  return [[TXPBReadFeedMedicineRequest builder] mergeFrom:prototype];
}
- (TXPBReadFeedMedicineRequestBuilder*) builder {
  return [TXPBReadFeedMedicineRequest builder];
}
- (TXPBReadFeedMedicineRequestBuilder*) toBuilder {
  return [TXPBReadFeedMedicineRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReadFeedMedicineRequest class]]) {
    return NO;
  }
  TXPBReadFeedMedicineRequest *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReadFeedMedicineRequestBuilder()
@property (strong) TXPBReadFeedMedicineRequest* resultReadFeedMedicineRequest;
@end

@implementation TXPBReadFeedMedicineRequestBuilder
@synthesize resultReadFeedMedicineRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadFeedMedicineRequest = [[TXPBReadFeedMedicineRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadFeedMedicineRequest;
}
- (TXPBReadFeedMedicineRequestBuilder*) clear {
  self.resultReadFeedMedicineRequest = [[TXPBReadFeedMedicineRequest alloc] init];
  return self;
}
- (TXPBReadFeedMedicineRequestBuilder*) clone {
  return [TXPBReadFeedMedicineRequest builderWithPrototype:resultReadFeedMedicineRequest];
}
- (TXPBReadFeedMedicineRequest*) defaultInstance {
  return [TXPBReadFeedMedicineRequest defaultInstance];
}
- (TXPBReadFeedMedicineRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReadFeedMedicineRequest*) buildPartial {
  TXPBReadFeedMedicineRequest* returnMe = resultReadFeedMedicineRequest;
  self.resultReadFeedMedicineRequest = nil;
  return returnMe;
}
- (TXPBReadFeedMedicineRequestBuilder*) mergeFrom:(TXPBReadFeedMedicineRequest*) other {
  if (other == [TXPBReadFeedMedicineRequest defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReadFeedMedicineRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReadFeedMedicineRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultReadFeedMedicineRequest.hasId;
}
- (SInt64) id {
  return resultReadFeedMedicineRequest.id;
}
- (TXPBReadFeedMedicineRequestBuilder*) setId:(SInt64) value {
  resultReadFeedMedicineRequest.hasId = YES;
  resultReadFeedMedicineRequest.id = value;
  return self;
}
- (TXPBReadFeedMedicineRequestBuilder*) clearId {
  resultReadFeedMedicineRequest.hasId = NO;
  resultReadFeedMedicineRequest.id = 0L;
  return self;
}
@end

@interface TXPBReadFeedMedicineResponse ()
@end

@implementation TXPBReadFeedMedicineResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBReadFeedMedicineResponse* defaultTXPBReadFeedMedicineResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBReadFeedMedicineResponse class]) {
    defaultTXPBReadFeedMedicineResponseInstance = [[TXPBReadFeedMedicineResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBReadFeedMedicineResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBReadFeedMedicineResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBReadFeedMedicineResponse*) parseFromData:(NSData*) data {
  return (TXPBReadFeedMedicineResponse*)[[[TXPBReadFeedMedicineResponse builder] mergeFromData:data] build];
}
+ (TXPBReadFeedMedicineResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineResponse*)[[[TXPBReadFeedMedicineResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBReadFeedMedicineResponse*)[[[TXPBReadFeedMedicineResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBReadFeedMedicineResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineResponse*)[[[TXPBReadFeedMedicineResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBReadFeedMedicineResponse*)[[[TXPBReadFeedMedicineResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBReadFeedMedicineResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBReadFeedMedicineResponse*)[[[TXPBReadFeedMedicineResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBReadFeedMedicineResponseBuilder*) builder {
  return [[TXPBReadFeedMedicineResponseBuilder alloc] init];
}
+ (TXPBReadFeedMedicineResponseBuilder*) builderWithPrototype:(TXPBReadFeedMedicineResponse*) prototype {
  return [[TXPBReadFeedMedicineResponse builder] mergeFrom:prototype];
}
- (TXPBReadFeedMedicineResponseBuilder*) builder {
  return [TXPBReadFeedMedicineResponse builder];
}
- (TXPBReadFeedMedicineResponseBuilder*) toBuilder {
  return [TXPBReadFeedMedicineResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBReadFeedMedicineResponse class]]) {
    return NO;
  }
  TXPBReadFeedMedicineResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBReadFeedMedicineResponseBuilder()
@property (strong) TXPBReadFeedMedicineResponse* resultReadFeedMedicineResponse;
@end

@implementation TXPBReadFeedMedicineResponseBuilder
@synthesize resultReadFeedMedicineResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadFeedMedicineResponse = [[TXPBReadFeedMedicineResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadFeedMedicineResponse;
}
- (TXPBReadFeedMedicineResponseBuilder*) clear {
  self.resultReadFeedMedicineResponse = [[TXPBReadFeedMedicineResponse alloc] init];
  return self;
}
- (TXPBReadFeedMedicineResponseBuilder*) clone {
  return [TXPBReadFeedMedicineResponse builderWithPrototype:resultReadFeedMedicineResponse];
}
- (TXPBReadFeedMedicineResponse*) defaultInstance {
  return [TXPBReadFeedMedicineResponse defaultInstance];
}
- (TXPBReadFeedMedicineResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBReadFeedMedicineResponse*) buildPartial {
  TXPBReadFeedMedicineResponse* returnMe = resultReadFeedMedicineResponse;
  self.resultReadFeedMedicineResponse = nil;
  return returnMe;
}
- (TXPBReadFeedMedicineResponseBuilder*) mergeFrom:(TXPBReadFeedMedicineResponse*) other {
  if (other == [TXPBReadFeedMedicineResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBReadFeedMedicineResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBReadFeedMedicineResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBCollectLogRequest ()
@property (strong) NSString* content;
@end

@implementation TXPBCollectLogRequest

- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.content = @"";
  }
  return self;
}
static TXPBCollectLogRequest* defaultTXPBCollectLogRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBCollectLogRequest class]) {
    defaultTXPBCollectLogRequestInstance = [[TXPBCollectLogRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCollectLogRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCollectLogRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContent) {
    [output writeString:1 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasContent) {
    size_ += computeStringSize(1, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCollectLogRequest*) parseFromData:(NSData*) data {
  return (TXPBCollectLogRequest*)[[[TXPBCollectLogRequest builder] mergeFromData:data] build];
}
+ (TXPBCollectLogRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCollectLogRequest*)[[[TXPBCollectLogRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCollectLogRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCollectLogRequest*)[[[TXPBCollectLogRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBCollectLogRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCollectLogRequest*)[[[TXPBCollectLogRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCollectLogRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCollectLogRequest*)[[[TXPBCollectLogRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCollectLogRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCollectLogRequest*)[[[TXPBCollectLogRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCollectLogRequestBuilder*) builder {
  return [[TXPBCollectLogRequestBuilder alloc] init];
}
+ (TXPBCollectLogRequestBuilder*) builderWithPrototype:(TXPBCollectLogRequest*) prototype {
  return [[TXPBCollectLogRequest builder] mergeFrom:prototype];
}
- (TXPBCollectLogRequestBuilder*) builder {
  return [TXPBCollectLogRequest builder];
}
- (TXPBCollectLogRequestBuilder*) toBuilder {
  return [TXPBCollectLogRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCollectLogRequest class]]) {
    return NO;
  }
  TXPBCollectLogRequest *otherMessage = other;
  return
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCollectLogRequestBuilder()
@property (strong) TXPBCollectLogRequest* resultCollectLogRequest;
@end

@implementation TXPBCollectLogRequestBuilder
@synthesize resultCollectLogRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCollectLogRequest = [[TXPBCollectLogRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCollectLogRequest;
}
- (TXPBCollectLogRequestBuilder*) clear {
  self.resultCollectLogRequest = [[TXPBCollectLogRequest alloc] init];
  return self;
}
- (TXPBCollectLogRequestBuilder*) clone {
  return [TXPBCollectLogRequest builderWithPrototype:resultCollectLogRequest];
}
- (TXPBCollectLogRequest*) defaultInstance {
  return [TXPBCollectLogRequest defaultInstance];
}
- (TXPBCollectLogRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCollectLogRequest*) buildPartial {
  TXPBCollectLogRequest* returnMe = resultCollectLogRequest;
  self.resultCollectLogRequest = nil;
  return returnMe;
}
- (TXPBCollectLogRequestBuilder*) mergeFrom:(TXPBCollectLogRequest*) other {
  if (other == [TXPBCollectLogRequest defaultInstance]) {
    return self;
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCollectLogRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCollectLogRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasContent {
  return resultCollectLogRequest.hasContent;
}
- (NSString*) content {
  return resultCollectLogRequest.content;
}
- (TXPBCollectLogRequestBuilder*) setContent:(NSString*) value {
  resultCollectLogRequest.hasContent = YES;
  resultCollectLogRequest.content = value;
  return self;
}
- (TXPBCollectLogRequestBuilder*) clearContent {
  resultCollectLogRequest.hasContent = NO;
  resultCollectLogRequest.content = @"";
  return self;
}
@end

@interface TXPBCollectLogResponse ()
@end

@implementation TXPBCollectLogResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBCollectLogResponse* defaultTXPBCollectLogResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBCollectLogResponse class]) {
    defaultTXPBCollectLogResponseInstance = [[TXPBCollectLogResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCollectLogResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCollectLogResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCollectLogResponse*) parseFromData:(NSData*) data {
  return (TXPBCollectLogResponse*)[[[TXPBCollectLogResponse builder] mergeFromData:data] build];
}
+ (TXPBCollectLogResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCollectLogResponse*)[[[TXPBCollectLogResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCollectLogResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCollectLogResponse*)[[[TXPBCollectLogResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBCollectLogResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCollectLogResponse*)[[[TXPBCollectLogResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCollectLogResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCollectLogResponse*)[[[TXPBCollectLogResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCollectLogResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCollectLogResponse*)[[[TXPBCollectLogResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCollectLogResponseBuilder*) builder {
  return [[TXPBCollectLogResponseBuilder alloc] init];
}
+ (TXPBCollectLogResponseBuilder*) builderWithPrototype:(TXPBCollectLogResponse*) prototype {
  return [[TXPBCollectLogResponse builder] mergeFrom:prototype];
}
- (TXPBCollectLogResponseBuilder*) builder {
  return [TXPBCollectLogResponse builder];
}
- (TXPBCollectLogResponseBuilder*) toBuilder {
  return [TXPBCollectLogResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCollectLogResponse class]]) {
    return NO;
  }
  TXPBCollectLogResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCollectLogResponseBuilder()
@property (strong) TXPBCollectLogResponse* resultCollectLogResponse;
@end

@implementation TXPBCollectLogResponseBuilder
@synthesize resultCollectLogResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCollectLogResponse = [[TXPBCollectLogResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCollectLogResponse;
}
- (TXPBCollectLogResponseBuilder*) clear {
  self.resultCollectLogResponse = [[TXPBCollectLogResponse alloc] init];
  return self;
}
- (TXPBCollectLogResponseBuilder*) clone {
  return [TXPBCollectLogResponse builderWithPrototype:resultCollectLogResponse];
}
- (TXPBCollectLogResponse*) defaultInstance {
  return [TXPBCollectLogResponse defaultInstance];
}
- (TXPBCollectLogResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCollectLogResponse*) buildPartial {
  TXPBCollectLogResponse* returnMe = resultCollectLogResponse;
  self.resultCollectLogResponse = nil;
  return returnMe;
}
- (TXPBCollectLogResponseBuilder*) mergeFrom:(TXPBCollectLogResponse*) other {
  if (other == [TXPBCollectLogResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCollectLogResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCollectLogResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBMachineLogRequest ()
@property SInt64 gardenId;
@property (strong) NSString* content;
@end

@implementation TXPBMachineLogRequest

- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenId = 0L;
    self.content = @"";
  }
  return self;
}
static TXPBMachineLogRequest* defaultTXPBMachineLogRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBMachineLogRequest class]) {
    defaultTXPBMachineLogRequestInstance = [[TXPBMachineLogRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBMachineLogRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBMachineLogRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenId) {
    [output writeInt64:1 value:self.gardenId];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenId) {
    size_ += computeInt64Size(1, self.gardenId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBMachineLogRequest*) parseFromData:(NSData*) data {
  return (TXPBMachineLogRequest*)[[[TXPBMachineLogRequest builder] mergeFromData:data] build];
}
+ (TXPBMachineLogRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineLogRequest*)[[[TXPBMachineLogRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineLogRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBMachineLogRequest*)[[[TXPBMachineLogRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBMachineLogRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineLogRequest*)[[[TXPBMachineLogRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineLogRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBMachineLogRequest*)[[[TXPBMachineLogRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBMachineLogRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineLogRequest*)[[[TXPBMachineLogRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineLogRequestBuilder*) builder {
  return [[TXPBMachineLogRequestBuilder alloc] init];
}
+ (TXPBMachineLogRequestBuilder*) builderWithPrototype:(TXPBMachineLogRequest*) prototype {
  return [[TXPBMachineLogRequest builder] mergeFrom:prototype];
}
- (TXPBMachineLogRequestBuilder*) builder {
  return [TXPBMachineLogRequest builder];
}
- (TXPBMachineLogRequestBuilder*) toBuilder {
  return [TXPBMachineLogRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBMachineLogRequest class]]) {
    return NO;
  }
  TXPBMachineLogRequest *otherMessage = other;
  return
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBMachineLogRequestBuilder()
@property (strong) TXPBMachineLogRequest* resultMachineLogRequest;
@end

@implementation TXPBMachineLogRequestBuilder
@synthesize resultMachineLogRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMachineLogRequest = [[TXPBMachineLogRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMachineLogRequest;
}
- (TXPBMachineLogRequestBuilder*) clear {
  self.resultMachineLogRequest = [[TXPBMachineLogRequest alloc] init];
  return self;
}
- (TXPBMachineLogRequestBuilder*) clone {
  return [TXPBMachineLogRequest builderWithPrototype:resultMachineLogRequest];
}
- (TXPBMachineLogRequest*) defaultInstance {
  return [TXPBMachineLogRequest defaultInstance];
}
- (TXPBMachineLogRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBMachineLogRequest*) buildPartial {
  TXPBMachineLogRequest* returnMe = resultMachineLogRequest;
  self.resultMachineLogRequest = nil;
  return returnMe;
}
- (TXPBMachineLogRequestBuilder*) mergeFrom:(TXPBMachineLogRequest*) other {
  if (other == [TXPBMachineLogRequest defaultInstance]) {
    return self;
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBMachineLogRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBMachineLogRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGardenId:[input readInt64]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGardenId {
  return resultMachineLogRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultMachineLogRequest.gardenId;
}
- (TXPBMachineLogRequestBuilder*) setGardenId:(SInt64) value {
  resultMachineLogRequest.hasGardenId = YES;
  resultMachineLogRequest.gardenId = value;
  return self;
}
- (TXPBMachineLogRequestBuilder*) clearGardenId {
  resultMachineLogRequest.hasGardenId = NO;
  resultMachineLogRequest.gardenId = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultMachineLogRequest.hasContent;
}
- (NSString*) content {
  return resultMachineLogRequest.content;
}
- (TXPBMachineLogRequestBuilder*) setContent:(NSString*) value {
  resultMachineLogRequest.hasContent = YES;
  resultMachineLogRequest.content = value;
  return self;
}
- (TXPBMachineLogRequestBuilder*) clearContent {
  resultMachineLogRequest.hasContent = NO;
  resultMachineLogRequest.content = @"";
  return self;
}
@end

@interface TXPBMachineLogResponse ()
@end

@implementation TXPBMachineLogResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBMachineLogResponse* defaultTXPBMachineLogResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBMachineLogResponse class]) {
    defaultTXPBMachineLogResponseInstance = [[TXPBMachineLogResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBMachineLogResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBMachineLogResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBMachineLogResponse*) parseFromData:(NSData*) data {
  return (TXPBMachineLogResponse*)[[[TXPBMachineLogResponse builder] mergeFromData:data] build];
}
+ (TXPBMachineLogResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineLogResponse*)[[[TXPBMachineLogResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineLogResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBMachineLogResponse*)[[[TXPBMachineLogResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBMachineLogResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineLogResponse*)[[[TXPBMachineLogResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineLogResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBMachineLogResponse*)[[[TXPBMachineLogResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBMachineLogResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineLogResponse*)[[[TXPBMachineLogResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineLogResponseBuilder*) builder {
  return [[TXPBMachineLogResponseBuilder alloc] init];
}
+ (TXPBMachineLogResponseBuilder*) builderWithPrototype:(TXPBMachineLogResponse*) prototype {
  return [[TXPBMachineLogResponse builder] mergeFrom:prototype];
}
- (TXPBMachineLogResponseBuilder*) builder {
  return [TXPBMachineLogResponse builder];
}
- (TXPBMachineLogResponseBuilder*) toBuilder {
  return [TXPBMachineLogResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBMachineLogResponse class]]) {
    return NO;
  }
  TXPBMachineLogResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBMachineLogResponseBuilder()
@property (strong) TXPBMachineLogResponse* resultMachineLogResponse;
@end

@implementation TXPBMachineLogResponseBuilder
@synthesize resultMachineLogResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMachineLogResponse = [[TXPBMachineLogResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMachineLogResponse;
}
- (TXPBMachineLogResponseBuilder*) clear {
  self.resultMachineLogResponse = [[TXPBMachineLogResponse alloc] init];
  return self;
}
- (TXPBMachineLogResponseBuilder*) clone {
  return [TXPBMachineLogResponse builderWithPrototype:resultMachineLogResponse];
}
- (TXPBMachineLogResponse*) defaultInstance {
  return [TXPBMachineLogResponse defaultInstance];
}
- (TXPBMachineLogResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBMachineLogResponse*) buildPartial {
  TXPBMachineLogResponse* returnMe = resultMachineLogResponse;
  self.resultMachineLogResponse = nil;
  return returnMe;
}
- (TXPBMachineLogResponseBuilder*) mergeFrom:(TXPBMachineLogResponse*) other {
  if (other == [TXPBMachineLogResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBMachineLogResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBMachineLogResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBUpgrade ()
@property BOOL showAtMain;
@property BOOL mustUpdate;
@property BOOL isUpdate;
@property (strong) NSString* updateMsg;
@property (strong) NSString* showMsg;
@property (strong) NSString* versionCode;
@property (strong) NSString* updateUrl;
@end

@implementation TXPBUpgrade

- (BOOL) hasShowAtMain {
  return !!hasShowAtMain_;
}
- (void) setHasShowAtMain:(BOOL) _value_ {
  hasShowAtMain_ = !!_value_;
}
- (BOOL) showAtMain {
  return !!showAtMain_;
}
- (void) setShowAtMain:(BOOL) _value_ {
  showAtMain_ = !!_value_;
}
- (BOOL) hasMustUpdate {
  return !!hasMustUpdate_;
}
- (void) setHasMustUpdate:(BOOL) _value_ {
  hasMustUpdate_ = !!_value_;
}
- (BOOL) mustUpdate {
  return !!mustUpdate_;
}
- (void) setMustUpdate:(BOOL) _value_ {
  mustUpdate_ = !!_value_;
}
- (BOOL) hasIsUpdate {
  return !!hasIsUpdate_;
}
- (void) setHasIsUpdate:(BOOL) _value_ {
  hasIsUpdate_ = !!_value_;
}
- (BOOL) isUpdate {
  return !!isUpdate_;
}
- (void) setIsUpdate:(BOOL) _value_ {
  isUpdate_ = !!_value_;
}
- (BOOL) hasUpdateMsg {
  return !!hasUpdateMsg_;
}
- (void) setHasUpdateMsg:(BOOL) _value_ {
  hasUpdateMsg_ = !!_value_;
}
@synthesize updateMsg;
- (BOOL) hasShowMsg {
  return !!hasShowMsg_;
}
- (void) setHasShowMsg:(BOOL) _value_ {
  hasShowMsg_ = !!_value_;
}
@synthesize showMsg;
- (BOOL) hasVersionCode {
  return !!hasVersionCode_;
}
- (void) setHasVersionCode:(BOOL) _value_ {
  hasVersionCode_ = !!_value_;
}
@synthesize versionCode;
- (BOOL) hasUpdateUrl {
  return !!hasUpdateUrl_;
}
- (void) setHasUpdateUrl:(BOOL) _value_ {
  hasUpdateUrl_ = !!_value_;
}
@synthesize updateUrl;
- (instancetype) init {
  if ((self = [super init])) {
    self.showAtMain = NO;
    self.mustUpdate = NO;
    self.isUpdate = NO;
    self.updateMsg = @"";
    self.showMsg = @"";
    self.versionCode = @"";
    self.updateUrl = @"";
  }
  return self;
}
static TXPBUpgrade* defaultTXPBUpgradeInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpgrade class]) {
    defaultTXPBUpgradeInstance = [[TXPBUpgrade alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpgradeInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpgradeInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIsUpdate) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasShowAtMain) {
    [output writeBool:1 value:self.showAtMain];
  }
  if (self.hasMustUpdate) {
    [output writeBool:2 value:self.mustUpdate];
  }
  if (self.hasIsUpdate) {
    [output writeBool:3 value:self.isUpdate];
  }
  if (self.hasUpdateMsg) {
    [output writeString:4 value:self.updateMsg];
  }
  if (self.hasShowMsg) {
    [output writeString:5 value:self.showMsg];
  }
  if (self.hasVersionCode) {
    [output writeString:6 value:self.versionCode];
  }
  if (self.hasUpdateUrl) {
    [output writeString:7 value:self.updateUrl];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasShowAtMain) {
    size_ += computeBoolSize(1, self.showAtMain);
  }
  if (self.hasMustUpdate) {
    size_ += computeBoolSize(2, self.mustUpdate);
  }
  if (self.hasIsUpdate) {
    size_ += computeBoolSize(3, self.isUpdate);
  }
  if (self.hasUpdateMsg) {
    size_ += computeStringSize(4, self.updateMsg);
  }
  if (self.hasShowMsg) {
    size_ += computeStringSize(5, self.showMsg);
  }
  if (self.hasVersionCode) {
    size_ += computeStringSize(6, self.versionCode);
  }
  if (self.hasUpdateUrl) {
    size_ += computeStringSize(7, self.updateUrl);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpgrade*) parseFromData:(NSData*) data {
  return (TXPBUpgrade*)[[[TXPBUpgrade builder] mergeFromData:data] build];
}
+ (TXPBUpgrade*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgrade*)[[[TXPBUpgrade builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgrade*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpgrade*)[[[TXPBUpgrade builder] mergeFromInputStream:input] build];
}
+ (TXPBUpgrade*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgrade*)[[[TXPBUpgrade builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgrade*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpgrade*)[[[TXPBUpgrade builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpgrade*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgrade*)[[[TXPBUpgrade builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgradeBuilder*) builder {
  return [[TXPBUpgradeBuilder alloc] init];
}
+ (TXPBUpgradeBuilder*) builderWithPrototype:(TXPBUpgrade*) prototype {
  return [[TXPBUpgrade builder] mergeFrom:prototype];
}
- (TXPBUpgradeBuilder*) builder {
  return [TXPBUpgrade builder];
}
- (TXPBUpgradeBuilder*) toBuilder {
  return [TXPBUpgrade builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasShowAtMain) {
    [output appendFormat:@"%@%@: %@\n", indent, @"showAtMain", [NSNumber numberWithBool:self.showAtMain]];
  }
  if (self.hasMustUpdate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"mustUpdate", [NSNumber numberWithBool:self.mustUpdate]];
  }
  if (self.hasIsUpdate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isUpdate", [NSNumber numberWithBool:self.isUpdate]];
  }
  if (self.hasUpdateMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateMsg", self.updateMsg];
  }
  if (self.hasShowMsg) {
    [output appendFormat:@"%@%@: %@\n", indent, @"showMsg", self.showMsg];
  }
  if (self.hasVersionCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"versionCode", self.versionCode];
  }
  if (self.hasUpdateUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateUrl", self.updateUrl];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasShowAtMain) {
    [dictionary setObject: [NSNumber numberWithBool:self.showAtMain] forKey: @"showAtMain"];
  }
  if (self.hasMustUpdate) {
    [dictionary setObject: [NSNumber numberWithBool:self.mustUpdate] forKey: @"mustUpdate"];
  }
  if (self.hasIsUpdate) {
    [dictionary setObject: [NSNumber numberWithBool:self.isUpdate] forKey: @"isUpdate"];
  }
  if (self.hasUpdateMsg) {
    [dictionary setObject: self.updateMsg forKey: @"updateMsg"];
  }
  if (self.hasShowMsg) {
    [dictionary setObject: self.showMsg forKey: @"showMsg"];
  }
  if (self.hasVersionCode) {
    [dictionary setObject: self.versionCode forKey: @"versionCode"];
  }
  if (self.hasUpdateUrl) {
    [dictionary setObject: self.updateUrl forKey: @"updateUrl"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpgrade class]]) {
    return NO;
  }
  TXPBUpgrade *otherMessage = other;
  return
      self.hasShowAtMain == otherMessage.hasShowAtMain &&
      (!self.hasShowAtMain || self.showAtMain == otherMessage.showAtMain) &&
      self.hasMustUpdate == otherMessage.hasMustUpdate &&
      (!self.hasMustUpdate || self.mustUpdate == otherMessage.mustUpdate) &&
      self.hasIsUpdate == otherMessage.hasIsUpdate &&
      (!self.hasIsUpdate || self.isUpdate == otherMessage.isUpdate) &&
      self.hasUpdateMsg == otherMessage.hasUpdateMsg &&
      (!self.hasUpdateMsg || [self.updateMsg isEqual:otherMessage.updateMsg]) &&
      self.hasShowMsg == otherMessage.hasShowMsg &&
      (!self.hasShowMsg || [self.showMsg isEqual:otherMessage.showMsg]) &&
      self.hasVersionCode == otherMessage.hasVersionCode &&
      (!self.hasVersionCode || [self.versionCode isEqual:otherMessage.versionCode]) &&
      self.hasUpdateUrl == otherMessage.hasUpdateUrl &&
      (!self.hasUpdateUrl || [self.updateUrl isEqual:otherMessage.updateUrl]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasShowAtMain) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.showAtMain] hash];
  }
  if (self.hasMustUpdate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.mustUpdate] hash];
  }
  if (self.hasIsUpdate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isUpdate] hash];
  }
  if (self.hasUpdateMsg) {
    hashCode = hashCode * 31 + [self.updateMsg hash];
  }
  if (self.hasShowMsg) {
    hashCode = hashCode * 31 + [self.showMsg hash];
  }
  if (self.hasVersionCode) {
    hashCode = hashCode * 31 + [self.versionCode hash];
  }
  if (self.hasUpdateUrl) {
    hashCode = hashCode * 31 + [self.updateUrl hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpgradeBuilder()
@property (strong) TXPBUpgrade* resultUpgrade;
@end

@implementation TXPBUpgradeBuilder
@synthesize resultUpgrade;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpgrade = [[TXPBUpgrade alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpgrade;
}
- (TXPBUpgradeBuilder*) clear {
  self.resultUpgrade = [[TXPBUpgrade alloc] init];
  return self;
}
- (TXPBUpgradeBuilder*) clone {
  return [TXPBUpgrade builderWithPrototype:resultUpgrade];
}
- (TXPBUpgrade*) defaultInstance {
  return [TXPBUpgrade defaultInstance];
}
- (TXPBUpgrade*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpgrade*) buildPartial {
  TXPBUpgrade* returnMe = resultUpgrade;
  self.resultUpgrade = nil;
  return returnMe;
}
- (TXPBUpgradeBuilder*) mergeFrom:(TXPBUpgrade*) other {
  if (other == [TXPBUpgrade defaultInstance]) {
    return self;
  }
  if (other.hasShowAtMain) {
    [self setShowAtMain:other.showAtMain];
  }
  if (other.hasMustUpdate) {
    [self setMustUpdate:other.mustUpdate];
  }
  if (other.hasIsUpdate) {
    [self setIsUpdate:other.isUpdate];
  }
  if (other.hasUpdateMsg) {
    [self setUpdateMsg:other.updateMsg];
  }
  if (other.hasShowMsg) {
    [self setShowMsg:other.showMsg];
  }
  if (other.hasVersionCode) {
    [self setVersionCode:other.versionCode];
  }
  if (other.hasUpdateUrl) {
    [self setUpdateUrl:other.updateUrl];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpgradeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpgradeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setShowAtMain:[input readBool]];
        break;
      }
      case 16: {
        [self setMustUpdate:[input readBool]];
        break;
      }
      case 24: {
        [self setIsUpdate:[input readBool]];
        break;
      }
      case 34: {
        [self setUpdateMsg:[input readString]];
        break;
      }
      case 42: {
        [self setShowMsg:[input readString]];
        break;
      }
      case 50: {
        [self setVersionCode:[input readString]];
        break;
      }
      case 58: {
        [self setUpdateUrl:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasShowAtMain {
  return resultUpgrade.hasShowAtMain;
}
- (BOOL) showAtMain {
  return resultUpgrade.showAtMain;
}
- (TXPBUpgradeBuilder*) setShowAtMain:(BOOL) value {
  resultUpgrade.hasShowAtMain = YES;
  resultUpgrade.showAtMain = value;
  return self;
}
- (TXPBUpgradeBuilder*) clearShowAtMain {
  resultUpgrade.hasShowAtMain = NO;
  resultUpgrade.showAtMain = NO;
  return self;
}
- (BOOL) hasMustUpdate {
  return resultUpgrade.hasMustUpdate;
}
- (BOOL) mustUpdate {
  return resultUpgrade.mustUpdate;
}
- (TXPBUpgradeBuilder*) setMustUpdate:(BOOL) value {
  resultUpgrade.hasMustUpdate = YES;
  resultUpgrade.mustUpdate = value;
  return self;
}
- (TXPBUpgradeBuilder*) clearMustUpdate {
  resultUpgrade.hasMustUpdate = NO;
  resultUpgrade.mustUpdate = NO;
  return self;
}
- (BOOL) hasIsUpdate {
  return resultUpgrade.hasIsUpdate;
}
- (BOOL) isUpdate {
  return resultUpgrade.isUpdate;
}
- (TXPBUpgradeBuilder*) setIsUpdate:(BOOL) value {
  resultUpgrade.hasIsUpdate = YES;
  resultUpgrade.isUpdate = value;
  return self;
}
- (TXPBUpgradeBuilder*) clearIsUpdate {
  resultUpgrade.hasIsUpdate = NO;
  resultUpgrade.isUpdate = NO;
  return self;
}
- (BOOL) hasUpdateMsg {
  return resultUpgrade.hasUpdateMsg;
}
- (NSString*) updateMsg {
  return resultUpgrade.updateMsg;
}
- (TXPBUpgradeBuilder*) setUpdateMsg:(NSString*) value {
  resultUpgrade.hasUpdateMsg = YES;
  resultUpgrade.updateMsg = value;
  return self;
}
- (TXPBUpgradeBuilder*) clearUpdateMsg {
  resultUpgrade.hasUpdateMsg = NO;
  resultUpgrade.updateMsg = @"";
  return self;
}
- (BOOL) hasShowMsg {
  return resultUpgrade.hasShowMsg;
}
- (NSString*) showMsg {
  return resultUpgrade.showMsg;
}
- (TXPBUpgradeBuilder*) setShowMsg:(NSString*) value {
  resultUpgrade.hasShowMsg = YES;
  resultUpgrade.showMsg = value;
  return self;
}
- (TXPBUpgradeBuilder*) clearShowMsg {
  resultUpgrade.hasShowMsg = NO;
  resultUpgrade.showMsg = @"";
  return self;
}
- (BOOL) hasVersionCode {
  return resultUpgrade.hasVersionCode;
}
- (NSString*) versionCode {
  return resultUpgrade.versionCode;
}
- (TXPBUpgradeBuilder*) setVersionCode:(NSString*) value {
  resultUpgrade.hasVersionCode = YES;
  resultUpgrade.versionCode = value;
  return self;
}
- (TXPBUpgradeBuilder*) clearVersionCode {
  resultUpgrade.hasVersionCode = NO;
  resultUpgrade.versionCode = @"";
  return self;
}
- (BOOL) hasUpdateUrl {
  return resultUpgrade.hasUpdateUrl;
}
- (NSString*) updateUrl {
  return resultUpgrade.updateUrl;
}
- (TXPBUpgradeBuilder*) setUpdateUrl:(NSString*) value {
  resultUpgrade.hasUpdateUrl = YES;
  resultUpgrade.updateUrl = value;
  return self;
}
- (TXPBUpgradeBuilder*) clearUpdateUrl {
  resultUpgrade.hasUpdateUrl = NO;
  resultUpgrade.updateUrl = @"";
  return self;
}
@end

@interface TXPBUpgradeRequest ()
@property TXPBPlatformType platformType;
@end

@implementation TXPBUpgradeRequest

- (BOOL) hasPlatformType {
  return !!hasPlatformType_;
}
- (void) setHasPlatformType:(BOOL) _value_ {
  hasPlatformType_ = !!_value_;
}
@synthesize platformType;
- (instancetype) init {
  if ((self = [super init])) {
    self.platformType = TXPBPlatformTypeIos;
  }
  return self;
}
static TXPBUpgradeRequest* defaultTXPBUpgradeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpgradeRequest class]) {
    defaultTXPBUpgradeRequestInstance = [[TXPBUpgradeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpgradeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpgradeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPlatformType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPlatformType) {
    [output writeEnum:1 value:self.platformType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPlatformType) {
    size_ += computeEnumSize(1, self.platformType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpgradeRequest*) parseFromData:(NSData*) data {
  return (TXPBUpgradeRequest*)[[[TXPBUpgradeRequest builder] mergeFromData:data] build];
}
+ (TXPBUpgradeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgradeRequest*)[[[TXPBUpgradeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgradeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpgradeRequest*)[[[TXPBUpgradeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUpgradeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgradeRequest*)[[[TXPBUpgradeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgradeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpgradeRequest*)[[[TXPBUpgradeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpgradeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgradeRequest*)[[[TXPBUpgradeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgradeRequestBuilder*) builder {
  return [[TXPBUpgradeRequestBuilder alloc] init];
}
+ (TXPBUpgradeRequestBuilder*) builderWithPrototype:(TXPBUpgradeRequest*) prototype {
  return [[TXPBUpgradeRequest builder] mergeFrom:prototype];
}
- (TXPBUpgradeRequestBuilder*) builder {
  return [TXPBUpgradeRequest builder];
}
- (TXPBUpgradeRequestBuilder*) toBuilder {
  return [TXPBUpgradeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPlatformType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"platformType", NSStringFromTXPBPlatformType(self.platformType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPlatformType) {
    [dictionary setObject: @(self.platformType) forKey: @"platformType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpgradeRequest class]]) {
    return NO;
  }
  TXPBUpgradeRequest *otherMessage = other;
  return
      self.hasPlatformType == otherMessage.hasPlatformType &&
      (!self.hasPlatformType || self.platformType == otherMessage.platformType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPlatformType) {
    hashCode = hashCode * 31 + self.platformType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpgradeRequestBuilder()
@property (strong) TXPBUpgradeRequest* resultUpgradeRequest;
@end

@implementation TXPBUpgradeRequestBuilder
@synthesize resultUpgradeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpgradeRequest = [[TXPBUpgradeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpgradeRequest;
}
- (TXPBUpgradeRequestBuilder*) clear {
  self.resultUpgradeRequest = [[TXPBUpgradeRequest alloc] init];
  return self;
}
- (TXPBUpgradeRequestBuilder*) clone {
  return [TXPBUpgradeRequest builderWithPrototype:resultUpgradeRequest];
}
- (TXPBUpgradeRequest*) defaultInstance {
  return [TXPBUpgradeRequest defaultInstance];
}
- (TXPBUpgradeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpgradeRequest*) buildPartial {
  TXPBUpgradeRequest* returnMe = resultUpgradeRequest;
  self.resultUpgradeRequest = nil;
  return returnMe;
}
- (TXPBUpgradeRequestBuilder*) mergeFrom:(TXPBUpgradeRequest*) other {
  if (other == [TXPBUpgradeRequest defaultInstance]) {
    return self;
  }
  if (other.hasPlatformType) {
    [self setPlatformType:other.platformType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpgradeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpgradeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        TXPBPlatformType value = (TXPBPlatformType)[input readEnum];
        if (TXPBPlatformTypeIsValidValue(value)) {
          [self setPlatformType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasPlatformType {
  return resultUpgradeRequest.hasPlatformType;
}
- (TXPBPlatformType) platformType {
  return resultUpgradeRequest.platformType;
}
- (TXPBUpgradeRequestBuilder*) setPlatformType:(TXPBPlatformType) value {
  resultUpgradeRequest.hasPlatformType = YES;
  resultUpgradeRequest.platformType = value;
  return self;
}
- (TXPBUpgradeRequestBuilder*) clearPlatformType {
  resultUpgradeRequest.hasPlatformType = NO;
  resultUpgradeRequest.platformType = TXPBPlatformTypeIos;
  return self;
}
@end

@interface TXPBMachineUpgradeRequest ()
@property (strong) NSString* version;
@property (strong) NSString* deviceId;
@end

@implementation TXPBMachineUpgradeRequest

- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) _value_ {
  hasVersion_ = !!_value_;
}
@synthesize version;
- (BOOL) hasDeviceId {
  return !!hasDeviceId_;
}
- (void) setHasDeviceId:(BOOL) _value_ {
  hasDeviceId_ = !!_value_;
}
@synthesize deviceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.version = @"";
    self.deviceId = @"";
  }
  return self;
}
static TXPBMachineUpgradeRequest* defaultTXPBMachineUpgradeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBMachineUpgradeRequest class]) {
    defaultTXPBMachineUpgradeRequestInstance = [[TXPBMachineUpgradeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBMachineUpgradeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBMachineUpgradeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersion) {
    [output writeString:1 value:self.version];
  }
  if (self.hasDeviceId) {
    [output writeString:2 value:self.deviceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasVersion) {
    size_ += computeStringSize(1, self.version);
  }
  if (self.hasDeviceId) {
    size_ += computeStringSize(2, self.deviceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBMachineUpgradeRequest*) parseFromData:(NSData*) data {
  return (TXPBMachineUpgradeRequest*)[[[TXPBMachineUpgradeRequest builder] mergeFromData:data] build];
}
+ (TXPBMachineUpgradeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineUpgradeRequest*)[[[TXPBMachineUpgradeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineUpgradeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBMachineUpgradeRequest*)[[[TXPBMachineUpgradeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBMachineUpgradeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineUpgradeRequest*)[[[TXPBMachineUpgradeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineUpgradeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBMachineUpgradeRequest*)[[[TXPBMachineUpgradeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBMachineUpgradeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBMachineUpgradeRequest*)[[[TXPBMachineUpgradeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBMachineUpgradeRequestBuilder*) builder {
  return [[TXPBMachineUpgradeRequestBuilder alloc] init];
}
+ (TXPBMachineUpgradeRequestBuilder*) builderWithPrototype:(TXPBMachineUpgradeRequest*) prototype {
  return [[TXPBMachineUpgradeRequest builder] mergeFrom:prototype];
}
- (TXPBMachineUpgradeRequestBuilder*) builder {
  return [TXPBMachineUpgradeRequest builder];
}
- (TXPBMachineUpgradeRequestBuilder*) toBuilder {
  return [TXPBMachineUpgradeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasVersion) {
    [output appendFormat:@"%@%@: %@\n", indent, @"version", self.version];
  }
  if (self.hasDeviceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"deviceId", self.deviceId];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasVersion) {
    [dictionary setObject: self.version forKey: @"version"];
  }
  if (self.hasDeviceId) {
    [dictionary setObject: self.deviceId forKey: @"deviceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBMachineUpgradeRequest class]]) {
    return NO;
  }
  TXPBMachineUpgradeRequest *otherMessage = other;
  return
      self.hasVersion == otherMessage.hasVersion &&
      (!self.hasVersion || [self.version isEqual:otherMessage.version]) &&
      self.hasDeviceId == otherMessage.hasDeviceId &&
      (!self.hasDeviceId || [self.deviceId isEqual:otherMessage.deviceId]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasVersion) {
    hashCode = hashCode * 31 + [self.version hash];
  }
  if (self.hasDeviceId) {
    hashCode = hashCode * 31 + [self.deviceId hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBMachineUpgradeRequestBuilder()
@property (strong) TXPBMachineUpgradeRequest* resultMachineUpgradeRequest;
@end

@implementation TXPBMachineUpgradeRequestBuilder
@synthesize resultMachineUpgradeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultMachineUpgradeRequest = [[TXPBMachineUpgradeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultMachineUpgradeRequest;
}
- (TXPBMachineUpgradeRequestBuilder*) clear {
  self.resultMachineUpgradeRequest = [[TXPBMachineUpgradeRequest alloc] init];
  return self;
}
- (TXPBMachineUpgradeRequestBuilder*) clone {
  return [TXPBMachineUpgradeRequest builderWithPrototype:resultMachineUpgradeRequest];
}
- (TXPBMachineUpgradeRequest*) defaultInstance {
  return [TXPBMachineUpgradeRequest defaultInstance];
}
- (TXPBMachineUpgradeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBMachineUpgradeRequest*) buildPartial {
  TXPBMachineUpgradeRequest* returnMe = resultMachineUpgradeRequest;
  self.resultMachineUpgradeRequest = nil;
  return returnMe;
}
- (TXPBMachineUpgradeRequestBuilder*) mergeFrom:(TXPBMachineUpgradeRequest*) other {
  if (other == [TXPBMachineUpgradeRequest defaultInstance]) {
    return self;
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasDeviceId) {
    [self setDeviceId:other.deviceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBMachineUpgradeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBMachineUpgradeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setVersion:[input readString]];
        break;
      }
      case 18: {
        [self setDeviceId:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasVersion {
  return resultMachineUpgradeRequest.hasVersion;
}
- (NSString*) version {
  return resultMachineUpgradeRequest.version;
}
- (TXPBMachineUpgradeRequestBuilder*) setVersion:(NSString*) value {
  resultMachineUpgradeRequest.hasVersion = YES;
  resultMachineUpgradeRequest.version = value;
  return self;
}
- (TXPBMachineUpgradeRequestBuilder*) clearVersion {
  resultMachineUpgradeRequest.hasVersion = NO;
  resultMachineUpgradeRequest.version = @"";
  return self;
}
- (BOOL) hasDeviceId {
  return resultMachineUpgradeRequest.hasDeviceId;
}
- (NSString*) deviceId {
  return resultMachineUpgradeRequest.deviceId;
}
- (TXPBMachineUpgradeRequestBuilder*) setDeviceId:(NSString*) value {
  resultMachineUpgradeRequest.hasDeviceId = YES;
  resultMachineUpgradeRequest.deviceId = value;
  return self;
}
- (TXPBMachineUpgradeRequestBuilder*) clearDeviceId {
  resultMachineUpgradeRequest.hasDeviceId = NO;
  resultMachineUpgradeRequest.deviceId = @"";
  return self;
}
@end

@interface TXPBUpgradeResponse ()
@property (strong) TXPBUpgrade* upgrade;
@end

@implementation TXPBUpgradeResponse

- (BOOL) hasUpgrade {
  return !!hasUpgrade_;
}
- (void) setHasUpgrade:(BOOL) _value_ {
  hasUpgrade_ = !!_value_;
}
@synthesize upgrade;
- (instancetype) init {
  if ((self = [super init])) {
    self.upgrade = [TXPBUpgrade defaultInstance];
  }
  return self;
}
static TXPBUpgradeResponse* defaultTXPBUpgradeResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpgradeResponse class]) {
    defaultTXPBUpgradeResponseInstance = [[TXPBUpgradeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpgradeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpgradeResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasUpgrade) {
    if (!self.upgrade.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUpgrade) {
    [output writeMessage:1 value:self.upgrade];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUpgrade) {
    size_ += computeMessageSize(1, self.upgrade);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpgradeResponse*) parseFromData:(NSData*) data {
  return (TXPBUpgradeResponse*)[[[TXPBUpgradeResponse builder] mergeFromData:data] build];
}
+ (TXPBUpgradeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgradeResponse*)[[[TXPBUpgradeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgradeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpgradeResponse*)[[[TXPBUpgradeResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUpgradeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgradeResponse*)[[[TXPBUpgradeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgradeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpgradeResponse*)[[[TXPBUpgradeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpgradeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpgradeResponse*)[[[TXPBUpgradeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpgradeResponseBuilder*) builder {
  return [[TXPBUpgradeResponseBuilder alloc] init];
}
+ (TXPBUpgradeResponseBuilder*) builderWithPrototype:(TXPBUpgradeResponse*) prototype {
  return [[TXPBUpgradeResponse builder] mergeFrom:prototype];
}
- (TXPBUpgradeResponseBuilder*) builder {
  return [TXPBUpgradeResponse builder];
}
- (TXPBUpgradeResponseBuilder*) toBuilder {
  return [TXPBUpgradeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUpgrade) {
    [output appendFormat:@"%@%@ {\n", indent, @"upgrade"];
    [self.upgrade writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUpgrade) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.upgrade storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"upgrade"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpgradeResponse class]]) {
    return NO;
  }
  TXPBUpgradeResponse *otherMessage = other;
  return
      self.hasUpgrade == otherMessage.hasUpgrade &&
      (!self.hasUpgrade || [self.upgrade isEqual:otherMessage.upgrade]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUpgrade) {
    hashCode = hashCode * 31 + [self.upgrade hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpgradeResponseBuilder()
@property (strong) TXPBUpgradeResponse* resultUpgradeResponse;
@end

@implementation TXPBUpgradeResponseBuilder
@synthesize resultUpgradeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpgradeResponse = [[TXPBUpgradeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpgradeResponse;
}
- (TXPBUpgradeResponseBuilder*) clear {
  self.resultUpgradeResponse = [[TXPBUpgradeResponse alloc] init];
  return self;
}
- (TXPBUpgradeResponseBuilder*) clone {
  return [TXPBUpgradeResponse builderWithPrototype:resultUpgradeResponse];
}
- (TXPBUpgradeResponse*) defaultInstance {
  return [TXPBUpgradeResponse defaultInstance];
}
- (TXPBUpgradeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpgradeResponse*) buildPartial {
  TXPBUpgradeResponse* returnMe = resultUpgradeResponse;
  self.resultUpgradeResponse = nil;
  return returnMe;
}
- (TXPBUpgradeResponseBuilder*) mergeFrom:(TXPBUpgradeResponse*) other {
  if (other == [TXPBUpgradeResponse defaultInstance]) {
    return self;
  }
  if (other.hasUpgrade) {
    [self mergeUpgrade:other.upgrade];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpgradeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpgradeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUpgradeBuilder* subBuilder = [TXPBUpgrade builder];
        if (self.hasUpgrade) {
          [subBuilder mergeFrom:self.upgrade];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setUpgrade:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasUpgrade {
  return resultUpgradeResponse.hasUpgrade;
}
- (TXPBUpgrade*) upgrade {
  return resultUpgradeResponse.upgrade;
}
- (TXPBUpgradeResponseBuilder*) setUpgrade:(TXPBUpgrade*) value {
  resultUpgradeResponse.hasUpgrade = YES;
  resultUpgradeResponse.upgrade = value;
  return self;
}
- (TXPBUpgradeResponseBuilder*) setUpgradeBuilder:(TXPBUpgradeBuilder*) builderForValue {
  return [self setUpgrade:[builderForValue build]];
}
- (TXPBUpgradeResponseBuilder*) mergeUpgrade:(TXPBUpgrade*) value {
  if (resultUpgradeResponse.hasUpgrade &&
      resultUpgradeResponse.upgrade != [TXPBUpgrade defaultInstance]) {
    resultUpgradeResponse.upgrade =
      [[[TXPBUpgrade builderWithPrototype:resultUpgradeResponse.upgrade] mergeFrom:value] buildPartial];
  } else {
    resultUpgradeResponse.upgrade = value;
  }
  resultUpgradeResponse.hasUpgrade = YES;
  return self;
}
- (TXPBUpgradeResponseBuilder*) clearUpgrade {
  resultUpgradeResponse.hasUpgrade = NO;
  resultUpgradeResponse.upgrade = [TXPBUpgrade defaultInstance];
  return self;
}
@end

@interface TXPBScanCodeCheckinRequest ()
@property (strong) NSString* cardCode;
@property SInt64 userId;
@property SInt64 checkinTime;
@end

@implementation TXPBScanCodeCheckinRequest

- (BOOL) hasCardCode {
  return !!hasCardCode_;
}
- (void) setHasCardCode:(BOOL) _value_ {
  hasCardCode_ = !!_value_;
}
@synthesize cardCode;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasCheckinTime {
  return !!hasCheckinTime_;
}
- (void) setHasCheckinTime:(BOOL) _value_ {
  hasCheckinTime_ = !!_value_;
}
@synthesize checkinTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.cardCode = @"";
    self.userId = 0L;
    self.checkinTime = 0L;
  }
  return self;
}
static TXPBScanCodeCheckinRequest* defaultTXPBScanCodeCheckinRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBScanCodeCheckinRequest class]) {
    defaultTXPBScanCodeCheckinRequestInstance = [[TXPBScanCodeCheckinRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBScanCodeCheckinRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBScanCodeCheckinRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCheckinTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCardCode) {
    [output writeString:1 value:self.cardCode];
  }
  if (self.hasUserId) {
    [output writeInt64:2 value:self.userId];
  }
  if (self.hasCheckinTime) {
    [output writeInt64:3 value:self.checkinTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCardCode) {
    size_ += computeStringSize(1, self.cardCode);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(2, self.userId);
  }
  if (self.hasCheckinTime) {
    size_ += computeInt64Size(3, self.checkinTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBScanCodeCheckinRequest*) parseFromData:(NSData*) data {
  return (TXPBScanCodeCheckinRequest*)[[[TXPBScanCodeCheckinRequest builder] mergeFromData:data] build];
}
+ (TXPBScanCodeCheckinRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBScanCodeCheckinRequest*)[[[TXPBScanCodeCheckinRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBScanCodeCheckinRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBScanCodeCheckinRequest*)[[[TXPBScanCodeCheckinRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBScanCodeCheckinRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBScanCodeCheckinRequest*)[[[TXPBScanCodeCheckinRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBScanCodeCheckinRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBScanCodeCheckinRequest*)[[[TXPBScanCodeCheckinRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBScanCodeCheckinRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBScanCodeCheckinRequest*)[[[TXPBScanCodeCheckinRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBScanCodeCheckinRequestBuilder*) builder {
  return [[TXPBScanCodeCheckinRequestBuilder alloc] init];
}
+ (TXPBScanCodeCheckinRequestBuilder*) builderWithPrototype:(TXPBScanCodeCheckinRequest*) prototype {
  return [[TXPBScanCodeCheckinRequest builder] mergeFrom:prototype];
}
- (TXPBScanCodeCheckinRequestBuilder*) builder {
  return [TXPBScanCodeCheckinRequest builder];
}
- (TXPBScanCodeCheckinRequestBuilder*) toBuilder {
  return [TXPBScanCodeCheckinRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCardCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"cardCode", self.cardCode];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasCheckinTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"checkinTime", [NSNumber numberWithLongLong:self.checkinTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCardCode) {
    [dictionary setObject: self.cardCode forKey: @"cardCode"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasCheckinTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.checkinTime] forKey: @"checkinTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBScanCodeCheckinRequest class]]) {
    return NO;
  }
  TXPBScanCodeCheckinRequest *otherMessage = other;
  return
      self.hasCardCode == otherMessage.hasCardCode &&
      (!self.hasCardCode || [self.cardCode isEqual:otherMessage.cardCode]) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasCheckinTime == otherMessage.hasCheckinTime &&
      (!self.hasCheckinTime || self.checkinTime == otherMessage.checkinTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCardCode) {
    hashCode = hashCode * 31 + [self.cardCode hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasCheckinTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.checkinTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBScanCodeCheckinRequestBuilder()
@property (strong) TXPBScanCodeCheckinRequest* resultScanCodeCheckinRequest;
@end

@implementation TXPBScanCodeCheckinRequestBuilder
@synthesize resultScanCodeCheckinRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultScanCodeCheckinRequest = [[TXPBScanCodeCheckinRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultScanCodeCheckinRequest;
}
- (TXPBScanCodeCheckinRequestBuilder*) clear {
  self.resultScanCodeCheckinRequest = [[TXPBScanCodeCheckinRequest alloc] init];
  return self;
}
- (TXPBScanCodeCheckinRequestBuilder*) clone {
  return [TXPBScanCodeCheckinRequest builderWithPrototype:resultScanCodeCheckinRequest];
}
- (TXPBScanCodeCheckinRequest*) defaultInstance {
  return [TXPBScanCodeCheckinRequest defaultInstance];
}
- (TXPBScanCodeCheckinRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBScanCodeCheckinRequest*) buildPartial {
  TXPBScanCodeCheckinRequest* returnMe = resultScanCodeCheckinRequest;
  self.resultScanCodeCheckinRequest = nil;
  return returnMe;
}
- (TXPBScanCodeCheckinRequestBuilder*) mergeFrom:(TXPBScanCodeCheckinRequest*) other {
  if (other == [TXPBScanCodeCheckinRequest defaultInstance]) {
    return self;
  }
  if (other.hasCardCode) {
    [self setCardCode:other.cardCode];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasCheckinTime) {
    [self setCheckinTime:other.checkinTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBScanCodeCheckinRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBScanCodeCheckinRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setCardCode:[input readString]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 24: {
        [self setCheckinTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCardCode {
  return resultScanCodeCheckinRequest.hasCardCode;
}
- (NSString*) cardCode {
  return resultScanCodeCheckinRequest.cardCode;
}
- (TXPBScanCodeCheckinRequestBuilder*) setCardCode:(NSString*) value {
  resultScanCodeCheckinRequest.hasCardCode = YES;
  resultScanCodeCheckinRequest.cardCode = value;
  return self;
}
- (TXPBScanCodeCheckinRequestBuilder*) clearCardCode {
  resultScanCodeCheckinRequest.hasCardCode = NO;
  resultScanCodeCheckinRequest.cardCode = @"";
  return self;
}
- (BOOL) hasUserId {
  return resultScanCodeCheckinRequest.hasUserId;
}
- (SInt64) userId {
  return resultScanCodeCheckinRequest.userId;
}
- (TXPBScanCodeCheckinRequestBuilder*) setUserId:(SInt64) value {
  resultScanCodeCheckinRequest.hasUserId = YES;
  resultScanCodeCheckinRequest.userId = value;
  return self;
}
- (TXPBScanCodeCheckinRequestBuilder*) clearUserId {
  resultScanCodeCheckinRequest.hasUserId = NO;
  resultScanCodeCheckinRequest.userId = 0L;
  return self;
}
- (BOOL) hasCheckinTime {
  return resultScanCodeCheckinRequest.hasCheckinTime;
}
- (SInt64) checkinTime {
  return resultScanCodeCheckinRequest.checkinTime;
}
- (TXPBScanCodeCheckinRequestBuilder*) setCheckinTime:(SInt64) value {
  resultScanCodeCheckinRequest.hasCheckinTime = YES;
  resultScanCodeCheckinRequest.checkinTime = value;
  return self;
}
- (TXPBScanCodeCheckinRequestBuilder*) clearCheckinTime {
  resultScanCodeCheckinRequest.hasCheckinTime = NO;
  resultScanCodeCheckinRequest.checkinTime = 0L;
  return self;
}
@end

@interface TXPBScanCodeCheckinResponse ()
@end

@implementation TXPBScanCodeCheckinResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBScanCodeCheckinResponse* defaultTXPBScanCodeCheckinResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBScanCodeCheckinResponse class]) {
    defaultTXPBScanCodeCheckinResponseInstance = [[TXPBScanCodeCheckinResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBScanCodeCheckinResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBScanCodeCheckinResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBScanCodeCheckinResponse*) parseFromData:(NSData*) data {
  return (TXPBScanCodeCheckinResponse*)[[[TXPBScanCodeCheckinResponse builder] mergeFromData:data] build];
}
+ (TXPBScanCodeCheckinResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBScanCodeCheckinResponse*)[[[TXPBScanCodeCheckinResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBScanCodeCheckinResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBScanCodeCheckinResponse*)[[[TXPBScanCodeCheckinResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBScanCodeCheckinResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBScanCodeCheckinResponse*)[[[TXPBScanCodeCheckinResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBScanCodeCheckinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBScanCodeCheckinResponse*)[[[TXPBScanCodeCheckinResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBScanCodeCheckinResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBScanCodeCheckinResponse*)[[[TXPBScanCodeCheckinResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBScanCodeCheckinResponseBuilder*) builder {
  return [[TXPBScanCodeCheckinResponseBuilder alloc] init];
}
+ (TXPBScanCodeCheckinResponseBuilder*) builderWithPrototype:(TXPBScanCodeCheckinResponse*) prototype {
  return [[TXPBScanCodeCheckinResponse builder] mergeFrom:prototype];
}
- (TXPBScanCodeCheckinResponseBuilder*) builder {
  return [TXPBScanCodeCheckinResponse builder];
}
- (TXPBScanCodeCheckinResponseBuilder*) toBuilder {
  return [TXPBScanCodeCheckinResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBScanCodeCheckinResponse class]]) {
    return NO;
  }
  TXPBScanCodeCheckinResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBScanCodeCheckinResponseBuilder()
@property (strong) TXPBScanCodeCheckinResponse* resultScanCodeCheckinResponse;
@end

@implementation TXPBScanCodeCheckinResponseBuilder
@synthesize resultScanCodeCheckinResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultScanCodeCheckinResponse = [[TXPBScanCodeCheckinResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultScanCodeCheckinResponse;
}
- (TXPBScanCodeCheckinResponseBuilder*) clear {
  self.resultScanCodeCheckinResponse = [[TXPBScanCodeCheckinResponse alloc] init];
  return self;
}
- (TXPBScanCodeCheckinResponseBuilder*) clone {
  return [TXPBScanCodeCheckinResponse builderWithPrototype:resultScanCodeCheckinResponse];
}
- (TXPBScanCodeCheckinResponse*) defaultInstance {
  return [TXPBScanCodeCheckinResponse defaultInstance];
}
- (TXPBScanCodeCheckinResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBScanCodeCheckinResponse*) buildPartial {
  TXPBScanCodeCheckinResponse* returnMe = resultScanCodeCheckinResponse;
  self.resultScanCodeCheckinResponse = nil;
  return returnMe;
}
- (TXPBScanCodeCheckinResponseBuilder*) mergeFrom:(TXPBScanCodeCheckinResponse*) other {
  if (other == [TXPBScanCodeCheckinResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBScanCodeCheckinResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBScanCodeCheckinResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetGardenNameRequest ()
@property SInt64 gardenId;
@end

@implementation TXPBGetGardenNameRequest

- (BOOL) hasGardenId {
  return !!hasGardenId_;
}
- (void) setHasGardenId:(BOOL) _value_ {
  hasGardenId_ = !!_value_;
}
@synthesize gardenId;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenId = 0L;
  }
  return self;
}
static TXPBGetGardenNameRequest* defaultTXPBGetGardenNameRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetGardenNameRequest class]) {
    defaultTXPBGetGardenNameRequestInstance = [[TXPBGetGardenNameRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetGardenNameRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetGardenNameRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenId) {
    [output writeInt64:1 value:self.gardenId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenId) {
    size_ += computeInt64Size(1, self.gardenId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetGardenNameRequest*) parseFromData:(NSData*) data {
  return (TXPBGetGardenNameRequest*)[[[TXPBGetGardenNameRequest builder] mergeFromData:data] build];
}
+ (TXPBGetGardenNameRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetGardenNameRequest*)[[[TXPBGetGardenNameRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetGardenNameRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetGardenNameRequest*)[[[TXPBGetGardenNameRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBGetGardenNameRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetGardenNameRequest*)[[[TXPBGetGardenNameRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetGardenNameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetGardenNameRequest*)[[[TXPBGetGardenNameRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetGardenNameRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetGardenNameRequest*)[[[TXPBGetGardenNameRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetGardenNameRequestBuilder*) builder {
  return [[TXPBGetGardenNameRequestBuilder alloc] init];
}
+ (TXPBGetGardenNameRequestBuilder*) builderWithPrototype:(TXPBGetGardenNameRequest*) prototype {
  return [[TXPBGetGardenNameRequest builder] mergeFrom:prototype];
}
- (TXPBGetGardenNameRequestBuilder*) builder {
  return [TXPBGetGardenNameRequest builder];
}
- (TXPBGetGardenNameRequestBuilder*) toBuilder {
  return [TXPBGetGardenNameRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenId", [NSNumber numberWithLongLong:self.gardenId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.gardenId] forKey: @"gardenId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetGardenNameRequest class]]) {
    return NO;
  }
  TXPBGetGardenNameRequest *otherMessage = other;
  return
      self.hasGardenId == otherMessage.hasGardenId &&
      (!self.hasGardenId || self.gardenId == otherMessage.gardenId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.gardenId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetGardenNameRequestBuilder()
@property (strong) TXPBGetGardenNameRequest* resultGetGardenNameRequest;
@end

@implementation TXPBGetGardenNameRequestBuilder
@synthesize resultGetGardenNameRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetGardenNameRequest = [[TXPBGetGardenNameRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetGardenNameRequest;
}
- (TXPBGetGardenNameRequestBuilder*) clear {
  self.resultGetGardenNameRequest = [[TXPBGetGardenNameRequest alloc] init];
  return self;
}
- (TXPBGetGardenNameRequestBuilder*) clone {
  return [TXPBGetGardenNameRequest builderWithPrototype:resultGetGardenNameRequest];
}
- (TXPBGetGardenNameRequest*) defaultInstance {
  return [TXPBGetGardenNameRequest defaultInstance];
}
- (TXPBGetGardenNameRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetGardenNameRequest*) buildPartial {
  TXPBGetGardenNameRequest* returnMe = resultGetGardenNameRequest;
  self.resultGetGardenNameRequest = nil;
  return returnMe;
}
- (TXPBGetGardenNameRequestBuilder*) mergeFrom:(TXPBGetGardenNameRequest*) other {
  if (other == [TXPBGetGardenNameRequest defaultInstance]) {
    return self;
  }
  if (other.hasGardenId) {
    [self setGardenId:other.gardenId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetGardenNameRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetGardenNameRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setGardenId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasGardenId {
  return resultGetGardenNameRequest.hasGardenId;
}
- (SInt64) gardenId {
  return resultGetGardenNameRequest.gardenId;
}
- (TXPBGetGardenNameRequestBuilder*) setGardenId:(SInt64) value {
  resultGetGardenNameRequest.hasGardenId = YES;
  resultGetGardenNameRequest.gardenId = value;
  return self;
}
- (TXPBGetGardenNameRequestBuilder*) clearGardenId {
  resultGetGardenNameRequest.hasGardenId = NO;
  resultGetGardenNameRequest.gardenId = 0L;
  return self;
}
@end

@interface TXPBGetGardenNameResponse ()
@property (strong) NSString* gardenName;
@end

@implementation TXPBGetGardenNameResponse

- (BOOL) hasGardenName {
  return !!hasGardenName_;
}
- (void) setHasGardenName:(BOOL) _value_ {
  hasGardenName_ = !!_value_;
}
@synthesize gardenName;
- (instancetype) init {
  if ((self = [super init])) {
    self.gardenName = @"";
  }
  return self;
}
static TXPBGetGardenNameResponse* defaultTXPBGetGardenNameResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetGardenNameResponse class]) {
    defaultTXPBGetGardenNameResponseInstance = [[TXPBGetGardenNameResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetGardenNameResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetGardenNameResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasGardenName) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasGardenName) {
    [output writeString:2 value:self.gardenName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasGardenName) {
    size_ += computeStringSize(2, self.gardenName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetGardenNameResponse*) parseFromData:(NSData*) data {
  return (TXPBGetGardenNameResponse*)[[[TXPBGetGardenNameResponse builder] mergeFromData:data] build];
}
+ (TXPBGetGardenNameResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetGardenNameResponse*)[[[TXPBGetGardenNameResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetGardenNameResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetGardenNameResponse*)[[[TXPBGetGardenNameResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBGetGardenNameResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetGardenNameResponse*)[[[TXPBGetGardenNameResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetGardenNameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetGardenNameResponse*)[[[TXPBGetGardenNameResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetGardenNameResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetGardenNameResponse*)[[[TXPBGetGardenNameResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetGardenNameResponseBuilder*) builder {
  return [[TXPBGetGardenNameResponseBuilder alloc] init];
}
+ (TXPBGetGardenNameResponseBuilder*) builderWithPrototype:(TXPBGetGardenNameResponse*) prototype {
  return [[TXPBGetGardenNameResponse builder] mergeFrom:prototype];
}
- (TXPBGetGardenNameResponseBuilder*) builder {
  return [TXPBGetGardenNameResponse builder];
}
- (TXPBGetGardenNameResponseBuilder*) toBuilder {
  return [TXPBGetGardenNameResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasGardenName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"gardenName", self.gardenName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasGardenName) {
    [dictionary setObject: self.gardenName forKey: @"gardenName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetGardenNameResponse class]]) {
    return NO;
  }
  TXPBGetGardenNameResponse *otherMessage = other;
  return
      self.hasGardenName == otherMessage.hasGardenName &&
      (!self.hasGardenName || [self.gardenName isEqual:otherMessage.gardenName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasGardenName) {
    hashCode = hashCode * 31 + [self.gardenName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetGardenNameResponseBuilder()
@property (strong) TXPBGetGardenNameResponse* resultGetGardenNameResponse;
@end

@implementation TXPBGetGardenNameResponseBuilder
@synthesize resultGetGardenNameResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetGardenNameResponse = [[TXPBGetGardenNameResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetGardenNameResponse;
}
- (TXPBGetGardenNameResponseBuilder*) clear {
  self.resultGetGardenNameResponse = [[TXPBGetGardenNameResponse alloc] init];
  return self;
}
- (TXPBGetGardenNameResponseBuilder*) clone {
  return [TXPBGetGardenNameResponse builderWithPrototype:resultGetGardenNameResponse];
}
- (TXPBGetGardenNameResponse*) defaultInstance {
  return [TXPBGetGardenNameResponse defaultInstance];
}
- (TXPBGetGardenNameResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetGardenNameResponse*) buildPartial {
  TXPBGetGardenNameResponse* returnMe = resultGetGardenNameResponse;
  self.resultGetGardenNameResponse = nil;
  return returnMe;
}
- (TXPBGetGardenNameResponseBuilder*) mergeFrom:(TXPBGetGardenNameResponse*) other {
  if (other == [TXPBGetGardenNameResponse defaultInstance]) {
    return self;
  }
  if (other.hasGardenName) {
    [self setGardenName:other.gardenName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetGardenNameResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetGardenNameResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 18: {
        [self setGardenName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasGardenName {
  return resultGetGardenNameResponse.hasGardenName;
}
- (NSString*) gardenName {
  return resultGetGardenNameResponse.gardenName;
}
- (TXPBGetGardenNameResponseBuilder*) setGardenName:(NSString*) value {
  resultGetGardenNameResponse.hasGardenName = YES;
  resultGetGardenNameResponse.gardenName = value;
  return self;
}
- (TXPBGetGardenNameResponseBuilder*) clearGardenName {
  resultGetGardenNameResponse.hasGardenName = NO;
  resultGetGardenNameResponse.gardenName = @"";
  return self;
}
@end

@interface TXPBClearCheckInRequest ()
@property SInt64 maxId;
@end

@implementation TXPBClearCheckInRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
  }
  return self;
}
static TXPBClearCheckInRequest* defaultTXPBClearCheckInRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBClearCheckInRequest class]) {
    defaultTXPBClearCheckInRequestInstance = [[TXPBClearCheckInRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBClearCheckInRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBClearCheckInRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBClearCheckInRequest*) parseFromData:(NSData*) data {
  return (TXPBClearCheckInRequest*)[[[TXPBClearCheckInRequest builder] mergeFromData:data] build];
}
+ (TXPBClearCheckInRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClearCheckInRequest*)[[[TXPBClearCheckInRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBClearCheckInRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBClearCheckInRequest*)[[[TXPBClearCheckInRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBClearCheckInRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClearCheckInRequest*)[[[TXPBClearCheckInRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClearCheckInRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBClearCheckInRequest*)[[[TXPBClearCheckInRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBClearCheckInRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClearCheckInRequest*)[[[TXPBClearCheckInRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClearCheckInRequestBuilder*) builder {
  return [[TXPBClearCheckInRequestBuilder alloc] init];
}
+ (TXPBClearCheckInRequestBuilder*) builderWithPrototype:(TXPBClearCheckInRequest*) prototype {
  return [[TXPBClearCheckInRequest builder] mergeFrom:prototype];
}
- (TXPBClearCheckInRequestBuilder*) builder {
  return [TXPBClearCheckInRequest builder];
}
- (TXPBClearCheckInRequestBuilder*) toBuilder {
  return [TXPBClearCheckInRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBClearCheckInRequest class]]) {
    return NO;
  }
  TXPBClearCheckInRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBClearCheckInRequestBuilder()
@property (strong) TXPBClearCheckInRequest* resultClearCheckInRequest;
@end

@implementation TXPBClearCheckInRequestBuilder
@synthesize resultClearCheckInRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClearCheckInRequest = [[TXPBClearCheckInRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClearCheckInRequest;
}
- (TXPBClearCheckInRequestBuilder*) clear {
  self.resultClearCheckInRequest = [[TXPBClearCheckInRequest alloc] init];
  return self;
}
- (TXPBClearCheckInRequestBuilder*) clone {
  return [TXPBClearCheckInRequest builderWithPrototype:resultClearCheckInRequest];
}
- (TXPBClearCheckInRequest*) defaultInstance {
  return [TXPBClearCheckInRequest defaultInstance];
}
- (TXPBClearCheckInRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBClearCheckInRequest*) buildPartial {
  TXPBClearCheckInRequest* returnMe = resultClearCheckInRequest;
  self.resultClearCheckInRequest = nil;
  return returnMe;
}
- (TXPBClearCheckInRequestBuilder*) mergeFrom:(TXPBClearCheckInRequest*) other {
  if (other == [TXPBClearCheckInRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBClearCheckInRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBClearCheckInRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultClearCheckInRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultClearCheckInRequest.maxId;
}
- (TXPBClearCheckInRequestBuilder*) setMaxId:(SInt64) value {
  resultClearCheckInRequest.hasMaxId = YES;
  resultClearCheckInRequest.maxId = value;
  return self;
}
- (TXPBClearCheckInRequestBuilder*) clearMaxId {
  resultClearCheckInRequest.hasMaxId = NO;
  resultClearCheckInRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBClearNoticeRequest ()
@property SInt64 maxId;
@property BOOL isInbox;
@end

@implementation TXPBClearNoticeRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasIsInbox {
  return !!hasIsInbox_;
}
- (void) setHasIsInbox:(BOOL) _value_ {
  hasIsInbox_ = !!_value_;
}
- (BOOL) isInbox {
  return !!isInbox_;
}
- (void) setIsInbox:(BOOL) _value_ {
  isInbox_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.isInbox = NO;
  }
  return self;
}
static TXPBClearNoticeRequest* defaultTXPBClearNoticeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBClearNoticeRequest class]) {
    defaultTXPBClearNoticeRequestInstance = [[TXPBClearNoticeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBClearNoticeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBClearNoticeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMaxId) {
    return NO;
  }
  if (!self.hasIsInbox) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasIsInbox) {
    [output writeBool:2 value:self.isInbox];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasIsInbox) {
    size_ += computeBoolSize(2, self.isInbox);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBClearNoticeRequest*) parseFromData:(NSData*) data {
  return (TXPBClearNoticeRequest*)[[[TXPBClearNoticeRequest builder] mergeFromData:data] build];
}
+ (TXPBClearNoticeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClearNoticeRequest*)[[[TXPBClearNoticeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBClearNoticeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBClearNoticeRequest*)[[[TXPBClearNoticeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBClearNoticeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClearNoticeRequest*)[[[TXPBClearNoticeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClearNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBClearNoticeRequest*)[[[TXPBClearNoticeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBClearNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClearNoticeRequest*)[[[TXPBClearNoticeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClearNoticeRequestBuilder*) builder {
  return [[TXPBClearNoticeRequestBuilder alloc] init];
}
+ (TXPBClearNoticeRequestBuilder*) builderWithPrototype:(TXPBClearNoticeRequest*) prototype {
  return [[TXPBClearNoticeRequest builder] mergeFrom:prototype];
}
- (TXPBClearNoticeRequestBuilder*) builder {
  return [TXPBClearNoticeRequest builder];
}
- (TXPBClearNoticeRequestBuilder*) toBuilder {
  return [TXPBClearNoticeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasIsInbox) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isInbox", [NSNumber numberWithBool:self.isInbox]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasIsInbox) {
    [dictionary setObject: [NSNumber numberWithBool:self.isInbox] forKey: @"isInbox"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBClearNoticeRequest class]]) {
    return NO;
  }
  TXPBClearNoticeRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasIsInbox == otherMessage.hasIsInbox &&
      (!self.hasIsInbox || self.isInbox == otherMessage.isInbox) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasIsInbox) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isInbox] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBClearNoticeRequestBuilder()
@property (strong) TXPBClearNoticeRequest* resultClearNoticeRequest;
@end

@implementation TXPBClearNoticeRequestBuilder
@synthesize resultClearNoticeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClearNoticeRequest = [[TXPBClearNoticeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClearNoticeRequest;
}
- (TXPBClearNoticeRequestBuilder*) clear {
  self.resultClearNoticeRequest = [[TXPBClearNoticeRequest alloc] init];
  return self;
}
- (TXPBClearNoticeRequestBuilder*) clone {
  return [TXPBClearNoticeRequest builderWithPrototype:resultClearNoticeRequest];
}
- (TXPBClearNoticeRequest*) defaultInstance {
  return [TXPBClearNoticeRequest defaultInstance];
}
- (TXPBClearNoticeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBClearNoticeRequest*) buildPartial {
  TXPBClearNoticeRequest* returnMe = resultClearNoticeRequest;
  self.resultClearNoticeRequest = nil;
  return returnMe;
}
- (TXPBClearNoticeRequestBuilder*) mergeFrom:(TXPBClearNoticeRequest*) other {
  if (other == [TXPBClearNoticeRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasIsInbox) {
    [self setIsInbox:other.isInbox];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBClearNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBClearNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setIsInbox:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultClearNoticeRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultClearNoticeRequest.maxId;
}
- (TXPBClearNoticeRequestBuilder*) setMaxId:(SInt64) value {
  resultClearNoticeRequest.hasMaxId = YES;
  resultClearNoticeRequest.maxId = value;
  return self;
}
- (TXPBClearNoticeRequestBuilder*) clearMaxId {
  resultClearNoticeRequest.hasMaxId = NO;
  resultClearNoticeRequest.maxId = 0L;
  return self;
}
- (BOOL) hasIsInbox {
  return resultClearNoticeRequest.hasIsInbox;
}
- (BOOL) isInbox {
  return resultClearNoticeRequest.isInbox;
}
- (TXPBClearNoticeRequestBuilder*) setIsInbox:(BOOL) value {
  resultClearNoticeRequest.hasIsInbox = YES;
  resultClearNoticeRequest.isInbox = value;
  return self;
}
- (TXPBClearNoticeRequestBuilder*) clearIsInbox {
  resultClearNoticeRequest.hasIsInbox = NO;
  resultClearNoticeRequest.isInbox = NO;
  return self;
}
@end

@interface TXPBFetchDepartmentPhotoRequest ()
@property SInt64 departmentId;
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchDepartmentPhotoRequest

- (BOOL) hasDepartmentId {
  return !!hasDepartmentId_;
}
- (void) setHasDepartmentId:(BOOL) _value_ {
  hasDepartmentId_ = !!_value_;
}
@synthesize departmentId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.departmentId = 0L;
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchDepartmentPhotoRequest* defaultTXPBFetchDepartmentPhotoRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentPhotoRequest class]) {
    defaultTXPBFetchDepartmentPhotoRequestInstance = [[TXPBFetchDepartmentPhotoRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentPhotoRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentPhotoRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDepartmentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDepartmentId) {
    [output writeInt64:1 value:self.departmentId];
  }
  if (self.hasMaxId) {
    [output writeInt64:2 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:3 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDepartmentId) {
    size_ += computeInt64Size(1, self.departmentId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(2, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(3, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentPhotoRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentPhotoRequest*)[[[TXPBFetchDepartmentPhotoRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentPhotoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentPhotoRequest*)[[[TXPBFetchDepartmentPhotoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentPhotoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentPhotoRequest*)[[[TXPBFetchDepartmentPhotoRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentPhotoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentPhotoRequest*)[[[TXPBFetchDepartmentPhotoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentPhotoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentPhotoRequest*)[[[TXPBFetchDepartmentPhotoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentPhotoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentPhotoRequest*)[[[TXPBFetchDepartmentPhotoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentPhotoRequestBuilder*) builder {
  return [[TXPBFetchDepartmentPhotoRequestBuilder alloc] init];
}
+ (TXPBFetchDepartmentPhotoRequestBuilder*) builderWithPrototype:(TXPBFetchDepartmentPhotoRequest*) prototype {
  return [[TXPBFetchDepartmentPhotoRequest builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) builder {
  return [TXPBFetchDepartmentPhotoRequest builder];
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) toBuilder {
  return [TXPBFetchDepartmentPhotoRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDepartmentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"departmentId", [NSNumber numberWithLongLong:self.departmentId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDepartmentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.departmentId] forKey: @"departmentId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentPhotoRequest class]]) {
    return NO;
  }
  TXPBFetchDepartmentPhotoRequest *otherMessage = other;
  return
      self.hasDepartmentId == otherMessage.hasDepartmentId &&
      (!self.hasDepartmentId || self.departmentId == otherMessage.departmentId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDepartmentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.departmentId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentPhotoRequestBuilder()
@property (strong) TXPBFetchDepartmentPhotoRequest* resultFetchDepartmentPhotoRequest;
@end

@implementation TXPBFetchDepartmentPhotoRequestBuilder
@synthesize resultFetchDepartmentPhotoRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentPhotoRequest = [[TXPBFetchDepartmentPhotoRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentPhotoRequest;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) clear {
  self.resultFetchDepartmentPhotoRequest = [[TXPBFetchDepartmentPhotoRequest alloc] init];
  return self;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) clone {
  return [TXPBFetchDepartmentPhotoRequest builderWithPrototype:resultFetchDepartmentPhotoRequest];
}
- (TXPBFetchDepartmentPhotoRequest*) defaultInstance {
  return [TXPBFetchDepartmentPhotoRequest defaultInstance];
}
- (TXPBFetchDepartmentPhotoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentPhotoRequest*) buildPartial {
  TXPBFetchDepartmentPhotoRequest* returnMe = resultFetchDepartmentPhotoRequest;
  self.resultFetchDepartmentPhotoRequest = nil;
  return returnMe;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) mergeFrom:(TXPBFetchDepartmentPhotoRequest*) other {
  if (other == [TXPBFetchDepartmentPhotoRequest defaultInstance]) {
    return self;
  }
  if (other.hasDepartmentId) {
    [self setDepartmentId:other.departmentId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDepartmentId:[input readInt64]];
        break;
      }
      case 16: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 24: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasDepartmentId {
  return resultFetchDepartmentPhotoRequest.hasDepartmentId;
}
- (SInt64) departmentId {
  return resultFetchDepartmentPhotoRequest.departmentId;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) setDepartmentId:(SInt64) value {
  resultFetchDepartmentPhotoRequest.hasDepartmentId = YES;
  resultFetchDepartmentPhotoRequest.departmentId = value;
  return self;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) clearDepartmentId {
  resultFetchDepartmentPhotoRequest.hasDepartmentId = NO;
  resultFetchDepartmentPhotoRequest.departmentId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchDepartmentPhotoRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchDepartmentPhotoRequest.maxId;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchDepartmentPhotoRequest.hasMaxId = YES;
  resultFetchDepartmentPhotoRequest.maxId = value;
  return self;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) clearMaxId {
  resultFetchDepartmentPhotoRequest.hasMaxId = NO;
  resultFetchDepartmentPhotoRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchDepartmentPhotoRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchDepartmentPhotoRequest.sinceId;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchDepartmentPhotoRequest.hasSinceId = YES;
  resultFetchDepartmentPhotoRequest.sinceId = value;
  return self;
}
- (TXPBFetchDepartmentPhotoRequestBuilder*) clearSinceId {
  resultFetchDepartmentPhotoRequest.hasSinceId = NO;
  resultFetchDepartmentPhotoRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBDepartmentPhoto ()
@property SInt64 id;
@property (strong) NSString* fileKey;
@property SInt64 createOn;
@end

@implementation TXPBDepartmentPhoto

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasFileKey {
  return !!hasFileKey_;
}
- (void) setHasFileKey:(BOOL) _value_ {
  hasFileKey_ = !!_value_;
}
@synthesize fileKey;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.fileKey = @"";
    self.createOn = 0L;
  }
  return self;
}
static TXPBDepartmentPhoto* defaultTXPBDepartmentPhotoInstance = nil;
+ (void) initialize {
  if (self == [TXPBDepartmentPhoto class]) {
    defaultTXPBDepartmentPhotoInstance = [[TXPBDepartmentPhoto alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDepartmentPhotoInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDepartmentPhotoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasFileKey) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasFileKey) {
    [output writeString:2 value:self.fileKey];
  }
  if (self.hasCreateOn) {
    [output writeInt64:3 value:self.createOn];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasFileKey) {
    size_ += computeStringSize(2, self.fileKey);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(3, self.createOn);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDepartmentPhoto*) parseFromData:(NSData*) data {
  return (TXPBDepartmentPhoto*)[[[TXPBDepartmentPhoto builder] mergeFromData:data] build];
}
+ (TXPBDepartmentPhoto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDepartmentPhoto*)[[[TXPBDepartmentPhoto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDepartmentPhoto*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDepartmentPhoto*)[[[TXPBDepartmentPhoto builder] mergeFromInputStream:input] build];
}
+ (TXPBDepartmentPhoto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDepartmentPhoto*)[[[TXPBDepartmentPhoto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDepartmentPhoto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDepartmentPhoto*)[[[TXPBDepartmentPhoto builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDepartmentPhoto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDepartmentPhoto*)[[[TXPBDepartmentPhoto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDepartmentPhotoBuilder*) builder {
  return [[TXPBDepartmentPhotoBuilder alloc] init];
}
+ (TXPBDepartmentPhotoBuilder*) builderWithPrototype:(TXPBDepartmentPhoto*) prototype {
  return [[TXPBDepartmentPhoto builder] mergeFrom:prototype];
}
- (TXPBDepartmentPhotoBuilder*) builder {
  return [TXPBDepartmentPhoto builder];
}
- (TXPBDepartmentPhotoBuilder*) toBuilder {
  return [TXPBDepartmentPhoto builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasFileKey) {
    [output appendFormat:@"%@%@: %@\n", indent, @"fileKey", self.fileKey];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasFileKey) {
    [dictionary setObject: self.fileKey forKey: @"fileKey"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDepartmentPhoto class]]) {
    return NO;
  }
  TXPBDepartmentPhoto *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasFileKey == otherMessage.hasFileKey &&
      (!self.hasFileKey || [self.fileKey isEqual:otherMessage.fileKey]) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasFileKey) {
    hashCode = hashCode * 31 + [self.fileKey hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDepartmentPhotoBuilder()
@property (strong) TXPBDepartmentPhoto* resultDepartmentPhoto;
@end

@implementation TXPBDepartmentPhotoBuilder
@synthesize resultDepartmentPhoto;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDepartmentPhoto = [[TXPBDepartmentPhoto alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDepartmentPhoto;
}
- (TXPBDepartmentPhotoBuilder*) clear {
  self.resultDepartmentPhoto = [[TXPBDepartmentPhoto alloc] init];
  return self;
}
- (TXPBDepartmentPhotoBuilder*) clone {
  return [TXPBDepartmentPhoto builderWithPrototype:resultDepartmentPhoto];
}
- (TXPBDepartmentPhoto*) defaultInstance {
  return [TXPBDepartmentPhoto defaultInstance];
}
- (TXPBDepartmentPhoto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDepartmentPhoto*) buildPartial {
  TXPBDepartmentPhoto* returnMe = resultDepartmentPhoto;
  self.resultDepartmentPhoto = nil;
  return returnMe;
}
- (TXPBDepartmentPhotoBuilder*) mergeFrom:(TXPBDepartmentPhoto*) other {
  if (other == [TXPBDepartmentPhoto defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasFileKey) {
    [self setFileKey:other.fileKey];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDepartmentPhotoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDepartmentPhotoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setFileKey:[input readString]];
        break;
      }
      case 24: {
        [self setCreateOn:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultDepartmentPhoto.hasId;
}
- (SInt64) id {
  return resultDepartmentPhoto.id;
}
- (TXPBDepartmentPhotoBuilder*) setId:(SInt64) value {
  resultDepartmentPhoto.hasId = YES;
  resultDepartmentPhoto.id = value;
  return self;
}
- (TXPBDepartmentPhotoBuilder*) clearId {
  resultDepartmentPhoto.hasId = NO;
  resultDepartmentPhoto.id = 0L;
  return self;
}
- (BOOL) hasFileKey {
  return resultDepartmentPhoto.hasFileKey;
}
- (NSString*) fileKey {
  return resultDepartmentPhoto.fileKey;
}
- (TXPBDepartmentPhotoBuilder*) setFileKey:(NSString*) value {
  resultDepartmentPhoto.hasFileKey = YES;
  resultDepartmentPhoto.fileKey = value;
  return self;
}
- (TXPBDepartmentPhotoBuilder*) clearFileKey {
  resultDepartmentPhoto.hasFileKey = NO;
  resultDepartmentPhoto.fileKey = @"";
  return self;
}
- (BOOL) hasCreateOn {
  return resultDepartmentPhoto.hasCreateOn;
}
- (SInt64) createOn {
  return resultDepartmentPhoto.createOn;
}
- (TXPBDepartmentPhotoBuilder*) setCreateOn:(SInt64) value {
  resultDepartmentPhoto.hasCreateOn = YES;
  resultDepartmentPhoto.createOn = value;
  return self;
}
- (TXPBDepartmentPhotoBuilder*) clearCreateOn {
  resultDepartmentPhoto.hasCreateOn = NO;
  resultDepartmentPhoto.createOn = 0L;
  return self;
}
@end

@interface TXPBFetchDepartmentPhotoResponse ()
@property (strong) NSMutableArray * photosArray;
@property BOOL hasMore;
@property SInt64 totalCnt;
@end

@implementation TXPBFetchDepartmentPhotoResponse

@synthesize photosArray;
@dynamic photos;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (BOOL) hasTotalCnt {
  return !!hasTotalCnt_;
}
- (void) setHasTotalCnt:(BOOL) _value_ {
  hasTotalCnt_ = !!_value_;
}
@synthesize totalCnt;
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
    self.totalCnt = 0L;
  }
  return self;
}
static TXPBFetchDepartmentPhotoResponse* defaultTXPBFetchDepartmentPhotoResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchDepartmentPhotoResponse class]) {
    defaultTXPBFetchDepartmentPhotoResponseInstance = [[TXPBFetchDepartmentPhotoResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentPhotoResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchDepartmentPhotoResponseInstance;
}
- (NSArray *)photos {
  return photosArray;
}
- (TXPBDepartmentPhoto*)photosAtIndex:(NSUInteger)index {
  return [photosArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitphotos = YES;
   [self.photos enumerateObjectsUsingBlock:^(TXPBDepartmentPhoto *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitphotos = NO;
      *stop = YES;
    }
  }];
  if (!isInitphotos) return isInitphotos;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.photosArray enumerateObjectsUsingBlock:^(TXPBDepartmentPhoto *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  if (self.hasTotalCnt) {
    [output writeInt64:3 value:self.totalCnt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.photosArray enumerateObjectsUsingBlock:^(TXPBDepartmentPhoto *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  if (self.hasTotalCnt) {
    size_ += computeInt64Size(3, self.totalCnt);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchDepartmentPhotoResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchDepartmentPhotoResponse*)[[[TXPBFetchDepartmentPhotoResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchDepartmentPhotoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentPhotoResponse*)[[[TXPBFetchDepartmentPhotoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentPhotoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchDepartmentPhotoResponse*)[[[TXPBFetchDepartmentPhotoResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchDepartmentPhotoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentPhotoResponse*)[[[TXPBFetchDepartmentPhotoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentPhotoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchDepartmentPhotoResponse*)[[[TXPBFetchDepartmentPhotoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchDepartmentPhotoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchDepartmentPhotoResponse*)[[[TXPBFetchDepartmentPhotoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchDepartmentPhotoResponseBuilder*) builder {
  return [[TXPBFetchDepartmentPhotoResponseBuilder alloc] init];
}
+ (TXPBFetchDepartmentPhotoResponseBuilder*) builderWithPrototype:(TXPBFetchDepartmentPhotoResponse*) prototype {
  return [[TXPBFetchDepartmentPhotoResponse builder] mergeFrom:prototype];
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) builder {
  return [TXPBFetchDepartmentPhotoResponse builder];
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) toBuilder {
  return [TXPBFetchDepartmentPhotoResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.photosArray enumerateObjectsUsingBlock:^(TXPBDepartmentPhoto *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"photos"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  if (self.hasTotalCnt) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalCnt", [NSNumber numberWithLongLong:self.totalCnt]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBDepartmentPhoto* element in self.photosArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"photos"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  if (self.hasTotalCnt) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.totalCnt] forKey: @"totalCnt"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchDepartmentPhotoResponse class]]) {
    return NO;
  }
  TXPBFetchDepartmentPhotoResponse *otherMessage = other;
  return
      [self.photosArray isEqualToArray:otherMessage.photosArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      self.hasTotalCnt == otherMessage.hasTotalCnt &&
      (!self.hasTotalCnt || self.totalCnt == otherMessage.totalCnt) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.photosArray enumerateObjectsUsingBlock:^(TXPBDepartmentPhoto *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  if (self.hasTotalCnt) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.totalCnt] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchDepartmentPhotoResponseBuilder()
@property (strong) TXPBFetchDepartmentPhotoResponse* resultFetchDepartmentPhotoResponse;
@end

@implementation TXPBFetchDepartmentPhotoResponseBuilder
@synthesize resultFetchDepartmentPhotoResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchDepartmentPhotoResponse = [[TXPBFetchDepartmentPhotoResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchDepartmentPhotoResponse;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) clear {
  self.resultFetchDepartmentPhotoResponse = [[TXPBFetchDepartmentPhotoResponse alloc] init];
  return self;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) clone {
  return [TXPBFetchDepartmentPhotoResponse builderWithPrototype:resultFetchDepartmentPhotoResponse];
}
- (TXPBFetchDepartmentPhotoResponse*) defaultInstance {
  return [TXPBFetchDepartmentPhotoResponse defaultInstance];
}
- (TXPBFetchDepartmentPhotoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchDepartmentPhotoResponse*) buildPartial {
  TXPBFetchDepartmentPhotoResponse* returnMe = resultFetchDepartmentPhotoResponse;
  self.resultFetchDepartmentPhotoResponse = nil;
  return returnMe;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) mergeFrom:(TXPBFetchDepartmentPhotoResponse*) other {
  if (other == [TXPBFetchDepartmentPhotoResponse defaultInstance]) {
    return self;
  }
  if (other.photosArray.count > 0) {
    if (resultFetchDepartmentPhotoResponse.photosArray == nil) {
      resultFetchDepartmentPhotoResponse.photosArray = [[NSMutableArray alloc] initWithArray:other.photosArray];
    } else {
      [resultFetchDepartmentPhotoResponse.photosArray addObjectsFromArray:other.photosArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  if (other.hasTotalCnt) {
    [self setTotalCnt:other.totalCnt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBDepartmentPhotoBuilder* subBuilder = [TXPBDepartmentPhoto builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPhotos:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 24: {
        [self setTotalCnt:[input readInt64]];
        break;
      }
    }
  }
}
- (NSMutableArray *)photos {
  return resultFetchDepartmentPhotoResponse.photosArray;
}
- (TXPBDepartmentPhoto*)photosAtIndex:(NSUInteger)index {
  return [resultFetchDepartmentPhotoResponse photosAtIndex:index];
}
- (TXPBFetchDepartmentPhotoResponseBuilder *)addPhotos:(TXPBDepartmentPhoto*)value {
  if (resultFetchDepartmentPhotoResponse.photosArray == nil) {
    resultFetchDepartmentPhotoResponse.photosArray = [[NSMutableArray alloc]init];
  }
  [resultFetchDepartmentPhotoResponse.photosArray addObject:value];
  return self;
}
- (TXPBFetchDepartmentPhotoResponseBuilder *)setPhotosArray:(NSArray *)array {
  resultFetchDepartmentPhotoResponse.photosArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchDepartmentPhotoResponseBuilder *)clearPhotos {
  resultFetchDepartmentPhotoResponse.photosArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchDepartmentPhotoResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchDepartmentPhotoResponse.hasMore;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchDepartmentPhotoResponse.hasHasMore = YES;
  resultFetchDepartmentPhotoResponse.hasMore = value;
  return self;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) clearHasMore {
  resultFetchDepartmentPhotoResponse.hasHasMore = NO;
  resultFetchDepartmentPhotoResponse.hasMore = NO;
  return self;
}
- (BOOL) hasTotalCnt {
  return resultFetchDepartmentPhotoResponse.hasTotalCnt;
}
- (SInt64) totalCnt {
  return resultFetchDepartmentPhotoResponse.totalCnt;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) setTotalCnt:(SInt64) value {
  resultFetchDepartmentPhotoResponse.hasTotalCnt = YES;
  resultFetchDepartmentPhotoResponse.totalCnt = value;
  return self;
}
- (TXPBFetchDepartmentPhotoResponseBuilder*) clearTotalCnt {
  resultFetchDepartmentPhotoResponse.hasTotalCnt = NO;
  resultFetchDepartmentPhotoResponse.totalCnt = 0L;
  return self;
}
@end

@interface TXPBUserCheckInRequest ()
@end

@implementation TXPBUserCheckInRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBUserCheckInRequest* defaultTXPBUserCheckInRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUserCheckInRequest class]) {
    defaultTXPBUserCheckInRequestInstance = [[TXPBUserCheckInRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUserCheckInRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUserCheckInRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUserCheckInRequest*) parseFromData:(NSData*) data {
  return (TXPBUserCheckInRequest*)[[[TXPBUserCheckInRequest builder] mergeFromData:data] build];
}
+ (TXPBUserCheckInRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCheckInRequest*)[[[TXPBUserCheckInRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCheckInRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUserCheckInRequest*)[[[TXPBUserCheckInRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUserCheckInRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCheckInRequest*)[[[TXPBUserCheckInRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCheckInRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUserCheckInRequest*)[[[TXPBUserCheckInRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUserCheckInRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCheckInRequest*)[[[TXPBUserCheckInRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCheckInRequestBuilder*) builder {
  return [[TXPBUserCheckInRequestBuilder alloc] init];
}
+ (TXPBUserCheckInRequestBuilder*) builderWithPrototype:(TXPBUserCheckInRequest*) prototype {
  return [[TXPBUserCheckInRequest builder] mergeFrom:prototype];
}
- (TXPBUserCheckInRequestBuilder*) builder {
  return [TXPBUserCheckInRequest builder];
}
- (TXPBUserCheckInRequestBuilder*) toBuilder {
  return [TXPBUserCheckInRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUserCheckInRequest class]]) {
    return NO;
  }
  TXPBUserCheckInRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUserCheckInRequestBuilder()
@property (strong) TXPBUserCheckInRequest* resultUserCheckInRequest;
@end

@implementation TXPBUserCheckInRequestBuilder
@synthesize resultUserCheckInRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserCheckInRequest = [[TXPBUserCheckInRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserCheckInRequest;
}
- (TXPBUserCheckInRequestBuilder*) clear {
  self.resultUserCheckInRequest = [[TXPBUserCheckInRequest alloc] init];
  return self;
}
- (TXPBUserCheckInRequestBuilder*) clone {
  return [TXPBUserCheckInRequest builderWithPrototype:resultUserCheckInRequest];
}
- (TXPBUserCheckInRequest*) defaultInstance {
  return [TXPBUserCheckInRequest defaultInstance];
}
- (TXPBUserCheckInRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUserCheckInRequest*) buildPartial {
  TXPBUserCheckInRequest* returnMe = resultUserCheckInRequest;
  self.resultUserCheckInRequest = nil;
  return returnMe;
}
- (TXPBUserCheckInRequestBuilder*) mergeFrom:(TXPBUserCheckInRequest*) other {
  if (other == [TXPBUserCheckInRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUserCheckInRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUserCheckInRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBUserCheckInResponse ()
@property SInt32 bonus;
@end

@implementation TXPBUserCheckInResponse

- (BOOL) hasBonus {
  return !!hasBonus_;
}
- (void) setHasBonus:(BOOL) _value_ {
  hasBonus_ = !!_value_;
}
@synthesize bonus;
- (instancetype) init {
  if ((self = [super init])) {
    self.bonus = 0;
  }
  return self;
}
static TXPBUserCheckInResponse* defaultTXPBUserCheckInResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUserCheckInResponse class]) {
    defaultTXPBUserCheckInResponseInstance = [[TXPBUserCheckInResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUserCheckInResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUserCheckInResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBonus) {
    [output writeInt32:1 value:self.bonus];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasBonus) {
    size_ += computeInt32Size(1, self.bonus);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUserCheckInResponse*) parseFromData:(NSData*) data {
  return (TXPBUserCheckInResponse*)[[[TXPBUserCheckInResponse builder] mergeFromData:data] build];
}
+ (TXPBUserCheckInResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCheckInResponse*)[[[TXPBUserCheckInResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCheckInResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUserCheckInResponse*)[[[TXPBUserCheckInResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUserCheckInResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCheckInResponse*)[[[TXPBUserCheckInResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCheckInResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUserCheckInResponse*)[[[TXPBUserCheckInResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUserCheckInResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUserCheckInResponse*)[[[TXPBUserCheckInResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUserCheckInResponseBuilder*) builder {
  return [[TXPBUserCheckInResponseBuilder alloc] init];
}
+ (TXPBUserCheckInResponseBuilder*) builderWithPrototype:(TXPBUserCheckInResponse*) prototype {
  return [[TXPBUserCheckInResponse builder] mergeFrom:prototype];
}
- (TXPBUserCheckInResponseBuilder*) builder {
  return [TXPBUserCheckInResponse builder];
}
- (TXPBUserCheckInResponseBuilder*) toBuilder {
  return [TXPBUserCheckInResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasBonus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"bonus", [NSNumber numberWithInteger:self.bonus]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasBonus) {
    [dictionary setObject: [NSNumber numberWithInteger:self.bonus] forKey: @"bonus"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUserCheckInResponse class]]) {
    return NO;
  }
  TXPBUserCheckInResponse *otherMessage = other;
  return
      self.hasBonus == otherMessage.hasBonus &&
      (!self.hasBonus || self.bonus == otherMessage.bonus) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasBonus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.bonus] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUserCheckInResponseBuilder()
@property (strong) TXPBUserCheckInResponse* resultUserCheckInResponse;
@end

@implementation TXPBUserCheckInResponseBuilder
@synthesize resultUserCheckInResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserCheckInResponse = [[TXPBUserCheckInResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserCheckInResponse;
}
- (TXPBUserCheckInResponseBuilder*) clear {
  self.resultUserCheckInResponse = [[TXPBUserCheckInResponse alloc] init];
  return self;
}
- (TXPBUserCheckInResponseBuilder*) clone {
  return [TXPBUserCheckInResponse builderWithPrototype:resultUserCheckInResponse];
}
- (TXPBUserCheckInResponse*) defaultInstance {
  return [TXPBUserCheckInResponse defaultInstance];
}
- (TXPBUserCheckInResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUserCheckInResponse*) buildPartial {
  TXPBUserCheckInResponse* returnMe = resultUserCheckInResponse;
  self.resultUserCheckInResponse = nil;
  return returnMe;
}
- (TXPBUserCheckInResponseBuilder*) mergeFrom:(TXPBUserCheckInResponse*) other {
  if (other == [TXPBUserCheckInResponse defaultInstance]) {
    return self;
  }
  if (other.hasBonus) {
    [self setBonus:other.bonus];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUserCheckInResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUserCheckInResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBonus:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasBonus {
  return resultUserCheckInResponse.hasBonus;
}
- (SInt32) bonus {
  return resultUserCheckInResponse.bonus;
}
- (TXPBUserCheckInResponseBuilder*) setBonus:(SInt32) value {
  resultUserCheckInResponse.hasBonus = YES;
  resultUserCheckInResponse.bonus = value;
  return self;
}
- (TXPBUserCheckInResponseBuilder*) clearBonus {
  resultUserCheckInResponse.hasBonus = NO;
  resultUserCheckInResponse.bonus = 0;
  return self;
}
@end

@interface TXPBFetchAttendanceRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchAttendanceRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchAttendanceRequest* defaultTXPBFetchAttendanceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAttendanceRequest class]) {
    defaultTXPBFetchAttendanceRequestInstance = [[TXPBFetchAttendanceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAttendanceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAttendanceRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAttendanceRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchAttendanceRequest*)[[[TXPBFetchAttendanceRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchAttendanceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAttendanceRequest*)[[[TXPBFetchAttendanceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAttendanceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAttendanceRequest*)[[[TXPBFetchAttendanceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAttendanceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAttendanceRequest*)[[[TXPBFetchAttendanceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAttendanceRequest*)[[[TXPBFetchAttendanceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAttendanceRequest*)[[[TXPBFetchAttendanceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAttendanceRequestBuilder*) builder {
  return [[TXPBFetchAttendanceRequestBuilder alloc] init];
}
+ (TXPBFetchAttendanceRequestBuilder*) builderWithPrototype:(TXPBFetchAttendanceRequest*) prototype {
  return [[TXPBFetchAttendanceRequest builder] mergeFrom:prototype];
}
- (TXPBFetchAttendanceRequestBuilder*) builder {
  return [TXPBFetchAttendanceRequest builder];
}
- (TXPBFetchAttendanceRequestBuilder*) toBuilder {
  return [TXPBFetchAttendanceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAttendanceRequest class]]) {
    return NO;
  }
  TXPBFetchAttendanceRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAttendanceRequestBuilder()
@property (strong) TXPBFetchAttendanceRequest* resultFetchAttendanceRequest;
@end

@implementation TXPBFetchAttendanceRequestBuilder
@synthesize resultFetchAttendanceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAttendanceRequest = [[TXPBFetchAttendanceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAttendanceRequest;
}
- (TXPBFetchAttendanceRequestBuilder*) clear {
  self.resultFetchAttendanceRequest = [[TXPBFetchAttendanceRequest alloc] init];
  return self;
}
- (TXPBFetchAttendanceRequestBuilder*) clone {
  return [TXPBFetchAttendanceRequest builderWithPrototype:resultFetchAttendanceRequest];
}
- (TXPBFetchAttendanceRequest*) defaultInstance {
  return [TXPBFetchAttendanceRequest defaultInstance];
}
- (TXPBFetchAttendanceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAttendanceRequest*) buildPartial {
  TXPBFetchAttendanceRequest* returnMe = resultFetchAttendanceRequest;
  self.resultFetchAttendanceRequest = nil;
  return returnMe;
}
- (TXPBFetchAttendanceRequestBuilder*) mergeFrom:(TXPBFetchAttendanceRequest*) other {
  if (other == [TXPBFetchAttendanceRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchAttendanceRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchAttendanceRequest.maxId;
}
- (TXPBFetchAttendanceRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchAttendanceRequest.hasMaxId = YES;
  resultFetchAttendanceRequest.maxId = value;
  return self;
}
- (TXPBFetchAttendanceRequestBuilder*) clearMaxId {
  resultFetchAttendanceRequest.hasMaxId = NO;
  resultFetchAttendanceRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchAttendanceRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchAttendanceRequest.sinceId;
}
- (TXPBFetchAttendanceRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchAttendanceRequest.hasSinceId = YES;
  resultFetchAttendanceRequest.sinceId = value;
  return self;
}
- (TXPBFetchAttendanceRequestBuilder*) clearSinceId {
  resultFetchAttendanceRequest.hasSinceId = NO;
  resultFetchAttendanceRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFetchAttendanceResponse ()
@property (strong) NSMutableArray * checkinsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchAttendanceResponse

@synthesize checkinsArray;
@dynamic checkins;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchAttendanceResponse* defaultTXPBFetchAttendanceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAttendanceResponse class]) {
    defaultTXPBFetchAttendanceResponseInstance = [[TXPBFetchAttendanceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAttendanceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAttendanceResponseInstance;
}
- (NSArray *)checkins {
  return checkinsArray;
}
- (TXPBCheckin*)checkinsAtIndex:(NSUInteger)index {
  return [checkinsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitcheckins = YES;
   [self.checkins enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcheckins = NO;
      *stop = YES;
    }
  }];
  if (!isInitcheckins) return isInitcheckins;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAttendanceResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchAttendanceResponse*)[[[TXPBFetchAttendanceResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchAttendanceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAttendanceResponse*)[[[TXPBFetchAttendanceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAttendanceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAttendanceResponse*)[[[TXPBFetchAttendanceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAttendanceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAttendanceResponse*)[[[TXPBFetchAttendanceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAttendanceResponse*)[[[TXPBFetchAttendanceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAttendanceResponse*)[[[TXPBFetchAttendanceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAttendanceResponseBuilder*) builder {
  return [[TXPBFetchAttendanceResponseBuilder alloc] init];
}
+ (TXPBFetchAttendanceResponseBuilder*) builderWithPrototype:(TXPBFetchAttendanceResponse*) prototype {
  return [[TXPBFetchAttendanceResponse builder] mergeFrom:prototype];
}
- (TXPBFetchAttendanceResponseBuilder*) builder {
  return [TXPBFetchAttendanceResponse builder];
}
- (TXPBFetchAttendanceResponseBuilder*) toBuilder {
  return [TXPBFetchAttendanceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"checkins"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCheckin* element in self.checkinsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"checkins"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAttendanceResponse class]]) {
    return NO;
  }
  TXPBFetchAttendanceResponse *otherMessage = other;
  return
      [self.checkinsArray isEqualToArray:otherMessage.checkinsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.checkinsArray enumerateObjectsUsingBlock:^(TXPBCheckin *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAttendanceResponseBuilder()
@property (strong) TXPBFetchAttendanceResponse* resultFetchAttendanceResponse;
@end

@implementation TXPBFetchAttendanceResponseBuilder
@synthesize resultFetchAttendanceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAttendanceResponse = [[TXPBFetchAttendanceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAttendanceResponse;
}
- (TXPBFetchAttendanceResponseBuilder*) clear {
  self.resultFetchAttendanceResponse = [[TXPBFetchAttendanceResponse alloc] init];
  return self;
}
- (TXPBFetchAttendanceResponseBuilder*) clone {
  return [TXPBFetchAttendanceResponse builderWithPrototype:resultFetchAttendanceResponse];
}
- (TXPBFetchAttendanceResponse*) defaultInstance {
  return [TXPBFetchAttendanceResponse defaultInstance];
}
- (TXPBFetchAttendanceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAttendanceResponse*) buildPartial {
  TXPBFetchAttendanceResponse* returnMe = resultFetchAttendanceResponse;
  self.resultFetchAttendanceResponse = nil;
  return returnMe;
}
- (TXPBFetchAttendanceResponseBuilder*) mergeFrom:(TXPBFetchAttendanceResponse*) other {
  if (other == [TXPBFetchAttendanceResponse defaultInstance]) {
    return self;
  }
  if (other.checkinsArray.count > 0) {
    if (resultFetchAttendanceResponse.checkinsArray == nil) {
      resultFetchAttendanceResponse.checkinsArray = [[NSMutableArray alloc] initWithArray:other.checkinsArray];
    } else {
      [resultFetchAttendanceResponse.checkinsArray addObjectsFromArray:other.checkinsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCheckinBuilder* subBuilder = [TXPBCheckin builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCheckins:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)checkins {
  return resultFetchAttendanceResponse.checkinsArray;
}
- (TXPBCheckin*)checkinsAtIndex:(NSUInteger)index {
  return [resultFetchAttendanceResponse checkinsAtIndex:index];
}
- (TXPBFetchAttendanceResponseBuilder *)addCheckins:(TXPBCheckin*)value {
  if (resultFetchAttendanceResponse.checkinsArray == nil) {
    resultFetchAttendanceResponse.checkinsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchAttendanceResponse.checkinsArray addObject:value];
  return self;
}
- (TXPBFetchAttendanceResponseBuilder *)setCheckinsArray:(NSArray *)array {
  resultFetchAttendanceResponse.checkinsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchAttendanceResponseBuilder *)clearCheckins {
  resultFetchAttendanceResponse.checkinsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchAttendanceResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchAttendanceResponse.hasMore;
}
- (TXPBFetchAttendanceResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchAttendanceResponse.hasHasMore = YES;
  resultFetchAttendanceResponse.hasMore = value;
  return self;
}
- (TXPBFetchAttendanceResponseBuilder*) clearHasMore {
  resultFetchAttendanceResponse.hasHasMore = NO;
  resultFetchAttendanceResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBClassAttendanceRequest ()
@property SInt64 classId;
@property SInt64 date;
@end

@implementation TXPBClassAttendanceRequest

- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (instancetype) init {
  if ((self = [super init])) {
    self.classId = 0L;
    self.date = 0L;
  }
  return self;
}
static TXPBClassAttendanceRequest* defaultTXPBClassAttendanceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBClassAttendanceRequest class]) {
    defaultTXPBClassAttendanceRequestInstance = [[TXPBClassAttendanceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBClassAttendanceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBClassAttendanceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasClassId) {
    return NO;
  }
  if (!self.hasDate) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClassId) {
    [output writeInt64:1 value:self.classId];
  }
  if (self.hasDate) {
    [output writeInt64:2 value:self.date];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClassId) {
    size_ += computeInt64Size(1, self.classId);
  }
  if (self.hasDate) {
    size_ += computeInt64Size(2, self.date);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBClassAttendanceRequest*) parseFromData:(NSData*) data {
  return (TXPBClassAttendanceRequest*)[[[TXPBClassAttendanceRequest builder] mergeFromData:data] build];
}
+ (TXPBClassAttendanceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClassAttendanceRequest*)[[[TXPBClassAttendanceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBClassAttendanceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBClassAttendanceRequest*)[[[TXPBClassAttendanceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBClassAttendanceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClassAttendanceRequest*)[[[TXPBClassAttendanceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClassAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBClassAttendanceRequest*)[[[TXPBClassAttendanceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBClassAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClassAttendanceRequest*)[[[TXPBClassAttendanceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClassAttendanceRequestBuilder*) builder {
  return [[TXPBClassAttendanceRequestBuilder alloc] init];
}
+ (TXPBClassAttendanceRequestBuilder*) builderWithPrototype:(TXPBClassAttendanceRequest*) prototype {
  return [[TXPBClassAttendanceRequest builder] mergeFrom:prototype];
}
- (TXPBClassAttendanceRequestBuilder*) builder {
  return [TXPBClassAttendanceRequest builder];
}
- (TXPBClassAttendanceRequestBuilder*) toBuilder {
  return [TXPBClassAttendanceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBClassAttendanceRequest class]]) {
    return NO;
  }
  TXPBClassAttendanceRequest *otherMessage = other;
  return
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBClassAttendanceRequestBuilder()
@property (strong) TXPBClassAttendanceRequest* resultClassAttendanceRequest;
@end

@implementation TXPBClassAttendanceRequestBuilder
@synthesize resultClassAttendanceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClassAttendanceRequest = [[TXPBClassAttendanceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClassAttendanceRequest;
}
- (TXPBClassAttendanceRequestBuilder*) clear {
  self.resultClassAttendanceRequest = [[TXPBClassAttendanceRequest alloc] init];
  return self;
}
- (TXPBClassAttendanceRequestBuilder*) clone {
  return [TXPBClassAttendanceRequest builderWithPrototype:resultClassAttendanceRequest];
}
- (TXPBClassAttendanceRequest*) defaultInstance {
  return [TXPBClassAttendanceRequest defaultInstance];
}
- (TXPBClassAttendanceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBClassAttendanceRequest*) buildPartial {
  TXPBClassAttendanceRequest* returnMe = resultClassAttendanceRequest;
  self.resultClassAttendanceRequest = nil;
  return returnMe;
}
- (TXPBClassAttendanceRequestBuilder*) mergeFrom:(TXPBClassAttendanceRequest*) other {
  if (other == [TXPBClassAttendanceRequest defaultInstance]) {
    return self;
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBClassAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBClassAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClassId:[input readInt64]];
        break;
      }
      case 16: {
        [self setDate:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasClassId {
  return resultClassAttendanceRequest.hasClassId;
}
- (SInt64) classId {
  return resultClassAttendanceRequest.classId;
}
- (TXPBClassAttendanceRequestBuilder*) setClassId:(SInt64) value {
  resultClassAttendanceRequest.hasClassId = YES;
  resultClassAttendanceRequest.classId = value;
  return self;
}
- (TXPBClassAttendanceRequestBuilder*) clearClassId {
  resultClassAttendanceRequest.hasClassId = NO;
  resultClassAttendanceRequest.classId = 0L;
  return self;
}
- (BOOL) hasDate {
  return resultClassAttendanceRequest.hasDate;
}
- (SInt64) date {
  return resultClassAttendanceRequest.date;
}
- (TXPBClassAttendanceRequestBuilder*) setDate:(SInt64) value {
  resultClassAttendanceRequest.hasDate = YES;
  resultClassAttendanceRequest.date = value;
  return self;
}
- (TXPBClassAttendanceRequestBuilder*) clearDate {
  resultClassAttendanceRequest.hasDate = NO;
  resultClassAttendanceRequest.date = 0L;
  return self;
}
@end

@interface TXPBClassAttendanceResponse ()
@property (strong) NSMutableArray * presentArray;
@property (strong) NSMutableArray * absenceArray;
@property (strong) NSMutableArray * leaveArray;
@property BOOL isRestDay;
@end

@implementation TXPBClassAttendanceResponse

@synthesize presentArray;
@dynamic present;
@synthesize absenceArray;
@dynamic absence;
@synthesize leaveArray;
@dynamic leave;
- (BOOL) hasIsRestDay {
  return !!hasIsRestDay_;
}
- (void) setHasIsRestDay:(BOOL) _value_ {
  hasIsRestDay_ = !!_value_;
}
- (BOOL) isRestDay {
  return !!isRestDay_;
}
- (void) setIsRestDay:(BOOL) _value_ {
  isRestDay_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.isRestDay = NO;
  }
  return self;
}
static TXPBClassAttendanceResponse* defaultTXPBClassAttendanceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBClassAttendanceResponse class]) {
    defaultTXPBClassAttendanceResponseInstance = [[TXPBClassAttendanceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBClassAttendanceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBClassAttendanceResponseInstance;
}
- (NSArray *)present {
  return presentArray;
}
- (TXPBUser*)presentAtIndex:(NSUInteger)index {
  return [presentArray objectAtIndex:index];
}
- (NSArray *)absence {
  return absenceArray;
}
- (TXPBUser*)absenceAtIndex:(NSUInteger)index {
  return [absenceArray objectAtIndex:index];
}
- (NSArray *)leave {
  return leaveArray;
}
- (TXPBUser*)leaveAtIndex:(NSUInteger)index {
  return [leaveArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitpresent = YES;
   [self.present enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitpresent = NO;
      *stop = YES;
    }
  }];
  if (!isInitpresent) return isInitpresent;
  __block BOOL isInitabsence = YES;
   [self.absence enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitabsence = NO;
      *stop = YES;
    }
  }];
  if (!isInitabsence) return isInitabsence;
  __block BOOL isInitleave = YES;
   [self.leave enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitleave = NO;
      *stop = YES;
    }
  }];
  if (!isInitleave) return isInitleave;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.presentArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasIsRestDay) {
    [output writeBool:4 value:self.isRestDay];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.presentArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasIsRestDay) {
    size_ += computeBoolSize(4, self.isRestDay);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBClassAttendanceResponse*) parseFromData:(NSData*) data {
  return (TXPBClassAttendanceResponse*)[[[TXPBClassAttendanceResponse builder] mergeFromData:data] build];
}
+ (TXPBClassAttendanceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClassAttendanceResponse*)[[[TXPBClassAttendanceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBClassAttendanceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBClassAttendanceResponse*)[[[TXPBClassAttendanceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBClassAttendanceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClassAttendanceResponse*)[[[TXPBClassAttendanceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClassAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBClassAttendanceResponse*)[[[TXPBClassAttendanceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBClassAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBClassAttendanceResponse*)[[[TXPBClassAttendanceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBClassAttendanceResponseBuilder*) builder {
  return [[TXPBClassAttendanceResponseBuilder alloc] init];
}
+ (TXPBClassAttendanceResponseBuilder*) builderWithPrototype:(TXPBClassAttendanceResponse*) prototype {
  return [[TXPBClassAttendanceResponse builder] mergeFrom:prototype];
}
- (TXPBClassAttendanceResponseBuilder*) builder {
  return [TXPBClassAttendanceResponse builder];
}
- (TXPBClassAttendanceResponseBuilder*) toBuilder {
  return [TXPBClassAttendanceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.presentArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"present"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"absence"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"leave"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasIsRestDay) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isRestDay", [NSNumber numberWithBool:self.isRestDay]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBUser* element in self.presentArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"present"];
  }
  for (TXPBUser* element in self.absenceArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"absence"];
  }
  for (TXPBUser* element in self.leaveArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"leave"];
  }
  if (self.hasIsRestDay) {
    [dictionary setObject: [NSNumber numberWithBool:self.isRestDay] forKey: @"isRestDay"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBClassAttendanceResponse class]]) {
    return NO;
  }
  TXPBClassAttendanceResponse *otherMessage = other;
  return
      [self.presentArray isEqualToArray:otherMessage.presentArray] &&
      [self.absenceArray isEqualToArray:otherMessage.absenceArray] &&
      [self.leaveArray isEqualToArray:otherMessage.leaveArray] &&
      self.hasIsRestDay == otherMessage.hasIsRestDay &&
      (!self.hasIsRestDay || self.isRestDay == otherMessage.isRestDay) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.presentArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(TXPBUser *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasIsRestDay) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isRestDay] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBClassAttendanceResponseBuilder()
@property (strong) TXPBClassAttendanceResponse* resultClassAttendanceResponse;
@end

@implementation TXPBClassAttendanceResponseBuilder
@synthesize resultClassAttendanceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClassAttendanceResponse = [[TXPBClassAttendanceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClassAttendanceResponse;
}
- (TXPBClassAttendanceResponseBuilder*) clear {
  self.resultClassAttendanceResponse = [[TXPBClassAttendanceResponse alloc] init];
  return self;
}
- (TXPBClassAttendanceResponseBuilder*) clone {
  return [TXPBClassAttendanceResponse builderWithPrototype:resultClassAttendanceResponse];
}
- (TXPBClassAttendanceResponse*) defaultInstance {
  return [TXPBClassAttendanceResponse defaultInstance];
}
- (TXPBClassAttendanceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBClassAttendanceResponse*) buildPartial {
  TXPBClassAttendanceResponse* returnMe = resultClassAttendanceResponse;
  self.resultClassAttendanceResponse = nil;
  return returnMe;
}
- (TXPBClassAttendanceResponseBuilder*) mergeFrom:(TXPBClassAttendanceResponse*) other {
  if (other == [TXPBClassAttendanceResponse defaultInstance]) {
    return self;
  }
  if (other.presentArray.count > 0) {
    if (resultClassAttendanceResponse.presentArray == nil) {
      resultClassAttendanceResponse.presentArray = [[NSMutableArray alloc] initWithArray:other.presentArray];
    } else {
      [resultClassAttendanceResponse.presentArray addObjectsFromArray:other.presentArray];
    }
  }
  if (other.absenceArray.count > 0) {
    if (resultClassAttendanceResponse.absenceArray == nil) {
      resultClassAttendanceResponse.absenceArray = [[NSMutableArray alloc] initWithArray:other.absenceArray];
    } else {
      [resultClassAttendanceResponse.absenceArray addObjectsFromArray:other.absenceArray];
    }
  }
  if (other.leaveArray.count > 0) {
    if (resultClassAttendanceResponse.leaveArray == nil) {
      resultClassAttendanceResponse.leaveArray = [[NSMutableArray alloc] initWithArray:other.leaveArray];
    } else {
      [resultClassAttendanceResponse.leaveArray addObjectsFromArray:other.leaveArray];
    }
  }
  if (other.hasIsRestDay) {
    [self setIsRestDay:other.isRestDay];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBClassAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBClassAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPresent:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAbsence:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TXPBUserBuilder* subBuilder = [TXPBUser builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLeave:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setIsRestDay:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)present {
  return resultClassAttendanceResponse.presentArray;
}
- (TXPBUser*)presentAtIndex:(NSUInteger)index {
  return [resultClassAttendanceResponse presentAtIndex:index];
}
- (TXPBClassAttendanceResponseBuilder *)addPresent:(TXPBUser*)value {
  if (resultClassAttendanceResponse.presentArray == nil) {
    resultClassAttendanceResponse.presentArray = [[NSMutableArray alloc]init];
  }
  [resultClassAttendanceResponse.presentArray addObject:value];
  return self;
}
- (TXPBClassAttendanceResponseBuilder *)setPresentArray:(NSArray *)array {
  resultClassAttendanceResponse.presentArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBClassAttendanceResponseBuilder *)clearPresent {
  resultClassAttendanceResponse.presentArray = nil;
  return self;
}
- (NSMutableArray *)absence {
  return resultClassAttendanceResponse.absenceArray;
}
- (TXPBUser*)absenceAtIndex:(NSUInteger)index {
  return [resultClassAttendanceResponse absenceAtIndex:index];
}
- (TXPBClassAttendanceResponseBuilder *)addAbsence:(TXPBUser*)value {
  if (resultClassAttendanceResponse.absenceArray == nil) {
    resultClassAttendanceResponse.absenceArray = [[NSMutableArray alloc]init];
  }
  [resultClassAttendanceResponse.absenceArray addObject:value];
  return self;
}
- (TXPBClassAttendanceResponseBuilder *)setAbsenceArray:(NSArray *)array {
  resultClassAttendanceResponse.absenceArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBClassAttendanceResponseBuilder *)clearAbsence {
  resultClassAttendanceResponse.absenceArray = nil;
  return self;
}
- (NSMutableArray *)leave {
  return resultClassAttendanceResponse.leaveArray;
}
- (TXPBUser*)leaveAtIndex:(NSUInteger)index {
  return [resultClassAttendanceResponse leaveAtIndex:index];
}
- (TXPBClassAttendanceResponseBuilder *)addLeave:(TXPBUser*)value {
  if (resultClassAttendanceResponse.leaveArray == nil) {
    resultClassAttendanceResponse.leaveArray = [[NSMutableArray alloc]init];
  }
  [resultClassAttendanceResponse.leaveArray addObject:value];
  return self;
}
- (TXPBClassAttendanceResponseBuilder *)setLeaveArray:(NSArray *)array {
  resultClassAttendanceResponse.leaveArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBClassAttendanceResponseBuilder *)clearLeave {
  resultClassAttendanceResponse.leaveArray = nil;
  return self;
}
- (BOOL) hasIsRestDay {
  return resultClassAttendanceResponse.hasIsRestDay;
}
- (BOOL) isRestDay {
  return resultClassAttendanceResponse.isRestDay;
}
- (TXPBClassAttendanceResponseBuilder*) setIsRestDay:(BOOL) value {
  resultClassAttendanceResponse.hasIsRestDay = YES;
  resultClassAttendanceResponse.isRestDay = value;
  return self;
}
- (TXPBClassAttendanceResponseBuilder*) clearIsRestDay {
  resultClassAttendanceResponse.hasIsRestDay = NO;
  resultClassAttendanceResponse.isRestDay = NO;
  return self;
}
@end

@interface TXPBChildAttendanceRequest ()
@property SInt64 month;
@end

@implementation TXPBChildAttendanceRequest

- (BOOL) hasMonth {
  return !!hasMonth_;
}
- (void) setHasMonth:(BOOL) _value_ {
  hasMonth_ = !!_value_;
}
@synthesize month;
- (instancetype) init {
  if ((self = [super init])) {
    self.month = 0L;
  }
  return self;
}
static TXPBChildAttendanceRequest* defaultTXPBChildAttendanceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBChildAttendanceRequest class]) {
    defaultTXPBChildAttendanceRequestInstance = [[TXPBChildAttendanceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBChildAttendanceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBChildAttendanceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMonth) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMonth) {
    [output writeInt64:1 value:self.month];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMonth) {
    size_ += computeInt64Size(1, self.month);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBChildAttendanceRequest*) parseFromData:(NSData*) data {
  return (TXPBChildAttendanceRequest*)[[[TXPBChildAttendanceRequest builder] mergeFromData:data] build];
}
+ (TXPBChildAttendanceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChildAttendanceRequest*)[[[TXPBChildAttendanceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBChildAttendanceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBChildAttendanceRequest*)[[[TXPBChildAttendanceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBChildAttendanceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChildAttendanceRequest*)[[[TXPBChildAttendanceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBChildAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBChildAttendanceRequest*)[[[TXPBChildAttendanceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBChildAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChildAttendanceRequest*)[[[TXPBChildAttendanceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBChildAttendanceRequestBuilder*) builder {
  return [[TXPBChildAttendanceRequestBuilder alloc] init];
}
+ (TXPBChildAttendanceRequestBuilder*) builderWithPrototype:(TXPBChildAttendanceRequest*) prototype {
  return [[TXPBChildAttendanceRequest builder] mergeFrom:prototype];
}
- (TXPBChildAttendanceRequestBuilder*) builder {
  return [TXPBChildAttendanceRequest builder];
}
- (TXPBChildAttendanceRequestBuilder*) toBuilder {
  return [TXPBChildAttendanceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMonth) {
    [output appendFormat:@"%@%@: %@\n", indent, @"month", [NSNumber numberWithLongLong:self.month]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMonth) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.month] forKey: @"month"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBChildAttendanceRequest class]]) {
    return NO;
  }
  TXPBChildAttendanceRequest *otherMessage = other;
  return
      self.hasMonth == otherMessage.hasMonth &&
      (!self.hasMonth || self.month == otherMessage.month) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMonth) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.month] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBChildAttendanceRequestBuilder()
@property (strong) TXPBChildAttendanceRequest* resultChildAttendanceRequest;
@end

@implementation TXPBChildAttendanceRequestBuilder
@synthesize resultChildAttendanceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultChildAttendanceRequest = [[TXPBChildAttendanceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultChildAttendanceRequest;
}
- (TXPBChildAttendanceRequestBuilder*) clear {
  self.resultChildAttendanceRequest = [[TXPBChildAttendanceRequest alloc] init];
  return self;
}
- (TXPBChildAttendanceRequestBuilder*) clone {
  return [TXPBChildAttendanceRequest builderWithPrototype:resultChildAttendanceRequest];
}
- (TXPBChildAttendanceRequest*) defaultInstance {
  return [TXPBChildAttendanceRequest defaultInstance];
}
- (TXPBChildAttendanceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBChildAttendanceRequest*) buildPartial {
  TXPBChildAttendanceRequest* returnMe = resultChildAttendanceRequest;
  self.resultChildAttendanceRequest = nil;
  return returnMe;
}
- (TXPBChildAttendanceRequestBuilder*) mergeFrom:(TXPBChildAttendanceRequest*) other {
  if (other == [TXPBChildAttendanceRequest defaultInstance]) {
    return self;
  }
  if (other.hasMonth) {
    [self setMonth:other.month];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBChildAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBChildAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMonth:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMonth {
  return resultChildAttendanceRequest.hasMonth;
}
- (SInt64) month {
  return resultChildAttendanceRequest.month;
}
- (TXPBChildAttendanceRequestBuilder*) setMonth:(SInt64) value {
  resultChildAttendanceRequest.hasMonth = YES;
  resultChildAttendanceRequest.month = value;
  return self;
}
- (TXPBChildAttendanceRequestBuilder*) clearMonth {
  resultChildAttendanceRequest.hasMonth = NO;
  resultChildAttendanceRequest.month = 0L;
  return self;
}
@end

@interface TXPBChildAttendanceResponse ()
@property (strong) PBAppendableArray * presentArray;
@property (strong) PBAppendableArray * absenceArray;
@property (strong) PBAppendableArray * leaveArray;
@property (strong) PBAppendableArray * restArray;
@end

@implementation TXPBChildAttendanceResponse

@synthesize presentArray;
@dynamic present;
@synthesize absenceArray;
@dynamic absence;
@synthesize leaveArray;
@dynamic leave;
@synthesize restArray;
@dynamic rest;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBChildAttendanceResponse* defaultTXPBChildAttendanceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBChildAttendanceResponse class]) {
    defaultTXPBChildAttendanceResponseInstance = [[TXPBChildAttendanceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBChildAttendanceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBChildAttendanceResponseInstance;
}
- (PBArray *)present {
  return presentArray;
}
- (SInt64)presentAtIndex:(NSUInteger)index {
  return [presentArray int64AtIndex:index];
}
- (PBArray *)absence {
  return absenceArray;
}
- (SInt64)absenceAtIndex:(NSUInteger)index {
  return [absenceArray int64AtIndex:index];
}
- (PBArray *)leave {
  return leaveArray;
}
- (SInt64)leaveAtIndex:(NSUInteger)index {
  return [leaveArray int64AtIndex:index];
}
- (PBArray *)rest {
  return restArray;
}
- (SInt64)restAtIndex:(NSUInteger)index {
  return [restArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger presentArrayCount = self.presentArray.count;
  if (presentArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.presentArray.data;
    for (NSUInteger i = 0; i < presentArrayCount; ++i) {
      [output writeInt64:1 value:values[i]];
    }
  }
  const NSUInteger absenceArrayCount = self.absenceArray.count;
  if (absenceArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.absenceArray.data;
    for (NSUInteger i = 0; i < absenceArrayCount; ++i) {
      [output writeInt64:2 value:values[i]];
    }
  }
  const NSUInteger leaveArrayCount = self.leaveArray.count;
  if (leaveArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.leaveArray.data;
    for (NSUInteger i = 0; i < leaveArrayCount; ++i) {
      [output writeInt64:3 value:values[i]];
    }
  }
  const NSUInteger restArrayCount = self.restArray.count;
  if (restArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.restArray.data;
    for (NSUInteger i = 0; i < restArrayCount; ++i) {
      [output writeInt64:4 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.presentArray.count;
    const SInt64 *values = (const SInt64 *)self.presentArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.absenceArray.count;
    const SInt64 *values = (const SInt64 *)self.absenceArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.leaveArray.count;
    const SInt64 *values = (const SInt64 *)self.leaveArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.restArray.count;
    const SInt64 *values = (const SInt64 *)self.restArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBChildAttendanceResponse*) parseFromData:(NSData*) data {
  return (TXPBChildAttendanceResponse*)[[[TXPBChildAttendanceResponse builder] mergeFromData:data] build];
}
+ (TXPBChildAttendanceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChildAttendanceResponse*)[[[TXPBChildAttendanceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBChildAttendanceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBChildAttendanceResponse*)[[[TXPBChildAttendanceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBChildAttendanceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChildAttendanceResponse*)[[[TXPBChildAttendanceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBChildAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBChildAttendanceResponse*)[[[TXPBChildAttendanceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBChildAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBChildAttendanceResponse*)[[[TXPBChildAttendanceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBChildAttendanceResponseBuilder*) builder {
  return [[TXPBChildAttendanceResponseBuilder alloc] init];
}
+ (TXPBChildAttendanceResponseBuilder*) builderWithPrototype:(TXPBChildAttendanceResponse*) prototype {
  return [[TXPBChildAttendanceResponse builder] mergeFrom:prototype];
}
- (TXPBChildAttendanceResponseBuilder*) builder {
  return [TXPBChildAttendanceResponse builder];
}
- (TXPBChildAttendanceResponseBuilder*) toBuilder {
  return [TXPBChildAttendanceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.presentArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"present", obj];
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"absence", obj];
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leave", obj];
  }];
  [self.restArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rest", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * presentArrayArray = [NSMutableArray new];
  NSUInteger presentArrayCount=self.presentArray.count;
  for(int i=0;i<presentArrayCount;i++){
    [presentArrayArray addObject: @([self.presentArray int64AtIndex:i])];
  }
  [dictionary setObject: presentArrayArray forKey: @"present"];
  NSMutableArray * absenceArrayArray = [NSMutableArray new];
  NSUInteger absenceArrayCount=self.absenceArray.count;
  for(int i=0;i<absenceArrayCount;i++){
    [absenceArrayArray addObject: @([self.absenceArray int64AtIndex:i])];
  }
  [dictionary setObject: absenceArrayArray forKey: @"absence"];
  NSMutableArray * leaveArrayArray = [NSMutableArray new];
  NSUInteger leaveArrayCount=self.leaveArray.count;
  for(int i=0;i<leaveArrayCount;i++){
    [leaveArrayArray addObject: @([self.leaveArray int64AtIndex:i])];
  }
  [dictionary setObject: leaveArrayArray forKey: @"leave"];
  NSMutableArray * restArrayArray = [NSMutableArray new];
  NSUInteger restArrayCount=self.restArray.count;
  for(int i=0;i<restArrayCount;i++){
    [restArrayArray addObject: @([self.restArray int64AtIndex:i])];
  }
  [dictionary setObject: restArrayArray forKey: @"rest"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBChildAttendanceResponse class]]) {
    return NO;
  }
  TXPBChildAttendanceResponse *otherMessage = other;
  return
      [self.presentArray isEqualToArray:otherMessage.presentArray] &&
      [self.absenceArray isEqualToArray:otherMessage.absenceArray] &&
      [self.leaveArray isEqualToArray:otherMessage.leaveArray] &&
      [self.restArray isEqualToArray:otherMessage.restArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.presentArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.restArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBChildAttendanceResponseBuilder()
@property (strong) TXPBChildAttendanceResponse* resultChildAttendanceResponse;
@end

@implementation TXPBChildAttendanceResponseBuilder
@synthesize resultChildAttendanceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultChildAttendanceResponse = [[TXPBChildAttendanceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultChildAttendanceResponse;
}
- (TXPBChildAttendanceResponseBuilder*) clear {
  self.resultChildAttendanceResponse = [[TXPBChildAttendanceResponse alloc] init];
  return self;
}
- (TXPBChildAttendanceResponseBuilder*) clone {
  return [TXPBChildAttendanceResponse builderWithPrototype:resultChildAttendanceResponse];
}
- (TXPBChildAttendanceResponse*) defaultInstance {
  return [TXPBChildAttendanceResponse defaultInstance];
}
- (TXPBChildAttendanceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBChildAttendanceResponse*) buildPartial {
  TXPBChildAttendanceResponse* returnMe = resultChildAttendanceResponse;
  self.resultChildAttendanceResponse = nil;
  return returnMe;
}
- (TXPBChildAttendanceResponseBuilder*) mergeFrom:(TXPBChildAttendanceResponse*) other {
  if (other == [TXPBChildAttendanceResponse defaultInstance]) {
    return self;
  }
  if (other.presentArray.count > 0) {
    if (resultChildAttendanceResponse.presentArray == nil) {
      resultChildAttendanceResponse.presentArray = [other.presentArray copy];
    } else {
      [resultChildAttendanceResponse.presentArray appendArray:other.presentArray];
    }
  }
  if (other.absenceArray.count > 0) {
    if (resultChildAttendanceResponse.absenceArray == nil) {
      resultChildAttendanceResponse.absenceArray = [other.absenceArray copy];
    } else {
      [resultChildAttendanceResponse.absenceArray appendArray:other.absenceArray];
    }
  }
  if (other.leaveArray.count > 0) {
    if (resultChildAttendanceResponse.leaveArray == nil) {
      resultChildAttendanceResponse.leaveArray = [other.leaveArray copy];
    } else {
      [resultChildAttendanceResponse.leaveArray appendArray:other.leaveArray];
    }
  }
  if (other.restArray.count > 0) {
    if (resultChildAttendanceResponse.restArray == nil) {
      resultChildAttendanceResponse.restArray = [other.restArray copy];
    } else {
      [resultChildAttendanceResponse.restArray appendArray:other.restArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBChildAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBChildAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addPresent:[input readInt64]];
        break;
      }
      case 16: {
        [self addAbsence:[input readInt64]];
        break;
      }
      case 24: {
        [self addLeave:[input readInt64]];
        break;
      }
      case 32: {
        [self addRest:[input readInt64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)present {
  return resultChildAttendanceResponse.presentArray;
}
- (SInt64)presentAtIndex:(NSUInteger)index {
  return [resultChildAttendanceResponse presentAtIndex:index];
}
- (TXPBChildAttendanceResponseBuilder *)addPresent:(SInt64)value {
  if (resultChildAttendanceResponse.presentArray == nil) {
    resultChildAttendanceResponse.presentArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultChildAttendanceResponse.presentArray addInt64:value];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setPresentArray:(NSArray *)array {
  resultChildAttendanceResponse.presentArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setPresentValues:(const SInt64 *)values count:(NSUInteger)count {
  resultChildAttendanceResponse.presentArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)clearPresent {
  resultChildAttendanceResponse.presentArray = nil;
  return self;
}
- (PBAppendableArray *)absence {
  return resultChildAttendanceResponse.absenceArray;
}
- (SInt64)absenceAtIndex:(NSUInteger)index {
  return [resultChildAttendanceResponse absenceAtIndex:index];
}
- (TXPBChildAttendanceResponseBuilder *)addAbsence:(SInt64)value {
  if (resultChildAttendanceResponse.absenceArray == nil) {
    resultChildAttendanceResponse.absenceArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultChildAttendanceResponse.absenceArray addInt64:value];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setAbsenceArray:(NSArray *)array {
  resultChildAttendanceResponse.absenceArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setAbsenceValues:(const SInt64 *)values count:(NSUInteger)count {
  resultChildAttendanceResponse.absenceArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)clearAbsence {
  resultChildAttendanceResponse.absenceArray = nil;
  return self;
}
- (PBAppendableArray *)leave {
  return resultChildAttendanceResponse.leaveArray;
}
- (SInt64)leaveAtIndex:(NSUInteger)index {
  return [resultChildAttendanceResponse leaveAtIndex:index];
}
- (TXPBChildAttendanceResponseBuilder *)addLeave:(SInt64)value {
  if (resultChildAttendanceResponse.leaveArray == nil) {
    resultChildAttendanceResponse.leaveArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultChildAttendanceResponse.leaveArray addInt64:value];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setLeaveArray:(NSArray *)array {
  resultChildAttendanceResponse.leaveArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setLeaveValues:(const SInt64 *)values count:(NSUInteger)count {
  resultChildAttendanceResponse.leaveArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)clearLeave {
  resultChildAttendanceResponse.leaveArray = nil;
  return self;
}
- (PBAppendableArray *)rest {
  return resultChildAttendanceResponse.restArray;
}
- (SInt64)restAtIndex:(NSUInteger)index {
  return [resultChildAttendanceResponse restAtIndex:index];
}
- (TXPBChildAttendanceResponseBuilder *)addRest:(SInt64)value {
  if (resultChildAttendanceResponse.restArray == nil) {
    resultChildAttendanceResponse.restArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultChildAttendanceResponse.restArray addInt64:value];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setRestArray:(NSArray *)array {
  resultChildAttendanceResponse.restArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)setRestValues:(const SInt64 *)values count:(NSUInteger)count {
  resultChildAttendanceResponse.restArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBChildAttendanceResponseBuilder *)clearRest {
  resultChildAttendanceResponse.restArray = nil;
  return self;
}
@end

@interface TXPBUpdateAttendanceRequest ()
@property (strong) PBAppendableArray * presentArray;
@property (strong) PBAppendableArray * absenceArray;
@property (strong) PBAppendableArray * leaveArray;
@property SInt64 date;
@end

@implementation TXPBUpdateAttendanceRequest

@synthesize presentArray;
@dynamic present;
@synthesize absenceArray;
@dynamic absence;
@synthesize leaveArray;
@dynamic leave;
- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
  }
  return self;
}
static TXPBUpdateAttendanceRequest* defaultTXPBUpdateAttendanceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateAttendanceRequest class]) {
    defaultTXPBUpdateAttendanceRequestInstance = [[TXPBUpdateAttendanceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateAttendanceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateAttendanceRequestInstance;
}
- (PBArray *)present {
  return presentArray;
}
- (SInt64)presentAtIndex:(NSUInteger)index {
  return [presentArray int64AtIndex:index];
}
- (PBArray *)absence {
  return absenceArray;
}
- (SInt64)absenceAtIndex:(NSUInteger)index {
  return [absenceArray int64AtIndex:index];
}
- (PBArray *)leave {
  return leaveArray;
}
- (SInt64)leaveAtIndex:(NSUInteger)index {
  return [leaveArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger presentArrayCount = self.presentArray.count;
  if (presentArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.presentArray.data;
    for (NSUInteger i = 0; i < presentArrayCount; ++i) {
      [output writeInt64:1 value:values[i]];
    }
  }
  const NSUInteger absenceArrayCount = self.absenceArray.count;
  if (absenceArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.absenceArray.data;
    for (NSUInteger i = 0; i < absenceArrayCount; ++i) {
      [output writeInt64:2 value:values[i]];
    }
  }
  const NSUInteger leaveArrayCount = self.leaveArray.count;
  if (leaveArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.leaveArray.data;
    for (NSUInteger i = 0; i < leaveArrayCount; ++i) {
      [output writeInt64:3 value:values[i]];
    }
  }
  if (self.hasDate) {
    [output writeInt64:4 value:self.date];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.presentArray.count;
    const SInt64 *values = (const SInt64 *)self.presentArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.absenceArray.count;
    const SInt64 *values = (const SInt64 *)self.absenceArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.leaveArray.count;
    const SInt64 *values = (const SInt64 *)self.leaveArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  if (self.hasDate) {
    size_ += computeInt64Size(4, self.date);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateAttendanceRequest*) parseFromData:(NSData*) data {
  return (TXPBUpdateAttendanceRequest*)[[[TXPBUpdateAttendanceRequest builder] mergeFromData:data] build];
}
+ (TXPBUpdateAttendanceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateAttendanceRequest*)[[[TXPBUpdateAttendanceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateAttendanceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateAttendanceRequest*)[[[TXPBUpdateAttendanceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateAttendanceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateAttendanceRequest*)[[[TXPBUpdateAttendanceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateAttendanceRequest*)[[[TXPBUpdateAttendanceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateAttendanceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateAttendanceRequest*)[[[TXPBUpdateAttendanceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateAttendanceRequestBuilder*) builder {
  return [[TXPBUpdateAttendanceRequestBuilder alloc] init];
}
+ (TXPBUpdateAttendanceRequestBuilder*) builderWithPrototype:(TXPBUpdateAttendanceRequest*) prototype {
  return [[TXPBUpdateAttendanceRequest builder] mergeFrom:prototype];
}
- (TXPBUpdateAttendanceRequestBuilder*) builder {
  return [TXPBUpdateAttendanceRequest builder];
}
- (TXPBUpdateAttendanceRequestBuilder*) toBuilder {
  return [TXPBUpdateAttendanceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.presentArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"present", obj];
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"absence", obj];
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leave", obj];
  }];
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * presentArrayArray = [NSMutableArray new];
  NSUInteger presentArrayCount=self.presentArray.count;
  for(int i=0;i<presentArrayCount;i++){
    [presentArrayArray addObject: @([self.presentArray int64AtIndex:i])];
  }
  [dictionary setObject: presentArrayArray forKey: @"present"];
  NSMutableArray * absenceArrayArray = [NSMutableArray new];
  NSUInteger absenceArrayCount=self.absenceArray.count;
  for(int i=0;i<absenceArrayCount;i++){
    [absenceArrayArray addObject: @([self.absenceArray int64AtIndex:i])];
  }
  [dictionary setObject: absenceArrayArray forKey: @"absence"];
  NSMutableArray * leaveArrayArray = [NSMutableArray new];
  NSUInteger leaveArrayCount=self.leaveArray.count;
  for(int i=0;i<leaveArrayCount;i++){
    [leaveArrayArray addObject: @([self.leaveArray int64AtIndex:i])];
  }
  [dictionary setObject: leaveArrayArray forKey: @"leave"];
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateAttendanceRequest class]]) {
    return NO;
  }
  TXPBUpdateAttendanceRequest *otherMessage = other;
  return
      [self.presentArray isEqualToArray:otherMessage.presentArray] &&
      [self.absenceArray isEqualToArray:otherMessage.absenceArray] &&
      [self.leaveArray isEqualToArray:otherMessage.leaveArray] &&
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.presentArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.absenceArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.leaveArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateAttendanceRequestBuilder()
@property (strong) TXPBUpdateAttendanceRequest* resultUpdateAttendanceRequest;
@end

@implementation TXPBUpdateAttendanceRequestBuilder
@synthesize resultUpdateAttendanceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateAttendanceRequest = [[TXPBUpdateAttendanceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateAttendanceRequest;
}
- (TXPBUpdateAttendanceRequestBuilder*) clear {
  self.resultUpdateAttendanceRequest = [[TXPBUpdateAttendanceRequest alloc] init];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder*) clone {
  return [TXPBUpdateAttendanceRequest builderWithPrototype:resultUpdateAttendanceRequest];
}
- (TXPBUpdateAttendanceRequest*) defaultInstance {
  return [TXPBUpdateAttendanceRequest defaultInstance];
}
- (TXPBUpdateAttendanceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateAttendanceRequest*) buildPartial {
  TXPBUpdateAttendanceRequest* returnMe = resultUpdateAttendanceRequest;
  self.resultUpdateAttendanceRequest = nil;
  return returnMe;
}
- (TXPBUpdateAttendanceRequestBuilder*) mergeFrom:(TXPBUpdateAttendanceRequest*) other {
  if (other == [TXPBUpdateAttendanceRequest defaultInstance]) {
    return self;
  }
  if (other.presentArray.count > 0) {
    if (resultUpdateAttendanceRequest.presentArray == nil) {
      resultUpdateAttendanceRequest.presentArray = [other.presentArray copy];
    } else {
      [resultUpdateAttendanceRequest.presentArray appendArray:other.presentArray];
    }
  }
  if (other.absenceArray.count > 0) {
    if (resultUpdateAttendanceRequest.absenceArray == nil) {
      resultUpdateAttendanceRequest.absenceArray = [other.absenceArray copy];
    } else {
      [resultUpdateAttendanceRequest.absenceArray appendArray:other.absenceArray];
    }
  }
  if (other.leaveArray.count > 0) {
    if (resultUpdateAttendanceRequest.leaveArray == nil) {
      resultUpdateAttendanceRequest.leaveArray = [other.leaveArray copy];
    } else {
      [resultUpdateAttendanceRequest.leaveArray appendArray:other.leaveArray];
    }
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateAttendanceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addPresent:[input readInt64]];
        break;
      }
      case 16: {
        [self addAbsence:[input readInt64]];
        break;
      }
      case 24: {
        [self addLeave:[input readInt64]];
        break;
      }
      case 32: {
        [self setDate:[input readInt64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)present {
  return resultUpdateAttendanceRequest.presentArray;
}
- (SInt64)presentAtIndex:(NSUInteger)index {
  return [resultUpdateAttendanceRequest presentAtIndex:index];
}
- (TXPBUpdateAttendanceRequestBuilder *)addPresent:(SInt64)value {
  if (resultUpdateAttendanceRequest.presentArray == nil) {
    resultUpdateAttendanceRequest.presentArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultUpdateAttendanceRequest.presentArray addInt64:value];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)setPresentArray:(NSArray *)array {
  resultUpdateAttendanceRequest.presentArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)setPresentValues:(const SInt64 *)values count:(NSUInteger)count {
  resultUpdateAttendanceRequest.presentArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)clearPresent {
  resultUpdateAttendanceRequest.presentArray = nil;
  return self;
}
- (PBAppendableArray *)absence {
  return resultUpdateAttendanceRequest.absenceArray;
}
- (SInt64)absenceAtIndex:(NSUInteger)index {
  return [resultUpdateAttendanceRequest absenceAtIndex:index];
}
- (TXPBUpdateAttendanceRequestBuilder *)addAbsence:(SInt64)value {
  if (resultUpdateAttendanceRequest.absenceArray == nil) {
    resultUpdateAttendanceRequest.absenceArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultUpdateAttendanceRequest.absenceArray addInt64:value];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)setAbsenceArray:(NSArray *)array {
  resultUpdateAttendanceRequest.absenceArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)setAbsenceValues:(const SInt64 *)values count:(NSUInteger)count {
  resultUpdateAttendanceRequest.absenceArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)clearAbsence {
  resultUpdateAttendanceRequest.absenceArray = nil;
  return self;
}
- (PBAppendableArray *)leave {
  return resultUpdateAttendanceRequest.leaveArray;
}
- (SInt64)leaveAtIndex:(NSUInteger)index {
  return [resultUpdateAttendanceRequest leaveAtIndex:index];
}
- (TXPBUpdateAttendanceRequestBuilder *)addLeave:(SInt64)value {
  if (resultUpdateAttendanceRequest.leaveArray == nil) {
    resultUpdateAttendanceRequest.leaveArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultUpdateAttendanceRequest.leaveArray addInt64:value];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)setLeaveArray:(NSArray *)array {
  resultUpdateAttendanceRequest.leaveArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)setLeaveValues:(const SInt64 *)values count:(NSUInteger)count {
  resultUpdateAttendanceRequest.leaveArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder *)clearLeave {
  resultUpdateAttendanceRequest.leaveArray = nil;
  return self;
}
- (BOOL) hasDate {
  return resultUpdateAttendanceRequest.hasDate;
}
- (SInt64) date {
  return resultUpdateAttendanceRequest.date;
}
- (TXPBUpdateAttendanceRequestBuilder*) setDate:(SInt64) value {
  resultUpdateAttendanceRequest.hasDate = YES;
  resultUpdateAttendanceRequest.date = value;
  return self;
}
- (TXPBUpdateAttendanceRequestBuilder*) clearDate {
  resultUpdateAttendanceRequest.hasDate = NO;
  resultUpdateAttendanceRequest.date = 0L;
  return self;
}
@end

@interface TXPBUpdateAttendanceResponse ()
@end

@implementation TXPBUpdateAttendanceResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBUpdateAttendanceResponse* defaultTXPBUpdateAttendanceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBUpdateAttendanceResponse class]) {
    defaultTXPBUpdateAttendanceResponseInstance = [[TXPBUpdateAttendanceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBUpdateAttendanceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBUpdateAttendanceResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBUpdateAttendanceResponse*) parseFromData:(NSData*) data {
  return (TXPBUpdateAttendanceResponse*)[[[TXPBUpdateAttendanceResponse builder] mergeFromData:data] build];
}
+ (TXPBUpdateAttendanceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateAttendanceResponse*)[[[TXPBUpdateAttendanceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateAttendanceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBUpdateAttendanceResponse*)[[[TXPBUpdateAttendanceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBUpdateAttendanceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateAttendanceResponse*)[[[TXPBUpdateAttendanceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBUpdateAttendanceResponse*)[[[TXPBUpdateAttendanceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBUpdateAttendanceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBUpdateAttendanceResponse*)[[[TXPBUpdateAttendanceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBUpdateAttendanceResponseBuilder*) builder {
  return [[TXPBUpdateAttendanceResponseBuilder alloc] init];
}
+ (TXPBUpdateAttendanceResponseBuilder*) builderWithPrototype:(TXPBUpdateAttendanceResponse*) prototype {
  return [[TXPBUpdateAttendanceResponse builder] mergeFrom:prototype];
}
- (TXPBUpdateAttendanceResponseBuilder*) builder {
  return [TXPBUpdateAttendanceResponse builder];
}
- (TXPBUpdateAttendanceResponseBuilder*) toBuilder {
  return [TXPBUpdateAttendanceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBUpdateAttendanceResponse class]]) {
    return NO;
  }
  TXPBUpdateAttendanceResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBUpdateAttendanceResponseBuilder()
@property (strong) TXPBUpdateAttendanceResponse* resultUpdateAttendanceResponse;
@end

@implementation TXPBUpdateAttendanceResponseBuilder
@synthesize resultUpdateAttendanceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUpdateAttendanceResponse = [[TXPBUpdateAttendanceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUpdateAttendanceResponse;
}
- (TXPBUpdateAttendanceResponseBuilder*) clear {
  self.resultUpdateAttendanceResponse = [[TXPBUpdateAttendanceResponse alloc] init];
  return self;
}
- (TXPBUpdateAttendanceResponseBuilder*) clone {
  return [TXPBUpdateAttendanceResponse builderWithPrototype:resultUpdateAttendanceResponse];
}
- (TXPBUpdateAttendanceResponse*) defaultInstance {
  return [TXPBUpdateAttendanceResponse defaultInstance];
}
- (TXPBUpdateAttendanceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBUpdateAttendanceResponse*) buildPartial {
  TXPBUpdateAttendanceResponse* returnMe = resultUpdateAttendanceResponse;
  self.resultUpdateAttendanceResponse = nil;
  return returnMe;
}
- (TXPBUpdateAttendanceResponseBuilder*) mergeFrom:(TXPBUpdateAttendanceResponse*) other {
  if (other == [TXPBUpdateAttendanceResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBUpdateAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBUpdateAttendanceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBLeave ()
@property SInt64 id;
@property SInt64 applyUserId;
@property (strong) NSString* applyUserName;
@property (strong) NSString* applyUserAvatar;
@property SInt64 userId;
@property (strong) NSString* userAvatar;
@property (strong) NSString* userName;
@property (strong) NSString* reason;
@property SInt64 beginDate;
@property SInt64 endDate;
@property Float64 days;
@property TXPBLeaveType leaveType;
@property SInt64 replyUserId;
@property (strong) NSString* replyUserName;
@property (strong) NSString* reply;
@property TXPBLeaveStatus status;
@property SInt64 createdOn;
@property (strong) PBAppendableArray * datesArray;
@end

@implementation TXPBLeave

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasApplyUserId {
  return !!hasApplyUserId_;
}
- (void) setHasApplyUserId:(BOOL) _value_ {
  hasApplyUserId_ = !!_value_;
}
@synthesize applyUserId;
- (BOOL) hasApplyUserName {
  return !!hasApplyUserName_;
}
- (void) setHasApplyUserName:(BOOL) _value_ {
  hasApplyUserName_ = !!_value_;
}
@synthesize applyUserName;
- (BOOL) hasApplyUserAvatar {
  return !!hasApplyUserAvatar_;
}
- (void) setHasApplyUserAvatar:(BOOL) _value_ {
  hasApplyUserAvatar_ = !!_value_;
}
@synthesize applyUserAvatar;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasUserAvatar {
  return !!hasUserAvatar_;
}
- (void) setHasUserAvatar:(BOOL) _value_ {
  hasUserAvatar_ = !!_value_;
}
@synthesize userAvatar;
- (BOOL) hasUserName {
  return !!hasUserName_;
}
- (void) setHasUserName:(BOOL) _value_ {
  hasUserName_ = !!_value_;
}
@synthesize userName;
- (BOOL) hasReason {
  return !!hasReason_;
}
- (void) setHasReason:(BOOL) _value_ {
  hasReason_ = !!_value_;
}
@synthesize reason;
- (BOOL) hasBeginDate {
  return !!hasBeginDate_;
}
- (void) setHasBeginDate:(BOOL) _value_ {
  hasBeginDate_ = !!_value_;
}
@synthesize beginDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) _value_ {
  hasEndDate_ = !!_value_;
}
@synthesize endDate;
- (BOOL) hasDays {
  return !!hasDays_;
}
- (void) setHasDays:(BOOL) _value_ {
  hasDays_ = !!_value_;
}
@synthesize days;
- (BOOL) hasLeaveType {
  return !!hasLeaveType_;
}
- (void) setHasLeaveType:(BOOL) _value_ {
  hasLeaveType_ = !!_value_;
}
@synthesize leaveType;
- (BOOL) hasReplyUserId {
  return !!hasReplyUserId_;
}
- (void) setHasReplyUserId:(BOOL) _value_ {
  hasReplyUserId_ = !!_value_;
}
@synthesize replyUserId;
- (BOOL) hasReplyUserName {
  return !!hasReplyUserName_;
}
- (void) setHasReplyUserName:(BOOL) _value_ {
  hasReplyUserName_ = !!_value_;
}
@synthesize replyUserName;
- (BOOL) hasReply {
  return !!hasReply_;
}
- (void) setHasReply:(BOOL) _value_ {
  hasReply_ = !!_value_;
}
@synthesize reply;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasCreatedOn {
  return !!hasCreatedOn_;
}
- (void) setHasCreatedOn:(BOOL) _value_ {
  hasCreatedOn_ = !!_value_;
}
@synthesize createdOn;
@synthesize datesArray;
@dynamic dates;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.applyUserId = 0L;
    self.applyUserName = @"";
    self.applyUserAvatar = @"";
    self.userId = 0L;
    self.userAvatar = @"";
    self.userName = @"";
    self.reason = @"";
    self.beginDate = 0L;
    self.endDate = 0L;
    self.days = 0;
    self.leaveType = TXPBLeaveTypeSck;
    self.replyUserId = 0L;
    self.replyUserName = @"";
    self.reply = @"";
    self.status = TXPBLeaveStatusApplied;
    self.createdOn = 0L;
  }
  return self;
}
static TXPBLeave* defaultTXPBLeaveInstance = nil;
+ (void) initialize {
  if (self == [TXPBLeave class]) {
    defaultTXPBLeaveInstance = [[TXPBLeave alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBLeaveInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBLeaveInstance;
}
- (PBArray *)dates {
  return datesArray;
}
- (SInt64)datesAtIndex:(NSUInteger)index {
  return [datesArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasApplyUserId) {
    return NO;
  }
  if (!self.hasApplyUserName) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUserName) {
    return NO;
  }
  if (!self.hasBeginDate) {
    return NO;
  }
  if (!self.hasEndDate) {
    return NO;
  }
  if (!self.hasDays) {
    return NO;
  }
  if (!self.hasLeaveType) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasCreatedOn) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasApplyUserId) {
    [output writeInt64:2 value:self.applyUserId];
  }
  if (self.hasApplyUserName) {
    [output writeString:3 value:self.applyUserName];
  }
  if (self.hasApplyUserAvatar) {
    [output writeString:4 value:self.applyUserAvatar];
  }
  if (self.hasUserId) {
    [output writeInt64:5 value:self.userId];
  }
  if (self.hasUserAvatar) {
    [output writeString:6 value:self.userAvatar];
  }
  if (self.hasUserName) {
    [output writeString:7 value:self.userName];
  }
  if (self.hasReason) {
    [output writeString:8 value:self.reason];
  }
  if (self.hasBeginDate) {
    [output writeInt64:9 value:self.beginDate];
  }
  if (self.hasEndDate) {
    [output writeInt64:10 value:self.endDate];
  }
  if (self.hasDays) {
    [output writeDouble:11 value:self.days];
  }
  if (self.hasLeaveType) {
    [output writeEnum:12 value:self.leaveType];
  }
  if (self.hasReplyUserId) {
    [output writeInt64:13 value:self.replyUserId];
  }
  if (self.hasReplyUserName) {
    [output writeString:14 value:self.replyUserName];
  }
  if (self.hasReply) {
    [output writeString:15 value:self.reply];
  }
  if (self.hasStatus) {
    [output writeEnum:16 value:self.status];
  }
  if (self.hasCreatedOn) {
    [output writeInt64:17 value:self.createdOn];
  }
  const NSUInteger datesArrayCount = self.datesArray.count;
  if (datesArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.datesArray.data;
    for (NSUInteger i = 0; i < datesArrayCount; ++i) {
      [output writeInt64:18 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasApplyUserId) {
    size_ += computeInt64Size(2, self.applyUserId);
  }
  if (self.hasApplyUserName) {
    size_ += computeStringSize(3, self.applyUserName);
  }
  if (self.hasApplyUserAvatar) {
    size_ += computeStringSize(4, self.applyUserAvatar);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(5, self.userId);
  }
  if (self.hasUserAvatar) {
    size_ += computeStringSize(6, self.userAvatar);
  }
  if (self.hasUserName) {
    size_ += computeStringSize(7, self.userName);
  }
  if (self.hasReason) {
    size_ += computeStringSize(8, self.reason);
  }
  if (self.hasBeginDate) {
    size_ += computeInt64Size(9, self.beginDate);
  }
  if (self.hasEndDate) {
    size_ += computeInt64Size(10, self.endDate);
  }
  if (self.hasDays) {
    size_ += computeDoubleSize(11, self.days);
  }
  if (self.hasLeaveType) {
    size_ += computeEnumSize(12, self.leaveType);
  }
  if (self.hasReplyUserId) {
    size_ += computeInt64Size(13, self.replyUserId);
  }
  if (self.hasReplyUserName) {
    size_ += computeStringSize(14, self.replyUserName);
  }
  if (self.hasReply) {
    size_ += computeStringSize(15, self.reply);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(16, self.status);
  }
  if (self.hasCreatedOn) {
    size_ += computeInt64Size(17, self.createdOn);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.datesArray.count;
    const SInt64 *values = (const SInt64 *)self.datesArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(2 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBLeave*) parseFromData:(NSData*) data {
  return (TXPBLeave*)[[[TXPBLeave builder] mergeFromData:data] build];
}
+ (TXPBLeave*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLeave*)[[[TXPBLeave builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBLeave*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBLeave*)[[[TXPBLeave builder] mergeFromInputStream:input] build];
}
+ (TXPBLeave*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLeave*)[[[TXPBLeave builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBLeave*)[[[TXPBLeave builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBLeave*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBLeave*)[[[TXPBLeave builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBLeaveBuilder*) builder {
  return [[TXPBLeaveBuilder alloc] init];
}
+ (TXPBLeaveBuilder*) builderWithPrototype:(TXPBLeave*) prototype {
  return [[TXPBLeave builder] mergeFrom:prototype];
}
- (TXPBLeaveBuilder*) builder {
  return [TXPBLeave builder];
}
- (TXPBLeaveBuilder*) toBuilder {
  return [TXPBLeave builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasApplyUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"applyUserId", [NSNumber numberWithLongLong:self.applyUserId]];
  }
  if (self.hasApplyUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"applyUserName", self.applyUserName];
  }
  if (self.hasApplyUserAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"applyUserAvatar", self.applyUserAvatar];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasUserAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userAvatar", self.userAvatar];
  }
  if (self.hasUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userName", self.userName];
  }
  if (self.hasReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reason", self.reason];
  }
  if (self.hasBeginDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beginDate", [NSNumber numberWithLongLong:self.beginDate]];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", [NSNumber numberWithLongLong:self.endDate]];
  }
  if (self.hasDays) {
    [output appendFormat:@"%@%@: %@\n", indent, @"days", [NSNumber numberWithDouble:self.days]];
  }
  if (self.hasLeaveType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leaveType", NSStringFromTXPBLeaveType(self.leaveType)];
  }
  if (self.hasReplyUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyUserId", [NSNumber numberWithLongLong:self.replyUserId]];
  }
  if (self.hasReplyUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyUserName", self.replyUserName];
  }
  if (self.hasReply) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reply", self.reply];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", NSStringFromTXPBLeaveStatus(self.status)];
  }
  if (self.hasCreatedOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdOn", [NSNumber numberWithLongLong:self.createdOn]];
  }
  [self.datesArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"dates", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasApplyUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.applyUserId] forKey: @"applyUserId"];
  }
  if (self.hasApplyUserName) {
    [dictionary setObject: self.applyUserName forKey: @"applyUserName"];
  }
  if (self.hasApplyUserAvatar) {
    [dictionary setObject: self.applyUserAvatar forKey: @"applyUserAvatar"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasUserAvatar) {
    [dictionary setObject: self.userAvatar forKey: @"userAvatar"];
  }
  if (self.hasUserName) {
    [dictionary setObject: self.userName forKey: @"userName"];
  }
  if (self.hasReason) {
    [dictionary setObject: self.reason forKey: @"reason"];
  }
  if (self.hasBeginDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.beginDate] forKey: @"beginDate"];
  }
  if (self.hasEndDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.endDate] forKey: @"endDate"];
  }
  if (self.hasDays) {
    [dictionary setObject: [NSNumber numberWithDouble:self.days] forKey: @"days"];
  }
  if (self.hasLeaveType) {
    [dictionary setObject: @(self.leaveType) forKey: @"leaveType"];
  }
  if (self.hasReplyUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.replyUserId] forKey: @"replyUserId"];
  }
  if (self.hasReplyUserName) {
    [dictionary setObject: self.replyUserName forKey: @"replyUserName"];
  }
  if (self.hasReply) {
    [dictionary setObject: self.reply forKey: @"reply"];
  }
  if (self.hasStatus) {
    [dictionary setObject: @(self.status) forKey: @"status"];
  }
  if (self.hasCreatedOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdOn] forKey: @"createdOn"];
  }
  NSMutableArray * datesArrayArray = [NSMutableArray new];
  NSUInteger datesArrayCount=self.datesArray.count;
  for(int i=0;i<datesArrayCount;i++){
    [datesArrayArray addObject: @([self.datesArray int64AtIndex:i])];
  }
  [dictionary setObject: datesArrayArray forKey: @"dates"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBLeave class]]) {
    return NO;
  }
  TXPBLeave *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasApplyUserId == otherMessage.hasApplyUserId &&
      (!self.hasApplyUserId || self.applyUserId == otherMessage.applyUserId) &&
      self.hasApplyUserName == otherMessage.hasApplyUserName &&
      (!self.hasApplyUserName || [self.applyUserName isEqual:otherMessage.applyUserName]) &&
      self.hasApplyUserAvatar == otherMessage.hasApplyUserAvatar &&
      (!self.hasApplyUserAvatar || [self.applyUserAvatar isEqual:otherMessage.applyUserAvatar]) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUserAvatar == otherMessage.hasUserAvatar &&
      (!self.hasUserAvatar || [self.userAvatar isEqual:otherMessage.userAvatar]) &&
      self.hasUserName == otherMessage.hasUserName &&
      (!self.hasUserName || [self.userName isEqual:otherMessage.userName]) &&
      self.hasReason == otherMessage.hasReason &&
      (!self.hasReason || [self.reason isEqual:otherMessage.reason]) &&
      self.hasBeginDate == otherMessage.hasBeginDate &&
      (!self.hasBeginDate || self.beginDate == otherMessage.beginDate) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || self.endDate == otherMessage.endDate) &&
      self.hasDays == otherMessage.hasDays &&
      (!self.hasDays || self.days == otherMessage.days) &&
      self.hasLeaveType == otherMessage.hasLeaveType &&
      (!self.hasLeaveType || self.leaveType == otherMessage.leaveType) &&
      self.hasReplyUserId == otherMessage.hasReplyUserId &&
      (!self.hasReplyUserId || self.replyUserId == otherMessage.replyUserId) &&
      self.hasReplyUserName == otherMessage.hasReplyUserName &&
      (!self.hasReplyUserName || [self.replyUserName isEqual:otherMessage.replyUserName]) &&
      self.hasReply == otherMessage.hasReply &&
      (!self.hasReply || [self.reply isEqual:otherMessage.reply]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasCreatedOn == otherMessage.hasCreatedOn &&
      (!self.hasCreatedOn || self.createdOn == otherMessage.createdOn) &&
      [self.datesArray isEqualToArray:otherMessage.datesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasApplyUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.applyUserId] hash];
  }
  if (self.hasApplyUserName) {
    hashCode = hashCode * 31 + [self.applyUserName hash];
  }
  if (self.hasApplyUserAvatar) {
    hashCode = hashCode * 31 + [self.applyUserAvatar hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasUserAvatar) {
    hashCode = hashCode * 31 + [self.userAvatar hash];
  }
  if (self.hasUserName) {
    hashCode = hashCode * 31 + [self.userName hash];
  }
  if (self.hasReason) {
    hashCode = hashCode * 31 + [self.reason hash];
  }
  if (self.hasBeginDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.beginDate] hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.endDate] hash];
  }
  if (self.hasDays) {
    hashCode = hashCode * 31 + [[NSNumber numberWithDouble:self.days] hash];
  }
  if (self.hasLeaveType) {
    hashCode = hashCode * 31 + self.leaveType;
  }
  if (self.hasReplyUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.replyUserId] hash];
  }
  if (self.hasReplyUserName) {
    hashCode = hashCode * 31 + [self.replyUserName hash];
  }
  if (self.hasReply) {
    hashCode = hashCode * 31 + [self.reply hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasCreatedOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdOn] hash];
  }
  [self.datesArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBLeaveBuilder()
@property (strong) TXPBLeave* resultLeave;
@end

@implementation TXPBLeaveBuilder
@synthesize resultLeave;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultLeave = [[TXPBLeave alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultLeave;
}
- (TXPBLeaveBuilder*) clear {
  self.resultLeave = [[TXPBLeave alloc] init];
  return self;
}
- (TXPBLeaveBuilder*) clone {
  return [TXPBLeave builderWithPrototype:resultLeave];
}
- (TXPBLeave*) defaultInstance {
  return [TXPBLeave defaultInstance];
}
- (TXPBLeave*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBLeave*) buildPartial {
  TXPBLeave* returnMe = resultLeave;
  self.resultLeave = nil;
  return returnMe;
}
- (TXPBLeaveBuilder*) mergeFrom:(TXPBLeave*) other {
  if (other == [TXPBLeave defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasApplyUserId) {
    [self setApplyUserId:other.applyUserId];
  }
  if (other.hasApplyUserName) {
    [self setApplyUserName:other.applyUserName];
  }
  if (other.hasApplyUserAvatar) {
    [self setApplyUserAvatar:other.applyUserAvatar];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUserAvatar) {
    [self setUserAvatar:other.userAvatar];
  }
  if (other.hasUserName) {
    [self setUserName:other.userName];
  }
  if (other.hasReason) {
    [self setReason:other.reason];
  }
  if (other.hasBeginDate) {
    [self setBeginDate:other.beginDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasDays) {
    [self setDays:other.days];
  }
  if (other.hasLeaveType) {
    [self setLeaveType:other.leaveType];
  }
  if (other.hasReplyUserId) {
    [self setReplyUserId:other.replyUserId];
  }
  if (other.hasReplyUserName) {
    [self setReplyUserName:other.replyUserName];
  }
  if (other.hasReply) {
    [self setReply:other.reply];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasCreatedOn) {
    [self setCreatedOn:other.createdOn];
  }
  if (other.datesArray.count > 0) {
    if (resultLeave.datesArray == nil) {
      resultLeave.datesArray = [other.datesArray copy];
    } else {
      [resultLeave.datesArray appendArray:other.datesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBLeaveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBLeaveBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setApplyUserId:[input readInt64]];
        break;
      }
      case 26: {
        [self setApplyUserName:[input readString]];
        break;
      }
      case 34: {
        [self setApplyUserAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 50: {
        [self setUserAvatar:[input readString]];
        break;
      }
      case 58: {
        [self setUserName:[input readString]];
        break;
      }
      case 66: {
        [self setReason:[input readString]];
        break;
      }
      case 72: {
        [self setBeginDate:[input readInt64]];
        break;
      }
      case 80: {
        [self setEndDate:[input readInt64]];
        break;
      }
      case 89: {
        [self setDays:[input readDouble]];
        break;
      }
      case 96: {
        TXPBLeaveType value = (TXPBLeaveType)[input readEnum];
        if (TXPBLeaveTypeIsValidValue(value)) {
          [self setLeaveType:value];
        } else {
          [unknownFields mergeVarintField:12 value:value];
        }
        break;
      }
      case 104: {
        [self setReplyUserId:[input readInt64]];
        break;
      }
      case 114: {
        [self setReplyUserName:[input readString]];
        break;
      }
      case 122: {
        [self setReply:[input readString]];
        break;
      }
      case 128: {
        TXPBLeaveStatus value = (TXPBLeaveStatus)[input readEnum];
        if (TXPBLeaveStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:16 value:value];
        }
        break;
      }
      case 136: {
        [self setCreatedOn:[input readInt64]];
        break;
      }
      case 144: {
        [self addDates:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultLeave.hasId;
}
- (SInt64) id {
  return resultLeave.id;
}
- (TXPBLeaveBuilder*) setId:(SInt64) value {
  resultLeave.hasId = YES;
  resultLeave.id = value;
  return self;
}
- (TXPBLeaveBuilder*) clearId {
  resultLeave.hasId = NO;
  resultLeave.id = 0L;
  return self;
}
- (BOOL) hasApplyUserId {
  return resultLeave.hasApplyUserId;
}
- (SInt64) applyUserId {
  return resultLeave.applyUserId;
}
- (TXPBLeaveBuilder*) setApplyUserId:(SInt64) value {
  resultLeave.hasApplyUserId = YES;
  resultLeave.applyUserId = value;
  return self;
}
- (TXPBLeaveBuilder*) clearApplyUserId {
  resultLeave.hasApplyUserId = NO;
  resultLeave.applyUserId = 0L;
  return self;
}
- (BOOL) hasApplyUserName {
  return resultLeave.hasApplyUserName;
}
- (NSString*) applyUserName {
  return resultLeave.applyUserName;
}
- (TXPBLeaveBuilder*) setApplyUserName:(NSString*) value {
  resultLeave.hasApplyUserName = YES;
  resultLeave.applyUserName = value;
  return self;
}
- (TXPBLeaveBuilder*) clearApplyUserName {
  resultLeave.hasApplyUserName = NO;
  resultLeave.applyUserName = @"";
  return self;
}
- (BOOL) hasApplyUserAvatar {
  return resultLeave.hasApplyUserAvatar;
}
- (NSString*) applyUserAvatar {
  return resultLeave.applyUserAvatar;
}
- (TXPBLeaveBuilder*) setApplyUserAvatar:(NSString*) value {
  resultLeave.hasApplyUserAvatar = YES;
  resultLeave.applyUserAvatar = value;
  return self;
}
- (TXPBLeaveBuilder*) clearApplyUserAvatar {
  resultLeave.hasApplyUserAvatar = NO;
  resultLeave.applyUserAvatar = @"";
  return self;
}
- (BOOL) hasUserId {
  return resultLeave.hasUserId;
}
- (SInt64) userId {
  return resultLeave.userId;
}
- (TXPBLeaveBuilder*) setUserId:(SInt64) value {
  resultLeave.hasUserId = YES;
  resultLeave.userId = value;
  return self;
}
- (TXPBLeaveBuilder*) clearUserId {
  resultLeave.hasUserId = NO;
  resultLeave.userId = 0L;
  return self;
}
- (BOOL) hasUserAvatar {
  return resultLeave.hasUserAvatar;
}
- (NSString*) userAvatar {
  return resultLeave.userAvatar;
}
- (TXPBLeaveBuilder*) setUserAvatar:(NSString*) value {
  resultLeave.hasUserAvatar = YES;
  resultLeave.userAvatar = value;
  return self;
}
- (TXPBLeaveBuilder*) clearUserAvatar {
  resultLeave.hasUserAvatar = NO;
  resultLeave.userAvatar = @"";
  return self;
}
- (BOOL) hasUserName {
  return resultLeave.hasUserName;
}
- (NSString*) userName {
  return resultLeave.userName;
}
- (TXPBLeaveBuilder*) setUserName:(NSString*) value {
  resultLeave.hasUserName = YES;
  resultLeave.userName = value;
  return self;
}
- (TXPBLeaveBuilder*) clearUserName {
  resultLeave.hasUserName = NO;
  resultLeave.userName = @"";
  return self;
}
- (BOOL) hasReason {
  return resultLeave.hasReason;
}
- (NSString*) reason {
  return resultLeave.reason;
}
- (TXPBLeaveBuilder*) setReason:(NSString*) value {
  resultLeave.hasReason = YES;
  resultLeave.reason = value;
  return self;
}
- (TXPBLeaveBuilder*) clearReason {
  resultLeave.hasReason = NO;
  resultLeave.reason = @"";
  return self;
}
- (BOOL) hasBeginDate {
  return resultLeave.hasBeginDate;
}
- (SInt64) beginDate {
  return resultLeave.beginDate;
}
- (TXPBLeaveBuilder*) setBeginDate:(SInt64) value {
  resultLeave.hasBeginDate = YES;
  resultLeave.beginDate = value;
  return self;
}
- (TXPBLeaveBuilder*) clearBeginDate {
  resultLeave.hasBeginDate = NO;
  resultLeave.beginDate = 0L;
  return self;
}
- (BOOL) hasEndDate {
  return resultLeave.hasEndDate;
}
- (SInt64) endDate {
  return resultLeave.endDate;
}
- (TXPBLeaveBuilder*) setEndDate:(SInt64) value {
  resultLeave.hasEndDate = YES;
  resultLeave.endDate = value;
  return self;
}
- (TXPBLeaveBuilder*) clearEndDate {
  resultLeave.hasEndDate = NO;
  resultLeave.endDate = 0L;
  return self;
}
- (BOOL) hasDays {
  return resultLeave.hasDays;
}
- (Float64) days {
  return resultLeave.days;
}
- (TXPBLeaveBuilder*) setDays:(Float64) value {
  resultLeave.hasDays = YES;
  resultLeave.days = value;
  return self;
}
- (TXPBLeaveBuilder*) clearDays {
  resultLeave.hasDays = NO;
  resultLeave.days = 0;
  return self;
}
- (BOOL) hasLeaveType {
  return resultLeave.hasLeaveType;
}
- (TXPBLeaveType) leaveType {
  return resultLeave.leaveType;
}
- (TXPBLeaveBuilder*) setLeaveType:(TXPBLeaveType) value {
  resultLeave.hasLeaveType = YES;
  resultLeave.leaveType = value;
  return self;
}
- (TXPBLeaveBuilder*) clearLeaveType {
  resultLeave.hasLeaveType = NO;
  resultLeave.leaveType = TXPBLeaveTypeSck;
  return self;
}
- (BOOL) hasReplyUserId {
  return resultLeave.hasReplyUserId;
}
- (SInt64) replyUserId {
  return resultLeave.replyUserId;
}
- (TXPBLeaveBuilder*) setReplyUserId:(SInt64) value {
  resultLeave.hasReplyUserId = YES;
  resultLeave.replyUserId = value;
  return self;
}
- (TXPBLeaveBuilder*) clearReplyUserId {
  resultLeave.hasReplyUserId = NO;
  resultLeave.replyUserId = 0L;
  return self;
}
- (BOOL) hasReplyUserName {
  return resultLeave.hasReplyUserName;
}
- (NSString*) replyUserName {
  return resultLeave.replyUserName;
}
- (TXPBLeaveBuilder*) setReplyUserName:(NSString*) value {
  resultLeave.hasReplyUserName = YES;
  resultLeave.replyUserName = value;
  return self;
}
- (TXPBLeaveBuilder*) clearReplyUserName {
  resultLeave.hasReplyUserName = NO;
  resultLeave.replyUserName = @"";
  return self;
}
- (BOOL) hasReply {
  return resultLeave.hasReply;
}
- (NSString*) reply {
  return resultLeave.reply;
}
- (TXPBLeaveBuilder*) setReply:(NSString*) value {
  resultLeave.hasReply = YES;
  resultLeave.reply = value;
  return self;
}
- (TXPBLeaveBuilder*) clearReply {
  resultLeave.hasReply = NO;
  resultLeave.reply = @"";
  return self;
}
- (BOOL) hasStatus {
  return resultLeave.hasStatus;
}
- (TXPBLeaveStatus) status {
  return resultLeave.status;
}
- (TXPBLeaveBuilder*) setStatus:(TXPBLeaveStatus) value {
  resultLeave.hasStatus = YES;
  resultLeave.status = value;
  return self;
}
- (TXPBLeaveBuilder*) clearStatus {
  resultLeave.hasStatus = NO;
  resultLeave.status = TXPBLeaveStatusApplied;
  return self;
}
- (BOOL) hasCreatedOn {
  return resultLeave.hasCreatedOn;
}
- (SInt64) createdOn {
  return resultLeave.createdOn;
}
- (TXPBLeaveBuilder*) setCreatedOn:(SInt64) value {
  resultLeave.hasCreatedOn = YES;
  resultLeave.createdOn = value;
  return self;
}
- (TXPBLeaveBuilder*) clearCreatedOn {
  resultLeave.hasCreatedOn = NO;
  resultLeave.createdOn = 0L;
  return self;
}
- (PBAppendableArray *)dates {
  return resultLeave.datesArray;
}
- (SInt64)datesAtIndex:(NSUInteger)index {
  return [resultLeave datesAtIndex:index];
}
- (TXPBLeaveBuilder *)addDates:(SInt64)value {
  if (resultLeave.datesArray == nil) {
    resultLeave.datesArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultLeave.datesArray addInt64:value];
  return self;
}
- (TXPBLeaveBuilder *)setDatesArray:(NSArray *)array {
  resultLeave.datesArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBLeaveBuilder *)setDatesValues:(const SInt64 *)values count:(NSUInteger)count {
  resultLeave.datesArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBLeaveBuilder *)clearDates {
  resultLeave.datesArray = nil;
  return self;
}
@end

@interface TXPBFetchLeaveRequest ()
@property SInt64 sinceId;
@property SInt64 maxId;
@property SInt64 userId;
@end

@implementation TXPBFetchLeaveRequest

- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (instancetype) init {
  if ((self = [super init])) {
    self.sinceId = 0L;
    self.maxId = 0L;
    self.userId = 0L;
  }
  return self;
}
static TXPBFetchLeaveRequest* defaultTXPBFetchLeaveRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchLeaveRequest class]) {
    defaultTXPBFetchLeaveRequestInstance = [[TXPBFetchLeaveRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchLeaveRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchLeaveRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSinceId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSinceId) {
    [output writeInt64:1 value:self.sinceId];
  }
  if (self.hasMaxId) {
    [output writeInt64:2 value:self.maxId];
  }
  if (self.hasUserId) {
    [output writeInt64:3 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSinceId) {
    size_ += computeInt64Size(1, self.sinceId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(2, self.maxId);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(3, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchLeaveRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchLeaveRequest*)[[[TXPBFetchLeaveRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchLeaveRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchLeaveRequest*)[[[TXPBFetchLeaveRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchLeaveRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchLeaveRequest*)[[[TXPBFetchLeaveRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchLeaveRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchLeaveRequest*)[[[TXPBFetchLeaveRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchLeaveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchLeaveRequest*)[[[TXPBFetchLeaveRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchLeaveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchLeaveRequest*)[[[TXPBFetchLeaveRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchLeaveRequestBuilder*) builder {
  return [[TXPBFetchLeaveRequestBuilder alloc] init];
}
+ (TXPBFetchLeaveRequestBuilder*) builderWithPrototype:(TXPBFetchLeaveRequest*) prototype {
  return [[TXPBFetchLeaveRequest builder] mergeFrom:prototype];
}
- (TXPBFetchLeaveRequestBuilder*) builder {
  return [TXPBFetchLeaveRequest builder];
}
- (TXPBFetchLeaveRequestBuilder*) toBuilder {
  return [TXPBFetchLeaveRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchLeaveRequest class]]) {
    return NO;
  }
  TXPBFetchLeaveRequest *otherMessage = other;
  return
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchLeaveRequestBuilder()
@property (strong) TXPBFetchLeaveRequest* resultFetchLeaveRequest;
@end

@implementation TXPBFetchLeaveRequestBuilder
@synthesize resultFetchLeaveRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchLeaveRequest = [[TXPBFetchLeaveRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchLeaveRequest;
}
- (TXPBFetchLeaveRequestBuilder*) clear {
  self.resultFetchLeaveRequest = [[TXPBFetchLeaveRequest alloc] init];
  return self;
}
- (TXPBFetchLeaveRequestBuilder*) clone {
  return [TXPBFetchLeaveRequest builderWithPrototype:resultFetchLeaveRequest];
}
- (TXPBFetchLeaveRequest*) defaultInstance {
  return [TXPBFetchLeaveRequest defaultInstance];
}
- (TXPBFetchLeaveRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchLeaveRequest*) buildPartial {
  TXPBFetchLeaveRequest* returnMe = resultFetchLeaveRequest;
  self.resultFetchLeaveRequest = nil;
  return returnMe;
}
- (TXPBFetchLeaveRequestBuilder*) mergeFrom:(TXPBFetchLeaveRequest*) other {
  if (other == [TXPBFetchLeaveRequest defaultInstance]) {
    return self;
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchLeaveRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchLeaveRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 16: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 24: {
        [self setUserId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSinceId {
  return resultFetchLeaveRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchLeaveRequest.sinceId;
}
- (TXPBFetchLeaveRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchLeaveRequest.hasSinceId = YES;
  resultFetchLeaveRequest.sinceId = value;
  return self;
}
- (TXPBFetchLeaveRequestBuilder*) clearSinceId {
  resultFetchLeaveRequest.hasSinceId = NO;
  resultFetchLeaveRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchLeaveRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchLeaveRequest.maxId;
}
- (TXPBFetchLeaveRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchLeaveRequest.hasMaxId = YES;
  resultFetchLeaveRequest.maxId = value;
  return self;
}
- (TXPBFetchLeaveRequestBuilder*) clearMaxId {
  resultFetchLeaveRequest.hasMaxId = NO;
  resultFetchLeaveRequest.maxId = 0L;
  return self;
}
- (BOOL) hasUserId {
  return resultFetchLeaveRequest.hasUserId;
}
- (SInt64) userId {
  return resultFetchLeaveRequest.userId;
}
- (TXPBFetchLeaveRequestBuilder*) setUserId:(SInt64) value {
  resultFetchLeaveRequest.hasUserId = YES;
  resultFetchLeaveRequest.userId = value;
  return self;
}
- (TXPBFetchLeaveRequestBuilder*) clearUserId {
  resultFetchLeaveRequest.hasUserId = NO;
  resultFetchLeaveRequest.userId = 0L;
  return self;
}
@end

@interface TXPBFetchLeaveResponse ()
@property (strong) NSMutableArray * leavesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchLeaveResponse

@synthesize leavesArray;
@dynamic leaves;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchLeaveResponse* defaultTXPBFetchLeaveResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchLeaveResponse class]) {
    defaultTXPBFetchLeaveResponseInstance = [[TXPBFetchLeaveResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchLeaveResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchLeaveResponseInstance;
}
- (NSArray *)leaves {
  return leavesArray;
}
- (TXPBLeave*)leavesAtIndex:(NSUInteger)index {
  return [leavesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitleaves = YES;
   [self.leaves enumerateObjectsUsingBlock:^(TXPBLeave *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitleaves = NO;
      *stop = YES;
    }
  }];
  if (!isInitleaves) return isInitleaves;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.leavesArray enumerateObjectsUsingBlock:^(TXPBLeave *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.leavesArray enumerateObjectsUsingBlock:^(TXPBLeave *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchLeaveResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchLeaveResponse*)[[[TXPBFetchLeaveResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchLeaveResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchLeaveResponse*)[[[TXPBFetchLeaveResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchLeaveResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchLeaveResponse*)[[[TXPBFetchLeaveResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchLeaveResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchLeaveResponse*)[[[TXPBFetchLeaveResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchLeaveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchLeaveResponse*)[[[TXPBFetchLeaveResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchLeaveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchLeaveResponse*)[[[TXPBFetchLeaveResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchLeaveResponseBuilder*) builder {
  return [[TXPBFetchLeaveResponseBuilder alloc] init];
}
+ (TXPBFetchLeaveResponseBuilder*) builderWithPrototype:(TXPBFetchLeaveResponse*) prototype {
  return [[TXPBFetchLeaveResponse builder] mergeFrom:prototype];
}
- (TXPBFetchLeaveResponseBuilder*) builder {
  return [TXPBFetchLeaveResponse builder];
}
- (TXPBFetchLeaveResponseBuilder*) toBuilder {
  return [TXPBFetchLeaveResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.leavesArray enumerateObjectsUsingBlock:^(TXPBLeave *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"leaves"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBLeave* element in self.leavesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"leaves"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchLeaveResponse class]]) {
    return NO;
  }
  TXPBFetchLeaveResponse *otherMessage = other;
  return
      [self.leavesArray isEqualToArray:otherMessage.leavesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.leavesArray enumerateObjectsUsingBlock:^(TXPBLeave *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchLeaveResponseBuilder()
@property (strong) TXPBFetchLeaveResponse* resultFetchLeaveResponse;
@end

@implementation TXPBFetchLeaveResponseBuilder
@synthesize resultFetchLeaveResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchLeaveResponse = [[TXPBFetchLeaveResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchLeaveResponse;
}
- (TXPBFetchLeaveResponseBuilder*) clear {
  self.resultFetchLeaveResponse = [[TXPBFetchLeaveResponse alloc] init];
  return self;
}
- (TXPBFetchLeaveResponseBuilder*) clone {
  return [TXPBFetchLeaveResponse builderWithPrototype:resultFetchLeaveResponse];
}
- (TXPBFetchLeaveResponse*) defaultInstance {
  return [TXPBFetchLeaveResponse defaultInstance];
}
- (TXPBFetchLeaveResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchLeaveResponse*) buildPartial {
  TXPBFetchLeaveResponse* returnMe = resultFetchLeaveResponse;
  self.resultFetchLeaveResponse = nil;
  return returnMe;
}
- (TXPBFetchLeaveResponseBuilder*) mergeFrom:(TXPBFetchLeaveResponse*) other {
  if (other == [TXPBFetchLeaveResponse defaultInstance]) {
    return self;
  }
  if (other.leavesArray.count > 0) {
    if (resultFetchLeaveResponse.leavesArray == nil) {
      resultFetchLeaveResponse.leavesArray = [[NSMutableArray alloc] initWithArray:other.leavesArray];
    } else {
      [resultFetchLeaveResponse.leavesArray addObjectsFromArray:other.leavesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchLeaveResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchLeaveResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBLeaveBuilder* subBuilder = [TXPBLeave builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLeaves:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)leaves {
  return resultFetchLeaveResponse.leavesArray;
}
- (TXPBLeave*)leavesAtIndex:(NSUInteger)index {
  return [resultFetchLeaveResponse leavesAtIndex:index];
}
- (TXPBFetchLeaveResponseBuilder *)addLeaves:(TXPBLeave*)value {
  if (resultFetchLeaveResponse.leavesArray == nil) {
    resultFetchLeaveResponse.leavesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchLeaveResponse.leavesArray addObject:value];
  return self;
}
- (TXPBFetchLeaveResponseBuilder *)setLeavesArray:(NSArray *)array {
  resultFetchLeaveResponse.leavesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchLeaveResponseBuilder *)clearLeaves {
  resultFetchLeaveResponse.leavesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchLeaveResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchLeaveResponse.hasMore;
}
- (TXPBFetchLeaveResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchLeaveResponse.hasHasMore = YES;
  resultFetchLeaveResponse.hasMore = value;
  return self;
}
- (TXPBFetchLeaveResponseBuilder*) clearHasMore {
  resultFetchLeaveResponse.hasHasMore = NO;
  resultFetchLeaveResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBApplyLeaveRequest ()
@property (strong) NSString* reason;
@property SInt64 beginDate;
@property SInt64 endDate;
@property TXPBLeaveType leaveType;
@property SInt64 userId;
@end

@implementation TXPBApplyLeaveRequest

- (BOOL) hasReason {
  return !!hasReason_;
}
- (void) setHasReason:(BOOL) _value_ {
  hasReason_ = !!_value_;
}
@synthesize reason;
- (BOOL) hasBeginDate {
  return !!hasBeginDate_;
}
- (void) setHasBeginDate:(BOOL) _value_ {
  hasBeginDate_ = !!_value_;
}
@synthesize beginDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) _value_ {
  hasEndDate_ = !!_value_;
}
@synthesize endDate;
- (BOOL) hasLeaveType {
  return !!hasLeaveType_;
}
- (void) setHasLeaveType:(BOOL) _value_ {
  hasLeaveType_ = !!_value_;
}
@synthesize leaveType;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (instancetype) init {
  if ((self = [super init])) {
    self.reason = @"";
    self.beginDate = 0L;
    self.endDate = 0L;
    self.leaveType = TXPBLeaveTypeSck;
    self.userId = 0L;
  }
  return self;
}
static TXPBApplyLeaveRequest* defaultTXPBApplyLeaveRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBApplyLeaveRequest class]) {
    defaultTXPBApplyLeaveRequestInstance = [[TXPBApplyLeaveRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBApplyLeaveRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBApplyLeaveRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasBeginDate) {
    return NO;
  }
  if (!self.hasEndDate) {
    return NO;
  }
  if (!self.hasLeaveType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReason) {
    [output writeString:1 value:self.reason];
  }
  if (self.hasBeginDate) {
    [output writeInt64:2 value:self.beginDate];
  }
  if (self.hasEndDate) {
    [output writeInt64:3 value:self.endDate];
  }
  if (self.hasLeaveType) {
    [output writeEnum:4 value:self.leaveType];
  }
  if (self.hasUserId) {
    [output writeInt64:5 value:self.userId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasReason) {
    size_ += computeStringSize(1, self.reason);
  }
  if (self.hasBeginDate) {
    size_ += computeInt64Size(2, self.beginDate);
  }
  if (self.hasEndDate) {
    size_ += computeInt64Size(3, self.endDate);
  }
  if (self.hasLeaveType) {
    size_ += computeEnumSize(4, self.leaveType);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(5, self.userId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBApplyLeaveRequest*) parseFromData:(NSData*) data {
  return (TXPBApplyLeaveRequest*)[[[TXPBApplyLeaveRequest builder] mergeFromData:data] build];
}
+ (TXPBApplyLeaveRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApplyLeaveRequest*)[[[TXPBApplyLeaveRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBApplyLeaveRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBApplyLeaveRequest*)[[[TXPBApplyLeaveRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBApplyLeaveRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApplyLeaveRequest*)[[[TXPBApplyLeaveRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApplyLeaveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBApplyLeaveRequest*)[[[TXPBApplyLeaveRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBApplyLeaveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApplyLeaveRequest*)[[[TXPBApplyLeaveRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApplyLeaveRequestBuilder*) builder {
  return [[TXPBApplyLeaveRequestBuilder alloc] init];
}
+ (TXPBApplyLeaveRequestBuilder*) builderWithPrototype:(TXPBApplyLeaveRequest*) prototype {
  return [[TXPBApplyLeaveRequest builder] mergeFrom:prototype];
}
- (TXPBApplyLeaveRequestBuilder*) builder {
  return [TXPBApplyLeaveRequest builder];
}
- (TXPBApplyLeaveRequestBuilder*) toBuilder {
  return [TXPBApplyLeaveRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasReason) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reason", self.reason];
  }
  if (self.hasBeginDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"beginDate", [NSNumber numberWithLongLong:self.beginDate]];
  }
  if (self.hasEndDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"endDate", [NSNumber numberWithLongLong:self.endDate]];
  }
  if (self.hasLeaveType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leaveType", NSStringFromTXPBLeaveType(self.leaveType)];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasReason) {
    [dictionary setObject: self.reason forKey: @"reason"];
  }
  if (self.hasBeginDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.beginDate] forKey: @"beginDate"];
  }
  if (self.hasEndDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.endDate] forKey: @"endDate"];
  }
  if (self.hasLeaveType) {
    [dictionary setObject: @(self.leaveType) forKey: @"leaveType"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBApplyLeaveRequest class]]) {
    return NO;
  }
  TXPBApplyLeaveRequest *otherMessage = other;
  return
      self.hasReason == otherMessage.hasReason &&
      (!self.hasReason || [self.reason isEqual:otherMessage.reason]) &&
      self.hasBeginDate == otherMessage.hasBeginDate &&
      (!self.hasBeginDate || self.beginDate == otherMessage.beginDate) &&
      self.hasEndDate == otherMessage.hasEndDate &&
      (!self.hasEndDate || self.endDate == otherMessage.endDate) &&
      self.hasLeaveType == otherMessage.hasLeaveType &&
      (!self.hasLeaveType || self.leaveType == otherMessage.leaveType) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasReason) {
    hashCode = hashCode * 31 + [self.reason hash];
  }
  if (self.hasBeginDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.beginDate] hash];
  }
  if (self.hasEndDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.endDate] hash];
  }
  if (self.hasLeaveType) {
    hashCode = hashCode * 31 + self.leaveType;
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBApplyLeaveRequestBuilder()
@property (strong) TXPBApplyLeaveRequest* resultApplyLeaveRequest;
@end

@implementation TXPBApplyLeaveRequestBuilder
@synthesize resultApplyLeaveRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultApplyLeaveRequest = [[TXPBApplyLeaveRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultApplyLeaveRequest;
}
- (TXPBApplyLeaveRequestBuilder*) clear {
  self.resultApplyLeaveRequest = [[TXPBApplyLeaveRequest alloc] init];
  return self;
}
- (TXPBApplyLeaveRequestBuilder*) clone {
  return [TXPBApplyLeaveRequest builderWithPrototype:resultApplyLeaveRequest];
}
- (TXPBApplyLeaveRequest*) defaultInstance {
  return [TXPBApplyLeaveRequest defaultInstance];
}
- (TXPBApplyLeaveRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBApplyLeaveRequest*) buildPartial {
  TXPBApplyLeaveRequest* returnMe = resultApplyLeaveRequest;
  self.resultApplyLeaveRequest = nil;
  return returnMe;
}
- (TXPBApplyLeaveRequestBuilder*) mergeFrom:(TXPBApplyLeaveRequest*) other {
  if (other == [TXPBApplyLeaveRequest defaultInstance]) {
    return self;
  }
  if (other.hasReason) {
    [self setReason:other.reason];
  }
  if (other.hasBeginDate) {
    [self setBeginDate:other.beginDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasLeaveType) {
    [self setLeaveType:other.leaveType];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBApplyLeaveRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBApplyLeaveRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setReason:[input readString]];
        break;
      }
      case 16: {
        [self setBeginDate:[input readInt64]];
        break;
      }
      case 24: {
        [self setEndDate:[input readInt64]];
        break;
      }
      case 32: {
        TXPBLeaveType value = (TXPBLeaveType)[input readEnum];
        if (TXPBLeaveTypeIsValidValue(value)) {
          [self setLeaveType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setUserId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasReason {
  return resultApplyLeaveRequest.hasReason;
}
- (NSString*) reason {
  return resultApplyLeaveRequest.reason;
}
- (TXPBApplyLeaveRequestBuilder*) setReason:(NSString*) value {
  resultApplyLeaveRequest.hasReason = YES;
  resultApplyLeaveRequest.reason = value;
  return self;
}
- (TXPBApplyLeaveRequestBuilder*) clearReason {
  resultApplyLeaveRequest.hasReason = NO;
  resultApplyLeaveRequest.reason = @"";
  return self;
}
- (BOOL) hasBeginDate {
  return resultApplyLeaveRequest.hasBeginDate;
}
- (SInt64) beginDate {
  return resultApplyLeaveRequest.beginDate;
}
- (TXPBApplyLeaveRequestBuilder*) setBeginDate:(SInt64) value {
  resultApplyLeaveRequest.hasBeginDate = YES;
  resultApplyLeaveRequest.beginDate = value;
  return self;
}
- (TXPBApplyLeaveRequestBuilder*) clearBeginDate {
  resultApplyLeaveRequest.hasBeginDate = NO;
  resultApplyLeaveRequest.beginDate = 0L;
  return self;
}
- (BOOL) hasEndDate {
  return resultApplyLeaveRequest.hasEndDate;
}
- (SInt64) endDate {
  return resultApplyLeaveRequest.endDate;
}
- (TXPBApplyLeaveRequestBuilder*) setEndDate:(SInt64) value {
  resultApplyLeaveRequest.hasEndDate = YES;
  resultApplyLeaveRequest.endDate = value;
  return self;
}
- (TXPBApplyLeaveRequestBuilder*) clearEndDate {
  resultApplyLeaveRequest.hasEndDate = NO;
  resultApplyLeaveRequest.endDate = 0L;
  return self;
}
- (BOOL) hasLeaveType {
  return resultApplyLeaveRequest.hasLeaveType;
}
- (TXPBLeaveType) leaveType {
  return resultApplyLeaveRequest.leaveType;
}
- (TXPBApplyLeaveRequestBuilder*) setLeaveType:(TXPBLeaveType) value {
  resultApplyLeaveRequest.hasLeaveType = YES;
  resultApplyLeaveRequest.leaveType = value;
  return self;
}
- (TXPBApplyLeaveRequestBuilder*) clearLeaveType {
  resultApplyLeaveRequest.hasLeaveType = NO;
  resultApplyLeaveRequest.leaveType = TXPBLeaveTypeSck;
  return self;
}
- (BOOL) hasUserId {
  return resultApplyLeaveRequest.hasUserId;
}
- (SInt64) userId {
  return resultApplyLeaveRequest.userId;
}
- (TXPBApplyLeaveRequestBuilder*) setUserId:(SInt64) value {
  resultApplyLeaveRequest.hasUserId = YES;
  resultApplyLeaveRequest.userId = value;
  return self;
}
- (TXPBApplyLeaveRequestBuilder*) clearUserId {
  resultApplyLeaveRequest.hasUserId = NO;
  resultApplyLeaveRequest.userId = 0L;
  return self;
}
@end

@interface TXPBApplyLeaveResponse ()
@end

@implementation TXPBApplyLeaveResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBApplyLeaveResponse* defaultTXPBApplyLeaveResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBApplyLeaveResponse class]) {
    defaultTXPBApplyLeaveResponseInstance = [[TXPBApplyLeaveResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBApplyLeaveResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBApplyLeaveResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBApplyLeaveResponse*) parseFromData:(NSData*) data {
  return (TXPBApplyLeaveResponse*)[[[TXPBApplyLeaveResponse builder] mergeFromData:data] build];
}
+ (TXPBApplyLeaveResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApplyLeaveResponse*)[[[TXPBApplyLeaveResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBApplyLeaveResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBApplyLeaveResponse*)[[[TXPBApplyLeaveResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBApplyLeaveResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApplyLeaveResponse*)[[[TXPBApplyLeaveResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApplyLeaveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBApplyLeaveResponse*)[[[TXPBApplyLeaveResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBApplyLeaveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApplyLeaveResponse*)[[[TXPBApplyLeaveResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApplyLeaveResponseBuilder*) builder {
  return [[TXPBApplyLeaveResponseBuilder alloc] init];
}
+ (TXPBApplyLeaveResponseBuilder*) builderWithPrototype:(TXPBApplyLeaveResponse*) prototype {
  return [[TXPBApplyLeaveResponse builder] mergeFrom:prototype];
}
- (TXPBApplyLeaveResponseBuilder*) builder {
  return [TXPBApplyLeaveResponse builder];
}
- (TXPBApplyLeaveResponseBuilder*) toBuilder {
  return [TXPBApplyLeaveResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBApplyLeaveResponse class]]) {
    return NO;
  }
  TXPBApplyLeaveResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBApplyLeaveResponseBuilder()
@property (strong) TXPBApplyLeaveResponse* resultApplyLeaveResponse;
@end

@implementation TXPBApplyLeaveResponseBuilder
@synthesize resultApplyLeaveResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultApplyLeaveResponse = [[TXPBApplyLeaveResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultApplyLeaveResponse;
}
- (TXPBApplyLeaveResponseBuilder*) clear {
  self.resultApplyLeaveResponse = [[TXPBApplyLeaveResponse alloc] init];
  return self;
}
- (TXPBApplyLeaveResponseBuilder*) clone {
  return [TXPBApplyLeaveResponse builderWithPrototype:resultApplyLeaveResponse];
}
- (TXPBApplyLeaveResponse*) defaultInstance {
  return [TXPBApplyLeaveResponse defaultInstance];
}
- (TXPBApplyLeaveResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBApplyLeaveResponse*) buildPartial {
  TXPBApplyLeaveResponse* returnMe = resultApplyLeaveResponse;
  self.resultApplyLeaveResponse = nil;
  return returnMe;
}
- (TXPBApplyLeaveResponseBuilder*) mergeFrom:(TXPBApplyLeaveResponse*) other {
  if (other == [TXPBApplyLeaveResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBApplyLeaveResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBApplyLeaveResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBApproveLeaveRequest ()
@property SInt64 leaveId;
@property (strong) NSString* reply;
@end

@implementation TXPBApproveLeaveRequest

- (BOOL) hasLeaveId {
  return !!hasLeaveId_;
}
- (void) setHasLeaveId:(BOOL) _value_ {
  hasLeaveId_ = !!_value_;
}
@synthesize leaveId;
- (BOOL) hasReply {
  return !!hasReply_;
}
- (void) setHasReply:(BOOL) _value_ {
  hasReply_ = !!_value_;
}
@synthesize reply;
- (instancetype) init {
  if ((self = [super init])) {
    self.leaveId = 0L;
    self.reply = @"";
  }
  return self;
}
static TXPBApproveLeaveRequest* defaultTXPBApproveLeaveRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBApproveLeaveRequest class]) {
    defaultTXPBApproveLeaveRequestInstance = [[TXPBApproveLeaveRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBApproveLeaveRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBApproveLeaveRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasLeaveId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasLeaveId) {
    [output writeInt64:1 value:self.leaveId];
  }
  if (self.hasReply) {
    [output writeString:2 value:self.reply];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasLeaveId) {
    size_ += computeInt64Size(1, self.leaveId);
  }
  if (self.hasReply) {
    size_ += computeStringSize(2, self.reply);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBApproveLeaveRequest*) parseFromData:(NSData*) data {
  return (TXPBApproveLeaveRequest*)[[[TXPBApproveLeaveRequest builder] mergeFromData:data] build];
}
+ (TXPBApproveLeaveRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApproveLeaveRequest*)[[[TXPBApproveLeaveRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBApproveLeaveRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBApproveLeaveRequest*)[[[TXPBApproveLeaveRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBApproveLeaveRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApproveLeaveRequest*)[[[TXPBApproveLeaveRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApproveLeaveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBApproveLeaveRequest*)[[[TXPBApproveLeaveRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBApproveLeaveRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApproveLeaveRequest*)[[[TXPBApproveLeaveRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApproveLeaveRequestBuilder*) builder {
  return [[TXPBApproveLeaveRequestBuilder alloc] init];
}
+ (TXPBApproveLeaveRequestBuilder*) builderWithPrototype:(TXPBApproveLeaveRequest*) prototype {
  return [[TXPBApproveLeaveRequest builder] mergeFrom:prototype];
}
- (TXPBApproveLeaveRequestBuilder*) builder {
  return [TXPBApproveLeaveRequest builder];
}
- (TXPBApproveLeaveRequestBuilder*) toBuilder {
  return [TXPBApproveLeaveRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasLeaveId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"leaveId", [NSNumber numberWithLongLong:self.leaveId]];
  }
  if (self.hasReply) {
    [output appendFormat:@"%@%@: %@\n", indent, @"reply", self.reply];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasLeaveId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.leaveId] forKey: @"leaveId"];
  }
  if (self.hasReply) {
    [dictionary setObject: self.reply forKey: @"reply"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBApproveLeaveRequest class]]) {
    return NO;
  }
  TXPBApproveLeaveRequest *otherMessage = other;
  return
      self.hasLeaveId == otherMessage.hasLeaveId &&
      (!self.hasLeaveId || self.leaveId == otherMessage.leaveId) &&
      self.hasReply == otherMessage.hasReply &&
      (!self.hasReply || [self.reply isEqual:otherMessage.reply]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasLeaveId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.leaveId] hash];
  }
  if (self.hasReply) {
    hashCode = hashCode * 31 + [self.reply hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBApproveLeaveRequestBuilder()
@property (strong) TXPBApproveLeaveRequest* resultApproveLeaveRequest;
@end

@implementation TXPBApproveLeaveRequestBuilder
@synthesize resultApproveLeaveRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultApproveLeaveRequest = [[TXPBApproveLeaveRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultApproveLeaveRequest;
}
- (TXPBApproveLeaveRequestBuilder*) clear {
  self.resultApproveLeaveRequest = [[TXPBApproveLeaveRequest alloc] init];
  return self;
}
- (TXPBApproveLeaveRequestBuilder*) clone {
  return [TXPBApproveLeaveRequest builderWithPrototype:resultApproveLeaveRequest];
}
- (TXPBApproveLeaveRequest*) defaultInstance {
  return [TXPBApproveLeaveRequest defaultInstance];
}
- (TXPBApproveLeaveRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBApproveLeaveRequest*) buildPartial {
  TXPBApproveLeaveRequest* returnMe = resultApproveLeaveRequest;
  self.resultApproveLeaveRequest = nil;
  return returnMe;
}
- (TXPBApproveLeaveRequestBuilder*) mergeFrom:(TXPBApproveLeaveRequest*) other {
  if (other == [TXPBApproveLeaveRequest defaultInstance]) {
    return self;
  }
  if (other.hasLeaveId) {
    [self setLeaveId:other.leaveId];
  }
  if (other.hasReply) {
    [self setReply:other.reply];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBApproveLeaveRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBApproveLeaveRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setLeaveId:[input readInt64]];
        break;
      }
      case 18: {
        [self setReply:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasLeaveId {
  return resultApproveLeaveRequest.hasLeaveId;
}
- (SInt64) leaveId {
  return resultApproveLeaveRequest.leaveId;
}
- (TXPBApproveLeaveRequestBuilder*) setLeaveId:(SInt64) value {
  resultApproveLeaveRequest.hasLeaveId = YES;
  resultApproveLeaveRequest.leaveId = value;
  return self;
}
- (TXPBApproveLeaveRequestBuilder*) clearLeaveId {
  resultApproveLeaveRequest.hasLeaveId = NO;
  resultApproveLeaveRequest.leaveId = 0L;
  return self;
}
- (BOOL) hasReply {
  return resultApproveLeaveRequest.hasReply;
}
- (NSString*) reply {
  return resultApproveLeaveRequest.reply;
}
- (TXPBApproveLeaveRequestBuilder*) setReply:(NSString*) value {
  resultApproveLeaveRequest.hasReply = YES;
  resultApproveLeaveRequest.reply = value;
  return self;
}
- (TXPBApproveLeaveRequestBuilder*) clearReply {
  resultApproveLeaveRequest.hasReply = NO;
  resultApproveLeaveRequest.reply = @"";
  return self;
}
@end

@interface TXPBApproveLeaveResponse ()
@end

@implementation TXPBApproveLeaveResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBApproveLeaveResponse* defaultTXPBApproveLeaveResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBApproveLeaveResponse class]) {
    defaultTXPBApproveLeaveResponseInstance = [[TXPBApproveLeaveResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBApproveLeaveResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBApproveLeaveResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBApproveLeaveResponse*) parseFromData:(NSData*) data {
  return (TXPBApproveLeaveResponse*)[[[TXPBApproveLeaveResponse builder] mergeFromData:data] build];
}
+ (TXPBApproveLeaveResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApproveLeaveResponse*)[[[TXPBApproveLeaveResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBApproveLeaveResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBApproveLeaveResponse*)[[[TXPBApproveLeaveResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBApproveLeaveResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApproveLeaveResponse*)[[[TXPBApproveLeaveResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApproveLeaveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBApproveLeaveResponse*)[[[TXPBApproveLeaveResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBApproveLeaveResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBApproveLeaveResponse*)[[[TXPBApproveLeaveResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBApproveLeaveResponseBuilder*) builder {
  return [[TXPBApproveLeaveResponseBuilder alloc] init];
}
+ (TXPBApproveLeaveResponseBuilder*) builderWithPrototype:(TXPBApproveLeaveResponse*) prototype {
  return [[TXPBApproveLeaveResponse builder] mergeFrom:prototype];
}
- (TXPBApproveLeaveResponseBuilder*) builder {
  return [TXPBApproveLeaveResponse builder];
}
- (TXPBApproveLeaveResponseBuilder*) toBuilder {
  return [TXPBApproveLeaveResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBApproveLeaveResponse class]]) {
    return NO;
  }
  TXPBApproveLeaveResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBApproveLeaveResponseBuilder()
@property (strong) TXPBApproveLeaveResponse* resultApproveLeaveResponse;
@end

@implementation TXPBApproveLeaveResponseBuilder
@synthesize resultApproveLeaveResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultApproveLeaveResponse = [[TXPBApproveLeaveResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultApproveLeaveResponse;
}
- (TXPBApproveLeaveResponseBuilder*) clear {
  self.resultApproveLeaveResponse = [[TXPBApproveLeaveResponse alloc] init];
  return self;
}
- (TXPBApproveLeaveResponseBuilder*) clone {
  return [TXPBApproveLeaveResponse builderWithPrototype:resultApproveLeaveResponse];
}
- (TXPBApproveLeaveResponse*) defaultInstance {
  return [TXPBApproveLeaveResponse defaultInstance];
}
- (TXPBApproveLeaveResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBApproveLeaveResponse*) buildPartial {
  TXPBApproveLeaveResponse* returnMe = resultApproveLeaveResponse;
  self.resultApproveLeaveResponse = nil;
  return returnMe;
}
- (TXPBApproveLeaveResponseBuilder*) mergeFrom:(TXPBApproveLeaveResponse*) other {
  if (other == [TXPBApproveLeaveResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBApproveLeaveResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBApproveLeaveResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBTeacherInvitationParentRequest ()
@property SInt64 parentId;
@end

@implementation TXPBTeacherInvitationParentRequest

- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) _value_ {
  hasParentId_ = !!_value_;
}
@synthesize parentId;
- (instancetype) init {
  if ((self = [super init])) {
    self.parentId = 0L;
  }
  return self;
}
static TXPBTeacherInvitationParentRequest* defaultTXPBTeacherInvitationParentRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBTeacherInvitationParentRequest class]) {
    defaultTXPBTeacherInvitationParentRequestInstance = [[TXPBTeacherInvitationParentRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBTeacherInvitationParentRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBTeacherInvitationParentRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasParentId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasParentId) {
    [output writeInt64:1 value:self.parentId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasParentId) {
    size_ += computeInt64Size(1, self.parentId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBTeacherInvitationParentRequest*) parseFromData:(NSData*) data {
  return (TXPBTeacherInvitationParentRequest*)[[[TXPBTeacherInvitationParentRequest builder] mergeFromData:data] build];
}
+ (TXPBTeacherInvitationParentRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTeacherInvitationParentRequest*)[[[TXPBTeacherInvitationParentRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBTeacherInvitationParentRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBTeacherInvitationParentRequest*)[[[TXPBTeacherInvitationParentRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBTeacherInvitationParentRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTeacherInvitationParentRequest*)[[[TXPBTeacherInvitationParentRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBTeacherInvitationParentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBTeacherInvitationParentRequest*)[[[TXPBTeacherInvitationParentRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBTeacherInvitationParentRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTeacherInvitationParentRequest*)[[[TXPBTeacherInvitationParentRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBTeacherInvitationParentRequestBuilder*) builder {
  return [[TXPBTeacherInvitationParentRequestBuilder alloc] init];
}
+ (TXPBTeacherInvitationParentRequestBuilder*) builderWithPrototype:(TXPBTeacherInvitationParentRequest*) prototype {
  return [[TXPBTeacherInvitationParentRequest builder] mergeFrom:prototype];
}
- (TXPBTeacherInvitationParentRequestBuilder*) builder {
  return [TXPBTeacherInvitationParentRequest builder];
}
- (TXPBTeacherInvitationParentRequestBuilder*) toBuilder {
  return [TXPBTeacherInvitationParentRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithLongLong:self.parentId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasParentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentId] forKey: @"parentId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBTeacherInvitationParentRequest class]]) {
    return NO;
  }
  TXPBTeacherInvitationParentRequest *otherMessage = other;
  return
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBTeacherInvitationParentRequestBuilder()
@property (strong) TXPBTeacherInvitationParentRequest* resultTeacherInvitationParentRequest;
@end

@implementation TXPBTeacherInvitationParentRequestBuilder
@synthesize resultTeacherInvitationParentRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTeacherInvitationParentRequest = [[TXPBTeacherInvitationParentRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTeacherInvitationParentRequest;
}
- (TXPBTeacherInvitationParentRequestBuilder*) clear {
  self.resultTeacherInvitationParentRequest = [[TXPBTeacherInvitationParentRequest alloc] init];
  return self;
}
- (TXPBTeacherInvitationParentRequestBuilder*) clone {
  return [TXPBTeacherInvitationParentRequest builderWithPrototype:resultTeacherInvitationParentRequest];
}
- (TXPBTeacherInvitationParentRequest*) defaultInstance {
  return [TXPBTeacherInvitationParentRequest defaultInstance];
}
- (TXPBTeacherInvitationParentRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBTeacherInvitationParentRequest*) buildPartial {
  TXPBTeacherInvitationParentRequest* returnMe = resultTeacherInvitationParentRequest;
  self.resultTeacherInvitationParentRequest = nil;
  return returnMe;
}
- (TXPBTeacherInvitationParentRequestBuilder*) mergeFrom:(TXPBTeacherInvitationParentRequest*) other {
  if (other == [TXPBTeacherInvitationParentRequest defaultInstance]) {
    return self;
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBTeacherInvitationParentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBTeacherInvitationParentRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setParentId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasParentId {
  return resultTeacherInvitationParentRequest.hasParentId;
}
- (SInt64) parentId {
  return resultTeacherInvitationParentRequest.parentId;
}
- (TXPBTeacherInvitationParentRequestBuilder*) setParentId:(SInt64) value {
  resultTeacherInvitationParentRequest.hasParentId = YES;
  resultTeacherInvitationParentRequest.parentId = value;
  return self;
}
- (TXPBTeacherInvitationParentRequestBuilder*) clearParentId {
  resultTeacherInvitationParentRequest.hasParentId = NO;
  resultTeacherInvitationParentRequest.parentId = 0L;
  return self;
}
@end

@interface TXPBTeacherInvitationParentResponse ()
@end

@implementation TXPBTeacherInvitationParentResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBTeacherInvitationParentResponse* defaultTXPBTeacherInvitationParentResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBTeacherInvitationParentResponse class]) {
    defaultTXPBTeacherInvitationParentResponseInstance = [[TXPBTeacherInvitationParentResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBTeacherInvitationParentResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBTeacherInvitationParentResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBTeacherInvitationParentResponse*) parseFromData:(NSData*) data {
  return (TXPBTeacherInvitationParentResponse*)[[[TXPBTeacherInvitationParentResponse builder] mergeFromData:data] build];
}
+ (TXPBTeacherInvitationParentResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTeacherInvitationParentResponse*)[[[TXPBTeacherInvitationParentResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBTeacherInvitationParentResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBTeacherInvitationParentResponse*)[[[TXPBTeacherInvitationParentResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBTeacherInvitationParentResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTeacherInvitationParentResponse*)[[[TXPBTeacherInvitationParentResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBTeacherInvitationParentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBTeacherInvitationParentResponse*)[[[TXPBTeacherInvitationParentResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBTeacherInvitationParentResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTeacherInvitationParentResponse*)[[[TXPBTeacherInvitationParentResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBTeacherInvitationParentResponseBuilder*) builder {
  return [[TXPBTeacherInvitationParentResponseBuilder alloc] init];
}
+ (TXPBTeacherInvitationParentResponseBuilder*) builderWithPrototype:(TXPBTeacherInvitationParentResponse*) prototype {
  return [[TXPBTeacherInvitationParentResponse builder] mergeFrom:prototype];
}
- (TXPBTeacherInvitationParentResponseBuilder*) builder {
  return [TXPBTeacherInvitationParentResponse builder];
}
- (TXPBTeacherInvitationParentResponseBuilder*) toBuilder {
  return [TXPBTeacherInvitationParentResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBTeacherInvitationParentResponse class]]) {
    return NO;
  }
  TXPBTeacherInvitationParentResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBTeacherInvitationParentResponseBuilder()
@property (strong) TXPBTeacherInvitationParentResponse* resultTeacherInvitationParentResponse;
@end

@implementation TXPBTeacherInvitationParentResponseBuilder
@synthesize resultTeacherInvitationParentResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTeacherInvitationParentResponse = [[TXPBTeacherInvitationParentResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTeacherInvitationParentResponse;
}
- (TXPBTeacherInvitationParentResponseBuilder*) clear {
  self.resultTeacherInvitationParentResponse = [[TXPBTeacherInvitationParentResponse alloc] init];
  return self;
}
- (TXPBTeacherInvitationParentResponseBuilder*) clone {
  return [TXPBTeacherInvitationParentResponse builderWithPrototype:resultTeacherInvitationParentResponse];
}
- (TXPBTeacherInvitationParentResponse*) defaultInstance {
  return [TXPBTeacherInvitationParentResponse defaultInstance];
}
- (TXPBTeacherInvitationParentResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBTeacherInvitationParentResponse*) buildPartial {
  TXPBTeacherInvitationParentResponse* returnMe = resultTeacherInvitationParentResponse;
  self.resultTeacherInvitationParentResponse = nil;
  return returnMe;
}
- (TXPBTeacherInvitationParentResponseBuilder*) mergeFrom:(TXPBTeacherInvitationParentResponse*) other {
  if (other == [TXPBTeacherInvitationParentResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBTeacherInvitationParentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBTeacherInvitationParentResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchRestDayRequest ()
@property SInt64 date;
@end

@implementation TXPBFetchRestDayRequest

- (BOOL) hasDate {
  return !!hasDate_;
}
- (void) setHasDate:(BOOL) _value_ {
  hasDate_ = !!_value_;
}
@synthesize date;
- (instancetype) init {
  if ((self = [super init])) {
    self.date = 0L;
  }
  return self;
}
static TXPBFetchRestDayRequest* defaultTXPBFetchRestDayRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchRestDayRequest class]) {
    defaultTXPBFetchRestDayRequestInstance = [[TXPBFetchRestDayRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchRestDayRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchRestDayRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasDate) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasDate) {
    [output writeInt64:1 value:self.date];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasDate) {
    size_ += computeInt64Size(1, self.date);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchRestDayRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchRestDayRequest*)[[[TXPBFetchRestDayRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchRestDayRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRestDayRequest*)[[[TXPBFetchRestDayRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRestDayRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchRestDayRequest*)[[[TXPBFetchRestDayRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchRestDayRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRestDayRequest*)[[[TXPBFetchRestDayRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRestDayRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchRestDayRequest*)[[[TXPBFetchRestDayRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchRestDayRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRestDayRequest*)[[[TXPBFetchRestDayRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRestDayRequestBuilder*) builder {
  return [[TXPBFetchRestDayRequestBuilder alloc] init];
}
+ (TXPBFetchRestDayRequestBuilder*) builderWithPrototype:(TXPBFetchRestDayRequest*) prototype {
  return [[TXPBFetchRestDayRequest builder] mergeFrom:prototype];
}
- (TXPBFetchRestDayRequestBuilder*) builder {
  return [TXPBFetchRestDayRequest builder];
}
- (TXPBFetchRestDayRequestBuilder*) toBuilder {
  return [TXPBFetchRestDayRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasDate) {
    [output appendFormat:@"%@%@: %@\n", indent, @"date", [NSNumber numberWithLongLong:self.date]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasDate) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.date] forKey: @"date"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchRestDayRequest class]]) {
    return NO;
  }
  TXPBFetchRestDayRequest *otherMessage = other;
  return
      self.hasDate == otherMessage.hasDate &&
      (!self.hasDate || self.date == otherMessage.date) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasDate) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.date] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchRestDayRequestBuilder()
@property (strong) TXPBFetchRestDayRequest* resultFetchRestDayRequest;
@end

@implementation TXPBFetchRestDayRequestBuilder
@synthesize resultFetchRestDayRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchRestDayRequest = [[TXPBFetchRestDayRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchRestDayRequest;
}
- (TXPBFetchRestDayRequestBuilder*) clear {
  self.resultFetchRestDayRequest = [[TXPBFetchRestDayRequest alloc] init];
  return self;
}
- (TXPBFetchRestDayRequestBuilder*) clone {
  return [TXPBFetchRestDayRequest builderWithPrototype:resultFetchRestDayRequest];
}
- (TXPBFetchRestDayRequest*) defaultInstance {
  return [TXPBFetchRestDayRequest defaultInstance];
}
- (TXPBFetchRestDayRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchRestDayRequest*) buildPartial {
  TXPBFetchRestDayRequest* returnMe = resultFetchRestDayRequest;
  self.resultFetchRestDayRequest = nil;
  return returnMe;
}
- (TXPBFetchRestDayRequestBuilder*) mergeFrom:(TXPBFetchRestDayRequest*) other {
  if (other == [TXPBFetchRestDayRequest defaultInstance]) {
    return self;
  }
  if (other.hasDate) {
    [self setDate:other.date];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchRestDayRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchRestDayRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setDate:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasDate {
  return resultFetchRestDayRequest.hasDate;
}
- (SInt64) date {
  return resultFetchRestDayRequest.date;
}
- (TXPBFetchRestDayRequestBuilder*) setDate:(SInt64) value {
  resultFetchRestDayRequest.hasDate = YES;
  resultFetchRestDayRequest.date = value;
  return self;
}
- (TXPBFetchRestDayRequestBuilder*) clearDate {
  resultFetchRestDayRequest.hasDate = NO;
  resultFetchRestDayRequest.date = 0L;
  return self;
}
@end

@interface TXPBFetchRestDayResponse ()
@property (strong) PBAppendableArray * restDayArray;
@end

@implementation TXPBFetchRestDayResponse

@synthesize restDayArray;
@dynamic restDay;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchRestDayResponse* defaultTXPBFetchRestDayResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchRestDayResponse class]) {
    defaultTXPBFetchRestDayResponseInstance = [[TXPBFetchRestDayResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchRestDayResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchRestDayResponseInstance;
}
- (PBArray *)restDay {
  return restDayArray;
}
- (SInt64)restDayAtIndex:(NSUInteger)index {
  return [restDayArray int64AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger restDayArrayCount = self.restDayArray.count;
  if (restDayArrayCount > 0) {
    const SInt64 *values = (const SInt64 *)self.restDayArray.data;
    for (NSUInteger i = 0; i < restDayArrayCount; ++i) {
      [output writeInt64:1 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.restDayArray.count;
    const SInt64 *values = (const SInt64 *)self.restDayArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt64SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchRestDayResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchRestDayResponse*)[[[TXPBFetchRestDayResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchRestDayResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRestDayResponse*)[[[TXPBFetchRestDayResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRestDayResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchRestDayResponse*)[[[TXPBFetchRestDayResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchRestDayResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRestDayResponse*)[[[TXPBFetchRestDayResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRestDayResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchRestDayResponse*)[[[TXPBFetchRestDayResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchRestDayResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRestDayResponse*)[[[TXPBFetchRestDayResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRestDayResponseBuilder*) builder {
  return [[TXPBFetchRestDayResponseBuilder alloc] init];
}
+ (TXPBFetchRestDayResponseBuilder*) builderWithPrototype:(TXPBFetchRestDayResponse*) prototype {
  return [[TXPBFetchRestDayResponse builder] mergeFrom:prototype];
}
- (TXPBFetchRestDayResponseBuilder*) builder {
  return [TXPBFetchRestDayResponse builder];
}
- (TXPBFetchRestDayResponseBuilder*) toBuilder {
  return [TXPBFetchRestDayResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.restDayArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"restDay", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * restDayArrayArray = [NSMutableArray new];
  NSUInteger restDayArrayCount=self.restDayArray.count;
  for(int i=0;i<restDayArrayCount;i++){
    [restDayArrayArray addObject: @([self.restDayArray int64AtIndex:i])];
  }
  [dictionary setObject: restDayArrayArray forKey: @"restDay"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchRestDayResponse class]]) {
    return NO;
  }
  TXPBFetchRestDayResponse *otherMessage = other;
  return
      [self.restDayArray isEqualToArray:otherMessage.restDayArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.restDayArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchRestDayResponseBuilder()
@property (strong) TXPBFetchRestDayResponse* resultFetchRestDayResponse;
@end

@implementation TXPBFetchRestDayResponseBuilder
@synthesize resultFetchRestDayResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchRestDayResponse = [[TXPBFetchRestDayResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchRestDayResponse;
}
- (TXPBFetchRestDayResponseBuilder*) clear {
  self.resultFetchRestDayResponse = [[TXPBFetchRestDayResponse alloc] init];
  return self;
}
- (TXPBFetchRestDayResponseBuilder*) clone {
  return [TXPBFetchRestDayResponse builderWithPrototype:resultFetchRestDayResponse];
}
- (TXPBFetchRestDayResponse*) defaultInstance {
  return [TXPBFetchRestDayResponse defaultInstance];
}
- (TXPBFetchRestDayResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchRestDayResponse*) buildPartial {
  TXPBFetchRestDayResponse* returnMe = resultFetchRestDayResponse;
  self.resultFetchRestDayResponse = nil;
  return returnMe;
}
- (TXPBFetchRestDayResponseBuilder*) mergeFrom:(TXPBFetchRestDayResponse*) other {
  if (other == [TXPBFetchRestDayResponse defaultInstance]) {
    return self;
  }
  if (other.restDayArray.count > 0) {
    if (resultFetchRestDayResponse.restDayArray == nil) {
      resultFetchRestDayResponse.restDayArray = [other.restDayArray copy];
    } else {
      [resultFetchRestDayResponse.restDayArray appendArray:other.restDayArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchRestDayResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchRestDayResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addRestDay:[input readInt64]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)restDay {
  return resultFetchRestDayResponse.restDayArray;
}
- (SInt64)restDayAtIndex:(NSUInteger)index {
  return [resultFetchRestDayResponse restDayAtIndex:index];
}
- (TXPBFetchRestDayResponseBuilder *)addRestDay:(SInt64)value {
  if (resultFetchRestDayResponse.restDayArray == nil) {
    resultFetchRestDayResponse.restDayArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt64];
  }
  [resultFetchRestDayResponse.restDayArray addInt64:value];
  return self;
}
- (TXPBFetchRestDayResponseBuilder *)setRestDayArray:(NSArray *)array {
  resultFetchRestDayResponse.restDayArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBFetchRestDayResponseBuilder *)setRestDayValues:(const SInt64 *)values count:(NSUInteger)count {
  resultFetchRestDayResponse.restDayArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt64];
  return self;
}
- (TXPBFetchRestDayResponseBuilder *)clearRestDay {
  resultFetchRestDayResponse.restDayArray = nil;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
