// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "XCSDHomework.pb.h"
// @@protoc_insertion_point(imports)

@implementation XCSDPBXcsdhomeworkRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [XCSDPBXcsdhomeworkRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ObjectivecDescriptorRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL XCSDPBHomeworkStatusIsValidValue(XCSDPBHomeworkStatus value) {
  switch (value) {
    case XCSDPBHomeworkStatusUnfinished:
    case XCSDPBHomeworkStatusFinished:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromXCSDPBHomeworkStatus(XCSDPBHomeworkStatus value) {
  switch (value) {
    case XCSDPBHomeworkStatusUnfinished:
      return @"XCSDPBHomeworkStatusUnfinished";
    case XCSDPBHomeworkStatusFinished:
      return @"XCSDPBHomeworkStatusFinished";
    default:
      return nil;
  }
}

BOOL XCSDPBHomeworkTypeIsValidValue(XCSDPBHomeworkType value) {
  switch (value) {
    case XCSDPBHomeworkTypeCustomized:
    case XCSDPBHomeworkTypeUnified:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromXCSDPBHomeworkType(XCSDPBHomeworkType value) {
  switch (value) {
    case XCSDPBHomeworkTypeCustomized:
      return @"XCSDPBHomeworkTypeCustomized";
    case XCSDPBHomeworkTypeUnified:
      return @"XCSDPBHomeworkTypeUnified";
    default:
      return nil;
  }
}

BOOL XCSDPBStudentScopeIsValidValue(XCSDPBStudentScope value) {
  switch (value) {
    case XCSDPBStudentScopeAll:
    case XCSDPBStudentScopeNormal:
    case XCSDPBStudentScopeSpecial:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromXCSDPBStudentScope(XCSDPBStudentScope value) {
  switch (value) {
    case XCSDPBStudentScopeAll:
      return @"XCSDPBStudentScopeAll";
    case XCSDPBStudentScopeNormal:
      return @"XCSDPBStudentScopeNormal";
    case XCSDPBStudentScopeSpecial:
      return @"XCSDPBStudentScopeSpecial";
    default:
      return nil;
  }
}

@interface XCSDPBHomework ()
@property SInt64 id;
@property SInt64 memberId;
@property (strong) NSString* title;
@property SInt64 sendUserId;
@property (strong) NSString* senderName;
@property (strong) NSString* senderAvatar;
@property (strong) NSString* targetName;
@property XCSDPBHomeworkStatus status;
@property BOOL hasRead;
@property SInt64 sendTime;
@end

@implementation XCSDPBHomework

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasMemberId {
  return !!hasMemberId_;
}
- (void) setHasMemberId:(BOOL) _value_ {
  hasMemberId_ = !!_value_;
}
@synthesize memberId;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasSendUserId {
  return !!hasSendUserId_;
}
- (void) setHasSendUserId:(BOOL) _value_ {
  hasSendUserId_ = !!_value_;
}
@synthesize sendUserId;
- (BOOL) hasSenderName {
  return !!hasSenderName_;
}
- (void) setHasSenderName:(BOOL) _value_ {
  hasSenderName_ = !!_value_;
}
@synthesize senderName;
- (BOOL) hasSenderAvatar {
  return !!hasSenderAvatar_;
}
- (void) setHasSenderAvatar:(BOOL) _value_ {
  hasSenderAvatar_ = !!_value_;
}
@synthesize senderAvatar;
- (BOOL) hasTargetName {
  return !!hasTargetName_;
}
- (void) setHasTargetName:(BOOL) _value_ {
  hasTargetName_ = !!_value_;
}
@synthesize targetName;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasHasRead {
  return !!hasHasRead_;
}
- (void) setHasHasRead:(BOOL) _value_ {
  hasHasRead_ = !!_value_;
}
- (BOOL) hasRead {
  return !!hasRead_;
}
- (void) setHasRead:(BOOL) _value_ {
  hasRead_ = !!_value_;
}
- (BOOL) hasSendTime {
  return !!hasSendTime_;
}
- (void) setHasSendTime:(BOOL) _value_ {
  hasSendTime_ = !!_value_;
}
@synthesize sendTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.memberId = 0L;
    self.title = @"";
    self.sendUserId = 0L;
    self.senderName = @"";
    self.senderAvatar = @"";
    self.targetName = @"";
    self.status = XCSDPBHomeworkStatusUnfinished;
    self.hasRead = NO;
    self.sendTime = 0L;
  }
  return self;
}
static XCSDPBHomework* defaultXCSDPBHomeworkInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomework class]) {
    defaultXCSDPBHomeworkInstance = [[XCSDPBHomework alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasMemberId) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasSendUserId) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  if (!self.hasSendTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasMemberId) {
    [output writeInt64:2 value:self.memberId];
  }
  if (self.hasTitle) {
    [output writeString:3 value:self.title];
  }
  if (self.hasSendUserId) {
    [output writeInt64:4 value:self.sendUserId];
  }
  if (self.hasSenderName) {
    [output writeString:5 value:self.senderName];
  }
  if (self.hasSenderAvatar) {
    [output writeString:6 value:self.senderAvatar];
  }
  if (self.hasTargetName) {
    [output writeString:7 value:self.targetName];
  }
  if (self.hasStatus) {
    [output writeEnum:8 value:self.status];
  }
  if (self.hasHasRead) {
    [output writeBool:9 value:self.hasRead];
  }
  if (self.hasSendTime) {
    [output writeInt64:10 value:self.sendTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasMemberId) {
    size_ += computeInt64Size(2, self.memberId);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(3, self.title);
  }
  if (self.hasSendUserId) {
    size_ += computeInt64Size(4, self.sendUserId);
  }
  if (self.hasSenderName) {
    size_ += computeStringSize(5, self.senderName);
  }
  if (self.hasSenderAvatar) {
    size_ += computeStringSize(6, self.senderAvatar);
  }
  if (self.hasTargetName) {
    size_ += computeStringSize(7, self.targetName);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(8, self.status);
  }
  if (self.hasHasRead) {
    size_ += computeBoolSize(9, self.hasRead);
  }
  if (self.hasSendTime) {
    size_ += computeInt64Size(10, self.sendTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomework*) parseFromData:(NSData*) data {
  return (XCSDPBHomework*)[[[XCSDPBHomework builder] mergeFromData:data] build];
}
+ (XCSDPBHomework*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomework*)[[[XCSDPBHomework builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomework*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomework*)[[[XCSDPBHomework builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomework*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomework*)[[[XCSDPBHomework builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomework*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomework*)[[[XCSDPBHomework builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomework*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomework*)[[[XCSDPBHomework builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkBuilder*) builder {
  return [[XCSDPBHomeworkBuilder alloc] init];
}
+ (XCSDPBHomeworkBuilder*) builderWithPrototype:(XCSDPBHomework*) prototype {
  return [[XCSDPBHomework builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkBuilder*) builder {
  return [XCSDPBHomework builder];
}
- (XCSDPBHomeworkBuilder*) toBuilder {
  return [XCSDPBHomework builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasMemberId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"memberId", [NSNumber numberWithLongLong:self.memberId]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasSendUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendUserId", [NSNumber numberWithLongLong:self.sendUserId]];
  }
  if (self.hasSenderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderName", self.senderName];
  }
  if (self.hasSenderAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"senderAvatar", self.senderAvatar];
  }
  if (self.hasTargetName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"targetName", self.targetName];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", NSStringFromXCSDPBHomeworkStatus(self.status)];
  }
  if (self.hasHasRead) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasRead", [NSNumber numberWithBool:self.hasRead]];
  }
  if (self.hasSendTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendTime", [NSNumber numberWithLongLong:self.sendTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasMemberId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.memberId] forKey: @"memberId"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasSendUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sendUserId] forKey: @"sendUserId"];
  }
  if (self.hasSenderName) {
    [dictionary setObject: self.senderName forKey: @"senderName"];
  }
  if (self.hasSenderAvatar) {
    [dictionary setObject: self.senderAvatar forKey: @"senderAvatar"];
  }
  if (self.hasTargetName) {
    [dictionary setObject: self.targetName forKey: @"targetName"];
  }
  if (self.hasStatus) {
    [dictionary setObject: @(self.status) forKey: @"status"];
  }
  if (self.hasHasRead) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasRead] forKey: @"hasRead"];
  }
  if (self.hasSendTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sendTime] forKey: @"sendTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomework class]]) {
    return NO;
  }
  XCSDPBHomework *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasMemberId == otherMessage.hasMemberId &&
      (!self.hasMemberId || self.memberId == otherMessage.memberId) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasSendUserId == otherMessage.hasSendUserId &&
      (!self.hasSendUserId || self.sendUserId == otherMessage.sendUserId) &&
      self.hasSenderName == otherMessage.hasSenderName &&
      (!self.hasSenderName || [self.senderName isEqual:otherMessage.senderName]) &&
      self.hasSenderAvatar == otherMessage.hasSenderAvatar &&
      (!self.hasSenderAvatar || [self.senderAvatar isEqual:otherMessage.senderAvatar]) &&
      self.hasTargetName == otherMessage.hasTargetName &&
      (!self.hasTargetName || [self.targetName isEqual:otherMessage.targetName]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasHasRead == otherMessage.hasHasRead &&
      (!self.hasHasRead || self.hasRead == otherMessage.hasRead) &&
      self.hasSendTime == otherMessage.hasSendTime &&
      (!self.hasSendTime || self.sendTime == otherMessage.sendTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasMemberId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.memberId] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasSendUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sendUserId] hash];
  }
  if (self.hasSenderName) {
    hashCode = hashCode * 31 + [self.senderName hash];
  }
  if (self.hasSenderAvatar) {
    hashCode = hashCode * 31 + [self.senderAvatar hash];
  }
  if (self.hasTargetName) {
    hashCode = hashCode * 31 + [self.targetName hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasHasRead) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasRead] hash];
  }
  if (self.hasSendTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sendTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkBuilder()
@property (strong) XCSDPBHomework* resultHomework;
@end

@implementation XCSDPBHomeworkBuilder
@synthesize resultHomework;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomework = [[XCSDPBHomework alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomework;
}
- (XCSDPBHomeworkBuilder*) clear {
  self.resultHomework = [[XCSDPBHomework alloc] init];
  return self;
}
- (XCSDPBHomeworkBuilder*) clone {
  return [XCSDPBHomework builderWithPrototype:resultHomework];
}
- (XCSDPBHomework*) defaultInstance {
  return [XCSDPBHomework defaultInstance];
}
- (XCSDPBHomework*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomework*) buildPartial {
  XCSDPBHomework* returnMe = resultHomework;
  self.resultHomework = nil;
  return returnMe;
}
- (XCSDPBHomeworkBuilder*) mergeFrom:(XCSDPBHomework*) other {
  if (other == [XCSDPBHomework defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasMemberId) {
    [self setMemberId:other.memberId];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasSendUserId) {
    [self setSendUserId:other.sendUserId];
  }
  if (other.hasSenderName) {
    [self setSenderName:other.senderName];
  }
  if (other.hasSenderAvatar) {
    [self setSenderAvatar:other.senderAvatar];
  }
  if (other.hasTargetName) {
    [self setTargetName:other.targetName];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasHasRead) {
    [self setHasRead:other.hasRead];
  }
  if (other.hasSendTime) {
    [self setSendTime:other.sendTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setMemberId:[input readInt64]];
        break;
      }
      case 26: {
        [self setTitle:[input readString]];
        break;
      }
      case 32: {
        [self setSendUserId:[input readInt64]];
        break;
      }
      case 42: {
        [self setSenderName:[input readString]];
        break;
      }
      case 50: {
        [self setSenderAvatar:[input readString]];
        break;
      }
      case 58: {
        [self setTargetName:[input readString]];
        break;
      }
      case 64: {
        XCSDPBHomeworkStatus value = (XCSDPBHomeworkStatus)[input readEnum];
        if (XCSDPBHomeworkStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:8 value:value];
        }
        break;
      }
      case 72: {
        [self setHasRead:[input readBool]];
        break;
      }
      case 80: {
        [self setSendTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultHomework.hasId;
}
- (SInt64) id {
  return resultHomework.id;
}
- (XCSDPBHomeworkBuilder*) setId:(SInt64) value {
  resultHomework.hasId = YES;
  resultHomework.id = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearId {
  resultHomework.hasId = NO;
  resultHomework.id = 0L;
  return self;
}
- (BOOL) hasMemberId {
  return resultHomework.hasMemberId;
}
- (SInt64) memberId {
  return resultHomework.memberId;
}
- (XCSDPBHomeworkBuilder*) setMemberId:(SInt64) value {
  resultHomework.hasMemberId = YES;
  resultHomework.memberId = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearMemberId {
  resultHomework.hasMemberId = NO;
  resultHomework.memberId = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultHomework.hasTitle;
}
- (NSString*) title {
  return resultHomework.title;
}
- (XCSDPBHomeworkBuilder*) setTitle:(NSString*) value {
  resultHomework.hasTitle = YES;
  resultHomework.title = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearTitle {
  resultHomework.hasTitle = NO;
  resultHomework.title = @"";
  return self;
}
- (BOOL) hasSendUserId {
  return resultHomework.hasSendUserId;
}
- (SInt64) sendUserId {
  return resultHomework.sendUserId;
}
- (XCSDPBHomeworkBuilder*) setSendUserId:(SInt64) value {
  resultHomework.hasSendUserId = YES;
  resultHomework.sendUserId = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearSendUserId {
  resultHomework.hasSendUserId = NO;
  resultHomework.sendUserId = 0L;
  return self;
}
- (BOOL) hasSenderName {
  return resultHomework.hasSenderName;
}
- (NSString*) senderName {
  return resultHomework.senderName;
}
- (XCSDPBHomeworkBuilder*) setSenderName:(NSString*) value {
  resultHomework.hasSenderName = YES;
  resultHomework.senderName = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearSenderName {
  resultHomework.hasSenderName = NO;
  resultHomework.senderName = @"";
  return self;
}
- (BOOL) hasSenderAvatar {
  return resultHomework.hasSenderAvatar;
}
- (NSString*) senderAvatar {
  return resultHomework.senderAvatar;
}
- (XCSDPBHomeworkBuilder*) setSenderAvatar:(NSString*) value {
  resultHomework.hasSenderAvatar = YES;
  resultHomework.senderAvatar = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearSenderAvatar {
  resultHomework.hasSenderAvatar = NO;
  resultHomework.senderAvatar = @"";
  return self;
}
- (BOOL) hasTargetName {
  return resultHomework.hasTargetName;
}
- (NSString*) targetName {
  return resultHomework.targetName;
}
- (XCSDPBHomeworkBuilder*) setTargetName:(NSString*) value {
  resultHomework.hasTargetName = YES;
  resultHomework.targetName = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearTargetName {
  resultHomework.hasTargetName = NO;
  resultHomework.targetName = @"";
  return self;
}
- (BOOL) hasStatus {
  return resultHomework.hasStatus;
}
- (XCSDPBHomeworkStatus) status {
  return resultHomework.status;
}
- (XCSDPBHomeworkBuilder*) setStatus:(XCSDPBHomeworkStatus) value {
  resultHomework.hasStatus = YES;
  resultHomework.status = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearStatus {
  resultHomework.hasStatus = NO;
  resultHomework.status = XCSDPBHomeworkStatusUnfinished;
  return self;
}
- (BOOL) hasHasRead {
  return resultHomework.hasHasRead;
}
- (BOOL) hasRead {
  return resultHomework.hasRead;
}
- (XCSDPBHomeworkBuilder*) setHasRead:(BOOL) value {
  resultHomework.hasHasRead = YES;
  resultHomework.hasRead = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearHasRead {
  resultHomework.hasHasRead = NO;
  resultHomework.hasRead = NO;
  return self;
}
- (BOOL) hasSendTime {
  return resultHomework.hasSendTime;
}
- (SInt64) sendTime {
  return resultHomework.sendTime;
}
- (XCSDPBHomeworkBuilder*) setSendTime:(SInt64) value {
  resultHomework.hasSendTime = YES;
  resultHomework.sendTime = value;
  return self;
}
- (XCSDPBHomeworkBuilder*) clearSendTime {
  resultHomework.hasSendTime = NO;
  resultHomework.sendTime = 0L;
  return self;
}
@end

@interface XCSDPBHomeworkListRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation XCSDPBHomeworkListRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static XCSDPBHomeworkListRequest* defaultXCSDPBHomeworkListRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkListRequest class]) {
    defaultXCSDPBHomeworkListRequestInstance = [[XCSDPBHomeworkListRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkListRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkListRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkListRequest*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkListRequest*)[[[XCSDPBHomeworkListRequest builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkListRequest*)[[[XCSDPBHomeworkListRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkListRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkListRequest*)[[[XCSDPBHomeworkListRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkListRequest*)[[[XCSDPBHomeworkListRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkListRequest*)[[[XCSDPBHomeworkListRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkListRequest*)[[[XCSDPBHomeworkListRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkListRequestBuilder*) builder {
  return [[XCSDPBHomeworkListRequestBuilder alloc] init];
}
+ (XCSDPBHomeworkListRequestBuilder*) builderWithPrototype:(XCSDPBHomeworkListRequest*) prototype {
  return [[XCSDPBHomeworkListRequest builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkListRequestBuilder*) builder {
  return [XCSDPBHomeworkListRequest builder];
}
- (XCSDPBHomeworkListRequestBuilder*) toBuilder {
  return [XCSDPBHomeworkListRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkListRequest class]]) {
    return NO;
  }
  XCSDPBHomeworkListRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkListRequestBuilder()
@property (strong) XCSDPBHomeworkListRequest* resultHomeworkListRequest;
@end

@implementation XCSDPBHomeworkListRequestBuilder
@synthesize resultHomeworkListRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkListRequest = [[XCSDPBHomeworkListRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkListRequest;
}
- (XCSDPBHomeworkListRequestBuilder*) clear {
  self.resultHomeworkListRequest = [[XCSDPBHomeworkListRequest alloc] init];
  return self;
}
- (XCSDPBHomeworkListRequestBuilder*) clone {
  return [XCSDPBHomeworkListRequest builderWithPrototype:resultHomeworkListRequest];
}
- (XCSDPBHomeworkListRequest*) defaultInstance {
  return [XCSDPBHomeworkListRequest defaultInstance];
}
- (XCSDPBHomeworkListRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkListRequest*) buildPartial {
  XCSDPBHomeworkListRequest* returnMe = resultHomeworkListRequest;
  self.resultHomeworkListRequest = nil;
  return returnMe;
}
- (XCSDPBHomeworkListRequestBuilder*) mergeFrom:(XCSDPBHomeworkListRequest*) other {
  if (other == [XCSDPBHomeworkListRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultHomeworkListRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultHomeworkListRequest.maxId;
}
- (XCSDPBHomeworkListRequestBuilder*) setMaxId:(SInt64) value {
  resultHomeworkListRequest.hasMaxId = YES;
  resultHomeworkListRequest.maxId = value;
  return self;
}
- (XCSDPBHomeworkListRequestBuilder*) clearMaxId {
  resultHomeworkListRequest.hasMaxId = NO;
  resultHomeworkListRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultHomeworkListRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultHomeworkListRequest.sinceId;
}
- (XCSDPBHomeworkListRequestBuilder*) setSinceId:(SInt64) value {
  resultHomeworkListRequest.hasSinceId = YES;
  resultHomeworkListRequest.sinceId = value;
  return self;
}
- (XCSDPBHomeworkListRequestBuilder*) clearSinceId {
  resultHomeworkListRequest.hasSinceId = NO;
  resultHomeworkListRequest.sinceId = 0L;
  return self;
}
@end

@interface XCSDPBHomeworkListResponse ()
@property (strong) NSMutableArray * homeworksArray;
@property BOOL hasMore;
@end

@implementation XCSDPBHomeworkListResponse

@synthesize homeworksArray;
@dynamic homeworks;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static XCSDPBHomeworkListResponse* defaultXCSDPBHomeworkListResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkListResponse class]) {
    defaultXCSDPBHomeworkListResponseInstance = [[XCSDPBHomeworkListResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkListResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkListResponseInstance;
}
- (NSArray *)homeworks {
  return homeworksArray;
}
- (XCSDPBHomework*)homeworksAtIndex:(NSUInteger)index {
  return [homeworksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInithomeworks = YES;
   [self.homeworks enumerateObjectsUsingBlock:^(XCSDPBHomework *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInithomeworks = NO;
      *stop = YES;
    }
  }];
  if (!isInithomeworks) return isInithomeworks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBHomework *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBHomework *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkListResponse*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkListResponse*)[[[XCSDPBHomeworkListResponse builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkListResponse*)[[[XCSDPBHomeworkListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkListResponse*)[[[XCSDPBHomeworkListResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkListResponse*)[[[XCSDPBHomeworkListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkListResponse*)[[[XCSDPBHomeworkListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkListResponse*)[[[XCSDPBHomeworkListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkListResponseBuilder*) builder {
  return [[XCSDPBHomeworkListResponseBuilder alloc] init];
}
+ (XCSDPBHomeworkListResponseBuilder*) builderWithPrototype:(XCSDPBHomeworkListResponse*) prototype {
  return [[XCSDPBHomeworkListResponse builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkListResponseBuilder*) builder {
  return [XCSDPBHomeworkListResponse builder];
}
- (XCSDPBHomeworkListResponseBuilder*) toBuilder {
  return [XCSDPBHomeworkListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBHomework *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"homeworks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (XCSDPBHomework* element in self.homeworksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"homeworks"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkListResponse class]]) {
    return NO;
  }
  XCSDPBHomeworkListResponse *otherMessage = other;
  return
      [self.homeworksArray isEqualToArray:otherMessage.homeworksArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBHomework *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkListResponseBuilder()
@property (strong) XCSDPBHomeworkListResponse* resultHomeworkListResponse;
@end

@implementation XCSDPBHomeworkListResponseBuilder
@synthesize resultHomeworkListResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkListResponse = [[XCSDPBHomeworkListResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkListResponse;
}
- (XCSDPBHomeworkListResponseBuilder*) clear {
  self.resultHomeworkListResponse = [[XCSDPBHomeworkListResponse alloc] init];
  return self;
}
- (XCSDPBHomeworkListResponseBuilder*) clone {
  return [XCSDPBHomeworkListResponse builderWithPrototype:resultHomeworkListResponse];
}
- (XCSDPBHomeworkListResponse*) defaultInstance {
  return [XCSDPBHomeworkListResponse defaultInstance];
}
- (XCSDPBHomeworkListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkListResponse*) buildPartial {
  XCSDPBHomeworkListResponse* returnMe = resultHomeworkListResponse;
  self.resultHomeworkListResponse = nil;
  return returnMe;
}
- (XCSDPBHomeworkListResponseBuilder*) mergeFrom:(XCSDPBHomeworkListResponse*) other {
  if (other == [XCSDPBHomeworkListResponse defaultInstance]) {
    return self;
  }
  if (other.homeworksArray.count > 0) {
    if (resultHomeworkListResponse.homeworksArray == nil) {
      resultHomeworkListResponse.homeworksArray = [[NSMutableArray alloc] initWithArray:other.homeworksArray];
    } else {
      [resultHomeworkListResponse.homeworksArray addObjectsFromArray:other.homeworksArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        XCSDPBHomeworkBuilder* subBuilder = [XCSDPBHomework builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addHomeworks:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)homeworks {
  return resultHomeworkListResponse.homeworksArray;
}
- (XCSDPBHomework*)homeworksAtIndex:(NSUInteger)index {
  return [resultHomeworkListResponse homeworksAtIndex:index];
}
- (XCSDPBHomeworkListResponseBuilder *)addHomeworks:(XCSDPBHomework*)value {
  if (resultHomeworkListResponse.homeworksArray == nil) {
    resultHomeworkListResponse.homeworksArray = [[NSMutableArray alloc]init];
  }
  [resultHomeworkListResponse.homeworksArray addObject:value];
  return self;
}
- (XCSDPBHomeworkListResponseBuilder *)setHomeworksArray:(NSArray *)array {
  resultHomeworkListResponse.homeworksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (XCSDPBHomeworkListResponseBuilder *)clearHomeworks {
  resultHomeworkListResponse.homeworksArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultHomeworkListResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultHomeworkListResponse.hasMore;
}
- (XCSDPBHomeworkListResponseBuilder*) setHasMore:(BOOL) value {
  resultHomeworkListResponse.hasHasMore = YES;
  resultHomeworkListResponse.hasMore = value;
  return self;
}
- (XCSDPBHomeworkListResponseBuilder*) clearHasMore {
  resultHomeworkListResponse.hasHasMore = NO;
  resultHomeworkListResponse.hasMore = NO;
  return self;
}
@end

@interface XCSDPBReadHomeworkNoticeRequest ()
@property SInt64 homeworkNoticeId;
@end

@implementation XCSDPBReadHomeworkNoticeRequest

- (BOOL) hasHomeworkNoticeId {
  return !!hasHomeworkNoticeId_;
}
- (void) setHasHomeworkNoticeId:(BOOL) _value_ {
  hasHomeworkNoticeId_ = !!_value_;
}
@synthesize homeworkNoticeId;
- (instancetype) init {
  if ((self = [super init])) {
    self.homeworkNoticeId = 0L;
  }
  return self;
}
static XCSDPBReadHomeworkNoticeRequest* defaultXCSDPBReadHomeworkNoticeRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBReadHomeworkNoticeRequest class]) {
    defaultXCSDPBReadHomeworkNoticeRequestInstance = [[XCSDPBReadHomeworkNoticeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBReadHomeworkNoticeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBReadHomeworkNoticeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasHomeworkNoticeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHomeworkNoticeId) {
    [output writeInt64:1 value:self.homeworkNoticeId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHomeworkNoticeId) {
    size_ += computeInt64Size(1, self.homeworkNoticeId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBReadHomeworkNoticeRequest*) parseFromData:(NSData*) data {
  return (XCSDPBReadHomeworkNoticeRequest*)[[[XCSDPBReadHomeworkNoticeRequest builder] mergeFromData:data] build];
}
+ (XCSDPBReadHomeworkNoticeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBReadHomeworkNoticeRequest*)[[[XCSDPBReadHomeworkNoticeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBReadHomeworkNoticeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBReadHomeworkNoticeRequest*)[[[XCSDPBReadHomeworkNoticeRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBReadHomeworkNoticeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBReadHomeworkNoticeRequest*)[[[XCSDPBReadHomeworkNoticeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBReadHomeworkNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBReadHomeworkNoticeRequest*)[[[XCSDPBReadHomeworkNoticeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBReadHomeworkNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBReadHomeworkNoticeRequest*)[[[XCSDPBReadHomeworkNoticeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBReadHomeworkNoticeRequestBuilder*) builder {
  return [[XCSDPBReadHomeworkNoticeRequestBuilder alloc] init];
}
+ (XCSDPBReadHomeworkNoticeRequestBuilder*) builderWithPrototype:(XCSDPBReadHomeworkNoticeRequest*) prototype {
  return [[XCSDPBReadHomeworkNoticeRequest builder] mergeFrom:prototype];
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) builder {
  return [XCSDPBReadHomeworkNoticeRequest builder];
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) toBuilder {
  return [XCSDPBReadHomeworkNoticeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHomeworkNoticeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"homeworkNoticeId", [NSNumber numberWithLongLong:self.homeworkNoticeId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHomeworkNoticeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.homeworkNoticeId] forKey: @"homeworkNoticeId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBReadHomeworkNoticeRequest class]]) {
    return NO;
  }
  XCSDPBReadHomeworkNoticeRequest *otherMessage = other;
  return
      self.hasHomeworkNoticeId == otherMessage.hasHomeworkNoticeId &&
      (!self.hasHomeworkNoticeId || self.homeworkNoticeId == otherMessage.homeworkNoticeId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHomeworkNoticeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.homeworkNoticeId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBReadHomeworkNoticeRequestBuilder()
@property (strong) XCSDPBReadHomeworkNoticeRequest* resultReadHomeworkNoticeRequest;
@end

@implementation XCSDPBReadHomeworkNoticeRequestBuilder
@synthesize resultReadHomeworkNoticeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadHomeworkNoticeRequest = [[XCSDPBReadHomeworkNoticeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadHomeworkNoticeRequest;
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) clear {
  self.resultReadHomeworkNoticeRequest = [[XCSDPBReadHomeworkNoticeRequest alloc] init];
  return self;
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) clone {
  return [XCSDPBReadHomeworkNoticeRequest builderWithPrototype:resultReadHomeworkNoticeRequest];
}
- (XCSDPBReadHomeworkNoticeRequest*) defaultInstance {
  return [XCSDPBReadHomeworkNoticeRequest defaultInstance];
}
- (XCSDPBReadHomeworkNoticeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBReadHomeworkNoticeRequest*) buildPartial {
  XCSDPBReadHomeworkNoticeRequest* returnMe = resultReadHomeworkNoticeRequest;
  self.resultReadHomeworkNoticeRequest = nil;
  return returnMe;
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) mergeFrom:(XCSDPBReadHomeworkNoticeRequest*) other {
  if (other == [XCSDPBReadHomeworkNoticeRequest defaultInstance]) {
    return self;
  }
  if (other.hasHomeworkNoticeId) {
    [self setHomeworkNoticeId:other.homeworkNoticeId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setHomeworkNoticeId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasHomeworkNoticeId {
  return resultReadHomeworkNoticeRequest.hasHomeworkNoticeId;
}
- (SInt64) homeworkNoticeId {
  return resultReadHomeworkNoticeRequest.homeworkNoticeId;
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) setHomeworkNoticeId:(SInt64) value {
  resultReadHomeworkNoticeRequest.hasHomeworkNoticeId = YES;
  resultReadHomeworkNoticeRequest.homeworkNoticeId = value;
  return self;
}
- (XCSDPBReadHomeworkNoticeRequestBuilder*) clearHomeworkNoticeId {
  resultReadHomeworkNoticeRequest.hasHomeworkNoticeId = NO;
  resultReadHomeworkNoticeRequest.homeworkNoticeId = 0L;
  return self;
}
@end

@interface XCSDPBReadHomeworkNoticeResponse ()
@end

@implementation XCSDPBReadHomeworkNoticeResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static XCSDPBReadHomeworkNoticeResponse* defaultXCSDPBReadHomeworkNoticeResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBReadHomeworkNoticeResponse class]) {
    defaultXCSDPBReadHomeworkNoticeResponseInstance = [[XCSDPBReadHomeworkNoticeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBReadHomeworkNoticeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBReadHomeworkNoticeResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBReadHomeworkNoticeResponse*) parseFromData:(NSData*) data {
  return (XCSDPBReadHomeworkNoticeResponse*)[[[XCSDPBReadHomeworkNoticeResponse builder] mergeFromData:data] build];
}
+ (XCSDPBReadHomeworkNoticeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBReadHomeworkNoticeResponse*)[[[XCSDPBReadHomeworkNoticeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBReadHomeworkNoticeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBReadHomeworkNoticeResponse*)[[[XCSDPBReadHomeworkNoticeResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBReadHomeworkNoticeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBReadHomeworkNoticeResponse*)[[[XCSDPBReadHomeworkNoticeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBReadHomeworkNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBReadHomeworkNoticeResponse*)[[[XCSDPBReadHomeworkNoticeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBReadHomeworkNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBReadHomeworkNoticeResponse*)[[[XCSDPBReadHomeworkNoticeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBReadHomeworkNoticeResponseBuilder*) builder {
  return [[XCSDPBReadHomeworkNoticeResponseBuilder alloc] init];
}
+ (XCSDPBReadHomeworkNoticeResponseBuilder*) builderWithPrototype:(XCSDPBReadHomeworkNoticeResponse*) prototype {
  return [[XCSDPBReadHomeworkNoticeResponse builder] mergeFrom:prototype];
}
- (XCSDPBReadHomeworkNoticeResponseBuilder*) builder {
  return [XCSDPBReadHomeworkNoticeResponse builder];
}
- (XCSDPBReadHomeworkNoticeResponseBuilder*) toBuilder {
  return [XCSDPBReadHomeworkNoticeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBReadHomeworkNoticeResponse class]]) {
    return NO;
  }
  XCSDPBReadHomeworkNoticeResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBReadHomeworkNoticeResponseBuilder()
@property (strong) XCSDPBReadHomeworkNoticeResponse* resultReadHomeworkNoticeResponse;
@end

@implementation XCSDPBReadHomeworkNoticeResponseBuilder
@synthesize resultReadHomeworkNoticeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultReadHomeworkNoticeResponse = [[XCSDPBReadHomeworkNoticeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultReadHomeworkNoticeResponse;
}
- (XCSDPBReadHomeworkNoticeResponseBuilder*) clear {
  self.resultReadHomeworkNoticeResponse = [[XCSDPBReadHomeworkNoticeResponse alloc] init];
  return self;
}
- (XCSDPBReadHomeworkNoticeResponseBuilder*) clone {
  return [XCSDPBReadHomeworkNoticeResponse builderWithPrototype:resultReadHomeworkNoticeResponse];
}
- (XCSDPBReadHomeworkNoticeResponse*) defaultInstance {
  return [XCSDPBReadHomeworkNoticeResponse defaultInstance];
}
- (XCSDPBReadHomeworkNoticeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBReadHomeworkNoticeResponse*) buildPartial {
  XCSDPBReadHomeworkNoticeResponse* returnMe = resultReadHomeworkNoticeResponse;
  self.resultReadHomeworkNoticeResponse = nil;
  return returnMe;
}
- (XCSDPBReadHomeworkNoticeResponseBuilder*) mergeFrom:(XCSDPBReadHomeworkNoticeResponse*) other {
  if (other == [XCSDPBReadHomeworkNoticeResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBReadHomeworkNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBReadHomeworkNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface XCSDPBDeleteHomeworkNoticeRequest ()
@property SInt64 homeworkNoticeId;
@end

@implementation XCSDPBDeleteHomeworkNoticeRequest

- (BOOL) hasHomeworkNoticeId {
  return !!hasHomeworkNoticeId_;
}
- (void) setHasHomeworkNoticeId:(BOOL) _value_ {
  hasHomeworkNoticeId_ = !!_value_;
}
@synthesize homeworkNoticeId;
- (instancetype) init {
  if ((self = [super init])) {
    self.homeworkNoticeId = 0L;
  }
  return self;
}
static XCSDPBDeleteHomeworkNoticeRequest* defaultXCSDPBDeleteHomeworkNoticeRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBDeleteHomeworkNoticeRequest class]) {
    defaultXCSDPBDeleteHomeworkNoticeRequestInstance = [[XCSDPBDeleteHomeworkNoticeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBDeleteHomeworkNoticeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBDeleteHomeworkNoticeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasHomeworkNoticeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHomeworkNoticeId) {
    [output writeInt64:1 value:self.homeworkNoticeId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHomeworkNoticeId) {
    size_ += computeInt64Size(1, self.homeworkNoticeId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBDeleteHomeworkNoticeRequest*) parseFromData:(NSData*) data {
  return (XCSDPBDeleteHomeworkNoticeRequest*)[[[XCSDPBDeleteHomeworkNoticeRequest builder] mergeFromData:data] build];
}
+ (XCSDPBDeleteHomeworkNoticeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBDeleteHomeworkNoticeRequest*)[[[XCSDPBDeleteHomeworkNoticeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBDeleteHomeworkNoticeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBDeleteHomeworkNoticeRequest*)[[[XCSDPBDeleteHomeworkNoticeRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBDeleteHomeworkNoticeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBDeleteHomeworkNoticeRequest*)[[[XCSDPBDeleteHomeworkNoticeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBDeleteHomeworkNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBDeleteHomeworkNoticeRequest*)[[[XCSDPBDeleteHomeworkNoticeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBDeleteHomeworkNoticeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBDeleteHomeworkNoticeRequest*)[[[XCSDPBDeleteHomeworkNoticeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBDeleteHomeworkNoticeRequestBuilder*) builder {
  return [[XCSDPBDeleteHomeworkNoticeRequestBuilder alloc] init];
}
+ (XCSDPBDeleteHomeworkNoticeRequestBuilder*) builderWithPrototype:(XCSDPBDeleteHomeworkNoticeRequest*) prototype {
  return [[XCSDPBDeleteHomeworkNoticeRequest builder] mergeFrom:prototype];
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) builder {
  return [XCSDPBDeleteHomeworkNoticeRequest builder];
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) toBuilder {
  return [XCSDPBDeleteHomeworkNoticeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHomeworkNoticeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"homeworkNoticeId", [NSNumber numberWithLongLong:self.homeworkNoticeId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHomeworkNoticeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.homeworkNoticeId] forKey: @"homeworkNoticeId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBDeleteHomeworkNoticeRequest class]]) {
    return NO;
  }
  XCSDPBDeleteHomeworkNoticeRequest *otherMessage = other;
  return
      self.hasHomeworkNoticeId == otherMessage.hasHomeworkNoticeId &&
      (!self.hasHomeworkNoticeId || self.homeworkNoticeId == otherMessage.homeworkNoticeId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHomeworkNoticeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.homeworkNoticeId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBDeleteHomeworkNoticeRequestBuilder()
@property (strong) XCSDPBDeleteHomeworkNoticeRequest* resultDeleteHomeworkNoticeRequest;
@end

@implementation XCSDPBDeleteHomeworkNoticeRequestBuilder
@synthesize resultDeleteHomeworkNoticeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteHomeworkNoticeRequest = [[XCSDPBDeleteHomeworkNoticeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteHomeworkNoticeRequest;
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) clear {
  self.resultDeleteHomeworkNoticeRequest = [[XCSDPBDeleteHomeworkNoticeRequest alloc] init];
  return self;
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) clone {
  return [XCSDPBDeleteHomeworkNoticeRequest builderWithPrototype:resultDeleteHomeworkNoticeRequest];
}
- (XCSDPBDeleteHomeworkNoticeRequest*) defaultInstance {
  return [XCSDPBDeleteHomeworkNoticeRequest defaultInstance];
}
- (XCSDPBDeleteHomeworkNoticeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBDeleteHomeworkNoticeRequest*) buildPartial {
  XCSDPBDeleteHomeworkNoticeRequest* returnMe = resultDeleteHomeworkNoticeRequest;
  self.resultDeleteHomeworkNoticeRequest = nil;
  return returnMe;
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) mergeFrom:(XCSDPBDeleteHomeworkNoticeRequest*) other {
  if (other == [XCSDPBDeleteHomeworkNoticeRequest defaultInstance]) {
    return self;
  }
  if (other.hasHomeworkNoticeId) {
    [self setHomeworkNoticeId:other.homeworkNoticeId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setHomeworkNoticeId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasHomeworkNoticeId {
  return resultDeleteHomeworkNoticeRequest.hasHomeworkNoticeId;
}
- (SInt64) homeworkNoticeId {
  return resultDeleteHomeworkNoticeRequest.homeworkNoticeId;
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) setHomeworkNoticeId:(SInt64) value {
  resultDeleteHomeworkNoticeRequest.hasHomeworkNoticeId = YES;
  resultDeleteHomeworkNoticeRequest.homeworkNoticeId = value;
  return self;
}
- (XCSDPBDeleteHomeworkNoticeRequestBuilder*) clearHomeworkNoticeId {
  resultDeleteHomeworkNoticeRequest.hasHomeworkNoticeId = NO;
  resultDeleteHomeworkNoticeRequest.homeworkNoticeId = 0L;
  return self;
}
@end

@interface XCSDPBDeleteHomeworkNoticeResponse ()
@end

@implementation XCSDPBDeleteHomeworkNoticeResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static XCSDPBDeleteHomeworkNoticeResponse* defaultXCSDPBDeleteHomeworkNoticeResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBDeleteHomeworkNoticeResponse class]) {
    defaultXCSDPBDeleteHomeworkNoticeResponseInstance = [[XCSDPBDeleteHomeworkNoticeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBDeleteHomeworkNoticeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBDeleteHomeworkNoticeResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBDeleteHomeworkNoticeResponse*) parseFromData:(NSData*) data {
  return (XCSDPBDeleteHomeworkNoticeResponse*)[[[XCSDPBDeleteHomeworkNoticeResponse builder] mergeFromData:data] build];
}
+ (XCSDPBDeleteHomeworkNoticeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBDeleteHomeworkNoticeResponse*)[[[XCSDPBDeleteHomeworkNoticeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBDeleteHomeworkNoticeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBDeleteHomeworkNoticeResponse*)[[[XCSDPBDeleteHomeworkNoticeResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBDeleteHomeworkNoticeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBDeleteHomeworkNoticeResponse*)[[[XCSDPBDeleteHomeworkNoticeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBDeleteHomeworkNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBDeleteHomeworkNoticeResponse*)[[[XCSDPBDeleteHomeworkNoticeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBDeleteHomeworkNoticeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBDeleteHomeworkNoticeResponse*)[[[XCSDPBDeleteHomeworkNoticeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBDeleteHomeworkNoticeResponseBuilder*) builder {
  return [[XCSDPBDeleteHomeworkNoticeResponseBuilder alloc] init];
}
+ (XCSDPBDeleteHomeworkNoticeResponseBuilder*) builderWithPrototype:(XCSDPBDeleteHomeworkNoticeResponse*) prototype {
  return [[XCSDPBDeleteHomeworkNoticeResponse builder] mergeFrom:prototype];
}
- (XCSDPBDeleteHomeworkNoticeResponseBuilder*) builder {
  return [XCSDPBDeleteHomeworkNoticeResponse builder];
}
- (XCSDPBDeleteHomeworkNoticeResponseBuilder*) toBuilder {
  return [XCSDPBDeleteHomeworkNoticeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBDeleteHomeworkNoticeResponse class]]) {
    return NO;
  }
  XCSDPBDeleteHomeworkNoticeResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBDeleteHomeworkNoticeResponseBuilder()
@property (strong) XCSDPBDeleteHomeworkNoticeResponse* resultDeleteHomeworkNoticeResponse;
@end

@implementation XCSDPBDeleteHomeworkNoticeResponseBuilder
@synthesize resultDeleteHomeworkNoticeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteHomeworkNoticeResponse = [[XCSDPBDeleteHomeworkNoticeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteHomeworkNoticeResponse;
}
- (XCSDPBDeleteHomeworkNoticeResponseBuilder*) clear {
  self.resultDeleteHomeworkNoticeResponse = [[XCSDPBDeleteHomeworkNoticeResponse alloc] init];
  return self;
}
- (XCSDPBDeleteHomeworkNoticeResponseBuilder*) clone {
  return [XCSDPBDeleteHomeworkNoticeResponse builderWithPrototype:resultDeleteHomeworkNoticeResponse];
}
- (XCSDPBDeleteHomeworkNoticeResponse*) defaultInstance {
  return [XCSDPBDeleteHomeworkNoticeResponse defaultInstance];
}
- (XCSDPBDeleteHomeworkNoticeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBDeleteHomeworkNoticeResponse*) buildPartial {
  XCSDPBDeleteHomeworkNoticeResponse* returnMe = resultDeleteHomeworkNoticeResponse;
  self.resultDeleteHomeworkNoticeResponse = nil;
  return returnMe;
}
- (XCSDPBDeleteHomeworkNoticeResponseBuilder*) mergeFrom:(XCSDPBDeleteHomeworkNoticeResponse*) other {
  if (other == [XCSDPBDeleteHomeworkNoticeResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBDeleteHomeworkNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBDeleteHomeworkNoticeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface XCSDPBHomeworkRankingRequest ()
@property SInt64 childUserId;
@property SInt64 classId;
@end

@implementation XCSDPBHomeworkRankingRequest

- (BOOL) hasChildUserId {
  return !!hasChildUserId_;
}
- (void) setHasChildUserId:(BOOL) _value_ {
  hasChildUserId_ = !!_value_;
}
@synthesize childUserId;
- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (instancetype) init {
  if ((self = [super init])) {
    self.childUserId = 0L;
    self.classId = 0L;
  }
  return self;
}
static XCSDPBHomeworkRankingRequest* defaultXCSDPBHomeworkRankingRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkRankingRequest class]) {
    defaultXCSDPBHomeworkRankingRequestInstance = [[XCSDPBHomeworkRankingRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRankingRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRankingRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChildUserId) {
    [output writeInt64:1 value:self.childUserId];
  }
  if (self.hasClassId) {
    [output writeInt64:2 value:self.classId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChildUserId) {
    size_ += computeInt64Size(1, self.childUserId);
  }
  if (self.hasClassId) {
    size_ += computeInt64Size(2, self.classId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkRankingRequest*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkRankingRequest*)[[[XCSDPBHomeworkRankingRequest builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkRankingRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRankingRequest*)[[[XCSDPBHomeworkRankingRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRankingRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkRankingRequest*)[[[XCSDPBHomeworkRankingRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkRankingRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRankingRequest*)[[[XCSDPBHomeworkRankingRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRankingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkRankingRequest*)[[[XCSDPBHomeworkRankingRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkRankingRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRankingRequest*)[[[XCSDPBHomeworkRankingRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRankingRequestBuilder*) builder {
  return [[XCSDPBHomeworkRankingRequestBuilder alloc] init];
}
+ (XCSDPBHomeworkRankingRequestBuilder*) builderWithPrototype:(XCSDPBHomeworkRankingRequest*) prototype {
  return [[XCSDPBHomeworkRankingRequest builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkRankingRequestBuilder*) builder {
  return [XCSDPBHomeworkRankingRequest builder];
}
- (XCSDPBHomeworkRankingRequestBuilder*) toBuilder {
  return [XCSDPBHomeworkRankingRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChildUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserId", [NSNumber numberWithLongLong:self.childUserId]];
  }
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasChildUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.childUserId] forKey: @"childUserId"];
  }
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkRankingRequest class]]) {
    return NO;
  }
  XCSDPBHomeworkRankingRequest *otherMessage = other;
  return
      self.hasChildUserId == otherMessage.hasChildUserId &&
      (!self.hasChildUserId || self.childUserId == otherMessage.childUserId) &&
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasChildUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.childUserId] hash];
  }
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkRankingRequestBuilder()
@property (strong) XCSDPBHomeworkRankingRequest* resultHomeworkRankingRequest;
@end

@implementation XCSDPBHomeworkRankingRequestBuilder
@synthesize resultHomeworkRankingRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkRankingRequest = [[XCSDPBHomeworkRankingRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkRankingRequest;
}
- (XCSDPBHomeworkRankingRequestBuilder*) clear {
  self.resultHomeworkRankingRequest = [[XCSDPBHomeworkRankingRequest alloc] init];
  return self;
}
- (XCSDPBHomeworkRankingRequestBuilder*) clone {
  return [XCSDPBHomeworkRankingRequest builderWithPrototype:resultHomeworkRankingRequest];
}
- (XCSDPBHomeworkRankingRequest*) defaultInstance {
  return [XCSDPBHomeworkRankingRequest defaultInstance];
}
- (XCSDPBHomeworkRankingRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkRankingRequest*) buildPartial {
  XCSDPBHomeworkRankingRequest* returnMe = resultHomeworkRankingRequest;
  self.resultHomeworkRankingRequest = nil;
  return returnMe;
}
- (XCSDPBHomeworkRankingRequestBuilder*) mergeFrom:(XCSDPBHomeworkRankingRequest*) other {
  if (other == [XCSDPBHomeworkRankingRequest defaultInstance]) {
    return self;
  }
  if (other.hasChildUserId) {
    [self setChildUserId:other.childUserId];
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkRankingRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkRankingRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setChildUserId:[input readInt64]];
        break;
      }
      case 16: {
        [self setClassId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasChildUserId {
  return resultHomeworkRankingRequest.hasChildUserId;
}
- (SInt64) childUserId {
  return resultHomeworkRankingRequest.childUserId;
}
- (XCSDPBHomeworkRankingRequestBuilder*) setChildUserId:(SInt64) value {
  resultHomeworkRankingRequest.hasChildUserId = YES;
  resultHomeworkRankingRequest.childUserId = value;
  return self;
}
- (XCSDPBHomeworkRankingRequestBuilder*) clearChildUserId {
  resultHomeworkRankingRequest.hasChildUserId = NO;
  resultHomeworkRankingRequest.childUserId = 0L;
  return self;
}
- (BOOL) hasClassId {
  return resultHomeworkRankingRequest.hasClassId;
}
- (SInt64) classId {
  return resultHomeworkRankingRequest.classId;
}
- (XCSDPBHomeworkRankingRequestBuilder*) setClassId:(SInt64) value {
  resultHomeworkRankingRequest.hasClassId = YES;
  resultHomeworkRankingRequest.classId = value;
  return self;
}
- (XCSDPBHomeworkRankingRequestBuilder*) clearClassId {
  resultHomeworkRankingRequest.hasClassId = NO;
  resultHomeworkRankingRequest.classId = 0L;
  return self;
}
@end

@interface XCSDPBUserRank ()
@property SInt32 rank;
@property SInt64 userId;
@property (strong) NSString* name;
@property (strong) NSString* avatar;
@property SInt32 score;
@end

@implementation XCSDPBUserRank

- (BOOL) hasRank {
  return !!hasRank_;
}
- (void) setHasRank:(BOOL) _value_ {
  hasRank_ = !!_value_;
}
@synthesize rank;
- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasScore {
  return !!hasScore_;
}
- (void) setHasScore:(BOOL) _value_ {
  hasScore_ = !!_value_;
}
@synthesize score;
- (instancetype) init {
  if ((self = [super init])) {
    self.rank = 0;
    self.userId = 0L;
    self.name = @"";
    self.avatar = @"";
    self.score = 0;
  }
  return self;
}
static XCSDPBUserRank* defaultXCSDPBUserRankInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBUserRank class]) {
    defaultXCSDPBUserRankInstance = [[XCSDPBUserRank alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBUserRankInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBUserRankInstance;
}
- (BOOL) isInitialized {
  if (!self.hasRank) {
    return NO;
  }
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasScore) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasRank) {
    [output writeInt32:1 value:self.rank];
  }
  if (self.hasUserId) {
    [output writeInt64:2 value:self.userId];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasAvatar) {
    [output writeString:4 value:self.avatar];
  }
  if (self.hasScore) {
    [output writeInt32:5 value:self.score];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasRank) {
    size_ += computeInt32Size(1, self.rank);
  }
  if (self.hasUserId) {
    size_ += computeInt64Size(2, self.userId);
  }
  if (self.hasName) {
    size_ += computeStringSize(3, self.name);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(4, self.avatar);
  }
  if (self.hasScore) {
    size_ += computeInt32Size(5, self.score);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBUserRank*) parseFromData:(NSData*) data {
  return (XCSDPBUserRank*)[[[XCSDPBUserRank builder] mergeFromData:data] build];
}
+ (XCSDPBUserRank*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBUserRank*)[[[XCSDPBUserRank builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBUserRank*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBUserRank*)[[[XCSDPBUserRank builder] mergeFromInputStream:input] build];
}
+ (XCSDPBUserRank*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBUserRank*)[[[XCSDPBUserRank builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBUserRank*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBUserRank*)[[[XCSDPBUserRank builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBUserRank*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBUserRank*)[[[XCSDPBUserRank builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBUserRankBuilder*) builder {
  return [[XCSDPBUserRankBuilder alloc] init];
}
+ (XCSDPBUserRankBuilder*) builderWithPrototype:(XCSDPBUserRank*) prototype {
  return [[XCSDPBUserRank builder] mergeFrom:prototype];
}
- (XCSDPBUserRankBuilder*) builder {
  return [XCSDPBUserRank builder];
}
- (XCSDPBUserRankBuilder*) toBuilder {
  return [XCSDPBUserRank builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasRank) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rank", [NSNumber numberWithInteger:self.rank]];
  }
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithLongLong:self.userId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"score", [NSNumber numberWithInteger:self.score]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasRank) {
    [dictionary setObject: [NSNumber numberWithInteger:self.rank] forKey: @"rank"];
  }
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.userId] forKey: @"userId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasScore) {
    [dictionary setObject: [NSNumber numberWithInteger:self.score] forKey: @"score"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBUserRank class]]) {
    return NO;
  }
  XCSDPBUserRank *otherMessage = other;
  return
      self.hasRank == otherMessage.hasRank &&
      (!self.hasRank || self.rank == otherMessage.rank) &&
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasScore == otherMessage.hasScore &&
      (!self.hasScore || self.score == otherMessage.score) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasRank) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.rank] hash];
  }
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.userId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.score] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBUserRankBuilder()
@property (strong) XCSDPBUserRank* resultUserRank;
@end

@implementation XCSDPBUserRankBuilder
@synthesize resultUserRank;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserRank = [[XCSDPBUserRank alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserRank;
}
- (XCSDPBUserRankBuilder*) clear {
  self.resultUserRank = [[XCSDPBUserRank alloc] init];
  return self;
}
- (XCSDPBUserRankBuilder*) clone {
  return [XCSDPBUserRank builderWithPrototype:resultUserRank];
}
- (XCSDPBUserRank*) defaultInstance {
  return [XCSDPBUserRank defaultInstance];
}
- (XCSDPBUserRank*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBUserRank*) buildPartial {
  XCSDPBUserRank* returnMe = resultUserRank;
  self.resultUserRank = nil;
  return returnMe;
}
- (XCSDPBUserRankBuilder*) mergeFrom:(XCSDPBUserRank*) other {
  if (other == [XCSDPBUserRank defaultInstance]) {
    return self;
  }
  if (other.hasRank) {
    [self setRank:other.rank];
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasScore) {
    [self setScore:other.score];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBUserRankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBUserRankBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setRank:[input readInt32]];
        break;
      }
      case 16: {
        [self setUserId:[input readInt64]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setScore:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasRank {
  return resultUserRank.hasRank;
}
- (SInt32) rank {
  return resultUserRank.rank;
}
- (XCSDPBUserRankBuilder*) setRank:(SInt32) value {
  resultUserRank.hasRank = YES;
  resultUserRank.rank = value;
  return self;
}
- (XCSDPBUserRankBuilder*) clearRank {
  resultUserRank.hasRank = NO;
  resultUserRank.rank = 0;
  return self;
}
- (BOOL) hasUserId {
  return resultUserRank.hasUserId;
}
- (SInt64) userId {
  return resultUserRank.userId;
}
- (XCSDPBUserRankBuilder*) setUserId:(SInt64) value {
  resultUserRank.hasUserId = YES;
  resultUserRank.userId = value;
  return self;
}
- (XCSDPBUserRankBuilder*) clearUserId {
  resultUserRank.hasUserId = NO;
  resultUserRank.userId = 0L;
  return self;
}
- (BOOL) hasName {
  return resultUserRank.hasName;
}
- (NSString*) name {
  return resultUserRank.name;
}
- (XCSDPBUserRankBuilder*) setName:(NSString*) value {
  resultUserRank.hasName = YES;
  resultUserRank.name = value;
  return self;
}
- (XCSDPBUserRankBuilder*) clearName {
  resultUserRank.hasName = NO;
  resultUserRank.name = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultUserRank.hasAvatar;
}
- (NSString*) avatar {
  return resultUserRank.avatar;
}
- (XCSDPBUserRankBuilder*) setAvatar:(NSString*) value {
  resultUserRank.hasAvatar = YES;
  resultUserRank.avatar = value;
  return self;
}
- (XCSDPBUserRankBuilder*) clearAvatar {
  resultUserRank.hasAvatar = NO;
  resultUserRank.avatar = @"";
  return self;
}
- (BOOL) hasScore {
  return resultUserRank.hasScore;
}
- (SInt32) score {
  return resultUserRank.score;
}
- (XCSDPBUserRankBuilder*) setScore:(SInt32) value {
  resultUserRank.hasScore = YES;
  resultUserRank.score = value;
  return self;
}
- (XCSDPBUserRankBuilder*) clearScore {
  resultUserRank.hasScore = NO;
  resultUserRank.score = 0;
  return self;
}
@end

@interface XCSDPBHomeworkRankingResponse ()
@property (strong) NSMutableArray * rankListArray;
@end

@implementation XCSDPBHomeworkRankingResponse

@synthesize rankListArray;
@dynamic rankList;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static XCSDPBHomeworkRankingResponse* defaultXCSDPBHomeworkRankingResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkRankingResponse class]) {
    defaultXCSDPBHomeworkRankingResponseInstance = [[XCSDPBHomeworkRankingResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRankingResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRankingResponseInstance;
}
- (NSArray *)rankList {
  return rankListArray;
}
- (XCSDPBUserRank*)rankListAtIndex:(NSUInteger)index {
  return [rankListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitrankList = YES;
   [self.rankList enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitrankList = NO;
      *stop = YES;
    }
  }];
  if (!isInitrankList) return isInitrankList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkRankingResponse*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkRankingResponse*)[[[XCSDPBHomeworkRankingResponse builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkRankingResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRankingResponse*)[[[XCSDPBHomeworkRankingResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRankingResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkRankingResponse*)[[[XCSDPBHomeworkRankingResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkRankingResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRankingResponse*)[[[XCSDPBHomeworkRankingResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRankingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkRankingResponse*)[[[XCSDPBHomeworkRankingResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkRankingResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRankingResponse*)[[[XCSDPBHomeworkRankingResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRankingResponseBuilder*) builder {
  return [[XCSDPBHomeworkRankingResponseBuilder alloc] init];
}
+ (XCSDPBHomeworkRankingResponseBuilder*) builderWithPrototype:(XCSDPBHomeworkRankingResponse*) prototype {
  return [[XCSDPBHomeworkRankingResponse builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkRankingResponseBuilder*) builder {
  return [XCSDPBHomeworkRankingResponse builder];
}
- (XCSDPBHomeworkRankingResponseBuilder*) toBuilder {
  return [XCSDPBHomeworkRankingResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"rankList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (XCSDPBUserRank* element in self.rankListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"rankList"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkRankingResponse class]]) {
    return NO;
  }
  XCSDPBHomeworkRankingResponse *otherMessage = other;
  return
      [self.rankListArray isEqualToArray:otherMessage.rankListArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.rankListArray enumerateObjectsUsingBlock:^(XCSDPBUserRank *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkRankingResponseBuilder()
@property (strong) XCSDPBHomeworkRankingResponse* resultHomeworkRankingResponse;
@end

@implementation XCSDPBHomeworkRankingResponseBuilder
@synthesize resultHomeworkRankingResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkRankingResponse = [[XCSDPBHomeworkRankingResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkRankingResponse;
}
- (XCSDPBHomeworkRankingResponseBuilder*) clear {
  self.resultHomeworkRankingResponse = [[XCSDPBHomeworkRankingResponse alloc] init];
  return self;
}
- (XCSDPBHomeworkRankingResponseBuilder*) clone {
  return [XCSDPBHomeworkRankingResponse builderWithPrototype:resultHomeworkRankingResponse];
}
- (XCSDPBHomeworkRankingResponse*) defaultInstance {
  return [XCSDPBHomeworkRankingResponse defaultInstance];
}
- (XCSDPBHomeworkRankingResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkRankingResponse*) buildPartial {
  XCSDPBHomeworkRankingResponse* returnMe = resultHomeworkRankingResponse;
  self.resultHomeworkRankingResponse = nil;
  return returnMe;
}
- (XCSDPBHomeworkRankingResponseBuilder*) mergeFrom:(XCSDPBHomeworkRankingResponse*) other {
  if (other == [XCSDPBHomeworkRankingResponse defaultInstance]) {
    return self;
  }
  if (other.rankListArray.count > 0) {
    if (resultHomeworkRankingResponse.rankListArray == nil) {
      resultHomeworkRankingResponse.rankListArray = [[NSMutableArray alloc] initWithArray:other.rankListArray];
    } else {
      [resultHomeworkRankingResponse.rankListArray addObjectsFromArray:other.rankListArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkRankingResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkRankingResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        XCSDPBUserRankBuilder* subBuilder = [XCSDPBUserRank builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRankList:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)rankList {
  return resultHomeworkRankingResponse.rankListArray;
}
- (XCSDPBUserRank*)rankListAtIndex:(NSUInteger)index {
  return [resultHomeworkRankingResponse rankListAtIndex:index];
}
- (XCSDPBHomeworkRankingResponseBuilder *)addRankList:(XCSDPBUserRank*)value {
  if (resultHomeworkRankingResponse.rankListArray == nil) {
    resultHomeworkRankingResponse.rankListArray = [[NSMutableArray alloc]init];
  }
  [resultHomeworkRankingResponse.rankListArray addObject:value];
  return self;
}
- (XCSDPBHomeworkRankingResponseBuilder *)setRankListArray:(NSArray *)array {
  resultHomeworkRankingResponse.rankListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (XCSDPBHomeworkRankingResponseBuilder *)clearRankList {
  resultHomeworkRankingResponse.rankListArray = nil;
  return self;
}
@end

@interface XCSDPBHomeworkCalendarRequest ()
@property SInt64 childUserId;
@end

@implementation XCSDPBHomeworkCalendarRequest

- (BOOL) hasChildUserId {
  return !!hasChildUserId_;
}
- (void) setHasChildUserId:(BOOL) _value_ {
  hasChildUserId_ = !!_value_;
}
@synthesize childUserId;
- (instancetype) init {
  if ((self = [super init])) {
    self.childUserId = 0L;
  }
  return self;
}
static XCSDPBHomeworkCalendarRequest* defaultXCSDPBHomeworkCalendarRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkCalendarRequest class]) {
    defaultXCSDPBHomeworkCalendarRequestInstance = [[XCSDPBHomeworkCalendarRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkCalendarRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkCalendarRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasChildUserId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChildUserId) {
    [output writeInt64:1 value:self.childUserId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChildUserId) {
    size_ += computeInt64Size(1, self.childUserId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkCalendarRequest*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkCalendarRequest*)[[[XCSDPBHomeworkCalendarRequest builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkCalendarRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkCalendarRequest*)[[[XCSDPBHomeworkCalendarRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkCalendarRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkCalendarRequest*)[[[XCSDPBHomeworkCalendarRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkCalendarRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkCalendarRequest*)[[[XCSDPBHomeworkCalendarRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkCalendarRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkCalendarRequest*)[[[XCSDPBHomeworkCalendarRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkCalendarRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkCalendarRequest*)[[[XCSDPBHomeworkCalendarRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkCalendarRequestBuilder*) builder {
  return [[XCSDPBHomeworkCalendarRequestBuilder alloc] init];
}
+ (XCSDPBHomeworkCalendarRequestBuilder*) builderWithPrototype:(XCSDPBHomeworkCalendarRequest*) prototype {
  return [[XCSDPBHomeworkCalendarRequest builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkCalendarRequestBuilder*) builder {
  return [XCSDPBHomeworkCalendarRequest builder];
}
- (XCSDPBHomeworkCalendarRequestBuilder*) toBuilder {
  return [XCSDPBHomeworkCalendarRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChildUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserId", [NSNumber numberWithLongLong:self.childUserId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasChildUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.childUserId] forKey: @"childUserId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkCalendarRequest class]]) {
    return NO;
  }
  XCSDPBHomeworkCalendarRequest *otherMessage = other;
  return
      self.hasChildUserId == otherMessage.hasChildUserId &&
      (!self.hasChildUserId || self.childUserId == otherMessage.childUserId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasChildUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.childUserId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkCalendarRequestBuilder()
@property (strong) XCSDPBHomeworkCalendarRequest* resultHomeworkCalendarRequest;
@end

@implementation XCSDPBHomeworkCalendarRequestBuilder
@synthesize resultHomeworkCalendarRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkCalendarRequest = [[XCSDPBHomeworkCalendarRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkCalendarRequest;
}
- (XCSDPBHomeworkCalendarRequestBuilder*) clear {
  self.resultHomeworkCalendarRequest = [[XCSDPBHomeworkCalendarRequest alloc] init];
  return self;
}
- (XCSDPBHomeworkCalendarRequestBuilder*) clone {
  return [XCSDPBHomeworkCalendarRequest builderWithPrototype:resultHomeworkCalendarRequest];
}
- (XCSDPBHomeworkCalendarRequest*) defaultInstance {
  return [XCSDPBHomeworkCalendarRequest defaultInstance];
}
- (XCSDPBHomeworkCalendarRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkCalendarRequest*) buildPartial {
  XCSDPBHomeworkCalendarRequest* returnMe = resultHomeworkCalendarRequest;
  self.resultHomeworkCalendarRequest = nil;
  return returnMe;
}
- (XCSDPBHomeworkCalendarRequestBuilder*) mergeFrom:(XCSDPBHomeworkCalendarRequest*) other {
  if (other == [XCSDPBHomeworkCalendarRequest defaultInstance]) {
    return self;
  }
  if (other.hasChildUserId) {
    [self setChildUserId:other.childUserId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkCalendarRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkCalendarRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setChildUserId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasChildUserId {
  return resultHomeworkCalendarRequest.hasChildUserId;
}
- (SInt64) childUserId {
  return resultHomeworkCalendarRequest.childUserId;
}
- (XCSDPBHomeworkCalendarRequestBuilder*) setChildUserId:(SInt64) value {
  resultHomeworkCalendarRequest.hasChildUserId = YES;
  resultHomeworkCalendarRequest.childUserId = value;
  return self;
}
- (XCSDPBHomeworkCalendarRequestBuilder*) clearChildUserId {
  resultHomeworkCalendarRequest.hasChildUserId = NO;
  resultHomeworkCalendarRequest.childUserId = 0L;
  return self;
}
@end

@interface XCSDPBHomeworkCalendarResponse ()
@property (strong) PBAppendableArray * unfinishedArray;
@property (strong) PBAppendableArray * finishedArray;
@end

@implementation XCSDPBHomeworkCalendarResponse

@synthesize unfinishedArray;
@dynamic unfinished;
@synthesize finishedArray;
@dynamic finished;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static XCSDPBHomeworkCalendarResponse* defaultXCSDPBHomeworkCalendarResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkCalendarResponse class]) {
    defaultXCSDPBHomeworkCalendarResponseInstance = [[XCSDPBHomeworkCalendarResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkCalendarResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkCalendarResponseInstance;
}
- (PBArray *)unfinished {
  return unfinishedArray;
}
- (SInt32)unfinishedAtIndex:(NSUInteger)index {
  return [unfinishedArray int32AtIndex:index];
}
- (PBArray *)finished {
  return finishedArray;
}
- (SInt32)finishedAtIndex:(NSUInteger)index {
  return [finishedArray int32AtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  const NSUInteger unfinishedArrayCount = self.unfinishedArray.count;
  if (unfinishedArrayCount > 0) {
    const SInt32 *values = (const SInt32 *)self.unfinishedArray.data;
    for (NSUInteger i = 0; i < unfinishedArrayCount; ++i) {
      [output writeInt32:1 value:values[i]];
    }
  }
  const NSUInteger finishedArrayCount = self.finishedArray.count;
  if (finishedArrayCount > 0) {
    const SInt32 *values = (const SInt32 *)self.finishedArray.data;
    for (NSUInteger i = 0; i < finishedArrayCount; ++i) {
      [output writeInt32:2 value:values[i]];
    }
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.unfinishedArray.count;
    const SInt32 *values = (const SInt32 *)self.unfinishedArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.finishedArray.count;
    const SInt32 *values = (const SInt32 *)self.finishedArray.data;
    for (NSUInteger i = 0; i < count; ++i) {
      dataSize += computeInt32SizeNoTag(values[i]);
    }
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkCalendarResponse*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkCalendarResponse*)[[[XCSDPBHomeworkCalendarResponse builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkCalendarResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkCalendarResponse*)[[[XCSDPBHomeworkCalendarResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkCalendarResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkCalendarResponse*)[[[XCSDPBHomeworkCalendarResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkCalendarResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkCalendarResponse*)[[[XCSDPBHomeworkCalendarResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkCalendarResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkCalendarResponse*)[[[XCSDPBHomeworkCalendarResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkCalendarResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkCalendarResponse*)[[[XCSDPBHomeworkCalendarResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkCalendarResponseBuilder*) builder {
  return [[XCSDPBHomeworkCalendarResponseBuilder alloc] init];
}
+ (XCSDPBHomeworkCalendarResponseBuilder*) builderWithPrototype:(XCSDPBHomeworkCalendarResponse*) prototype {
  return [[XCSDPBHomeworkCalendarResponse builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkCalendarResponseBuilder*) builder {
  return [XCSDPBHomeworkCalendarResponse builder];
}
- (XCSDPBHomeworkCalendarResponseBuilder*) toBuilder {
  return [XCSDPBHomeworkCalendarResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unfinishedArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unfinished", obj];
  }];
  [self.finishedArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"finished", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  NSMutableArray * unfinishedArrayArray = [NSMutableArray new];
  NSUInteger unfinishedArrayCount=self.unfinishedArray.count;
  for(int i=0;i<unfinishedArrayCount;i++){
    [unfinishedArrayArray addObject: @([self.unfinishedArray int32AtIndex:i])];
  }
  [dictionary setObject: unfinishedArrayArray forKey: @"unfinished"];
  NSMutableArray * finishedArrayArray = [NSMutableArray new];
  NSUInteger finishedArrayCount=self.finishedArray.count;
  for(int i=0;i<finishedArrayCount;i++){
    [finishedArrayArray addObject: @([self.finishedArray int32AtIndex:i])];
  }
  [dictionary setObject: finishedArrayArray forKey: @"finished"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkCalendarResponse class]]) {
    return NO;
  }
  XCSDPBHomeworkCalendarResponse *otherMessage = other;
  return
      [self.unfinishedArray isEqualToArray:otherMessage.unfinishedArray] &&
      [self.finishedArray isEqualToArray:otherMessage.finishedArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.unfinishedArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  [self.finishedArray enumerateObjectsUsingBlock:^(NSNumber *obj, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [obj longValue];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkCalendarResponseBuilder()
@property (strong) XCSDPBHomeworkCalendarResponse* resultHomeworkCalendarResponse;
@end

@implementation XCSDPBHomeworkCalendarResponseBuilder
@synthesize resultHomeworkCalendarResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkCalendarResponse = [[XCSDPBHomeworkCalendarResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkCalendarResponse;
}
- (XCSDPBHomeworkCalendarResponseBuilder*) clear {
  self.resultHomeworkCalendarResponse = [[XCSDPBHomeworkCalendarResponse alloc] init];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder*) clone {
  return [XCSDPBHomeworkCalendarResponse builderWithPrototype:resultHomeworkCalendarResponse];
}
- (XCSDPBHomeworkCalendarResponse*) defaultInstance {
  return [XCSDPBHomeworkCalendarResponse defaultInstance];
}
- (XCSDPBHomeworkCalendarResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkCalendarResponse*) buildPartial {
  XCSDPBHomeworkCalendarResponse* returnMe = resultHomeworkCalendarResponse;
  self.resultHomeworkCalendarResponse = nil;
  return returnMe;
}
- (XCSDPBHomeworkCalendarResponseBuilder*) mergeFrom:(XCSDPBHomeworkCalendarResponse*) other {
  if (other == [XCSDPBHomeworkCalendarResponse defaultInstance]) {
    return self;
  }
  if (other.unfinishedArray.count > 0) {
    if (resultHomeworkCalendarResponse.unfinishedArray == nil) {
      resultHomeworkCalendarResponse.unfinishedArray = [other.unfinishedArray copy];
    } else {
      [resultHomeworkCalendarResponse.unfinishedArray appendArray:other.unfinishedArray];
    }
  }
  if (other.finishedArray.count > 0) {
    if (resultHomeworkCalendarResponse.finishedArray == nil) {
      resultHomeworkCalendarResponse.finishedArray = [other.finishedArray copy];
    } else {
      [resultHomeworkCalendarResponse.finishedArray appendArray:other.finishedArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkCalendarResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addUnfinished:[input readInt32]];
        break;
      }
      case 16: {
        [self addFinished:[input readInt32]];
        break;
      }
    }
  }
}
- (PBAppendableArray *)unfinished {
  return resultHomeworkCalendarResponse.unfinishedArray;
}
- (SInt32)unfinishedAtIndex:(NSUInteger)index {
  return [resultHomeworkCalendarResponse unfinishedAtIndex:index];
}
- (XCSDPBHomeworkCalendarResponseBuilder *)addUnfinished:(SInt32)value {
  if (resultHomeworkCalendarResponse.unfinishedArray == nil) {
    resultHomeworkCalendarResponse.unfinishedArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultHomeworkCalendarResponse.unfinishedArray addInt32:value];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder *)setUnfinishedArray:(NSArray *)array {
  resultHomeworkCalendarResponse.unfinishedArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder *)setUnfinishedValues:(const SInt32 *)values count:(NSUInteger)count {
  resultHomeworkCalendarResponse.unfinishedArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder *)clearUnfinished {
  resultHomeworkCalendarResponse.unfinishedArray = nil;
  return self;
}
- (PBAppendableArray *)finished {
  return resultHomeworkCalendarResponse.finishedArray;
}
- (SInt32)finishedAtIndex:(NSUInteger)index {
  return [resultHomeworkCalendarResponse finishedAtIndex:index];
}
- (XCSDPBHomeworkCalendarResponseBuilder *)addFinished:(SInt32)value {
  if (resultHomeworkCalendarResponse.finishedArray == nil) {
    resultHomeworkCalendarResponse.finishedArray = [PBAppendableArray arrayWithValueType:PBArrayValueTypeInt32];
  }
  [resultHomeworkCalendarResponse.finishedArray addInt32:value];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder *)setFinishedArray:(NSArray *)array {
  resultHomeworkCalendarResponse.finishedArray = [PBAppendableArray arrayWithArray:array valueType:PBArrayValueTypeInt32];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder *)setFinishedValues:(const SInt32 *)values count:(NSUInteger)count {
  resultHomeworkCalendarResponse.finishedArray = [PBAppendableArray arrayWithValues:values count:count valueType:PBArrayValueTypeInt32];
  return self;
}
- (XCSDPBHomeworkCalendarResponseBuilder *)clearFinished {
  resultHomeworkCalendarResponse.finishedArray = nil;
  return self;
}
@end

@interface XCSDPBClassHomework ()
@property SInt64 homeworkId;
@property (strong) NSString* className;
@property (strong) NSString* title;
@property XCSDPBHomeworkType type;
@property SInt64 sendTime;
@property SInt32 finishedCount;
@property SInt32 totalCount;
@end

@implementation XCSDPBClassHomework

- (BOOL) hasHomeworkId {
  return !!hasHomeworkId_;
}
- (void) setHasHomeworkId:(BOOL) _value_ {
  hasHomeworkId_ = !!_value_;
}
@synthesize homeworkId;
- (BOOL) hasClassName {
  return !!hasClassName_;
}
- (void) setHasClassName:(BOOL) _value_ {
  hasClassName_ = !!_value_;
}
@synthesize className;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasSendTime {
  return !!hasSendTime_;
}
- (void) setHasSendTime:(BOOL) _value_ {
  hasSendTime_ = !!_value_;
}
@synthesize sendTime;
- (BOOL) hasFinishedCount {
  return !!hasFinishedCount_;
}
- (void) setHasFinishedCount:(BOOL) _value_ {
  hasFinishedCount_ = !!_value_;
}
@synthesize finishedCount;
- (BOOL) hasTotalCount {
  return !!hasTotalCount_;
}
- (void) setHasTotalCount:(BOOL) _value_ {
  hasTotalCount_ = !!_value_;
}
@synthesize totalCount;
- (instancetype) init {
  if ((self = [super init])) {
    self.homeworkId = 0L;
    self.className = @"";
    self.title = @"";
    self.type = XCSDPBHomeworkTypeCustomized;
    self.sendTime = 0L;
    self.finishedCount = 0;
    self.totalCount = 0;
  }
  return self;
}
static XCSDPBClassHomework* defaultXCSDPBClassHomeworkInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBClassHomework class]) {
    defaultXCSDPBClassHomeworkInstance = [[XCSDPBClassHomework alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBClassHomeworkInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBClassHomeworkInstance;
}
- (BOOL) isInitialized {
  if (!self.hasHomeworkId) {
    return NO;
  }
  if (!self.hasClassName) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasSendTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHomeworkId) {
    [output writeInt64:1 value:self.homeworkId];
  }
  if (self.hasClassName) {
    [output writeString:2 value:self.className];
  }
  if (self.hasTitle) {
    [output writeString:3 value:self.title];
  }
  if (self.hasType) {
    [output writeEnum:4 value:self.type];
  }
  if (self.hasSendTime) {
    [output writeInt64:5 value:self.sendTime];
  }
  if (self.hasFinishedCount) {
    [output writeInt32:6 value:self.finishedCount];
  }
  if (self.hasTotalCount) {
    [output writeInt32:7 value:self.totalCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHomeworkId) {
    size_ += computeInt64Size(1, self.homeworkId);
  }
  if (self.hasClassName) {
    size_ += computeStringSize(2, self.className);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(3, self.title);
  }
  if (self.hasType) {
    size_ += computeEnumSize(4, self.type);
  }
  if (self.hasSendTime) {
    size_ += computeInt64Size(5, self.sendTime);
  }
  if (self.hasFinishedCount) {
    size_ += computeInt32Size(6, self.finishedCount);
  }
  if (self.hasTotalCount) {
    size_ += computeInt32Size(7, self.totalCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBClassHomework*) parseFromData:(NSData*) data {
  return (XCSDPBClassHomework*)[[[XCSDPBClassHomework builder] mergeFromData:data] build];
}
+ (XCSDPBClassHomework*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassHomework*)[[[XCSDPBClassHomework builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassHomework*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBClassHomework*)[[[XCSDPBClassHomework builder] mergeFromInputStream:input] build];
}
+ (XCSDPBClassHomework*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassHomework*)[[[XCSDPBClassHomework builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassHomework*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBClassHomework*)[[[XCSDPBClassHomework builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBClassHomework*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBClassHomework*)[[[XCSDPBClassHomework builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBClassHomeworkBuilder*) builder {
  return [[XCSDPBClassHomeworkBuilder alloc] init];
}
+ (XCSDPBClassHomeworkBuilder*) builderWithPrototype:(XCSDPBClassHomework*) prototype {
  return [[XCSDPBClassHomework builder] mergeFrom:prototype];
}
- (XCSDPBClassHomeworkBuilder*) builder {
  return [XCSDPBClassHomework builder];
}
- (XCSDPBClassHomeworkBuilder*) toBuilder {
  return [XCSDPBClassHomework builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHomeworkId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"homeworkId", [NSNumber numberWithLongLong:self.homeworkId]];
  }
  if (self.hasClassName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"className", self.className];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromXCSDPBHomeworkType(self.type)];
  }
  if (self.hasSendTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sendTime", [NSNumber numberWithLongLong:self.sendTime]];
  }
  if (self.hasFinishedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"finishedCount", [NSNumber numberWithInteger:self.finishedCount]];
  }
  if (self.hasTotalCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"totalCount", [NSNumber numberWithInteger:self.totalCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHomeworkId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.homeworkId] forKey: @"homeworkId"];
  }
  if (self.hasClassName) {
    [dictionary setObject: self.className forKey: @"className"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasSendTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sendTime] forKey: @"sendTime"];
  }
  if (self.hasFinishedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.finishedCount] forKey: @"finishedCount"];
  }
  if (self.hasTotalCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.totalCount] forKey: @"totalCount"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBClassHomework class]]) {
    return NO;
  }
  XCSDPBClassHomework *otherMessage = other;
  return
      self.hasHomeworkId == otherMessage.hasHomeworkId &&
      (!self.hasHomeworkId || self.homeworkId == otherMessage.homeworkId) &&
      self.hasClassName == otherMessage.hasClassName &&
      (!self.hasClassName || [self.className isEqual:otherMessage.className]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasSendTime == otherMessage.hasSendTime &&
      (!self.hasSendTime || self.sendTime == otherMessage.sendTime) &&
      self.hasFinishedCount == otherMessage.hasFinishedCount &&
      (!self.hasFinishedCount || self.finishedCount == otherMessage.finishedCount) &&
      self.hasTotalCount == otherMessage.hasTotalCount &&
      (!self.hasTotalCount || self.totalCount == otherMessage.totalCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHomeworkId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.homeworkId] hash];
  }
  if (self.hasClassName) {
    hashCode = hashCode * 31 + [self.className hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasSendTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sendTime] hash];
  }
  if (self.hasFinishedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.finishedCount] hash];
  }
  if (self.hasTotalCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.totalCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBClassHomeworkBuilder()
@property (strong) XCSDPBClassHomework* resultClassHomework;
@end

@implementation XCSDPBClassHomeworkBuilder
@synthesize resultClassHomework;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultClassHomework = [[XCSDPBClassHomework alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultClassHomework;
}
- (XCSDPBClassHomeworkBuilder*) clear {
  self.resultClassHomework = [[XCSDPBClassHomework alloc] init];
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clone {
  return [XCSDPBClassHomework builderWithPrototype:resultClassHomework];
}
- (XCSDPBClassHomework*) defaultInstance {
  return [XCSDPBClassHomework defaultInstance];
}
- (XCSDPBClassHomework*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBClassHomework*) buildPartial {
  XCSDPBClassHomework* returnMe = resultClassHomework;
  self.resultClassHomework = nil;
  return returnMe;
}
- (XCSDPBClassHomeworkBuilder*) mergeFrom:(XCSDPBClassHomework*) other {
  if (other == [XCSDPBClassHomework defaultInstance]) {
    return self;
  }
  if (other.hasHomeworkId) {
    [self setHomeworkId:other.homeworkId];
  }
  if (other.hasClassName) {
    [self setClassName:other.className];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSendTime) {
    [self setSendTime:other.sendTime];
  }
  if (other.hasFinishedCount) {
    [self setFinishedCount:other.finishedCount];
  }
  if (other.hasTotalCount) {
    [self setTotalCount:other.totalCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBClassHomeworkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBClassHomeworkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setHomeworkId:[input readInt64]];
        break;
      }
      case 18: {
        [self setClassName:[input readString]];
        break;
      }
      case 26: {
        [self setTitle:[input readString]];
        break;
      }
      case 32: {
        XCSDPBHomeworkType value = (XCSDPBHomeworkType)[input readEnum];
        if (XCSDPBHomeworkTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setSendTime:[input readInt64]];
        break;
      }
      case 48: {
        [self setFinishedCount:[input readInt32]];
        break;
      }
      case 56: {
        [self setTotalCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasHomeworkId {
  return resultClassHomework.hasHomeworkId;
}
- (SInt64) homeworkId {
  return resultClassHomework.homeworkId;
}
- (XCSDPBClassHomeworkBuilder*) setHomeworkId:(SInt64) value {
  resultClassHomework.hasHomeworkId = YES;
  resultClassHomework.homeworkId = value;
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clearHomeworkId {
  resultClassHomework.hasHomeworkId = NO;
  resultClassHomework.homeworkId = 0L;
  return self;
}
- (BOOL) hasClassName {
  return resultClassHomework.hasClassName;
}
- (NSString*) className {
  return resultClassHomework.className;
}
- (XCSDPBClassHomeworkBuilder*) setClassName:(NSString*) value {
  resultClassHomework.hasClassName = YES;
  resultClassHomework.className = value;
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clearClassName {
  resultClassHomework.hasClassName = NO;
  resultClassHomework.className = @"";
  return self;
}
- (BOOL) hasTitle {
  return resultClassHomework.hasTitle;
}
- (NSString*) title {
  return resultClassHomework.title;
}
- (XCSDPBClassHomeworkBuilder*) setTitle:(NSString*) value {
  resultClassHomework.hasTitle = YES;
  resultClassHomework.title = value;
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clearTitle {
  resultClassHomework.hasTitle = NO;
  resultClassHomework.title = @"";
  return self;
}
- (BOOL) hasType {
  return resultClassHomework.hasType;
}
- (XCSDPBHomeworkType) type {
  return resultClassHomework.type;
}
- (XCSDPBClassHomeworkBuilder*) setType:(XCSDPBHomeworkType) value {
  resultClassHomework.hasType = YES;
  resultClassHomework.type = value;
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clearType {
  resultClassHomework.hasType = NO;
  resultClassHomework.type = XCSDPBHomeworkTypeCustomized;
  return self;
}
- (BOOL) hasSendTime {
  return resultClassHomework.hasSendTime;
}
- (SInt64) sendTime {
  return resultClassHomework.sendTime;
}
- (XCSDPBClassHomeworkBuilder*) setSendTime:(SInt64) value {
  resultClassHomework.hasSendTime = YES;
  resultClassHomework.sendTime = value;
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clearSendTime {
  resultClassHomework.hasSendTime = NO;
  resultClassHomework.sendTime = 0L;
  return self;
}
- (BOOL) hasFinishedCount {
  return resultClassHomework.hasFinishedCount;
}
- (SInt32) finishedCount {
  return resultClassHomework.finishedCount;
}
- (XCSDPBClassHomeworkBuilder*) setFinishedCount:(SInt32) value {
  resultClassHomework.hasFinishedCount = YES;
  resultClassHomework.finishedCount = value;
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clearFinishedCount {
  resultClassHomework.hasFinishedCount = NO;
  resultClassHomework.finishedCount = 0;
  return self;
}
- (BOOL) hasTotalCount {
  return resultClassHomework.hasTotalCount;
}
- (SInt32) totalCount {
  return resultClassHomework.totalCount;
}
- (XCSDPBClassHomeworkBuilder*) setTotalCount:(SInt32) value {
  resultClassHomework.hasTotalCount = YES;
  resultClassHomework.totalCount = value;
  return self;
}
- (XCSDPBClassHomeworkBuilder*) clearTotalCount {
  resultClassHomework.hasTotalCount = NO;
  resultClassHomework.totalCount = 0;
  return self;
}
@end

@interface XCSDPBHomeworkSentListRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation XCSDPBHomeworkSentListRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static XCSDPBHomeworkSentListRequest* defaultXCSDPBHomeworkSentListRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkSentListRequest class]) {
    defaultXCSDPBHomeworkSentListRequestInstance = [[XCSDPBHomeworkSentListRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkSentListRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkSentListRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkSentListRequest*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkSentListRequest*)[[[XCSDPBHomeworkSentListRequest builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkSentListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkSentListRequest*)[[[XCSDPBHomeworkSentListRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkSentListRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkSentListRequest*)[[[XCSDPBHomeworkSentListRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkSentListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkSentListRequest*)[[[XCSDPBHomeworkSentListRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkSentListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkSentListRequest*)[[[XCSDPBHomeworkSentListRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkSentListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkSentListRequest*)[[[XCSDPBHomeworkSentListRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkSentListRequestBuilder*) builder {
  return [[XCSDPBHomeworkSentListRequestBuilder alloc] init];
}
+ (XCSDPBHomeworkSentListRequestBuilder*) builderWithPrototype:(XCSDPBHomeworkSentListRequest*) prototype {
  return [[XCSDPBHomeworkSentListRequest builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkSentListRequestBuilder*) builder {
  return [XCSDPBHomeworkSentListRequest builder];
}
- (XCSDPBHomeworkSentListRequestBuilder*) toBuilder {
  return [XCSDPBHomeworkSentListRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkSentListRequest class]]) {
    return NO;
  }
  XCSDPBHomeworkSentListRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkSentListRequestBuilder()
@property (strong) XCSDPBHomeworkSentListRequest* resultHomeworkSentListRequest;
@end

@implementation XCSDPBHomeworkSentListRequestBuilder
@synthesize resultHomeworkSentListRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkSentListRequest = [[XCSDPBHomeworkSentListRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkSentListRequest;
}
- (XCSDPBHomeworkSentListRequestBuilder*) clear {
  self.resultHomeworkSentListRequest = [[XCSDPBHomeworkSentListRequest alloc] init];
  return self;
}
- (XCSDPBHomeworkSentListRequestBuilder*) clone {
  return [XCSDPBHomeworkSentListRequest builderWithPrototype:resultHomeworkSentListRequest];
}
- (XCSDPBHomeworkSentListRequest*) defaultInstance {
  return [XCSDPBHomeworkSentListRequest defaultInstance];
}
- (XCSDPBHomeworkSentListRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkSentListRequest*) buildPartial {
  XCSDPBHomeworkSentListRequest* returnMe = resultHomeworkSentListRequest;
  self.resultHomeworkSentListRequest = nil;
  return returnMe;
}
- (XCSDPBHomeworkSentListRequestBuilder*) mergeFrom:(XCSDPBHomeworkSentListRequest*) other {
  if (other == [XCSDPBHomeworkSentListRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkSentListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkSentListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultHomeworkSentListRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultHomeworkSentListRequest.maxId;
}
- (XCSDPBHomeworkSentListRequestBuilder*) setMaxId:(SInt64) value {
  resultHomeworkSentListRequest.hasMaxId = YES;
  resultHomeworkSentListRequest.maxId = value;
  return self;
}
- (XCSDPBHomeworkSentListRequestBuilder*) clearMaxId {
  resultHomeworkSentListRequest.hasMaxId = NO;
  resultHomeworkSentListRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultHomeworkSentListRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultHomeworkSentListRequest.sinceId;
}
- (XCSDPBHomeworkSentListRequestBuilder*) setSinceId:(SInt64) value {
  resultHomeworkSentListRequest.hasSinceId = YES;
  resultHomeworkSentListRequest.sinceId = value;
  return self;
}
- (XCSDPBHomeworkSentListRequestBuilder*) clearSinceId {
  resultHomeworkSentListRequest.hasSinceId = NO;
  resultHomeworkSentListRequest.sinceId = 0L;
  return self;
}
@end

@interface XCSDPBHomeworkSentListResponse ()
@property (strong) NSMutableArray * homeworksArray;
@property BOOL hasMore;
@end

@implementation XCSDPBHomeworkSentListResponse

@synthesize homeworksArray;
@dynamic homeworks;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static XCSDPBHomeworkSentListResponse* defaultXCSDPBHomeworkSentListResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkSentListResponse class]) {
    defaultXCSDPBHomeworkSentListResponseInstance = [[XCSDPBHomeworkSentListResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkSentListResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkSentListResponseInstance;
}
- (NSArray *)homeworks {
  return homeworksArray;
}
- (XCSDPBClassHomework*)homeworksAtIndex:(NSUInteger)index {
  return [homeworksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInithomeworks = YES;
   [self.homeworks enumerateObjectsUsingBlock:^(XCSDPBClassHomework *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInithomeworks = NO;
      *stop = YES;
    }
  }];
  if (!isInithomeworks) return isInithomeworks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBClassHomework *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBClassHomework *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkSentListResponse*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkSentListResponse*)[[[XCSDPBHomeworkSentListResponse builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkSentListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkSentListResponse*)[[[XCSDPBHomeworkSentListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkSentListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkSentListResponse*)[[[XCSDPBHomeworkSentListResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkSentListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkSentListResponse*)[[[XCSDPBHomeworkSentListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkSentListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkSentListResponse*)[[[XCSDPBHomeworkSentListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkSentListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkSentListResponse*)[[[XCSDPBHomeworkSentListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkSentListResponseBuilder*) builder {
  return [[XCSDPBHomeworkSentListResponseBuilder alloc] init];
}
+ (XCSDPBHomeworkSentListResponseBuilder*) builderWithPrototype:(XCSDPBHomeworkSentListResponse*) prototype {
  return [[XCSDPBHomeworkSentListResponse builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkSentListResponseBuilder*) builder {
  return [XCSDPBHomeworkSentListResponse builder];
}
- (XCSDPBHomeworkSentListResponseBuilder*) toBuilder {
  return [XCSDPBHomeworkSentListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBClassHomework *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"homeworks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (XCSDPBClassHomework* element in self.homeworksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"homeworks"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkSentListResponse class]]) {
    return NO;
  }
  XCSDPBHomeworkSentListResponse *otherMessage = other;
  return
      [self.homeworksArray isEqualToArray:otherMessage.homeworksArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.homeworksArray enumerateObjectsUsingBlock:^(XCSDPBClassHomework *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkSentListResponseBuilder()
@property (strong) XCSDPBHomeworkSentListResponse* resultHomeworkSentListResponse;
@end

@implementation XCSDPBHomeworkSentListResponseBuilder
@synthesize resultHomeworkSentListResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkSentListResponse = [[XCSDPBHomeworkSentListResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkSentListResponse;
}
- (XCSDPBHomeworkSentListResponseBuilder*) clear {
  self.resultHomeworkSentListResponse = [[XCSDPBHomeworkSentListResponse alloc] init];
  return self;
}
- (XCSDPBHomeworkSentListResponseBuilder*) clone {
  return [XCSDPBHomeworkSentListResponse builderWithPrototype:resultHomeworkSentListResponse];
}
- (XCSDPBHomeworkSentListResponse*) defaultInstance {
  return [XCSDPBHomeworkSentListResponse defaultInstance];
}
- (XCSDPBHomeworkSentListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkSentListResponse*) buildPartial {
  XCSDPBHomeworkSentListResponse* returnMe = resultHomeworkSentListResponse;
  self.resultHomeworkSentListResponse = nil;
  return returnMe;
}
- (XCSDPBHomeworkSentListResponseBuilder*) mergeFrom:(XCSDPBHomeworkSentListResponse*) other {
  if (other == [XCSDPBHomeworkSentListResponse defaultInstance]) {
    return self;
  }
  if (other.homeworksArray.count > 0) {
    if (resultHomeworkSentListResponse.homeworksArray == nil) {
      resultHomeworkSentListResponse.homeworksArray = [[NSMutableArray alloc] initWithArray:other.homeworksArray];
    } else {
      [resultHomeworkSentListResponse.homeworksArray addObjectsFromArray:other.homeworksArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkSentListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkSentListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        XCSDPBClassHomeworkBuilder* subBuilder = [XCSDPBClassHomework builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addHomeworks:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)homeworks {
  return resultHomeworkSentListResponse.homeworksArray;
}
- (XCSDPBClassHomework*)homeworksAtIndex:(NSUInteger)index {
  return [resultHomeworkSentListResponse homeworksAtIndex:index];
}
- (XCSDPBHomeworkSentListResponseBuilder *)addHomeworks:(XCSDPBClassHomework*)value {
  if (resultHomeworkSentListResponse.homeworksArray == nil) {
    resultHomeworkSentListResponse.homeworksArray = [[NSMutableArray alloc]init];
  }
  [resultHomeworkSentListResponse.homeworksArray addObject:value];
  return self;
}
- (XCSDPBHomeworkSentListResponseBuilder *)setHomeworksArray:(NSArray *)array {
  resultHomeworkSentListResponse.homeworksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (XCSDPBHomeworkSentListResponseBuilder *)clearHomeworks {
  resultHomeworkSentListResponse.homeworksArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultHomeworkSentListResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultHomeworkSentListResponse.hasMore;
}
- (XCSDPBHomeworkSentListResponseBuilder*) setHasMore:(BOOL) value {
  resultHomeworkSentListResponse.hasHasMore = YES;
  resultHomeworkSentListResponse.hasMore = value;
  return self;
}
- (XCSDPBHomeworkSentListResponseBuilder*) clearHasMore {
  resultHomeworkSentListResponse.hasHasMore = NO;
  resultHomeworkSentListResponse.hasMore = NO;
  return self;
}
@end

@interface XCSDPBHomeworkMember ()
@property SInt64 memberId;
@property (strong) NSString* name;
@property (strong) NSString* avatar;
@property XCSDPBHomeworkStatus status;
@property SInt32 score;
@property BOOL specialAttention;
@end

@implementation XCSDPBHomeworkMember

- (BOOL) hasMemberId {
  return !!hasMemberId_;
}
- (void) setHasMemberId:(BOOL) _value_ {
  hasMemberId_ = !!_value_;
}
@synthesize memberId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) _value_ {
  hasStatus_ = !!_value_;
}
@synthesize status;
- (BOOL) hasScore {
  return !!hasScore_;
}
- (void) setHasScore:(BOOL) _value_ {
  hasScore_ = !!_value_;
}
@synthesize score;
- (BOOL) hasSpecialAttention {
  return !!hasSpecialAttention_;
}
- (void) setHasSpecialAttention:(BOOL) _value_ {
  hasSpecialAttention_ = !!_value_;
}
- (BOOL) specialAttention {
  return !!specialAttention_;
}
- (void) setSpecialAttention:(BOOL) _value_ {
  specialAttention_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.memberId = 0L;
    self.name = @"";
    self.avatar = @"";
    self.status = XCSDPBHomeworkStatusUnfinished;
    self.score = 0;
    self.specialAttention = NO;
  }
  return self;
}
static XCSDPBHomeworkMember* defaultXCSDPBHomeworkMemberInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkMember class]) {
    defaultXCSDPBHomeworkMemberInstance = [[XCSDPBHomeworkMember alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkMemberInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkMemberInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMemberId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasStatus) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMemberId) {
    [output writeInt64:1 value:self.memberId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasAvatar) {
    [output writeString:3 value:self.avatar];
  }
  if (self.hasStatus) {
    [output writeEnum:4 value:self.status];
  }
  if (self.hasScore) {
    [output writeInt32:5 value:self.score];
  }
  if (self.hasSpecialAttention) {
    [output writeBool:6 value:self.specialAttention];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMemberId) {
    size_ += computeInt64Size(1, self.memberId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(3, self.avatar);
  }
  if (self.hasStatus) {
    size_ += computeEnumSize(4, self.status);
  }
  if (self.hasScore) {
    size_ += computeInt32Size(5, self.score);
  }
  if (self.hasSpecialAttention) {
    size_ += computeBoolSize(6, self.specialAttention);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkMember*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkMember*)[[[XCSDPBHomeworkMember builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkMember*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMember*)[[[XCSDPBHomeworkMember builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMember*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkMember*)[[[XCSDPBHomeworkMember builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkMember*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMember*)[[[XCSDPBHomeworkMember builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMember*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkMember*)[[[XCSDPBHomeworkMember builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkMember*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMember*)[[[XCSDPBHomeworkMember builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMemberBuilder*) builder {
  return [[XCSDPBHomeworkMemberBuilder alloc] init];
}
+ (XCSDPBHomeworkMemberBuilder*) builderWithPrototype:(XCSDPBHomeworkMember*) prototype {
  return [[XCSDPBHomeworkMember builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkMemberBuilder*) builder {
  return [XCSDPBHomeworkMember builder];
}
- (XCSDPBHomeworkMemberBuilder*) toBuilder {
  return [XCSDPBHomeworkMember builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMemberId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"memberId", [NSNumber numberWithLongLong:self.memberId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"status", NSStringFromXCSDPBHomeworkStatus(self.status)];
  }
  if (self.hasScore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"score", [NSNumber numberWithInteger:self.score]];
  }
  if (self.hasSpecialAttention) {
    [output appendFormat:@"%@%@: %@\n", indent, @"specialAttention", [NSNumber numberWithBool:self.specialAttention]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMemberId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.memberId] forKey: @"memberId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasStatus) {
    [dictionary setObject: @(self.status) forKey: @"status"];
  }
  if (self.hasScore) {
    [dictionary setObject: [NSNumber numberWithInteger:self.score] forKey: @"score"];
  }
  if (self.hasSpecialAttention) {
    [dictionary setObject: [NSNumber numberWithBool:self.specialAttention] forKey: @"specialAttention"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkMember class]]) {
    return NO;
  }
  XCSDPBHomeworkMember *otherMessage = other;
  return
      self.hasMemberId == otherMessage.hasMemberId &&
      (!self.hasMemberId || self.memberId == otherMessage.memberId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasStatus == otherMessage.hasStatus &&
      (!self.hasStatus || self.status == otherMessage.status) &&
      self.hasScore == otherMessage.hasScore &&
      (!self.hasScore || self.score == otherMessage.score) &&
      self.hasSpecialAttention == otherMessage.hasSpecialAttention &&
      (!self.hasSpecialAttention || self.specialAttention == otherMessage.specialAttention) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMemberId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.memberId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasStatus) {
    hashCode = hashCode * 31 + self.status;
  }
  if (self.hasScore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.score] hash];
  }
  if (self.hasSpecialAttention) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.specialAttention] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkMemberBuilder()
@property (strong) XCSDPBHomeworkMember* resultHomeworkMember;
@end

@implementation XCSDPBHomeworkMemberBuilder
@synthesize resultHomeworkMember;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkMember = [[XCSDPBHomeworkMember alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkMember;
}
- (XCSDPBHomeworkMemberBuilder*) clear {
  self.resultHomeworkMember = [[XCSDPBHomeworkMember alloc] init];
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) clone {
  return [XCSDPBHomeworkMember builderWithPrototype:resultHomeworkMember];
}
- (XCSDPBHomeworkMember*) defaultInstance {
  return [XCSDPBHomeworkMember defaultInstance];
}
- (XCSDPBHomeworkMember*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkMember*) buildPartial {
  XCSDPBHomeworkMember* returnMe = resultHomeworkMember;
  self.resultHomeworkMember = nil;
  return returnMe;
}
- (XCSDPBHomeworkMemberBuilder*) mergeFrom:(XCSDPBHomeworkMember*) other {
  if (other == [XCSDPBHomeworkMember defaultInstance]) {
    return self;
  }
  if (other.hasMemberId) {
    [self setMemberId:other.memberId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  if (other.hasScore) {
    [self setScore:other.score];
  }
  if (other.hasSpecialAttention) {
    [self setSpecialAttention:other.specialAttention];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkMemberBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMemberId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setAvatar:[input readString]];
        break;
      }
      case 32: {
        XCSDPBHomeworkStatus value = (XCSDPBHomeworkStatus)[input readEnum];
        if (XCSDPBHomeworkStatusIsValidValue(value)) {
          [self setStatus:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        [self setScore:[input readInt32]];
        break;
      }
      case 48: {
        [self setSpecialAttention:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasMemberId {
  return resultHomeworkMember.hasMemberId;
}
- (SInt64) memberId {
  return resultHomeworkMember.memberId;
}
- (XCSDPBHomeworkMemberBuilder*) setMemberId:(SInt64) value {
  resultHomeworkMember.hasMemberId = YES;
  resultHomeworkMember.memberId = value;
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) clearMemberId {
  resultHomeworkMember.hasMemberId = NO;
  resultHomeworkMember.memberId = 0L;
  return self;
}
- (BOOL) hasName {
  return resultHomeworkMember.hasName;
}
- (NSString*) name {
  return resultHomeworkMember.name;
}
- (XCSDPBHomeworkMemberBuilder*) setName:(NSString*) value {
  resultHomeworkMember.hasName = YES;
  resultHomeworkMember.name = value;
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) clearName {
  resultHomeworkMember.hasName = NO;
  resultHomeworkMember.name = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultHomeworkMember.hasAvatar;
}
- (NSString*) avatar {
  return resultHomeworkMember.avatar;
}
- (XCSDPBHomeworkMemberBuilder*) setAvatar:(NSString*) value {
  resultHomeworkMember.hasAvatar = YES;
  resultHomeworkMember.avatar = value;
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) clearAvatar {
  resultHomeworkMember.hasAvatar = NO;
  resultHomeworkMember.avatar = @"";
  return self;
}
- (BOOL) hasStatus {
  return resultHomeworkMember.hasStatus;
}
- (XCSDPBHomeworkStatus) status {
  return resultHomeworkMember.status;
}
- (XCSDPBHomeworkMemberBuilder*) setStatus:(XCSDPBHomeworkStatus) value {
  resultHomeworkMember.hasStatus = YES;
  resultHomeworkMember.status = value;
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) clearStatus {
  resultHomeworkMember.hasStatus = NO;
  resultHomeworkMember.status = XCSDPBHomeworkStatusUnfinished;
  return self;
}
- (BOOL) hasScore {
  return resultHomeworkMember.hasScore;
}
- (SInt32) score {
  return resultHomeworkMember.score;
}
- (XCSDPBHomeworkMemberBuilder*) setScore:(SInt32) value {
  resultHomeworkMember.hasScore = YES;
  resultHomeworkMember.score = value;
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) clearScore {
  resultHomeworkMember.hasScore = NO;
  resultHomeworkMember.score = 0;
  return self;
}
- (BOOL) hasSpecialAttention {
  return resultHomeworkMember.hasSpecialAttention;
}
- (BOOL) specialAttention {
  return resultHomeworkMember.specialAttention;
}
- (XCSDPBHomeworkMemberBuilder*) setSpecialAttention:(BOOL) value {
  resultHomeworkMember.hasSpecialAttention = YES;
  resultHomeworkMember.specialAttention = value;
  return self;
}
- (XCSDPBHomeworkMemberBuilder*) clearSpecialAttention {
  resultHomeworkMember.hasSpecialAttention = NO;
  resultHomeworkMember.specialAttention = NO;
  return self;
}
@end

@interface XCSDPBHomeworkMemberListRequest ()
@property SInt64 homeworkId;
@property SInt32 pageNum;
@end

@implementation XCSDPBHomeworkMemberListRequest

- (BOOL) hasHomeworkId {
  return !!hasHomeworkId_;
}
- (void) setHasHomeworkId:(BOOL) _value_ {
  hasHomeworkId_ = !!_value_;
}
@synthesize homeworkId;
- (BOOL) hasPageNum {
  return !!hasPageNum_;
}
- (void) setHasPageNum:(BOOL) _value_ {
  hasPageNum_ = !!_value_;
}
@synthesize pageNum;
- (instancetype) init {
  if ((self = [super init])) {
    self.homeworkId = 0L;
    self.pageNum = 0;
  }
  return self;
}
static XCSDPBHomeworkMemberListRequest* defaultXCSDPBHomeworkMemberListRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkMemberListRequest class]) {
    defaultXCSDPBHomeworkMemberListRequestInstance = [[XCSDPBHomeworkMemberListRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkMemberListRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkMemberListRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasHomeworkId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHomeworkId) {
    [output writeInt64:1 value:self.homeworkId];
  }
  if (self.hasPageNum) {
    [output writeInt32:2 value:self.pageNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasHomeworkId) {
    size_ += computeInt64Size(1, self.homeworkId);
  }
  if (self.hasPageNum) {
    size_ += computeInt32Size(2, self.pageNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkMemberListRequest*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkMemberListRequest*)[[[XCSDPBHomeworkMemberListRequest builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkMemberListRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMemberListRequest*)[[[XCSDPBHomeworkMemberListRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMemberListRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkMemberListRequest*)[[[XCSDPBHomeworkMemberListRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkMemberListRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMemberListRequest*)[[[XCSDPBHomeworkMemberListRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMemberListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkMemberListRequest*)[[[XCSDPBHomeworkMemberListRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkMemberListRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMemberListRequest*)[[[XCSDPBHomeworkMemberListRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMemberListRequestBuilder*) builder {
  return [[XCSDPBHomeworkMemberListRequestBuilder alloc] init];
}
+ (XCSDPBHomeworkMemberListRequestBuilder*) builderWithPrototype:(XCSDPBHomeworkMemberListRequest*) prototype {
  return [[XCSDPBHomeworkMemberListRequest builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkMemberListRequestBuilder*) builder {
  return [XCSDPBHomeworkMemberListRequest builder];
}
- (XCSDPBHomeworkMemberListRequestBuilder*) toBuilder {
  return [XCSDPBHomeworkMemberListRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasHomeworkId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"homeworkId", [NSNumber numberWithLongLong:self.homeworkId]];
  }
  if (self.hasPageNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageNum", [NSNumber numberWithInteger:self.pageNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasHomeworkId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.homeworkId] forKey: @"homeworkId"];
  }
  if (self.hasPageNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageNum] forKey: @"pageNum"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkMemberListRequest class]]) {
    return NO;
  }
  XCSDPBHomeworkMemberListRequest *otherMessage = other;
  return
      self.hasHomeworkId == otherMessage.hasHomeworkId &&
      (!self.hasHomeworkId || self.homeworkId == otherMessage.homeworkId) &&
      self.hasPageNum == otherMessage.hasPageNum &&
      (!self.hasPageNum || self.pageNum == otherMessage.pageNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasHomeworkId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.homeworkId] hash];
  }
  if (self.hasPageNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkMemberListRequestBuilder()
@property (strong) XCSDPBHomeworkMemberListRequest* resultHomeworkMemberListRequest;
@end

@implementation XCSDPBHomeworkMemberListRequestBuilder
@synthesize resultHomeworkMemberListRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkMemberListRequest = [[XCSDPBHomeworkMemberListRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkMemberListRequest;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) clear {
  self.resultHomeworkMemberListRequest = [[XCSDPBHomeworkMemberListRequest alloc] init];
  return self;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) clone {
  return [XCSDPBHomeworkMemberListRequest builderWithPrototype:resultHomeworkMemberListRequest];
}
- (XCSDPBHomeworkMemberListRequest*) defaultInstance {
  return [XCSDPBHomeworkMemberListRequest defaultInstance];
}
- (XCSDPBHomeworkMemberListRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkMemberListRequest*) buildPartial {
  XCSDPBHomeworkMemberListRequest* returnMe = resultHomeworkMemberListRequest;
  self.resultHomeworkMemberListRequest = nil;
  return returnMe;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) mergeFrom:(XCSDPBHomeworkMemberListRequest*) other {
  if (other == [XCSDPBHomeworkMemberListRequest defaultInstance]) {
    return self;
  }
  if (other.hasHomeworkId) {
    [self setHomeworkId:other.homeworkId];
  }
  if (other.hasPageNum) {
    [self setPageNum:other.pageNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkMemberListRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setHomeworkId:[input readInt64]];
        break;
      }
      case 16: {
        [self setPageNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasHomeworkId {
  return resultHomeworkMemberListRequest.hasHomeworkId;
}
- (SInt64) homeworkId {
  return resultHomeworkMemberListRequest.homeworkId;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) setHomeworkId:(SInt64) value {
  resultHomeworkMemberListRequest.hasHomeworkId = YES;
  resultHomeworkMemberListRequest.homeworkId = value;
  return self;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) clearHomeworkId {
  resultHomeworkMemberListRequest.hasHomeworkId = NO;
  resultHomeworkMemberListRequest.homeworkId = 0L;
  return self;
}
- (BOOL) hasPageNum {
  return resultHomeworkMemberListRequest.hasPageNum;
}
- (SInt32) pageNum {
  return resultHomeworkMemberListRequest.pageNum;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) setPageNum:(SInt32) value {
  resultHomeworkMemberListRequest.hasPageNum = YES;
  resultHomeworkMemberListRequest.pageNum = value;
  return self;
}
- (XCSDPBHomeworkMemberListRequestBuilder*) clearPageNum {
  resultHomeworkMemberListRequest.hasPageNum = NO;
  resultHomeworkMemberListRequest.pageNum = 0;
  return self;
}
@end

@interface XCSDPBHomeworkMemberListResponse ()
@property (strong) NSMutableArray * membersArray;
@property BOOL hasMore;
@end

@implementation XCSDPBHomeworkMemberListResponse

@synthesize membersArray;
@dynamic members;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static XCSDPBHomeworkMemberListResponse* defaultXCSDPBHomeworkMemberListResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkMemberListResponse class]) {
    defaultXCSDPBHomeworkMemberListResponseInstance = [[XCSDPBHomeworkMemberListResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkMemberListResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkMemberListResponseInstance;
}
- (NSArray *)members {
  return membersArray;
}
- (XCSDPBHomeworkMember*)membersAtIndex:(NSUInteger)index {
  return [membersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitmembers = YES;
   [self.members enumerateObjectsUsingBlock:^(XCSDPBHomeworkMember *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmembers = NO;
      *stop = YES;
    }
  }];
  if (!isInitmembers) return isInitmembers;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.membersArray enumerateObjectsUsingBlock:^(XCSDPBHomeworkMember *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.membersArray enumerateObjectsUsingBlock:^(XCSDPBHomeworkMember *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkMemberListResponse*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkMemberListResponse*)[[[XCSDPBHomeworkMemberListResponse builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkMemberListResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMemberListResponse*)[[[XCSDPBHomeworkMemberListResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMemberListResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkMemberListResponse*)[[[XCSDPBHomeworkMemberListResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkMemberListResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMemberListResponse*)[[[XCSDPBHomeworkMemberListResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMemberListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkMemberListResponse*)[[[XCSDPBHomeworkMemberListResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkMemberListResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkMemberListResponse*)[[[XCSDPBHomeworkMemberListResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkMemberListResponseBuilder*) builder {
  return [[XCSDPBHomeworkMemberListResponseBuilder alloc] init];
}
+ (XCSDPBHomeworkMemberListResponseBuilder*) builderWithPrototype:(XCSDPBHomeworkMemberListResponse*) prototype {
  return [[XCSDPBHomeworkMemberListResponse builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkMemberListResponseBuilder*) builder {
  return [XCSDPBHomeworkMemberListResponse builder];
}
- (XCSDPBHomeworkMemberListResponseBuilder*) toBuilder {
  return [XCSDPBHomeworkMemberListResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.membersArray enumerateObjectsUsingBlock:^(XCSDPBHomeworkMember *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"members"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (XCSDPBHomeworkMember* element in self.membersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"members"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkMemberListResponse class]]) {
    return NO;
  }
  XCSDPBHomeworkMemberListResponse *otherMessage = other;
  return
      [self.membersArray isEqualToArray:otherMessage.membersArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.membersArray enumerateObjectsUsingBlock:^(XCSDPBHomeworkMember *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkMemberListResponseBuilder()
@property (strong) XCSDPBHomeworkMemberListResponse* resultHomeworkMemberListResponse;
@end

@implementation XCSDPBHomeworkMemberListResponseBuilder
@synthesize resultHomeworkMemberListResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkMemberListResponse = [[XCSDPBHomeworkMemberListResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkMemberListResponse;
}
- (XCSDPBHomeworkMemberListResponseBuilder*) clear {
  self.resultHomeworkMemberListResponse = [[XCSDPBHomeworkMemberListResponse alloc] init];
  return self;
}
- (XCSDPBHomeworkMemberListResponseBuilder*) clone {
  return [XCSDPBHomeworkMemberListResponse builderWithPrototype:resultHomeworkMemberListResponse];
}
- (XCSDPBHomeworkMemberListResponse*) defaultInstance {
  return [XCSDPBHomeworkMemberListResponse defaultInstance];
}
- (XCSDPBHomeworkMemberListResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkMemberListResponse*) buildPartial {
  XCSDPBHomeworkMemberListResponse* returnMe = resultHomeworkMemberListResponse;
  self.resultHomeworkMemberListResponse = nil;
  return returnMe;
}
- (XCSDPBHomeworkMemberListResponseBuilder*) mergeFrom:(XCSDPBHomeworkMemberListResponse*) other {
  if (other == [XCSDPBHomeworkMemberListResponse defaultInstance]) {
    return self;
  }
  if (other.membersArray.count > 0) {
    if (resultHomeworkMemberListResponse.membersArray == nil) {
      resultHomeworkMemberListResponse.membersArray = [[NSMutableArray alloc] initWithArray:other.membersArray];
    } else {
      [resultHomeworkMemberListResponse.membersArray addObjectsFromArray:other.membersArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkMemberListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkMemberListResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        XCSDPBHomeworkMemberBuilder* subBuilder = [XCSDPBHomeworkMember builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMembers:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)members {
  return resultHomeworkMemberListResponse.membersArray;
}
- (XCSDPBHomeworkMember*)membersAtIndex:(NSUInteger)index {
  return [resultHomeworkMemberListResponse membersAtIndex:index];
}
- (XCSDPBHomeworkMemberListResponseBuilder *)addMembers:(XCSDPBHomeworkMember*)value {
  if (resultHomeworkMemberListResponse.membersArray == nil) {
    resultHomeworkMemberListResponse.membersArray = [[NSMutableArray alloc]init];
  }
  [resultHomeworkMemberListResponse.membersArray addObject:value];
  return self;
}
- (XCSDPBHomeworkMemberListResponseBuilder *)setMembersArray:(NSArray *)array {
  resultHomeworkMemberListResponse.membersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (XCSDPBHomeworkMemberListResponseBuilder *)clearMembers {
  resultHomeworkMemberListResponse.membersArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultHomeworkMemberListResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultHomeworkMemberListResponse.hasMore;
}
- (XCSDPBHomeworkMemberListResponseBuilder*) setHasMore:(BOOL) value {
  resultHomeworkMemberListResponse.hasHasMore = YES;
  resultHomeworkMemberListResponse.hasMore = value;
  return self;
}
- (XCSDPBHomeworkMemberListResponseBuilder*) clearHasMore {
  resultHomeworkMemberListResponse.hasHasMore = NO;
  resultHomeworkMemberListResponse.hasMore = NO;
  return self;
}
@end

@interface XCSDPBGenerateHomeworkRequest ()
@property SInt64 classId;
@end

@implementation XCSDPBGenerateHomeworkRequest

- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (instancetype) init {
  if ((self = [super init])) {
    self.classId = 0L;
  }
  return self;
}
static XCSDPBGenerateHomeworkRequest* defaultXCSDPBGenerateHomeworkRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBGenerateHomeworkRequest class]) {
    defaultXCSDPBGenerateHomeworkRequestInstance = [[XCSDPBGenerateHomeworkRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBGenerateHomeworkRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBGenerateHomeworkRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasClassId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClassId) {
    [output writeInt64:1 value:self.classId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClassId) {
    size_ += computeInt64Size(1, self.classId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBGenerateHomeworkRequest*) parseFromData:(NSData*) data {
  return (XCSDPBGenerateHomeworkRequest*)[[[XCSDPBGenerateHomeworkRequest builder] mergeFromData:data] build];
}
+ (XCSDPBGenerateHomeworkRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkRequest*)[[[XCSDPBGenerateHomeworkRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBGenerateHomeworkRequest*)[[[XCSDPBGenerateHomeworkRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBGenerateHomeworkRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkRequest*)[[[XCSDPBGenerateHomeworkRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBGenerateHomeworkRequest*)[[[XCSDPBGenerateHomeworkRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBGenerateHomeworkRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkRequest*)[[[XCSDPBGenerateHomeworkRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkRequestBuilder*) builder {
  return [[XCSDPBGenerateHomeworkRequestBuilder alloc] init];
}
+ (XCSDPBGenerateHomeworkRequestBuilder*) builderWithPrototype:(XCSDPBGenerateHomeworkRequest*) prototype {
  return [[XCSDPBGenerateHomeworkRequest builder] mergeFrom:prototype];
}
- (XCSDPBGenerateHomeworkRequestBuilder*) builder {
  return [XCSDPBGenerateHomeworkRequest builder];
}
- (XCSDPBGenerateHomeworkRequestBuilder*) toBuilder {
  return [XCSDPBGenerateHomeworkRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBGenerateHomeworkRequest class]]) {
    return NO;
  }
  XCSDPBGenerateHomeworkRequest *otherMessage = other;
  return
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBGenerateHomeworkRequestBuilder()
@property (strong) XCSDPBGenerateHomeworkRequest* resultGenerateHomeworkRequest;
@end

@implementation XCSDPBGenerateHomeworkRequestBuilder
@synthesize resultGenerateHomeworkRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGenerateHomeworkRequest = [[XCSDPBGenerateHomeworkRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGenerateHomeworkRequest;
}
- (XCSDPBGenerateHomeworkRequestBuilder*) clear {
  self.resultGenerateHomeworkRequest = [[XCSDPBGenerateHomeworkRequest alloc] init];
  return self;
}
- (XCSDPBGenerateHomeworkRequestBuilder*) clone {
  return [XCSDPBGenerateHomeworkRequest builderWithPrototype:resultGenerateHomeworkRequest];
}
- (XCSDPBGenerateHomeworkRequest*) defaultInstance {
  return [XCSDPBGenerateHomeworkRequest defaultInstance];
}
- (XCSDPBGenerateHomeworkRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBGenerateHomeworkRequest*) buildPartial {
  XCSDPBGenerateHomeworkRequest* returnMe = resultGenerateHomeworkRequest;
  self.resultGenerateHomeworkRequest = nil;
  return returnMe;
}
- (XCSDPBGenerateHomeworkRequestBuilder*) mergeFrom:(XCSDPBGenerateHomeworkRequest*) other {
  if (other == [XCSDPBGenerateHomeworkRequest defaultInstance]) {
    return self;
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBGenerateHomeworkRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBGenerateHomeworkRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClassId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasClassId {
  return resultGenerateHomeworkRequest.hasClassId;
}
- (SInt64) classId {
  return resultGenerateHomeworkRequest.classId;
}
- (XCSDPBGenerateHomeworkRequestBuilder*) setClassId:(SInt64) value {
  resultGenerateHomeworkRequest.hasClassId = YES;
  resultGenerateHomeworkRequest.classId = value;
  return self;
}
- (XCSDPBGenerateHomeworkRequestBuilder*) clearClassId {
  resultGenerateHomeworkRequest.hasClassId = NO;
  resultGenerateHomeworkRequest.classId = 0L;
  return self;
}
@end

@interface XCSDPBGenerateHomeworkResponse ()
@property (strong) NSMutableArray * userHomeworksArray;
@end

@implementation XCSDPBGenerateHomeworkResponse

@synthesize userHomeworksArray;
@dynamic userHomeworks;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static XCSDPBGenerateHomeworkResponse* defaultXCSDPBGenerateHomeworkResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBGenerateHomeworkResponse class]) {
    defaultXCSDPBGenerateHomeworkResponseInstance = [[XCSDPBGenerateHomeworkResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBGenerateHomeworkResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBGenerateHomeworkResponseInstance;
}
- (NSArray *)userHomeworks {
  return userHomeworksArray;
}
- (XCSDPBGenerateHomeworkResponseUserHomework*)userHomeworksAtIndex:(NSUInteger)index {
  return [userHomeworksArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInituserHomeworks = YES;
   [self.userHomeworks enumerateObjectsUsingBlock:^(XCSDPBGenerateHomeworkResponseUserHomework *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInituserHomeworks = NO;
      *stop = YES;
    }
  }];
  if (!isInituserHomeworks) return isInituserHomeworks;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.userHomeworksArray enumerateObjectsUsingBlock:^(XCSDPBGenerateHomeworkResponseUserHomework *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.userHomeworksArray enumerateObjectsUsingBlock:^(XCSDPBGenerateHomeworkResponseUserHomework *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBGenerateHomeworkResponse*) parseFromData:(NSData*) data {
  return (XCSDPBGenerateHomeworkResponse*)[[[XCSDPBGenerateHomeworkResponse builder] mergeFromData:data] build];
}
+ (XCSDPBGenerateHomeworkResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkResponse*)[[[XCSDPBGenerateHomeworkResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBGenerateHomeworkResponse*)[[[XCSDPBGenerateHomeworkResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBGenerateHomeworkResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkResponse*)[[[XCSDPBGenerateHomeworkResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBGenerateHomeworkResponse*)[[[XCSDPBGenerateHomeworkResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBGenerateHomeworkResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkResponse*)[[[XCSDPBGenerateHomeworkResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkResponseBuilder*) builder {
  return [[XCSDPBGenerateHomeworkResponseBuilder alloc] init];
}
+ (XCSDPBGenerateHomeworkResponseBuilder*) builderWithPrototype:(XCSDPBGenerateHomeworkResponse*) prototype {
  return [[XCSDPBGenerateHomeworkResponse builder] mergeFrom:prototype];
}
- (XCSDPBGenerateHomeworkResponseBuilder*) builder {
  return [XCSDPBGenerateHomeworkResponse builder];
}
- (XCSDPBGenerateHomeworkResponseBuilder*) toBuilder {
  return [XCSDPBGenerateHomeworkResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.userHomeworksArray enumerateObjectsUsingBlock:^(XCSDPBGenerateHomeworkResponseUserHomework *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"userHomeworks"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (XCSDPBGenerateHomeworkResponseUserHomework* element in self.userHomeworksArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"userHomeworks"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBGenerateHomeworkResponse class]]) {
    return NO;
  }
  XCSDPBGenerateHomeworkResponse *otherMessage = other;
  return
      [self.userHomeworksArray isEqualToArray:otherMessage.userHomeworksArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.userHomeworksArray enumerateObjectsUsingBlock:^(XCSDPBGenerateHomeworkResponseUserHomework *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBGenerateHomeworkResponseUserHomework ()
@property SInt64 childUserId;
@property (strong) NSString* name;
@property (strong) NSString* avatar;
@property SInt32 generateCount;
@property SInt32 remainMaxCount;
@property BOOL specialAttention;
@end

@implementation XCSDPBGenerateHomeworkResponseUserHomework

- (BOOL) hasChildUserId {
  return !!hasChildUserId_;
}
- (void) setHasChildUserId:(BOOL) _value_ {
  hasChildUserId_ = !!_value_;
}
@synthesize childUserId;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasGenerateCount {
  return !!hasGenerateCount_;
}
- (void) setHasGenerateCount:(BOOL) _value_ {
  hasGenerateCount_ = !!_value_;
}
@synthesize generateCount;
- (BOOL) hasRemainMaxCount {
  return !!hasRemainMaxCount_;
}
- (void) setHasRemainMaxCount:(BOOL) _value_ {
  hasRemainMaxCount_ = !!_value_;
}
@synthesize remainMaxCount;
- (BOOL) hasSpecialAttention {
  return !!hasSpecialAttention_;
}
- (void) setHasSpecialAttention:(BOOL) _value_ {
  hasSpecialAttention_ = !!_value_;
}
- (BOOL) specialAttention {
  return !!specialAttention_;
}
- (void) setSpecialAttention:(BOOL) _value_ {
  specialAttention_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.childUserId = 0L;
    self.name = @"";
    self.avatar = @"";
    self.generateCount = 0;
    self.remainMaxCount = 0;
    self.specialAttention = NO;
  }
  return self;
}
static XCSDPBGenerateHomeworkResponseUserHomework* defaultXCSDPBGenerateHomeworkResponseUserHomeworkInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBGenerateHomeworkResponseUserHomework class]) {
    defaultXCSDPBGenerateHomeworkResponseUserHomeworkInstance = [[XCSDPBGenerateHomeworkResponseUserHomework alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBGenerateHomeworkResponseUserHomeworkInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBGenerateHomeworkResponseUserHomeworkInstance;
}
- (BOOL) isInitialized {
  if (!self.hasChildUserId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasGenerateCount) {
    return NO;
  }
  if (!self.hasRemainMaxCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasChildUserId) {
    [output writeInt64:1 value:self.childUserId];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasAvatar) {
    [output writeString:3 value:self.avatar];
  }
  if (self.hasGenerateCount) {
    [output writeInt32:4 value:self.generateCount];
  }
  if (self.hasRemainMaxCount) {
    [output writeInt32:5 value:self.remainMaxCount];
  }
  if (self.hasSpecialAttention) {
    [output writeBool:6 value:self.specialAttention];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasChildUserId) {
    size_ += computeInt64Size(1, self.childUserId);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(3, self.avatar);
  }
  if (self.hasGenerateCount) {
    size_ += computeInt32Size(4, self.generateCount);
  }
  if (self.hasRemainMaxCount) {
    size_ += computeInt32Size(5, self.remainMaxCount);
  }
  if (self.hasSpecialAttention) {
    size_ += computeBoolSize(6, self.specialAttention);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBGenerateHomeworkResponseUserHomework*) parseFromData:(NSData*) data {
  return (XCSDPBGenerateHomeworkResponseUserHomework*)[[[XCSDPBGenerateHomeworkResponseUserHomework builder] mergeFromData:data] build];
}
+ (XCSDPBGenerateHomeworkResponseUserHomework*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkResponseUserHomework*)[[[XCSDPBGenerateHomeworkResponseUserHomework builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkResponseUserHomework*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBGenerateHomeworkResponseUserHomework*)[[[XCSDPBGenerateHomeworkResponseUserHomework builder] mergeFromInputStream:input] build];
}
+ (XCSDPBGenerateHomeworkResponseUserHomework*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkResponseUserHomework*)[[[XCSDPBGenerateHomeworkResponseUserHomework builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkResponseUserHomework*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBGenerateHomeworkResponseUserHomework*)[[[XCSDPBGenerateHomeworkResponseUserHomework builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBGenerateHomeworkResponseUserHomework*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBGenerateHomeworkResponseUserHomework*)[[[XCSDPBGenerateHomeworkResponseUserHomework builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) builder {
  return [[XCSDPBGenerateHomeworkResponseUserHomeworkBuilder alloc] init];
}
+ (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) builderWithPrototype:(XCSDPBGenerateHomeworkResponseUserHomework*) prototype {
  return [[XCSDPBGenerateHomeworkResponseUserHomework builder] mergeFrom:prototype];
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) builder {
  return [XCSDPBGenerateHomeworkResponseUserHomework builder];
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) toBuilder {
  return [XCSDPBGenerateHomeworkResponseUserHomework builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasChildUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"childUserId", [NSNumber numberWithLongLong:self.childUserId]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasGenerateCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"generateCount", [NSNumber numberWithInteger:self.generateCount]];
  }
  if (self.hasRemainMaxCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"remainMaxCount", [NSNumber numberWithInteger:self.remainMaxCount]];
  }
  if (self.hasSpecialAttention) {
    [output appendFormat:@"%@%@: %@\n", indent, @"specialAttention", [NSNumber numberWithBool:self.specialAttention]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasChildUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.childUserId] forKey: @"childUserId"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasGenerateCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.generateCount] forKey: @"generateCount"];
  }
  if (self.hasRemainMaxCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.remainMaxCount] forKey: @"remainMaxCount"];
  }
  if (self.hasSpecialAttention) {
    [dictionary setObject: [NSNumber numberWithBool:self.specialAttention] forKey: @"specialAttention"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBGenerateHomeworkResponseUserHomework class]]) {
    return NO;
  }
  XCSDPBGenerateHomeworkResponseUserHomework *otherMessage = other;
  return
      self.hasChildUserId == otherMessage.hasChildUserId &&
      (!self.hasChildUserId || self.childUserId == otherMessage.childUserId) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasGenerateCount == otherMessage.hasGenerateCount &&
      (!self.hasGenerateCount || self.generateCount == otherMessage.generateCount) &&
      self.hasRemainMaxCount == otherMessage.hasRemainMaxCount &&
      (!self.hasRemainMaxCount || self.remainMaxCount == otherMessage.remainMaxCount) &&
      self.hasSpecialAttention == otherMessage.hasSpecialAttention &&
      (!self.hasSpecialAttention || self.specialAttention == otherMessage.specialAttention) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasChildUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.childUserId] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasGenerateCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.generateCount] hash];
  }
  if (self.hasRemainMaxCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.remainMaxCount] hash];
  }
  if (self.hasSpecialAttention) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.specialAttention] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBGenerateHomeworkResponseUserHomeworkBuilder()
@property (strong) XCSDPBGenerateHomeworkResponseUserHomework* resultUserHomework;
@end

@implementation XCSDPBGenerateHomeworkResponseUserHomeworkBuilder
@synthesize resultUserHomework;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultUserHomework = [[XCSDPBGenerateHomeworkResponseUserHomework alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultUserHomework;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clear {
  self.resultUserHomework = [[XCSDPBGenerateHomeworkResponseUserHomework alloc] init];
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clone {
  return [XCSDPBGenerateHomeworkResponseUserHomework builderWithPrototype:resultUserHomework];
}
- (XCSDPBGenerateHomeworkResponseUserHomework*) defaultInstance {
  return [XCSDPBGenerateHomeworkResponseUserHomework defaultInstance];
}
- (XCSDPBGenerateHomeworkResponseUserHomework*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBGenerateHomeworkResponseUserHomework*) buildPartial {
  XCSDPBGenerateHomeworkResponseUserHomework* returnMe = resultUserHomework;
  self.resultUserHomework = nil;
  return returnMe;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) mergeFrom:(XCSDPBGenerateHomeworkResponseUserHomework*) other {
  if (other == [XCSDPBGenerateHomeworkResponseUserHomework defaultInstance]) {
    return self;
  }
  if (other.hasChildUserId) {
    [self setChildUserId:other.childUserId];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasGenerateCount) {
    [self setGenerateCount:other.generateCount];
  }
  if (other.hasRemainMaxCount) {
    [self setRemainMaxCount:other.remainMaxCount];
  }
  if (other.hasSpecialAttention) {
    [self setSpecialAttention:other.specialAttention];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setChildUserId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setAvatar:[input readString]];
        break;
      }
      case 32: {
        [self setGenerateCount:[input readInt32]];
        break;
      }
      case 40: {
        [self setRemainMaxCount:[input readInt32]];
        break;
      }
      case 48: {
        [self setSpecialAttention:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasChildUserId {
  return resultUserHomework.hasChildUserId;
}
- (SInt64) childUserId {
  return resultUserHomework.childUserId;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) setChildUserId:(SInt64) value {
  resultUserHomework.hasChildUserId = YES;
  resultUserHomework.childUserId = value;
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clearChildUserId {
  resultUserHomework.hasChildUserId = NO;
  resultUserHomework.childUserId = 0L;
  return self;
}
- (BOOL) hasName {
  return resultUserHomework.hasName;
}
- (NSString*) name {
  return resultUserHomework.name;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) setName:(NSString*) value {
  resultUserHomework.hasName = YES;
  resultUserHomework.name = value;
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clearName {
  resultUserHomework.hasName = NO;
  resultUserHomework.name = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultUserHomework.hasAvatar;
}
- (NSString*) avatar {
  return resultUserHomework.avatar;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) setAvatar:(NSString*) value {
  resultUserHomework.hasAvatar = YES;
  resultUserHomework.avatar = value;
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clearAvatar {
  resultUserHomework.hasAvatar = NO;
  resultUserHomework.avatar = @"";
  return self;
}
- (BOOL) hasGenerateCount {
  return resultUserHomework.hasGenerateCount;
}
- (SInt32) generateCount {
  return resultUserHomework.generateCount;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) setGenerateCount:(SInt32) value {
  resultUserHomework.hasGenerateCount = YES;
  resultUserHomework.generateCount = value;
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clearGenerateCount {
  resultUserHomework.hasGenerateCount = NO;
  resultUserHomework.generateCount = 0;
  return self;
}
- (BOOL) hasRemainMaxCount {
  return resultUserHomework.hasRemainMaxCount;
}
- (SInt32) remainMaxCount {
  return resultUserHomework.remainMaxCount;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) setRemainMaxCount:(SInt32) value {
  resultUserHomework.hasRemainMaxCount = YES;
  resultUserHomework.remainMaxCount = value;
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clearRemainMaxCount {
  resultUserHomework.hasRemainMaxCount = NO;
  resultUserHomework.remainMaxCount = 0;
  return self;
}
- (BOOL) hasSpecialAttention {
  return resultUserHomework.hasSpecialAttention;
}
- (BOOL) specialAttention {
  return resultUserHomework.specialAttention;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) setSpecialAttention:(BOOL) value {
  resultUserHomework.hasSpecialAttention = YES;
  resultUserHomework.specialAttention = value;
  return self;
}
- (XCSDPBGenerateHomeworkResponseUserHomeworkBuilder*) clearSpecialAttention {
  resultUserHomework.hasSpecialAttention = NO;
  resultUserHomework.specialAttention = NO;
  return self;
}
@end

@interface XCSDPBGenerateHomeworkResponseBuilder()
@property (strong) XCSDPBGenerateHomeworkResponse* resultGenerateHomeworkResponse;
@end

@implementation XCSDPBGenerateHomeworkResponseBuilder
@synthesize resultGenerateHomeworkResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGenerateHomeworkResponse = [[XCSDPBGenerateHomeworkResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGenerateHomeworkResponse;
}
- (XCSDPBGenerateHomeworkResponseBuilder*) clear {
  self.resultGenerateHomeworkResponse = [[XCSDPBGenerateHomeworkResponse alloc] init];
  return self;
}
- (XCSDPBGenerateHomeworkResponseBuilder*) clone {
  return [XCSDPBGenerateHomeworkResponse builderWithPrototype:resultGenerateHomeworkResponse];
}
- (XCSDPBGenerateHomeworkResponse*) defaultInstance {
  return [XCSDPBGenerateHomeworkResponse defaultInstance];
}
- (XCSDPBGenerateHomeworkResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBGenerateHomeworkResponse*) buildPartial {
  XCSDPBGenerateHomeworkResponse* returnMe = resultGenerateHomeworkResponse;
  self.resultGenerateHomeworkResponse = nil;
  return returnMe;
}
- (XCSDPBGenerateHomeworkResponseBuilder*) mergeFrom:(XCSDPBGenerateHomeworkResponse*) other {
  if (other == [XCSDPBGenerateHomeworkResponse defaultInstance]) {
    return self;
  }
  if (other.userHomeworksArray.count > 0) {
    if (resultGenerateHomeworkResponse.userHomeworksArray == nil) {
      resultGenerateHomeworkResponse.userHomeworksArray = [[NSMutableArray alloc] initWithArray:other.userHomeworksArray];
    } else {
      [resultGenerateHomeworkResponse.userHomeworksArray addObjectsFromArray:other.userHomeworksArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBGenerateHomeworkResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBGenerateHomeworkResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        XCSDPBGenerateHomeworkResponseUserHomeworkBuilder* subBuilder = [XCSDPBGenerateHomeworkResponseUserHomework builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUserHomeworks:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)userHomeworks {
  return resultGenerateHomeworkResponse.userHomeworksArray;
}
- (XCSDPBGenerateHomeworkResponseUserHomework*)userHomeworksAtIndex:(NSUInteger)index {
  return [resultGenerateHomeworkResponse userHomeworksAtIndex:index];
}
- (XCSDPBGenerateHomeworkResponseBuilder *)addUserHomeworks:(XCSDPBGenerateHomeworkResponseUserHomework*)value {
  if (resultGenerateHomeworkResponse.userHomeworksArray == nil) {
    resultGenerateHomeworkResponse.userHomeworksArray = [[NSMutableArray alloc]init];
  }
  [resultGenerateHomeworkResponse.userHomeworksArray addObject:value];
  return self;
}
- (XCSDPBGenerateHomeworkResponseBuilder *)setUserHomeworksArray:(NSArray *)array {
  resultGenerateHomeworkResponse.userHomeworksArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (XCSDPBGenerateHomeworkResponseBuilder *)clearUserHomeworks {
  resultGenerateHomeworkResponse.userHomeworksArray = nil;
  return self;
}
@end

@interface XCSDPBSendHomeworkRequest ()
@property SInt64 classId;
@property XCSDPBStudentScope scope;
@end

@implementation XCSDPBSendHomeworkRequest

- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (BOOL) hasScope {
  return !!hasScope_;
}
- (void) setHasScope:(BOOL) _value_ {
  hasScope_ = !!_value_;
}
@synthesize scope;
- (instancetype) init {
  if ((self = [super init])) {
    self.classId = 0L;
    self.scope = XCSDPBStudentScopeAll;
  }
  return self;
}
static XCSDPBSendHomeworkRequest* defaultXCSDPBSendHomeworkRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBSendHomeworkRequest class]) {
    defaultXCSDPBSendHomeworkRequestInstance = [[XCSDPBSendHomeworkRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBSendHomeworkRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBSendHomeworkRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasClassId) {
    return NO;
  }
  if (!self.hasScope) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClassId) {
    [output writeInt64:1 value:self.classId];
  }
  if (self.hasScope) {
    [output writeEnum:2 value:self.scope];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClassId) {
    size_ += computeInt64Size(1, self.classId);
  }
  if (self.hasScope) {
    size_ += computeEnumSize(2, self.scope);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBSendHomeworkRequest*) parseFromData:(NSData*) data {
  return (XCSDPBSendHomeworkRequest*)[[[XCSDPBSendHomeworkRequest builder] mergeFromData:data] build];
}
+ (XCSDPBSendHomeworkRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBSendHomeworkRequest*)[[[XCSDPBSendHomeworkRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBSendHomeworkRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBSendHomeworkRequest*)[[[XCSDPBSendHomeworkRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBSendHomeworkRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBSendHomeworkRequest*)[[[XCSDPBSendHomeworkRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBSendHomeworkRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBSendHomeworkRequest*)[[[XCSDPBSendHomeworkRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBSendHomeworkRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBSendHomeworkRequest*)[[[XCSDPBSendHomeworkRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBSendHomeworkRequestBuilder*) builder {
  return [[XCSDPBSendHomeworkRequestBuilder alloc] init];
}
+ (XCSDPBSendHomeworkRequestBuilder*) builderWithPrototype:(XCSDPBSendHomeworkRequest*) prototype {
  return [[XCSDPBSendHomeworkRequest builder] mergeFrom:prototype];
}
- (XCSDPBSendHomeworkRequestBuilder*) builder {
  return [XCSDPBSendHomeworkRequest builder];
}
- (XCSDPBSendHomeworkRequestBuilder*) toBuilder {
  return [XCSDPBSendHomeworkRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  if (self.hasScope) {
    [output appendFormat:@"%@%@: %@\n", indent, @"scope", NSStringFromXCSDPBStudentScope(self.scope)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  if (self.hasScope) {
    [dictionary setObject: @(self.scope) forKey: @"scope"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBSendHomeworkRequest class]]) {
    return NO;
  }
  XCSDPBSendHomeworkRequest *otherMessage = other;
  return
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      self.hasScope == otherMessage.hasScope &&
      (!self.hasScope || self.scope == otherMessage.scope) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  if (self.hasScope) {
    hashCode = hashCode * 31 + self.scope;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBSendHomeworkRequestBuilder()
@property (strong) XCSDPBSendHomeworkRequest* resultSendHomeworkRequest;
@end

@implementation XCSDPBSendHomeworkRequestBuilder
@synthesize resultSendHomeworkRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendHomeworkRequest = [[XCSDPBSendHomeworkRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendHomeworkRequest;
}
- (XCSDPBSendHomeworkRequestBuilder*) clear {
  self.resultSendHomeworkRequest = [[XCSDPBSendHomeworkRequest alloc] init];
  return self;
}
- (XCSDPBSendHomeworkRequestBuilder*) clone {
  return [XCSDPBSendHomeworkRequest builderWithPrototype:resultSendHomeworkRequest];
}
- (XCSDPBSendHomeworkRequest*) defaultInstance {
  return [XCSDPBSendHomeworkRequest defaultInstance];
}
- (XCSDPBSendHomeworkRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBSendHomeworkRequest*) buildPartial {
  XCSDPBSendHomeworkRequest* returnMe = resultSendHomeworkRequest;
  self.resultSendHomeworkRequest = nil;
  return returnMe;
}
- (XCSDPBSendHomeworkRequestBuilder*) mergeFrom:(XCSDPBSendHomeworkRequest*) other {
  if (other == [XCSDPBSendHomeworkRequest defaultInstance]) {
    return self;
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  if (other.hasScope) {
    [self setScope:other.scope];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBSendHomeworkRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBSendHomeworkRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClassId:[input readInt64]];
        break;
      }
      case 16: {
        XCSDPBStudentScope value = (XCSDPBStudentScope)[input readEnum];
        if (XCSDPBStudentScopeIsValidValue(value)) {
          [self setScope:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasClassId {
  return resultSendHomeworkRequest.hasClassId;
}
- (SInt64) classId {
  return resultSendHomeworkRequest.classId;
}
- (XCSDPBSendHomeworkRequestBuilder*) setClassId:(SInt64) value {
  resultSendHomeworkRequest.hasClassId = YES;
  resultSendHomeworkRequest.classId = value;
  return self;
}
- (XCSDPBSendHomeworkRequestBuilder*) clearClassId {
  resultSendHomeworkRequest.hasClassId = NO;
  resultSendHomeworkRequest.classId = 0L;
  return self;
}
- (BOOL) hasScope {
  return resultSendHomeworkRequest.hasScope;
}
- (XCSDPBStudentScope) scope {
  return resultSendHomeworkRequest.scope;
}
- (XCSDPBSendHomeworkRequestBuilder*) setScope:(XCSDPBStudentScope) value {
  resultSendHomeworkRequest.hasScope = YES;
  resultSendHomeworkRequest.scope = value;
  return self;
}
- (XCSDPBSendHomeworkRequestBuilder*) clearScope {
  resultSendHomeworkRequest.hasScope = NO;
  resultSendHomeworkRequest.scope = XCSDPBStudentScopeAll;
  return self;
}
@end

@interface XCSDPBSendHomeworkResponse ()
@end

@implementation XCSDPBSendHomeworkResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static XCSDPBSendHomeworkResponse* defaultXCSDPBSendHomeworkResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBSendHomeworkResponse class]) {
    defaultXCSDPBSendHomeworkResponseInstance = [[XCSDPBSendHomeworkResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBSendHomeworkResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBSendHomeworkResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBSendHomeworkResponse*) parseFromData:(NSData*) data {
  return (XCSDPBSendHomeworkResponse*)[[[XCSDPBSendHomeworkResponse builder] mergeFromData:data] build];
}
+ (XCSDPBSendHomeworkResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBSendHomeworkResponse*)[[[XCSDPBSendHomeworkResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBSendHomeworkResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBSendHomeworkResponse*)[[[XCSDPBSendHomeworkResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBSendHomeworkResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBSendHomeworkResponse*)[[[XCSDPBSendHomeworkResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBSendHomeworkResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBSendHomeworkResponse*)[[[XCSDPBSendHomeworkResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBSendHomeworkResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBSendHomeworkResponse*)[[[XCSDPBSendHomeworkResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBSendHomeworkResponseBuilder*) builder {
  return [[XCSDPBSendHomeworkResponseBuilder alloc] init];
}
+ (XCSDPBSendHomeworkResponseBuilder*) builderWithPrototype:(XCSDPBSendHomeworkResponse*) prototype {
  return [[XCSDPBSendHomeworkResponse builder] mergeFrom:prototype];
}
- (XCSDPBSendHomeworkResponseBuilder*) builder {
  return [XCSDPBSendHomeworkResponse builder];
}
- (XCSDPBSendHomeworkResponseBuilder*) toBuilder {
  return [XCSDPBSendHomeworkResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBSendHomeworkResponse class]]) {
    return NO;
  }
  XCSDPBSendHomeworkResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBSendHomeworkResponseBuilder()
@property (strong) XCSDPBSendHomeworkResponse* resultSendHomeworkResponse;
@end

@implementation XCSDPBSendHomeworkResponseBuilder
@synthesize resultSendHomeworkResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSendHomeworkResponse = [[XCSDPBSendHomeworkResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSendHomeworkResponse;
}
- (XCSDPBSendHomeworkResponseBuilder*) clear {
  self.resultSendHomeworkResponse = [[XCSDPBSendHomeworkResponse alloc] init];
  return self;
}
- (XCSDPBSendHomeworkResponseBuilder*) clone {
  return [XCSDPBSendHomeworkResponse builderWithPrototype:resultSendHomeworkResponse];
}
- (XCSDPBSendHomeworkResponse*) defaultInstance {
  return [XCSDPBSendHomeworkResponse defaultInstance];
}
- (XCSDPBSendHomeworkResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBSendHomeworkResponse*) buildPartial {
  XCSDPBSendHomeworkResponse* returnMe = resultSendHomeworkResponse;
  self.resultSendHomeworkResponse = nil;
  return returnMe;
}
- (XCSDPBSendHomeworkResponseBuilder*) mergeFrom:(XCSDPBSendHomeworkResponse*) other {
  if (other == [XCSDPBSendHomeworkResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBSendHomeworkResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBSendHomeworkResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface XCSDPBHomeworkRemainingCountRequest ()
@property SInt64 classId;
@end

@implementation XCSDPBHomeworkRemainingCountRequest

- (BOOL) hasClassId {
  return !!hasClassId_;
}
- (void) setHasClassId:(BOOL) _value_ {
  hasClassId_ = !!_value_;
}
@synthesize classId;
- (instancetype) init {
  if ((self = [super init])) {
    self.classId = 0L;
  }
  return self;
}
static XCSDPBHomeworkRemainingCountRequest* defaultXCSDPBHomeworkRemainingCountRequestInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkRemainingCountRequest class]) {
    defaultXCSDPBHomeworkRemainingCountRequestInstance = [[XCSDPBHomeworkRemainingCountRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRemainingCountRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRemainingCountRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasClassId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasClassId) {
    [output writeInt64:1 value:self.classId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasClassId) {
    size_ += computeInt64Size(1, self.classId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkRemainingCountRequest*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkRemainingCountRequest*)[[[XCSDPBHomeworkRemainingCountRequest builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkRemainingCountRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRemainingCountRequest*)[[[XCSDPBHomeworkRemainingCountRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRemainingCountRequest*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkRemainingCountRequest*)[[[XCSDPBHomeworkRemainingCountRequest builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkRemainingCountRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRemainingCountRequest*)[[[XCSDPBHomeworkRemainingCountRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRemainingCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkRemainingCountRequest*)[[[XCSDPBHomeworkRemainingCountRequest builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkRemainingCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRemainingCountRequest*)[[[XCSDPBHomeworkRemainingCountRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRemainingCountRequestBuilder*) builder {
  return [[XCSDPBHomeworkRemainingCountRequestBuilder alloc] init];
}
+ (XCSDPBHomeworkRemainingCountRequestBuilder*) builderWithPrototype:(XCSDPBHomeworkRemainingCountRequest*) prototype {
  return [[XCSDPBHomeworkRemainingCountRequest builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) builder {
  return [XCSDPBHomeworkRemainingCountRequest builder];
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) toBuilder {
  return [XCSDPBHomeworkRemainingCountRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasClassId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classId", [NSNumber numberWithLongLong:self.classId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasClassId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.classId] forKey: @"classId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkRemainingCountRequest class]]) {
    return NO;
  }
  XCSDPBHomeworkRemainingCountRequest *otherMessage = other;
  return
      self.hasClassId == otherMessage.hasClassId &&
      (!self.hasClassId || self.classId == otherMessage.classId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasClassId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.classId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkRemainingCountRequestBuilder()
@property (strong) XCSDPBHomeworkRemainingCountRequest* resultHomeworkRemainingCountRequest;
@end

@implementation XCSDPBHomeworkRemainingCountRequestBuilder
@synthesize resultHomeworkRemainingCountRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkRemainingCountRequest = [[XCSDPBHomeworkRemainingCountRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkRemainingCountRequest;
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) clear {
  self.resultHomeworkRemainingCountRequest = [[XCSDPBHomeworkRemainingCountRequest alloc] init];
  return self;
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) clone {
  return [XCSDPBHomeworkRemainingCountRequest builderWithPrototype:resultHomeworkRemainingCountRequest];
}
- (XCSDPBHomeworkRemainingCountRequest*) defaultInstance {
  return [XCSDPBHomeworkRemainingCountRequest defaultInstance];
}
- (XCSDPBHomeworkRemainingCountRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkRemainingCountRequest*) buildPartial {
  XCSDPBHomeworkRemainingCountRequest* returnMe = resultHomeworkRemainingCountRequest;
  self.resultHomeworkRemainingCountRequest = nil;
  return returnMe;
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) mergeFrom:(XCSDPBHomeworkRemainingCountRequest*) other {
  if (other == [XCSDPBHomeworkRemainingCountRequest defaultInstance]) {
    return self;
  }
  if (other.hasClassId) {
    [self setClassId:other.classId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setClassId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasClassId {
  return resultHomeworkRemainingCountRequest.hasClassId;
}
- (SInt64) classId {
  return resultHomeworkRemainingCountRequest.classId;
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) setClassId:(SInt64) value {
  resultHomeworkRemainingCountRequest.hasClassId = YES;
  resultHomeworkRemainingCountRequest.classId = value;
  return self;
}
- (XCSDPBHomeworkRemainingCountRequestBuilder*) clearClassId {
  resultHomeworkRemainingCountRequest.hasClassId = NO;
  resultHomeworkRemainingCountRequest.classId = 0L;
  return self;
}
@end

@interface XCSDPBHomeworkRemainingCountResponse ()
@property BOOL customizedStatus;
@property SInt32 unifiedCount;
@end

@implementation XCSDPBHomeworkRemainingCountResponse

- (BOOL) hasCustomizedStatus {
  return !!hasCustomizedStatus_;
}
- (void) setHasCustomizedStatus:(BOOL) _value_ {
  hasCustomizedStatus_ = !!_value_;
}
- (BOOL) customizedStatus {
  return !!customizedStatus_;
}
- (void) setCustomizedStatus:(BOOL) _value_ {
  customizedStatus_ = !!_value_;
}
- (BOOL) hasUnifiedCount {
  return !!hasUnifiedCount_;
}
- (void) setHasUnifiedCount:(BOOL) _value_ {
  hasUnifiedCount_ = !!_value_;
}
@synthesize unifiedCount;
- (instancetype) init {
  if ((self = [super init])) {
    self.customizedStatus = NO;
    self.unifiedCount = 0;
  }
  return self;
}
static XCSDPBHomeworkRemainingCountResponse* defaultXCSDPBHomeworkRemainingCountResponseInstance = nil;
+ (void) initialize {
  if (self == [XCSDPBHomeworkRemainingCountResponse class]) {
    defaultXCSDPBHomeworkRemainingCountResponseInstance = [[XCSDPBHomeworkRemainingCountResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRemainingCountResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultXCSDPBHomeworkRemainingCountResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCustomizedStatus) {
    return NO;
  }
  if (!self.hasUnifiedCount) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCustomizedStatus) {
    [output writeBool:1 value:self.customizedStatus];
  }
  if (self.hasUnifiedCount) {
    [output writeInt32:2 value:self.unifiedCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCustomizedStatus) {
    size_ += computeBoolSize(1, self.customizedStatus);
  }
  if (self.hasUnifiedCount) {
    size_ += computeInt32Size(2, self.unifiedCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (XCSDPBHomeworkRemainingCountResponse*) parseFromData:(NSData*) data {
  return (XCSDPBHomeworkRemainingCountResponse*)[[[XCSDPBHomeworkRemainingCountResponse builder] mergeFromData:data] build];
}
+ (XCSDPBHomeworkRemainingCountResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRemainingCountResponse*)[[[XCSDPBHomeworkRemainingCountResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRemainingCountResponse*) parseFromInputStream:(NSInputStream*) input {
  return (XCSDPBHomeworkRemainingCountResponse*)[[[XCSDPBHomeworkRemainingCountResponse builder] mergeFromInputStream:input] build];
}
+ (XCSDPBHomeworkRemainingCountResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRemainingCountResponse*)[[[XCSDPBHomeworkRemainingCountResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRemainingCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (XCSDPBHomeworkRemainingCountResponse*)[[[XCSDPBHomeworkRemainingCountResponse builder] mergeFromCodedInputStream:input] build];
}
+ (XCSDPBHomeworkRemainingCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (XCSDPBHomeworkRemainingCountResponse*)[[[XCSDPBHomeworkRemainingCountResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (XCSDPBHomeworkRemainingCountResponseBuilder*) builder {
  return [[XCSDPBHomeworkRemainingCountResponseBuilder alloc] init];
}
+ (XCSDPBHomeworkRemainingCountResponseBuilder*) builderWithPrototype:(XCSDPBHomeworkRemainingCountResponse*) prototype {
  return [[XCSDPBHomeworkRemainingCountResponse builder] mergeFrom:prototype];
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) builder {
  return [XCSDPBHomeworkRemainingCountResponse builder];
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) toBuilder {
  return [XCSDPBHomeworkRemainingCountResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCustomizedStatus) {
    [output appendFormat:@"%@%@: %@\n", indent, @"customizedStatus", [NSNumber numberWithBool:self.customizedStatus]];
  }
  if (self.hasUnifiedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"unifiedCount", [NSNumber numberWithInteger:self.unifiedCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCustomizedStatus) {
    [dictionary setObject: [NSNumber numberWithBool:self.customizedStatus] forKey: @"customizedStatus"];
  }
  if (self.hasUnifiedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.unifiedCount] forKey: @"unifiedCount"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[XCSDPBHomeworkRemainingCountResponse class]]) {
    return NO;
  }
  XCSDPBHomeworkRemainingCountResponse *otherMessage = other;
  return
      self.hasCustomizedStatus == otherMessage.hasCustomizedStatus &&
      (!self.hasCustomizedStatus || self.customizedStatus == otherMessage.customizedStatus) &&
      self.hasUnifiedCount == otherMessage.hasUnifiedCount &&
      (!self.hasUnifiedCount || self.unifiedCount == otherMessage.unifiedCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCustomizedStatus) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.customizedStatus] hash];
  }
  if (self.hasUnifiedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.unifiedCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface XCSDPBHomeworkRemainingCountResponseBuilder()
@property (strong) XCSDPBHomeworkRemainingCountResponse* resultHomeworkRemainingCountResponse;
@end

@implementation XCSDPBHomeworkRemainingCountResponseBuilder
@synthesize resultHomeworkRemainingCountResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultHomeworkRemainingCountResponse = [[XCSDPBHomeworkRemainingCountResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultHomeworkRemainingCountResponse;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) clear {
  self.resultHomeworkRemainingCountResponse = [[XCSDPBHomeworkRemainingCountResponse alloc] init];
  return self;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) clone {
  return [XCSDPBHomeworkRemainingCountResponse builderWithPrototype:resultHomeworkRemainingCountResponse];
}
- (XCSDPBHomeworkRemainingCountResponse*) defaultInstance {
  return [XCSDPBHomeworkRemainingCountResponse defaultInstance];
}
- (XCSDPBHomeworkRemainingCountResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (XCSDPBHomeworkRemainingCountResponse*) buildPartial {
  XCSDPBHomeworkRemainingCountResponse* returnMe = resultHomeworkRemainingCountResponse;
  self.resultHomeworkRemainingCountResponse = nil;
  return returnMe;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) mergeFrom:(XCSDPBHomeworkRemainingCountResponse*) other {
  if (other == [XCSDPBHomeworkRemainingCountResponse defaultInstance]) {
    return self;
  }
  if (other.hasCustomizedStatus) {
    [self setCustomizedStatus:other.customizedStatus];
  }
  if (other.hasUnifiedCount) {
    [self setUnifiedCount:other.unifiedCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCustomizedStatus:[input readBool]];
        break;
      }
      case 16: {
        [self setUnifiedCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCustomizedStatus {
  return resultHomeworkRemainingCountResponse.hasCustomizedStatus;
}
- (BOOL) customizedStatus {
  return resultHomeworkRemainingCountResponse.customizedStatus;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) setCustomizedStatus:(BOOL) value {
  resultHomeworkRemainingCountResponse.hasCustomizedStatus = YES;
  resultHomeworkRemainingCountResponse.customizedStatus = value;
  return self;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) clearCustomizedStatus {
  resultHomeworkRemainingCountResponse.hasCustomizedStatus = NO;
  resultHomeworkRemainingCountResponse.customizedStatus = NO;
  return self;
}
- (BOOL) hasUnifiedCount {
  return resultHomeworkRemainingCountResponse.hasUnifiedCount;
}
- (SInt32) unifiedCount {
  return resultHomeworkRemainingCountResponse.unifiedCount;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) setUnifiedCount:(SInt32) value {
  resultHomeworkRemainingCountResponse.hasUnifiedCount = YES;
  resultHomeworkRemainingCountResponse.unifiedCount = value;
  return self;
}
- (XCSDPBHomeworkRemainingCountResponseBuilder*) clearUnifiedCount {
  resultHomeworkRemainingCountResponse.hasUnifiedCount = NO;
  resultHomeworkRemainingCountResponse.unifiedCount = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
