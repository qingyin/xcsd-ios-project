// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "TXPBResource.pb.h"
// @@protoc_insertion_point(imports)

@implementation TXPBTxpbresourceRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TXPBTxpbresourceRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ObjectivecDescriptorRoot registerAllExtensions:registry];
    [TXPBTxpbchatRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL TXPBResourceTypeIsValidValue(TXPBResourceType value) {
  switch (value) {
    case TXPBResourceTypeTAudio:
    case TXPBResourceTypeTVideo:
    case TXPBResourceTypeTPicture:
    case TXPBResourceTypeTText:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBResourceType(TXPBResourceType value) {
  switch (value) {
    case TXPBResourceTypeTAudio:
      return @"TXPBResourceTypeTAudio";
    case TXPBResourceTypeTVideo:
      return @"TXPBResourceTypeTVideo";
    case TXPBResourceTypeTPicture:
      return @"TXPBResourceTypeTPicture";
    case TXPBResourceTypeTText:
      return @"TXPBResourceTypeTText";
    default:
      return nil;
  }
}

BOOL TXPBSearchResultCategoryIsValidValue(TXPBSearchResultCategory value) {
  switch (value) {
    case TXPBSearchResultCategoryTAlbum:
    case TXPBSearchResultCategoryTResource:
    case TXPBSearchResultCategoryTProvider:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBSearchResultCategory(TXPBSearchResultCategory value) {
  switch (value) {
    case TXPBSearchResultCategoryTAlbum:
      return @"TXPBSearchResultCategoryTAlbum";
    case TXPBSearchResultCategoryTResource:
      return @"TXPBSearchResultCategoryTResource";
    case TXPBSearchResultCategoryTProvider:
      return @"TXPBSearchResultCategoryTProvider";
    default:
      return nil;
  }
}

@interface TXPBResourceBanner ()
@property (strong) NSString* imageUrl;
@property (strong) TXPBResource* resource;
@property (strong) TXPBAlbum* album;
@property (strong) TXPBProvider* provider;
@end

@implementation TXPBResourceBanner

- (BOOL) hasImageUrl {
  return !!hasImageUrl_;
}
- (void) setHasImageUrl:(BOOL) _value_ {
  hasImageUrl_ = !!_value_;
}
@synthesize imageUrl;
- (BOOL) hasResource {
  return !!hasResource_;
}
- (void) setHasResource:(BOOL) _value_ {
  hasResource_ = !!_value_;
}
@synthesize resource;
- (BOOL) hasAlbum {
  return !!hasAlbum_;
}
- (void) setHasAlbum:(BOOL) _value_ {
  hasAlbum_ = !!_value_;
}
@synthesize album;
- (BOOL) hasProvider {
  return !!hasProvider_;
}
- (void) setHasProvider:(BOOL) _value_ {
  hasProvider_ = !!_value_;
}
@synthesize provider;
- (instancetype) init {
  if ((self = [super init])) {
    self.imageUrl = @"";
    self.resource = [TXPBResource defaultInstance];
    self.album = [TXPBAlbum defaultInstance];
    self.provider = [TXPBProvider defaultInstance];
  }
  return self;
}
static TXPBResourceBanner* defaultTXPBResourceBannerInstance = nil;
+ (void) initialize {
  if (self == [TXPBResourceBanner class]) {
    defaultTXPBResourceBannerInstance = [[TXPBResourceBanner alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBResourceBannerInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBResourceBannerInstance;
}
- (BOOL) isInitialized {
  if (!self.hasImageUrl) {
    return NO;
  }
  if (self.hasResource) {
    if (!self.resource.isInitialized) {
      return NO;
    }
  }
  if (self.hasAlbum) {
    if (!self.album.isInitialized) {
      return NO;
    }
  }
  if (self.hasProvider) {
    if (!self.provider.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasImageUrl) {
    [output writeString:1 value:self.imageUrl];
  }
  if (self.hasResource) {
    [output writeMessage:2 value:self.resource];
  }
  if (self.hasAlbum) {
    [output writeMessage:3 value:self.album];
  }
  if (self.hasProvider) {
    [output writeMessage:4 value:self.provider];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasImageUrl) {
    size_ += computeStringSize(1, self.imageUrl);
  }
  if (self.hasResource) {
    size_ += computeMessageSize(2, self.resource);
  }
  if (self.hasAlbum) {
    size_ += computeMessageSize(3, self.album);
  }
  if (self.hasProvider) {
    size_ += computeMessageSize(4, self.provider);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBResourceBanner*) parseFromData:(NSData*) data {
  return (TXPBResourceBanner*)[[[TXPBResourceBanner builder] mergeFromData:data] build];
}
+ (TXPBResourceBanner*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResourceBanner*)[[[TXPBResourceBanner builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBResourceBanner*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBResourceBanner*)[[[TXPBResourceBanner builder] mergeFromInputStream:input] build];
}
+ (TXPBResourceBanner*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResourceBanner*)[[[TXPBResourceBanner builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBResourceBanner*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBResourceBanner*)[[[TXPBResourceBanner builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBResourceBanner*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResourceBanner*)[[[TXPBResourceBanner builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBResourceBannerBuilder*) builder {
  return [[TXPBResourceBannerBuilder alloc] init];
}
+ (TXPBResourceBannerBuilder*) builderWithPrototype:(TXPBResourceBanner*) prototype {
  return [[TXPBResourceBanner builder] mergeFrom:prototype];
}
- (TXPBResourceBannerBuilder*) builder {
  return [TXPBResourceBanner builder];
}
- (TXPBResourceBannerBuilder*) toBuilder {
  return [TXPBResourceBanner builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasImageUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"imageUrl", self.imageUrl];
  }
  if (self.hasResource) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [self.resource writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasAlbum) {
    [output appendFormat:@"%@%@ {\n", indent, @"album"];
    [self.album writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasProvider) {
    [output appendFormat:@"%@%@ {\n", indent, @"provider"];
    [self.provider writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasImageUrl) {
    [dictionary setObject: self.imageUrl forKey: @"imageUrl"];
  }
  if (self.hasResource) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.resource storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"resource"];
  }
  if (self.hasAlbum) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.album storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"album"];
  }
  if (self.hasProvider) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.provider storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"provider"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBResourceBanner class]]) {
    return NO;
  }
  TXPBResourceBanner *otherMessage = other;
  return
      self.hasImageUrl == otherMessage.hasImageUrl &&
      (!self.hasImageUrl || [self.imageUrl isEqual:otherMessage.imageUrl]) &&
      self.hasResource == otherMessage.hasResource &&
      (!self.hasResource || [self.resource isEqual:otherMessage.resource]) &&
      self.hasAlbum == otherMessage.hasAlbum &&
      (!self.hasAlbum || [self.album isEqual:otherMessage.album]) &&
      self.hasProvider == otherMessage.hasProvider &&
      (!self.hasProvider || [self.provider isEqual:otherMessage.provider]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasImageUrl) {
    hashCode = hashCode * 31 + [self.imageUrl hash];
  }
  if (self.hasResource) {
    hashCode = hashCode * 31 + [self.resource hash];
  }
  if (self.hasAlbum) {
    hashCode = hashCode * 31 + [self.album hash];
  }
  if (self.hasProvider) {
    hashCode = hashCode * 31 + [self.provider hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBResourceBannerBuilder()
@property (strong) TXPBResourceBanner* resultResourceBanner;
@end

@implementation TXPBResourceBannerBuilder
@synthesize resultResourceBanner;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultResourceBanner = [[TXPBResourceBanner alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultResourceBanner;
}
- (TXPBResourceBannerBuilder*) clear {
  self.resultResourceBanner = [[TXPBResourceBanner alloc] init];
  return self;
}
- (TXPBResourceBannerBuilder*) clone {
  return [TXPBResourceBanner builderWithPrototype:resultResourceBanner];
}
- (TXPBResourceBanner*) defaultInstance {
  return [TXPBResourceBanner defaultInstance];
}
- (TXPBResourceBanner*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBResourceBanner*) buildPartial {
  TXPBResourceBanner* returnMe = resultResourceBanner;
  self.resultResourceBanner = nil;
  return returnMe;
}
- (TXPBResourceBannerBuilder*) mergeFrom:(TXPBResourceBanner*) other {
  if (other == [TXPBResourceBanner defaultInstance]) {
    return self;
  }
  if (other.hasImageUrl) {
    [self setImageUrl:other.imageUrl];
  }
  if (other.hasResource) {
    [self mergeResource:other.resource];
  }
  if (other.hasAlbum) {
    [self mergeAlbum:other.album];
  }
  if (other.hasProvider) {
    [self mergeProvider:other.provider];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBResourceBannerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBResourceBannerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setImageUrl:[input readString]];
        break;
      }
      case 18: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        if (self.hasResource) {
          [subBuilder mergeFrom:self.resource];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResource:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TXPBAlbumBuilder* subBuilder = [TXPBAlbum builder];
        if (self.hasAlbum) {
          [subBuilder mergeFrom:self.album];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAlbum:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        TXPBProviderBuilder* subBuilder = [TXPBProvider builder];
        if (self.hasProvider) {
          [subBuilder mergeFrom:self.provider];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProvider:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasImageUrl {
  return resultResourceBanner.hasImageUrl;
}
- (NSString*) imageUrl {
  return resultResourceBanner.imageUrl;
}
- (TXPBResourceBannerBuilder*) setImageUrl:(NSString*) value {
  resultResourceBanner.hasImageUrl = YES;
  resultResourceBanner.imageUrl = value;
  return self;
}
- (TXPBResourceBannerBuilder*) clearImageUrl {
  resultResourceBanner.hasImageUrl = NO;
  resultResourceBanner.imageUrl = @"";
  return self;
}
- (BOOL) hasResource {
  return resultResourceBanner.hasResource;
}
- (TXPBResource*) resource {
  return resultResourceBanner.resource;
}
- (TXPBResourceBannerBuilder*) setResource:(TXPBResource*) value {
  resultResourceBanner.hasResource = YES;
  resultResourceBanner.resource = value;
  return self;
}
- (TXPBResourceBannerBuilder*) setResourceBuilder:(TXPBResourceBuilder*) builderForValue {
  return [self setResource:[builderForValue build]];
}
- (TXPBResourceBannerBuilder*) mergeResource:(TXPBResource*) value {
  if (resultResourceBanner.hasResource &&
      resultResourceBanner.resource != [TXPBResource defaultInstance]) {
    resultResourceBanner.resource =
      [[[TXPBResource builderWithPrototype:resultResourceBanner.resource] mergeFrom:value] buildPartial];
  } else {
    resultResourceBanner.resource = value;
  }
  resultResourceBanner.hasResource = YES;
  return self;
}
- (TXPBResourceBannerBuilder*) clearResource {
  resultResourceBanner.hasResource = NO;
  resultResourceBanner.resource = [TXPBResource defaultInstance];
  return self;
}
- (BOOL) hasAlbum {
  return resultResourceBanner.hasAlbum;
}
- (TXPBAlbum*) album {
  return resultResourceBanner.album;
}
- (TXPBResourceBannerBuilder*) setAlbum:(TXPBAlbum*) value {
  resultResourceBanner.hasAlbum = YES;
  resultResourceBanner.album = value;
  return self;
}
- (TXPBResourceBannerBuilder*) setAlbumBuilder:(TXPBAlbumBuilder*) builderForValue {
  return [self setAlbum:[builderForValue build]];
}
- (TXPBResourceBannerBuilder*) mergeAlbum:(TXPBAlbum*) value {
  if (resultResourceBanner.hasAlbum &&
      resultResourceBanner.album != [TXPBAlbum defaultInstance]) {
    resultResourceBanner.album =
      [[[TXPBAlbum builderWithPrototype:resultResourceBanner.album] mergeFrom:value] buildPartial];
  } else {
    resultResourceBanner.album = value;
  }
  resultResourceBanner.hasAlbum = YES;
  return self;
}
- (TXPBResourceBannerBuilder*) clearAlbum {
  resultResourceBanner.hasAlbum = NO;
  resultResourceBanner.album = [TXPBAlbum defaultInstance];
  return self;
}
- (BOOL) hasProvider {
  return resultResourceBanner.hasProvider;
}
- (TXPBProvider*) provider {
  return resultResourceBanner.provider;
}
- (TXPBResourceBannerBuilder*) setProvider:(TXPBProvider*) value {
  resultResourceBanner.hasProvider = YES;
  resultResourceBanner.provider = value;
  return self;
}
- (TXPBResourceBannerBuilder*) setProviderBuilder:(TXPBProviderBuilder*) builderForValue {
  return [self setProvider:[builderForValue build]];
}
- (TXPBResourceBannerBuilder*) mergeProvider:(TXPBProvider*) value {
  if (resultResourceBanner.hasProvider &&
      resultResourceBanner.provider != [TXPBProvider defaultInstance]) {
    resultResourceBanner.provider =
      [[[TXPBProvider builderWithPrototype:resultResourceBanner.provider] mergeFrom:value] buildPartial];
  } else {
    resultResourceBanner.provider = value;
  }
  resultResourceBanner.hasProvider = YES;
  return self;
}
- (TXPBResourceBannerBuilder*) clearProvider {
  resultResourceBanner.hasProvider = NO;
  resultResourceBanner.provider = [TXPBProvider defaultInstance];
  return self;
}
@end

@interface TXPBGetResourceBannersRequest ()
@end

@implementation TXPBGetResourceBannersRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetResourceBannersRequest* defaultTXPBGetResourceBannersRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetResourceBannersRequest class]) {
    defaultTXPBGetResourceBannersRequestInstance = [[TXPBGetResourceBannersRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetResourceBannersRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetResourceBannersRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetResourceBannersRequest*) parseFromData:(NSData*) data {
  return (TXPBGetResourceBannersRequest*)[[[TXPBGetResourceBannersRequest builder] mergeFromData:data] build];
}
+ (TXPBGetResourceBannersRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceBannersRequest*)[[[TXPBGetResourceBannersRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceBannersRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetResourceBannersRequest*)[[[TXPBGetResourceBannersRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBGetResourceBannersRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceBannersRequest*)[[[TXPBGetResourceBannersRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceBannersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetResourceBannersRequest*)[[[TXPBGetResourceBannersRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetResourceBannersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceBannersRequest*)[[[TXPBGetResourceBannersRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceBannersRequestBuilder*) builder {
  return [[TXPBGetResourceBannersRequestBuilder alloc] init];
}
+ (TXPBGetResourceBannersRequestBuilder*) builderWithPrototype:(TXPBGetResourceBannersRequest*) prototype {
  return [[TXPBGetResourceBannersRequest builder] mergeFrom:prototype];
}
- (TXPBGetResourceBannersRequestBuilder*) builder {
  return [TXPBGetResourceBannersRequest builder];
}
- (TXPBGetResourceBannersRequestBuilder*) toBuilder {
  return [TXPBGetResourceBannersRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetResourceBannersRequest class]]) {
    return NO;
  }
  TXPBGetResourceBannersRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetResourceBannersRequestBuilder()
@property (strong) TXPBGetResourceBannersRequest* resultGetResourceBannersRequest;
@end

@implementation TXPBGetResourceBannersRequestBuilder
@synthesize resultGetResourceBannersRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetResourceBannersRequest = [[TXPBGetResourceBannersRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetResourceBannersRequest;
}
- (TXPBGetResourceBannersRequestBuilder*) clear {
  self.resultGetResourceBannersRequest = [[TXPBGetResourceBannersRequest alloc] init];
  return self;
}
- (TXPBGetResourceBannersRequestBuilder*) clone {
  return [TXPBGetResourceBannersRequest builderWithPrototype:resultGetResourceBannersRequest];
}
- (TXPBGetResourceBannersRequest*) defaultInstance {
  return [TXPBGetResourceBannersRequest defaultInstance];
}
- (TXPBGetResourceBannersRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetResourceBannersRequest*) buildPartial {
  TXPBGetResourceBannersRequest* returnMe = resultGetResourceBannersRequest;
  self.resultGetResourceBannersRequest = nil;
  return returnMe;
}
- (TXPBGetResourceBannersRequestBuilder*) mergeFrom:(TXPBGetResourceBannersRequest*) other {
  if (other == [TXPBGetResourceBannersRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetResourceBannersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetResourceBannersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetResourceBannersResponse ()
@property (strong) NSMutableArray * bannersArray;
@end

@implementation TXPBGetResourceBannersResponse

@synthesize bannersArray;
@dynamic banners;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetResourceBannersResponse* defaultTXPBGetResourceBannersResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetResourceBannersResponse class]) {
    defaultTXPBGetResourceBannersResponseInstance = [[TXPBGetResourceBannersResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetResourceBannersResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetResourceBannersResponseInstance;
}
- (NSArray *)banners {
  return bannersArray;
}
- (TXPBResourceBanner*)bannersAtIndex:(NSUInteger)index {
  return [bannersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitbanners = YES;
   [self.banners enumerateObjectsUsingBlock:^(TXPBResourceBanner *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitbanners = NO;
      *stop = YES;
    }
  }];
  if (!isInitbanners) return isInitbanners;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.bannersArray enumerateObjectsUsingBlock:^(TXPBResourceBanner *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.bannersArray enumerateObjectsUsingBlock:^(TXPBResourceBanner *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetResourceBannersResponse*) parseFromData:(NSData*) data {
  return (TXPBGetResourceBannersResponse*)[[[TXPBGetResourceBannersResponse builder] mergeFromData:data] build];
}
+ (TXPBGetResourceBannersResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceBannersResponse*)[[[TXPBGetResourceBannersResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceBannersResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetResourceBannersResponse*)[[[TXPBGetResourceBannersResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBGetResourceBannersResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceBannersResponse*)[[[TXPBGetResourceBannersResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceBannersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetResourceBannersResponse*)[[[TXPBGetResourceBannersResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetResourceBannersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceBannersResponse*)[[[TXPBGetResourceBannersResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceBannersResponseBuilder*) builder {
  return [[TXPBGetResourceBannersResponseBuilder alloc] init];
}
+ (TXPBGetResourceBannersResponseBuilder*) builderWithPrototype:(TXPBGetResourceBannersResponse*) prototype {
  return [[TXPBGetResourceBannersResponse builder] mergeFrom:prototype];
}
- (TXPBGetResourceBannersResponseBuilder*) builder {
  return [TXPBGetResourceBannersResponse builder];
}
- (TXPBGetResourceBannersResponseBuilder*) toBuilder {
  return [TXPBGetResourceBannersResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.bannersArray enumerateObjectsUsingBlock:^(TXPBResourceBanner *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"banners"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResourceBanner* element in self.bannersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"banners"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetResourceBannersResponse class]]) {
    return NO;
  }
  TXPBGetResourceBannersResponse *otherMessage = other;
  return
      [self.bannersArray isEqualToArray:otherMessage.bannersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.bannersArray enumerateObjectsUsingBlock:^(TXPBResourceBanner *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetResourceBannersResponseBuilder()
@property (strong) TXPBGetResourceBannersResponse* resultGetResourceBannersResponse;
@end

@implementation TXPBGetResourceBannersResponseBuilder
@synthesize resultGetResourceBannersResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetResourceBannersResponse = [[TXPBGetResourceBannersResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetResourceBannersResponse;
}
- (TXPBGetResourceBannersResponseBuilder*) clear {
  self.resultGetResourceBannersResponse = [[TXPBGetResourceBannersResponse alloc] init];
  return self;
}
- (TXPBGetResourceBannersResponseBuilder*) clone {
  return [TXPBGetResourceBannersResponse builderWithPrototype:resultGetResourceBannersResponse];
}
- (TXPBGetResourceBannersResponse*) defaultInstance {
  return [TXPBGetResourceBannersResponse defaultInstance];
}
- (TXPBGetResourceBannersResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetResourceBannersResponse*) buildPartial {
  TXPBGetResourceBannersResponse* returnMe = resultGetResourceBannersResponse;
  self.resultGetResourceBannersResponse = nil;
  return returnMe;
}
- (TXPBGetResourceBannersResponseBuilder*) mergeFrom:(TXPBGetResourceBannersResponse*) other {
  if (other == [TXPBGetResourceBannersResponse defaultInstance]) {
    return self;
  }
  if (other.bannersArray.count > 0) {
    if (resultGetResourceBannersResponse.bannersArray == nil) {
      resultGetResourceBannersResponse.bannersArray = [[NSMutableArray alloc] initWithArray:other.bannersArray];
    } else {
      [resultGetResourceBannersResponse.bannersArray addObjectsFromArray:other.bannersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetResourceBannersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetResourceBannersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBannerBuilder* subBuilder = [TXPBResourceBanner builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBanners:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)banners {
  return resultGetResourceBannersResponse.bannersArray;
}
- (TXPBResourceBanner*)bannersAtIndex:(NSUInteger)index {
  return [resultGetResourceBannersResponse bannersAtIndex:index];
}
- (TXPBGetResourceBannersResponseBuilder *)addBanners:(TXPBResourceBanner*)value {
  if (resultGetResourceBannersResponse.bannersArray == nil) {
    resultGetResourceBannersResponse.bannersArray = [[NSMutableArray alloc]init];
  }
  [resultGetResourceBannersResponse.bannersArray addObject:value];
  return self;
}
- (TXPBGetResourceBannersResponseBuilder *)setBannersArray:(NSArray *)array {
  resultGetResourceBannersResponse.bannersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBGetResourceBannersResponseBuilder *)clearBanners {
  resultGetResourceBannersResponse.bannersArray = nil;
  return self;
}
@end

@interface TXPBResourceCategory ()
@property SInt64 id;
@property (strong) NSString* name;
@property (strong) NSString* icon;
@end

@implementation TXPBResourceCategory

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasIcon {
  return !!hasIcon_;
}
- (void) setHasIcon:(BOOL) _value_ {
  hasIcon_ = !!_value_;
}
@synthesize icon;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.icon = @"";
  }
  return self;
}
static TXPBResourceCategory* defaultTXPBResourceCategoryInstance = nil;
+ (void) initialize {
  if (self == [TXPBResourceCategory class]) {
    defaultTXPBResourceCategoryInstance = [[TXPBResourceCategory alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBResourceCategoryInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBResourceCategoryInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasIcon) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasIcon) {
    [output writeString:3 value:self.icon];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasIcon) {
    size_ += computeStringSize(3, self.icon);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBResourceCategory*) parseFromData:(NSData*) data {
  return (TXPBResourceCategory*)[[[TXPBResourceCategory builder] mergeFromData:data] build];
}
+ (TXPBResourceCategory*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResourceCategory*)[[[TXPBResourceCategory builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBResourceCategory*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBResourceCategory*)[[[TXPBResourceCategory builder] mergeFromInputStream:input] build];
}
+ (TXPBResourceCategory*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResourceCategory*)[[[TXPBResourceCategory builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBResourceCategory*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBResourceCategory*)[[[TXPBResourceCategory builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBResourceCategory*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResourceCategory*)[[[TXPBResourceCategory builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBResourceCategoryBuilder*) builder {
  return [[TXPBResourceCategoryBuilder alloc] init];
}
+ (TXPBResourceCategoryBuilder*) builderWithPrototype:(TXPBResourceCategory*) prototype {
  return [[TXPBResourceCategory builder] mergeFrom:prototype];
}
- (TXPBResourceCategoryBuilder*) builder {
  return [TXPBResourceCategory builder];
}
- (TXPBResourceCategoryBuilder*) toBuilder {
  return [TXPBResourceCategory builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasIcon) {
    [output appendFormat:@"%@%@: %@\n", indent, @"icon", self.icon];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasIcon) {
    [dictionary setObject: self.icon forKey: @"icon"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBResourceCategory class]]) {
    return NO;
  }
  TXPBResourceCategory *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasIcon == otherMessage.hasIcon &&
      (!self.hasIcon || [self.icon isEqual:otherMessage.icon]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasIcon) {
    hashCode = hashCode * 31 + [self.icon hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBResourceCategoryBuilder()
@property (strong) TXPBResourceCategory* resultResourceCategory;
@end

@implementation TXPBResourceCategoryBuilder
@synthesize resultResourceCategory;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultResourceCategory = [[TXPBResourceCategory alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultResourceCategory;
}
- (TXPBResourceCategoryBuilder*) clear {
  self.resultResourceCategory = [[TXPBResourceCategory alloc] init];
  return self;
}
- (TXPBResourceCategoryBuilder*) clone {
  return [TXPBResourceCategory builderWithPrototype:resultResourceCategory];
}
- (TXPBResourceCategory*) defaultInstance {
  return [TXPBResourceCategory defaultInstance];
}
- (TXPBResourceCategory*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBResourceCategory*) buildPartial {
  TXPBResourceCategory* returnMe = resultResourceCategory;
  self.resultResourceCategory = nil;
  return returnMe;
}
- (TXPBResourceCategoryBuilder*) mergeFrom:(TXPBResourceCategory*) other {
  if (other == [TXPBResourceCategory defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasIcon) {
    [self setIcon:other.icon];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBResourceCategoryBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBResourceCategoryBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setIcon:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultResourceCategory.hasId;
}
- (SInt64) id {
  return resultResourceCategory.id;
}
- (TXPBResourceCategoryBuilder*) setId:(SInt64) value {
  resultResourceCategory.hasId = YES;
  resultResourceCategory.id = value;
  return self;
}
- (TXPBResourceCategoryBuilder*) clearId {
  resultResourceCategory.hasId = NO;
  resultResourceCategory.id = 0L;
  return self;
}
- (BOOL) hasName {
  return resultResourceCategory.hasName;
}
- (NSString*) name {
  return resultResourceCategory.name;
}
- (TXPBResourceCategoryBuilder*) setName:(NSString*) value {
  resultResourceCategory.hasName = YES;
  resultResourceCategory.name = value;
  return self;
}
- (TXPBResourceCategoryBuilder*) clearName {
  resultResourceCategory.hasName = NO;
  resultResourceCategory.name = @"";
  return self;
}
- (BOOL) hasIcon {
  return resultResourceCategory.hasIcon;
}
- (NSString*) icon {
  return resultResourceCategory.icon;
}
- (TXPBResourceCategoryBuilder*) setIcon:(NSString*) value {
  resultResourceCategory.hasIcon = YES;
  resultResourceCategory.icon = value;
  return self;
}
- (TXPBResourceCategoryBuilder*) clearIcon {
  resultResourceCategory.hasIcon = NO;
  resultResourceCategory.icon = @"";
  return self;
}
@end

@interface TXPBGetResourceCategoryRequest ()
@end

@implementation TXPBGetResourceCategoryRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetResourceCategoryRequest* defaultTXPBGetResourceCategoryRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetResourceCategoryRequest class]) {
    defaultTXPBGetResourceCategoryRequestInstance = [[TXPBGetResourceCategoryRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetResourceCategoryRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetResourceCategoryRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetResourceCategoryRequest*) parseFromData:(NSData*) data {
  return (TXPBGetResourceCategoryRequest*)[[[TXPBGetResourceCategoryRequest builder] mergeFromData:data] build];
}
+ (TXPBGetResourceCategoryRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceCategoryRequest*)[[[TXPBGetResourceCategoryRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceCategoryRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetResourceCategoryRequest*)[[[TXPBGetResourceCategoryRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBGetResourceCategoryRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceCategoryRequest*)[[[TXPBGetResourceCategoryRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceCategoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetResourceCategoryRequest*)[[[TXPBGetResourceCategoryRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetResourceCategoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceCategoryRequest*)[[[TXPBGetResourceCategoryRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceCategoryRequestBuilder*) builder {
  return [[TXPBGetResourceCategoryRequestBuilder alloc] init];
}
+ (TXPBGetResourceCategoryRequestBuilder*) builderWithPrototype:(TXPBGetResourceCategoryRequest*) prototype {
  return [[TXPBGetResourceCategoryRequest builder] mergeFrom:prototype];
}
- (TXPBGetResourceCategoryRequestBuilder*) builder {
  return [TXPBGetResourceCategoryRequest builder];
}
- (TXPBGetResourceCategoryRequestBuilder*) toBuilder {
  return [TXPBGetResourceCategoryRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetResourceCategoryRequest class]]) {
    return NO;
  }
  TXPBGetResourceCategoryRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetResourceCategoryRequestBuilder()
@property (strong) TXPBGetResourceCategoryRequest* resultGetResourceCategoryRequest;
@end

@implementation TXPBGetResourceCategoryRequestBuilder
@synthesize resultGetResourceCategoryRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetResourceCategoryRequest = [[TXPBGetResourceCategoryRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetResourceCategoryRequest;
}
- (TXPBGetResourceCategoryRequestBuilder*) clear {
  self.resultGetResourceCategoryRequest = [[TXPBGetResourceCategoryRequest alloc] init];
  return self;
}
- (TXPBGetResourceCategoryRequestBuilder*) clone {
  return [TXPBGetResourceCategoryRequest builderWithPrototype:resultGetResourceCategoryRequest];
}
- (TXPBGetResourceCategoryRequest*) defaultInstance {
  return [TXPBGetResourceCategoryRequest defaultInstance];
}
- (TXPBGetResourceCategoryRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetResourceCategoryRequest*) buildPartial {
  TXPBGetResourceCategoryRequest* returnMe = resultGetResourceCategoryRequest;
  self.resultGetResourceCategoryRequest = nil;
  return returnMe;
}
- (TXPBGetResourceCategoryRequestBuilder*) mergeFrom:(TXPBGetResourceCategoryRequest*) other {
  if (other == [TXPBGetResourceCategoryRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetResourceCategoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetResourceCategoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBGetResourceCategoryResponse ()
@property (strong) NSMutableArray * catogoriesArray;
@end

@implementation TXPBGetResourceCategoryResponse

@synthesize catogoriesArray;
@dynamic catogories;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBGetResourceCategoryResponse* defaultTXPBGetResourceCategoryResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBGetResourceCategoryResponse class]) {
    defaultTXPBGetResourceCategoryResponseInstance = [[TXPBGetResourceCategoryResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBGetResourceCategoryResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBGetResourceCategoryResponseInstance;
}
- (NSArray *)catogories {
  return catogoriesArray;
}
- (TXPBResourceCategory*)catogoriesAtIndex:(NSUInteger)index {
  return [catogoriesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitcatogories = YES;
   [self.catogories enumerateObjectsUsingBlock:^(TXPBResourceCategory *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcatogories = NO;
      *stop = YES;
    }
  }];
  if (!isInitcatogories) return isInitcatogories;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.catogoriesArray enumerateObjectsUsingBlock:^(TXPBResourceCategory *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.catogoriesArray enumerateObjectsUsingBlock:^(TXPBResourceCategory *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBGetResourceCategoryResponse*) parseFromData:(NSData*) data {
  return (TXPBGetResourceCategoryResponse*)[[[TXPBGetResourceCategoryResponse builder] mergeFromData:data] build];
}
+ (TXPBGetResourceCategoryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceCategoryResponse*)[[[TXPBGetResourceCategoryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceCategoryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBGetResourceCategoryResponse*)[[[TXPBGetResourceCategoryResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBGetResourceCategoryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceCategoryResponse*)[[[TXPBGetResourceCategoryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceCategoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBGetResourceCategoryResponse*)[[[TXPBGetResourceCategoryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBGetResourceCategoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBGetResourceCategoryResponse*)[[[TXPBGetResourceCategoryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBGetResourceCategoryResponseBuilder*) builder {
  return [[TXPBGetResourceCategoryResponseBuilder alloc] init];
}
+ (TXPBGetResourceCategoryResponseBuilder*) builderWithPrototype:(TXPBGetResourceCategoryResponse*) prototype {
  return [[TXPBGetResourceCategoryResponse builder] mergeFrom:prototype];
}
- (TXPBGetResourceCategoryResponseBuilder*) builder {
  return [TXPBGetResourceCategoryResponse builder];
}
- (TXPBGetResourceCategoryResponseBuilder*) toBuilder {
  return [TXPBGetResourceCategoryResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.catogoriesArray enumerateObjectsUsingBlock:^(TXPBResourceCategory *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"catogories"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResourceCategory* element in self.catogoriesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"catogories"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBGetResourceCategoryResponse class]]) {
    return NO;
  }
  TXPBGetResourceCategoryResponse *otherMessage = other;
  return
      [self.catogoriesArray isEqualToArray:otherMessage.catogoriesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.catogoriesArray enumerateObjectsUsingBlock:^(TXPBResourceCategory *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBGetResourceCategoryResponseBuilder()
@property (strong) TXPBGetResourceCategoryResponse* resultGetResourceCategoryResponse;
@end

@implementation TXPBGetResourceCategoryResponseBuilder
@synthesize resultGetResourceCategoryResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultGetResourceCategoryResponse = [[TXPBGetResourceCategoryResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultGetResourceCategoryResponse;
}
- (TXPBGetResourceCategoryResponseBuilder*) clear {
  self.resultGetResourceCategoryResponse = [[TXPBGetResourceCategoryResponse alloc] init];
  return self;
}
- (TXPBGetResourceCategoryResponseBuilder*) clone {
  return [TXPBGetResourceCategoryResponse builderWithPrototype:resultGetResourceCategoryResponse];
}
- (TXPBGetResourceCategoryResponse*) defaultInstance {
  return [TXPBGetResourceCategoryResponse defaultInstance];
}
- (TXPBGetResourceCategoryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBGetResourceCategoryResponse*) buildPartial {
  TXPBGetResourceCategoryResponse* returnMe = resultGetResourceCategoryResponse;
  self.resultGetResourceCategoryResponse = nil;
  return returnMe;
}
- (TXPBGetResourceCategoryResponseBuilder*) mergeFrom:(TXPBGetResourceCategoryResponse*) other {
  if (other == [TXPBGetResourceCategoryResponse defaultInstance]) {
    return self;
  }
  if (other.catogoriesArray.count > 0) {
    if (resultGetResourceCategoryResponse.catogoriesArray == nil) {
      resultGetResourceCategoryResponse.catogoriesArray = [[NSMutableArray alloc] initWithArray:other.catogoriesArray];
    } else {
      [resultGetResourceCategoryResponse.catogoriesArray addObjectsFromArray:other.catogoriesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBGetResourceCategoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBGetResourceCategoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceCategoryBuilder* subBuilder = [TXPBResourceCategory builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCatogories:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)catogories {
  return resultGetResourceCategoryResponse.catogoriesArray;
}
- (TXPBResourceCategory*)catogoriesAtIndex:(NSUInteger)index {
  return [resultGetResourceCategoryResponse catogoriesAtIndex:index];
}
- (TXPBGetResourceCategoryResponseBuilder *)addCatogories:(TXPBResourceCategory*)value {
  if (resultGetResourceCategoryResponse.catogoriesArray == nil) {
    resultGetResourceCategoryResponse.catogoriesArray = [[NSMutableArray alloc]init];
  }
  [resultGetResourceCategoryResponse.catogoriesArray addObject:value];
  return self;
}
- (TXPBGetResourceCategoryResponseBuilder *)setCatogoriesArray:(NSArray *)array {
  resultGetResourceCategoryResponse.catogoriesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBGetResourceCategoryResponseBuilder *)clearCatogories {
  resultGetResourceCategoryResponse.catogoriesArray = nil;
  return self;
}
@end

@interface TXPBAlbum ()
@property SInt64 id;
@property TXPBResourceType type;
@property (strong) NSString* category;
@property (strong) NSString* coverImage;
@property (strong) NSString* name;
@property (strong) NSString* summary;
@property (strong) NSString* guideUrl;
@property SInt64 providerId;
@property (strong) NSString* providerName;
@property SInt32 viewedCount;
@property SInt32 commentCount;
@property SInt32 likedCount;
@property SInt64 createdOn;
@property SInt32 episodes;
@property SInt64 updateOn;
@end

@implementation TXPBAlbum

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) _value_ {
  hasCategory_ = !!_value_;
}
@synthesize category;
- (BOOL) hasCoverImage {
  return !!hasCoverImage_;
}
- (void) setHasCoverImage:(BOOL) _value_ {
  hasCoverImage_ = !!_value_;
}
@synthesize coverImage;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasSummary {
  return !!hasSummary_;
}
- (void) setHasSummary:(BOOL) _value_ {
  hasSummary_ = !!_value_;
}
@synthesize summary;
- (BOOL) hasGuideUrl {
  return !!hasGuideUrl_;
}
- (void) setHasGuideUrl:(BOOL) _value_ {
  hasGuideUrl_ = !!_value_;
}
@synthesize guideUrl;
- (BOOL) hasProviderId {
  return !!hasProviderId_;
}
- (void) setHasProviderId:(BOOL) _value_ {
  hasProviderId_ = !!_value_;
}
@synthesize providerId;
- (BOOL) hasProviderName {
  return !!hasProviderName_;
}
- (void) setHasProviderName:(BOOL) _value_ {
  hasProviderName_ = !!_value_;
}
@synthesize providerName;
- (BOOL) hasViewedCount {
  return !!hasViewedCount_;
}
- (void) setHasViewedCount:(BOOL) _value_ {
  hasViewedCount_ = !!_value_;
}
@synthesize viewedCount;
- (BOOL) hasCommentCount {
  return !!hasCommentCount_;
}
- (void) setHasCommentCount:(BOOL) _value_ {
  hasCommentCount_ = !!_value_;
}
@synthesize commentCount;
- (BOOL) hasLikedCount {
  return !!hasLikedCount_;
}
- (void) setHasLikedCount:(BOOL) _value_ {
  hasLikedCount_ = !!_value_;
}
@synthesize likedCount;
- (BOOL) hasCreatedOn {
  return !!hasCreatedOn_;
}
- (void) setHasCreatedOn:(BOOL) _value_ {
  hasCreatedOn_ = !!_value_;
}
@synthesize createdOn;
- (BOOL) hasEpisodes {
  return !!hasEpisodes_;
}
- (void) setHasEpisodes:(BOOL) _value_ {
  hasEpisodes_ = !!_value_;
}
@synthesize episodes;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.type = TXPBResourceTypeTAudio;
    self.category = @"";
    self.coverImage = @"";
    self.name = @"";
    self.summary = @"";
    self.guideUrl = @"";
    self.providerId = 0L;
    self.providerName = @"";
    self.viewedCount = 0;
    self.commentCount = 0;
    self.likedCount = 0;
    self.createdOn = 0L;
    self.episodes = 0;
    self.updateOn = 0L;
  }
  return self;
}
static TXPBAlbum* defaultTXPBAlbumInstance = nil;
+ (void) initialize {
  if (self == [TXPBAlbum class]) {
    defaultTXPBAlbumInstance = [[TXPBAlbum alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAlbumInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAlbumInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasCategory) {
    return NO;
  }
  if (!self.hasCoverImage) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasSummary) {
    return NO;
  }
  if (!self.hasGuideUrl) {
    return NO;
  }
  if (!self.hasProviderId) {
    return NO;
  }
  if (!self.hasProviderName) {
    return NO;
  }
  if (!self.hasViewedCount) {
    return NO;
  }
  if (!self.hasCommentCount) {
    return NO;
  }
  if (!self.hasLikedCount) {
    return NO;
  }
  if (!self.hasCreatedOn) {
    return NO;
  }
  if (!self.hasEpisodes) {
    return NO;
  }
  if (!self.hasUpdateOn) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasCategory) {
    [output writeString:3 value:self.category];
  }
  if (self.hasCoverImage) {
    [output writeString:4 value:self.coverImage];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  if (self.hasSummary) {
    [output writeString:6 value:self.summary];
  }
  if (self.hasGuideUrl) {
    [output writeString:7 value:self.guideUrl];
  }
  if (self.hasProviderId) {
    [output writeInt64:8 value:self.providerId];
  }
  if (self.hasProviderName) {
    [output writeString:9 value:self.providerName];
  }
  if (self.hasViewedCount) {
    [output writeInt32:10 value:self.viewedCount];
  }
  if (self.hasCommentCount) {
    [output writeInt32:11 value:self.commentCount];
  }
  if (self.hasLikedCount) {
    [output writeInt32:12 value:self.likedCount];
  }
  if (self.hasCreatedOn) {
    [output writeInt64:13 value:self.createdOn];
  }
  if (self.hasEpisodes) {
    [output writeInt32:14 value:self.episodes];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:15 value:self.updateOn];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasType) {
    size_ += computeEnumSize(2, self.type);
  }
  if (self.hasCategory) {
    size_ += computeStringSize(3, self.category);
  }
  if (self.hasCoverImage) {
    size_ += computeStringSize(4, self.coverImage);
  }
  if (self.hasName) {
    size_ += computeStringSize(5, self.name);
  }
  if (self.hasSummary) {
    size_ += computeStringSize(6, self.summary);
  }
  if (self.hasGuideUrl) {
    size_ += computeStringSize(7, self.guideUrl);
  }
  if (self.hasProviderId) {
    size_ += computeInt64Size(8, self.providerId);
  }
  if (self.hasProviderName) {
    size_ += computeStringSize(9, self.providerName);
  }
  if (self.hasViewedCount) {
    size_ += computeInt32Size(10, self.viewedCount);
  }
  if (self.hasCommentCount) {
    size_ += computeInt32Size(11, self.commentCount);
  }
  if (self.hasLikedCount) {
    size_ += computeInt32Size(12, self.likedCount);
  }
  if (self.hasCreatedOn) {
    size_ += computeInt64Size(13, self.createdOn);
  }
  if (self.hasEpisodes) {
    size_ += computeInt32Size(14, self.episodes);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(15, self.updateOn);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAlbum*) parseFromData:(NSData*) data {
  return (TXPBAlbum*)[[[TXPBAlbum builder] mergeFromData:data] build];
}
+ (TXPBAlbum*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAlbum*)[[[TXPBAlbum builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAlbum*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAlbum*)[[[TXPBAlbum builder] mergeFromInputStream:input] build];
}
+ (TXPBAlbum*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAlbum*)[[[TXPBAlbum builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAlbum*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAlbum*)[[[TXPBAlbum builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAlbum*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAlbum*)[[[TXPBAlbum builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAlbumBuilder*) builder {
  return [[TXPBAlbumBuilder alloc] init];
}
+ (TXPBAlbumBuilder*) builderWithPrototype:(TXPBAlbum*) prototype {
  return [[TXPBAlbum builder] mergeFrom:prototype];
}
- (TXPBAlbumBuilder*) builder {
  return [TXPBAlbum builder];
}
- (TXPBAlbumBuilder*) toBuilder {
  return [TXPBAlbum builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBResourceType(self.type)];
  }
  if (self.hasCategory) {
    [output appendFormat:@"%@%@: %@\n", indent, @"category", self.category];
  }
  if (self.hasCoverImage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coverImage", self.coverImage];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasSummary) {
    [output appendFormat:@"%@%@: %@\n", indent, @"summary", self.summary];
  }
  if (self.hasGuideUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"guideUrl", self.guideUrl];
  }
  if (self.hasProviderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"providerId", [NSNumber numberWithLongLong:self.providerId]];
  }
  if (self.hasProviderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"providerName", self.providerName];
  }
  if (self.hasViewedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewedCount", [NSNumber numberWithInteger:self.viewedCount]];
  }
  if (self.hasCommentCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentCount", [NSNumber numberWithInteger:self.commentCount]];
  }
  if (self.hasLikedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"likedCount", [NSNumber numberWithInteger:self.likedCount]];
  }
  if (self.hasCreatedOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdOn", [NSNumber numberWithLongLong:self.createdOn]];
  }
  if (self.hasEpisodes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"episodes", [NSNumber numberWithInteger:self.episodes]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasCategory) {
    [dictionary setObject: self.category forKey: @"category"];
  }
  if (self.hasCoverImage) {
    [dictionary setObject: self.coverImage forKey: @"coverImage"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasSummary) {
    [dictionary setObject: self.summary forKey: @"summary"];
  }
  if (self.hasGuideUrl) {
    [dictionary setObject: self.guideUrl forKey: @"guideUrl"];
  }
  if (self.hasProviderId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.providerId] forKey: @"providerId"];
  }
  if (self.hasProviderName) {
    [dictionary setObject: self.providerName forKey: @"providerName"];
  }
  if (self.hasViewedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.viewedCount] forKey: @"viewedCount"];
  }
  if (self.hasCommentCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.commentCount] forKey: @"commentCount"];
  }
  if (self.hasLikedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.likedCount] forKey: @"likedCount"];
  }
  if (self.hasCreatedOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdOn] forKey: @"createdOn"];
  }
  if (self.hasEpisodes) {
    [dictionary setObject: [NSNumber numberWithInteger:self.episodes] forKey: @"episodes"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAlbum class]]) {
    return NO;
  }
  TXPBAlbum *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasCategory == otherMessage.hasCategory &&
      (!self.hasCategory || [self.category isEqual:otherMessage.category]) &&
      self.hasCoverImage == otherMessage.hasCoverImage &&
      (!self.hasCoverImage || [self.coverImage isEqual:otherMessage.coverImage]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasSummary == otherMessage.hasSummary &&
      (!self.hasSummary || [self.summary isEqual:otherMessage.summary]) &&
      self.hasGuideUrl == otherMessage.hasGuideUrl &&
      (!self.hasGuideUrl || [self.guideUrl isEqual:otherMessage.guideUrl]) &&
      self.hasProviderId == otherMessage.hasProviderId &&
      (!self.hasProviderId || self.providerId == otherMessage.providerId) &&
      self.hasProviderName == otherMessage.hasProviderName &&
      (!self.hasProviderName || [self.providerName isEqual:otherMessage.providerName]) &&
      self.hasViewedCount == otherMessage.hasViewedCount &&
      (!self.hasViewedCount || self.viewedCount == otherMessage.viewedCount) &&
      self.hasCommentCount == otherMessage.hasCommentCount &&
      (!self.hasCommentCount || self.commentCount == otherMessage.commentCount) &&
      self.hasLikedCount == otherMessage.hasLikedCount &&
      (!self.hasLikedCount || self.likedCount == otherMessage.likedCount) &&
      self.hasCreatedOn == otherMessage.hasCreatedOn &&
      (!self.hasCreatedOn || self.createdOn == otherMessage.createdOn) &&
      self.hasEpisodes == otherMessage.hasEpisodes &&
      (!self.hasEpisodes || self.episodes == otherMessage.episodes) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasCategory) {
    hashCode = hashCode * 31 + [self.category hash];
  }
  if (self.hasCoverImage) {
    hashCode = hashCode * 31 + [self.coverImage hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasSummary) {
    hashCode = hashCode * 31 + [self.summary hash];
  }
  if (self.hasGuideUrl) {
    hashCode = hashCode * 31 + [self.guideUrl hash];
  }
  if (self.hasProviderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.providerId] hash];
  }
  if (self.hasProviderName) {
    hashCode = hashCode * 31 + [self.providerName hash];
  }
  if (self.hasViewedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.viewedCount] hash];
  }
  if (self.hasCommentCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.commentCount] hash];
  }
  if (self.hasLikedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.likedCount] hash];
  }
  if (self.hasCreatedOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdOn] hash];
  }
  if (self.hasEpisodes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.episodes] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAlbumBuilder()
@property (strong) TXPBAlbum* resultAlbum;
@end

@implementation TXPBAlbumBuilder
@synthesize resultAlbum;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAlbum = [[TXPBAlbum alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAlbum;
}
- (TXPBAlbumBuilder*) clear {
  self.resultAlbum = [[TXPBAlbum alloc] init];
  return self;
}
- (TXPBAlbumBuilder*) clone {
  return [TXPBAlbum builderWithPrototype:resultAlbum];
}
- (TXPBAlbum*) defaultInstance {
  return [TXPBAlbum defaultInstance];
}
- (TXPBAlbum*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAlbum*) buildPartial {
  TXPBAlbum* returnMe = resultAlbum;
  self.resultAlbum = nil;
  return returnMe;
}
- (TXPBAlbumBuilder*) mergeFrom:(TXPBAlbum*) other {
  if (other == [TXPBAlbum defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCategory) {
    [self setCategory:other.category];
  }
  if (other.hasCoverImage) {
    [self setCoverImage:other.coverImage];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasSummary) {
    [self setSummary:other.summary];
  }
  if (other.hasGuideUrl) {
    [self setGuideUrl:other.guideUrl];
  }
  if (other.hasProviderId) {
    [self setProviderId:other.providerId];
  }
  if (other.hasProviderName) {
    [self setProviderName:other.providerName];
  }
  if (other.hasViewedCount) {
    [self setViewedCount:other.viewedCount];
  }
  if (other.hasCommentCount) {
    [self setCommentCount:other.commentCount];
  }
  if (other.hasLikedCount) {
    [self setLikedCount:other.likedCount];
  }
  if (other.hasCreatedOn) {
    [self setCreatedOn:other.createdOn];
  }
  if (other.hasEpisodes) {
    [self setEpisodes:other.episodes];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAlbumBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAlbumBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBResourceType value = (TXPBResourceType)[input readEnum];
        if (TXPBResourceTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setCategory:[input readString]];
        break;
      }
      case 34: {
        [self setCoverImage:[input readString]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 50: {
        [self setSummary:[input readString]];
        break;
      }
      case 58: {
        [self setGuideUrl:[input readString]];
        break;
      }
      case 64: {
        [self setProviderId:[input readInt64]];
        break;
      }
      case 74: {
        [self setProviderName:[input readString]];
        break;
      }
      case 80: {
        [self setViewedCount:[input readInt32]];
        break;
      }
      case 88: {
        [self setCommentCount:[input readInt32]];
        break;
      }
      case 96: {
        [self setLikedCount:[input readInt32]];
        break;
      }
      case 104: {
        [self setCreatedOn:[input readInt64]];
        break;
      }
      case 112: {
        [self setEpisodes:[input readInt32]];
        break;
      }
      case 120: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultAlbum.hasId;
}
- (SInt64) id {
  return resultAlbum.id;
}
- (TXPBAlbumBuilder*) setId:(SInt64) value {
  resultAlbum.hasId = YES;
  resultAlbum.id = value;
  return self;
}
- (TXPBAlbumBuilder*) clearId {
  resultAlbum.hasId = NO;
  resultAlbum.id = 0L;
  return self;
}
- (BOOL) hasType {
  return resultAlbum.hasType;
}
- (TXPBResourceType) type {
  return resultAlbum.type;
}
- (TXPBAlbumBuilder*) setType:(TXPBResourceType) value {
  resultAlbum.hasType = YES;
  resultAlbum.type = value;
  return self;
}
- (TXPBAlbumBuilder*) clearType {
  resultAlbum.hasType = NO;
  resultAlbum.type = TXPBResourceTypeTAudio;
  return self;
}
- (BOOL) hasCategory {
  return resultAlbum.hasCategory;
}
- (NSString*) category {
  return resultAlbum.category;
}
- (TXPBAlbumBuilder*) setCategory:(NSString*) value {
  resultAlbum.hasCategory = YES;
  resultAlbum.category = value;
  return self;
}
- (TXPBAlbumBuilder*) clearCategory {
  resultAlbum.hasCategory = NO;
  resultAlbum.category = @"";
  return self;
}
- (BOOL) hasCoverImage {
  return resultAlbum.hasCoverImage;
}
- (NSString*) coverImage {
  return resultAlbum.coverImage;
}
- (TXPBAlbumBuilder*) setCoverImage:(NSString*) value {
  resultAlbum.hasCoverImage = YES;
  resultAlbum.coverImage = value;
  return self;
}
- (TXPBAlbumBuilder*) clearCoverImage {
  resultAlbum.hasCoverImage = NO;
  resultAlbum.coverImage = @"";
  return self;
}
- (BOOL) hasName {
  return resultAlbum.hasName;
}
- (NSString*) name {
  return resultAlbum.name;
}
- (TXPBAlbumBuilder*) setName:(NSString*) value {
  resultAlbum.hasName = YES;
  resultAlbum.name = value;
  return self;
}
- (TXPBAlbumBuilder*) clearName {
  resultAlbum.hasName = NO;
  resultAlbum.name = @"";
  return self;
}
- (BOOL) hasSummary {
  return resultAlbum.hasSummary;
}
- (NSString*) summary {
  return resultAlbum.summary;
}
- (TXPBAlbumBuilder*) setSummary:(NSString*) value {
  resultAlbum.hasSummary = YES;
  resultAlbum.summary = value;
  return self;
}
- (TXPBAlbumBuilder*) clearSummary {
  resultAlbum.hasSummary = NO;
  resultAlbum.summary = @"";
  return self;
}
- (BOOL) hasGuideUrl {
  return resultAlbum.hasGuideUrl;
}
- (NSString*) guideUrl {
  return resultAlbum.guideUrl;
}
- (TXPBAlbumBuilder*) setGuideUrl:(NSString*) value {
  resultAlbum.hasGuideUrl = YES;
  resultAlbum.guideUrl = value;
  return self;
}
- (TXPBAlbumBuilder*) clearGuideUrl {
  resultAlbum.hasGuideUrl = NO;
  resultAlbum.guideUrl = @"";
  return self;
}
- (BOOL) hasProviderId {
  return resultAlbum.hasProviderId;
}
- (SInt64) providerId {
  return resultAlbum.providerId;
}
- (TXPBAlbumBuilder*) setProviderId:(SInt64) value {
  resultAlbum.hasProviderId = YES;
  resultAlbum.providerId = value;
  return self;
}
- (TXPBAlbumBuilder*) clearProviderId {
  resultAlbum.hasProviderId = NO;
  resultAlbum.providerId = 0L;
  return self;
}
- (BOOL) hasProviderName {
  return resultAlbum.hasProviderName;
}
- (NSString*) providerName {
  return resultAlbum.providerName;
}
- (TXPBAlbumBuilder*) setProviderName:(NSString*) value {
  resultAlbum.hasProviderName = YES;
  resultAlbum.providerName = value;
  return self;
}
- (TXPBAlbumBuilder*) clearProviderName {
  resultAlbum.hasProviderName = NO;
  resultAlbum.providerName = @"";
  return self;
}
- (BOOL) hasViewedCount {
  return resultAlbum.hasViewedCount;
}
- (SInt32) viewedCount {
  return resultAlbum.viewedCount;
}
- (TXPBAlbumBuilder*) setViewedCount:(SInt32) value {
  resultAlbum.hasViewedCount = YES;
  resultAlbum.viewedCount = value;
  return self;
}
- (TXPBAlbumBuilder*) clearViewedCount {
  resultAlbum.hasViewedCount = NO;
  resultAlbum.viewedCount = 0;
  return self;
}
- (BOOL) hasCommentCount {
  return resultAlbum.hasCommentCount;
}
- (SInt32) commentCount {
  return resultAlbum.commentCount;
}
- (TXPBAlbumBuilder*) setCommentCount:(SInt32) value {
  resultAlbum.hasCommentCount = YES;
  resultAlbum.commentCount = value;
  return self;
}
- (TXPBAlbumBuilder*) clearCommentCount {
  resultAlbum.hasCommentCount = NO;
  resultAlbum.commentCount = 0;
  return self;
}
- (BOOL) hasLikedCount {
  return resultAlbum.hasLikedCount;
}
- (SInt32) likedCount {
  return resultAlbum.likedCount;
}
- (TXPBAlbumBuilder*) setLikedCount:(SInt32) value {
  resultAlbum.hasLikedCount = YES;
  resultAlbum.likedCount = value;
  return self;
}
- (TXPBAlbumBuilder*) clearLikedCount {
  resultAlbum.hasLikedCount = NO;
  resultAlbum.likedCount = 0;
  return self;
}
- (BOOL) hasCreatedOn {
  return resultAlbum.hasCreatedOn;
}
- (SInt64) createdOn {
  return resultAlbum.createdOn;
}
- (TXPBAlbumBuilder*) setCreatedOn:(SInt64) value {
  resultAlbum.hasCreatedOn = YES;
  resultAlbum.createdOn = value;
  return self;
}
- (TXPBAlbumBuilder*) clearCreatedOn {
  resultAlbum.hasCreatedOn = NO;
  resultAlbum.createdOn = 0L;
  return self;
}
- (BOOL) hasEpisodes {
  return resultAlbum.hasEpisodes;
}
- (SInt32) episodes {
  return resultAlbum.episodes;
}
- (TXPBAlbumBuilder*) setEpisodes:(SInt32) value {
  resultAlbum.hasEpisodes = YES;
  resultAlbum.episodes = value;
  return self;
}
- (TXPBAlbumBuilder*) clearEpisodes {
  resultAlbum.hasEpisodes = NO;
  resultAlbum.episodes = 0;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultAlbum.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultAlbum.updateOn;
}
- (TXPBAlbumBuilder*) setUpdateOn:(SInt64) value {
  resultAlbum.hasUpdateOn = YES;
  resultAlbum.updateOn = value;
  return self;
}
- (TXPBAlbumBuilder*) clearUpdateOn {
  resultAlbum.hasUpdateOn = NO;
  resultAlbum.updateOn = 0L;
  return self;
}
@end

@interface TXPBResource ()
@property SInt64 id;
@property TXPBResourceType type;
@property (strong) NSString* category;
@property (strong) NSString* coverImage;
@property (strong) NSString* name;
@property SInt64 providerId;
@property (strong) NSString* providerName;
@property (strong) NSString* url;
@property SInt32 length;
@property SInt64 albumId;
@property SInt32 viewedCount;
@property SInt32 commentCount;
@property SInt32 likedCount;
@property (strong) NSString* sharedUrl;
@property SInt64 createdOn;
@property BOOL liked;
@property SInt32 albumEpisodes;
@property SInt64 lastPlayOn;
@end

@implementation TXPBResource

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) _value_ {
  hasCategory_ = !!_value_;
}
@synthesize category;
- (BOOL) hasCoverImage {
  return !!hasCoverImage_;
}
- (void) setHasCoverImage:(BOOL) _value_ {
  hasCoverImage_ = !!_value_;
}
@synthesize coverImage;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasProviderId {
  return !!hasProviderId_;
}
- (void) setHasProviderId:(BOOL) _value_ {
  hasProviderId_ = !!_value_;
}
@synthesize providerId;
- (BOOL) hasProviderName {
  return !!hasProviderName_;
}
- (void) setHasProviderName:(BOOL) _value_ {
  hasProviderName_ = !!_value_;
}
@synthesize providerName;
- (BOOL) hasUrl {
  return !!hasUrl_;
}
- (void) setHasUrl:(BOOL) _value_ {
  hasUrl_ = !!_value_;
}
@synthesize url;
- (BOOL) hasLength {
  return !!hasLength_;
}
- (void) setHasLength:(BOOL) _value_ {
  hasLength_ = !!_value_;
}
@synthesize length;
- (BOOL) hasAlbumId {
  return !!hasAlbumId_;
}
- (void) setHasAlbumId:(BOOL) _value_ {
  hasAlbumId_ = !!_value_;
}
@synthesize albumId;
- (BOOL) hasViewedCount {
  return !!hasViewedCount_;
}
- (void) setHasViewedCount:(BOOL) _value_ {
  hasViewedCount_ = !!_value_;
}
@synthesize viewedCount;
- (BOOL) hasCommentCount {
  return !!hasCommentCount_;
}
- (void) setHasCommentCount:(BOOL) _value_ {
  hasCommentCount_ = !!_value_;
}
@synthesize commentCount;
- (BOOL) hasLikedCount {
  return !!hasLikedCount_;
}
- (void) setHasLikedCount:(BOOL) _value_ {
  hasLikedCount_ = !!_value_;
}
@synthesize likedCount;
- (BOOL) hasSharedUrl {
  return !!hasSharedUrl_;
}
- (void) setHasSharedUrl:(BOOL) _value_ {
  hasSharedUrl_ = !!_value_;
}
@synthesize sharedUrl;
- (BOOL) hasCreatedOn {
  return !!hasCreatedOn_;
}
- (void) setHasCreatedOn:(BOOL) _value_ {
  hasCreatedOn_ = !!_value_;
}
@synthesize createdOn;
- (BOOL) hasLiked {
  return !!hasLiked_;
}
- (void) setHasLiked:(BOOL) _value_ {
  hasLiked_ = !!_value_;
}
- (BOOL) liked {
  return !!liked_;
}
- (void) setLiked:(BOOL) _value_ {
  liked_ = !!_value_;
}
- (BOOL) hasAlbumEpisodes {
  return !!hasAlbumEpisodes_;
}
- (void) setHasAlbumEpisodes:(BOOL) _value_ {
  hasAlbumEpisodes_ = !!_value_;
}
@synthesize albumEpisodes;
- (BOOL) hasLastPlayOn {
  return !!hasLastPlayOn_;
}
- (void) setHasLastPlayOn:(BOOL) _value_ {
  hasLastPlayOn_ = !!_value_;
}
@synthesize lastPlayOn;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.type = TXPBResourceTypeTAudio;
    self.category = @"";
    self.coverImage = @"";
    self.name = @"";
    self.providerId = 0L;
    self.providerName = @"";
    self.url = @"";
    self.length = 0;
    self.albumId = 0L;
    self.viewedCount = 0;
    self.commentCount = 0;
    self.likedCount = 0;
    self.sharedUrl = @"";
    self.createdOn = 0L;
    self.liked = NO;
    self.albumEpisodes = 0;
    self.lastPlayOn = 0L;
  }
  return self;
}
static TXPBResource* defaultTXPBResourceInstance = nil;
+ (void) initialize {
  if (self == [TXPBResource class]) {
    defaultTXPBResourceInstance = [[TXPBResource alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBResourceInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBResourceInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasCategory) {
    return NO;
  }
  if (!self.hasCoverImage) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasProviderId) {
    return NO;
  }
  if (!self.hasProviderName) {
    return NO;
  }
  if (!self.hasUrl) {
    return NO;
  }
  if (!self.hasLength) {
    return NO;
  }
  if (!self.hasViewedCount) {
    return NO;
  }
  if (!self.hasCommentCount) {
    return NO;
  }
  if (!self.hasLikedCount) {
    return NO;
  }
  if (!self.hasSharedUrl) {
    return NO;
  }
  if (!self.hasCreatedOn) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasCategory) {
    [output writeString:3 value:self.category];
  }
  if (self.hasCoverImage) {
    [output writeString:4 value:self.coverImage];
  }
  if (self.hasName) {
    [output writeString:5 value:self.name];
  }
  if (self.hasProviderId) {
    [output writeInt64:7 value:self.providerId];
  }
  if (self.hasProviderName) {
    [output writeString:8 value:self.providerName];
  }
  if (self.hasUrl) {
    [output writeString:9 value:self.url];
  }
  if (self.hasLength) {
    [output writeInt32:10 value:self.length];
  }
  if (self.hasAlbumId) {
    [output writeInt64:11 value:self.albumId];
  }
  if (self.hasViewedCount) {
    [output writeInt32:12 value:self.viewedCount];
  }
  if (self.hasCommentCount) {
    [output writeInt32:13 value:self.commentCount];
  }
  if (self.hasLikedCount) {
    [output writeInt32:14 value:self.likedCount];
  }
  if (self.hasSharedUrl) {
    [output writeString:15 value:self.sharedUrl];
  }
  if (self.hasCreatedOn) {
    [output writeInt64:16 value:self.createdOn];
  }
  if (self.hasLiked) {
    [output writeBool:17 value:self.liked];
  }
  if (self.hasAlbumEpisodes) {
    [output writeInt32:18 value:self.albumEpisodes];
  }
  if (self.hasLastPlayOn) {
    [output writeInt64:19 value:self.lastPlayOn];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasType) {
    size_ += computeEnumSize(2, self.type);
  }
  if (self.hasCategory) {
    size_ += computeStringSize(3, self.category);
  }
  if (self.hasCoverImage) {
    size_ += computeStringSize(4, self.coverImage);
  }
  if (self.hasName) {
    size_ += computeStringSize(5, self.name);
  }
  if (self.hasProviderId) {
    size_ += computeInt64Size(7, self.providerId);
  }
  if (self.hasProviderName) {
    size_ += computeStringSize(8, self.providerName);
  }
  if (self.hasUrl) {
    size_ += computeStringSize(9, self.url);
  }
  if (self.hasLength) {
    size_ += computeInt32Size(10, self.length);
  }
  if (self.hasAlbumId) {
    size_ += computeInt64Size(11, self.albumId);
  }
  if (self.hasViewedCount) {
    size_ += computeInt32Size(12, self.viewedCount);
  }
  if (self.hasCommentCount) {
    size_ += computeInt32Size(13, self.commentCount);
  }
  if (self.hasLikedCount) {
    size_ += computeInt32Size(14, self.likedCount);
  }
  if (self.hasSharedUrl) {
    size_ += computeStringSize(15, self.sharedUrl);
  }
  if (self.hasCreatedOn) {
    size_ += computeInt64Size(16, self.createdOn);
  }
  if (self.hasLiked) {
    size_ += computeBoolSize(17, self.liked);
  }
  if (self.hasAlbumEpisodes) {
    size_ += computeInt32Size(18, self.albumEpisodes);
  }
  if (self.hasLastPlayOn) {
    size_ += computeInt64Size(19, self.lastPlayOn);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBResource*) parseFromData:(NSData*) data {
  return (TXPBResource*)[[[TXPBResource builder] mergeFromData:data] build];
}
+ (TXPBResource*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResource*)[[[TXPBResource builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBResource*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBResource*)[[[TXPBResource builder] mergeFromInputStream:input] build];
}
+ (TXPBResource*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResource*)[[[TXPBResource builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBResource*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBResource*)[[[TXPBResource builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBResource*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBResource*)[[[TXPBResource builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBResourceBuilder*) builder {
  return [[TXPBResourceBuilder alloc] init];
}
+ (TXPBResourceBuilder*) builderWithPrototype:(TXPBResource*) prototype {
  return [[TXPBResource builder] mergeFrom:prototype];
}
- (TXPBResourceBuilder*) builder {
  return [TXPBResource builder];
}
- (TXPBResourceBuilder*) toBuilder {
  return [TXPBResource builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBResourceType(self.type)];
  }
  if (self.hasCategory) {
    [output appendFormat:@"%@%@: %@\n", indent, @"category", self.category];
  }
  if (self.hasCoverImage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coverImage", self.coverImage];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasProviderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"providerId", [NSNumber numberWithLongLong:self.providerId]];
  }
  if (self.hasProviderName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"providerName", self.providerName];
  }
  if (self.hasUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"url", self.url];
  }
  if (self.hasLength) {
    [output appendFormat:@"%@%@: %@\n", indent, @"length", [NSNumber numberWithInteger:self.length]];
  }
  if (self.hasAlbumId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"albumId", [NSNumber numberWithLongLong:self.albumId]];
  }
  if (self.hasViewedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewedCount", [NSNumber numberWithInteger:self.viewedCount]];
  }
  if (self.hasCommentCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentCount", [NSNumber numberWithInteger:self.commentCount]];
  }
  if (self.hasLikedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"likedCount", [NSNumber numberWithInteger:self.likedCount]];
  }
  if (self.hasSharedUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sharedUrl", self.sharedUrl];
  }
  if (self.hasCreatedOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createdOn", [NSNumber numberWithLongLong:self.createdOn]];
  }
  if (self.hasLiked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"liked", [NSNumber numberWithBool:self.liked]];
  }
  if (self.hasAlbumEpisodes) {
    [output appendFormat:@"%@%@: %@\n", indent, @"albumEpisodes", [NSNumber numberWithInteger:self.albumEpisodes]];
  }
  if (self.hasLastPlayOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"lastPlayOn", [NSNumber numberWithLongLong:self.lastPlayOn]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasCategory) {
    [dictionary setObject: self.category forKey: @"category"];
  }
  if (self.hasCoverImage) {
    [dictionary setObject: self.coverImage forKey: @"coverImage"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasProviderId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.providerId] forKey: @"providerId"];
  }
  if (self.hasProviderName) {
    [dictionary setObject: self.providerName forKey: @"providerName"];
  }
  if (self.hasUrl) {
    [dictionary setObject: self.url forKey: @"url"];
  }
  if (self.hasLength) {
    [dictionary setObject: [NSNumber numberWithInteger:self.length] forKey: @"length"];
  }
  if (self.hasAlbumId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.albumId] forKey: @"albumId"];
  }
  if (self.hasViewedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.viewedCount] forKey: @"viewedCount"];
  }
  if (self.hasCommentCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.commentCount] forKey: @"commentCount"];
  }
  if (self.hasLikedCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.likedCount] forKey: @"likedCount"];
  }
  if (self.hasSharedUrl) {
    [dictionary setObject: self.sharedUrl forKey: @"sharedUrl"];
  }
  if (self.hasCreatedOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createdOn] forKey: @"createdOn"];
  }
  if (self.hasLiked) {
    [dictionary setObject: [NSNumber numberWithBool:self.liked] forKey: @"liked"];
  }
  if (self.hasAlbumEpisodes) {
    [dictionary setObject: [NSNumber numberWithInteger:self.albumEpisodes] forKey: @"albumEpisodes"];
  }
  if (self.hasLastPlayOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.lastPlayOn] forKey: @"lastPlayOn"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBResource class]]) {
    return NO;
  }
  TXPBResource *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasCategory == otherMessage.hasCategory &&
      (!self.hasCategory || [self.category isEqual:otherMessage.category]) &&
      self.hasCoverImage == otherMessage.hasCoverImage &&
      (!self.hasCoverImage || [self.coverImage isEqual:otherMessage.coverImage]) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasProviderId == otherMessage.hasProviderId &&
      (!self.hasProviderId || self.providerId == otherMessage.providerId) &&
      self.hasProviderName == otherMessage.hasProviderName &&
      (!self.hasProviderName || [self.providerName isEqual:otherMessage.providerName]) &&
      self.hasUrl == otherMessage.hasUrl &&
      (!self.hasUrl || [self.url isEqual:otherMessage.url]) &&
      self.hasLength == otherMessage.hasLength &&
      (!self.hasLength || self.length == otherMessage.length) &&
      self.hasAlbumId == otherMessage.hasAlbumId &&
      (!self.hasAlbumId || self.albumId == otherMessage.albumId) &&
      self.hasViewedCount == otherMessage.hasViewedCount &&
      (!self.hasViewedCount || self.viewedCount == otherMessage.viewedCount) &&
      self.hasCommentCount == otherMessage.hasCommentCount &&
      (!self.hasCommentCount || self.commentCount == otherMessage.commentCount) &&
      self.hasLikedCount == otherMessage.hasLikedCount &&
      (!self.hasLikedCount || self.likedCount == otherMessage.likedCount) &&
      self.hasSharedUrl == otherMessage.hasSharedUrl &&
      (!self.hasSharedUrl || [self.sharedUrl isEqual:otherMessage.sharedUrl]) &&
      self.hasCreatedOn == otherMessage.hasCreatedOn &&
      (!self.hasCreatedOn || self.createdOn == otherMessage.createdOn) &&
      self.hasLiked == otherMessage.hasLiked &&
      (!self.hasLiked || self.liked == otherMessage.liked) &&
      self.hasAlbumEpisodes == otherMessage.hasAlbumEpisodes &&
      (!self.hasAlbumEpisodes || self.albumEpisodes == otherMessage.albumEpisodes) &&
      self.hasLastPlayOn == otherMessage.hasLastPlayOn &&
      (!self.hasLastPlayOn || self.lastPlayOn == otherMessage.lastPlayOn) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasCategory) {
    hashCode = hashCode * 31 + [self.category hash];
  }
  if (self.hasCoverImage) {
    hashCode = hashCode * 31 + [self.coverImage hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasProviderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.providerId] hash];
  }
  if (self.hasProviderName) {
    hashCode = hashCode * 31 + [self.providerName hash];
  }
  if (self.hasUrl) {
    hashCode = hashCode * 31 + [self.url hash];
  }
  if (self.hasLength) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.length] hash];
  }
  if (self.hasAlbumId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.albumId] hash];
  }
  if (self.hasViewedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.viewedCount] hash];
  }
  if (self.hasCommentCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.commentCount] hash];
  }
  if (self.hasLikedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.likedCount] hash];
  }
  if (self.hasSharedUrl) {
    hashCode = hashCode * 31 + [self.sharedUrl hash];
  }
  if (self.hasCreatedOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createdOn] hash];
  }
  if (self.hasLiked) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.liked] hash];
  }
  if (self.hasAlbumEpisodes) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.albumEpisodes] hash];
  }
  if (self.hasLastPlayOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.lastPlayOn] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBResourceBuilder()
@property (strong) TXPBResource* resultResource;
@end

@implementation TXPBResourceBuilder
@synthesize resultResource;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultResource = [[TXPBResource alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultResource;
}
- (TXPBResourceBuilder*) clear {
  self.resultResource = [[TXPBResource alloc] init];
  return self;
}
- (TXPBResourceBuilder*) clone {
  return [TXPBResource builderWithPrototype:resultResource];
}
- (TXPBResource*) defaultInstance {
  return [TXPBResource defaultInstance];
}
- (TXPBResource*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBResource*) buildPartial {
  TXPBResource* returnMe = resultResource;
  self.resultResource = nil;
  return returnMe;
}
- (TXPBResourceBuilder*) mergeFrom:(TXPBResource*) other {
  if (other == [TXPBResource defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCategory) {
    [self setCategory:other.category];
  }
  if (other.hasCoverImage) {
    [self setCoverImage:other.coverImage];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasProviderId) {
    [self setProviderId:other.providerId];
  }
  if (other.hasProviderName) {
    [self setProviderName:other.providerName];
  }
  if (other.hasUrl) {
    [self setUrl:other.url];
  }
  if (other.hasLength) {
    [self setLength:other.length];
  }
  if (other.hasAlbumId) {
    [self setAlbumId:other.albumId];
  }
  if (other.hasViewedCount) {
    [self setViewedCount:other.viewedCount];
  }
  if (other.hasCommentCount) {
    [self setCommentCount:other.commentCount];
  }
  if (other.hasLikedCount) {
    [self setLikedCount:other.likedCount];
  }
  if (other.hasSharedUrl) {
    [self setSharedUrl:other.sharedUrl];
  }
  if (other.hasCreatedOn) {
    [self setCreatedOn:other.createdOn];
  }
  if (other.hasLiked) {
    [self setLiked:other.liked];
  }
  if (other.hasAlbumEpisodes) {
    [self setAlbumEpisodes:other.albumEpisodes];
  }
  if (other.hasLastPlayOn) {
    [self setLastPlayOn:other.lastPlayOn];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBResourceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBResourceBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBResourceType value = (TXPBResourceType)[input readEnum];
        if (TXPBResourceTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setCategory:[input readString]];
        break;
      }
      case 34: {
        [self setCoverImage:[input readString]];
        break;
      }
      case 42: {
        [self setName:[input readString]];
        break;
      }
      case 56: {
        [self setProviderId:[input readInt64]];
        break;
      }
      case 66: {
        [self setProviderName:[input readString]];
        break;
      }
      case 74: {
        [self setUrl:[input readString]];
        break;
      }
      case 80: {
        [self setLength:[input readInt32]];
        break;
      }
      case 88: {
        [self setAlbumId:[input readInt64]];
        break;
      }
      case 96: {
        [self setViewedCount:[input readInt32]];
        break;
      }
      case 104: {
        [self setCommentCount:[input readInt32]];
        break;
      }
      case 112: {
        [self setLikedCount:[input readInt32]];
        break;
      }
      case 122: {
        [self setSharedUrl:[input readString]];
        break;
      }
      case 128: {
        [self setCreatedOn:[input readInt64]];
        break;
      }
      case 136: {
        [self setLiked:[input readBool]];
        break;
      }
      case 144: {
        [self setAlbumEpisodes:[input readInt32]];
        break;
      }
      case 152: {
        [self setLastPlayOn:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultResource.hasId;
}
- (SInt64) id {
  return resultResource.id;
}
- (TXPBResourceBuilder*) setId:(SInt64) value {
  resultResource.hasId = YES;
  resultResource.id = value;
  return self;
}
- (TXPBResourceBuilder*) clearId {
  resultResource.hasId = NO;
  resultResource.id = 0L;
  return self;
}
- (BOOL) hasType {
  return resultResource.hasType;
}
- (TXPBResourceType) type {
  return resultResource.type;
}
- (TXPBResourceBuilder*) setType:(TXPBResourceType) value {
  resultResource.hasType = YES;
  resultResource.type = value;
  return self;
}
- (TXPBResourceBuilder*) clearType {
  resultResource.hasType = NO;
  resultResource.type = TXPBResourceTypeTAudio;
  return self;
}
- (BOOL) hasCategory {
  return resultResource.hasCategory;
}
- (NSString*) category {
  return resultResource.category;
}
- (TXPBResourceBuilder*) setCategory:(NSString*) value {
  resultResource.hasCategory = YES;
  resultResource.category = value;
  return self;
}
- (TXPBResourceBuilder*) clearCategory {
  resultResource.hasCategory = NO;
  resultResource.category = @"";
  return self;
}
- (BOOL) hasCoverImage {
  return resultResource.hasCoverImage;
}
- (NSString*) coverImage {
  return resultResource.coverImage;
}
- (TXPBResourceBuilder*) setCoverImage:(NSString*) value {
  resultResource.hasCoverImage = YES;
  resultResource.coverImage = value;
  return self;
}
- (TXPBResourceBuilder*) clearCoverImage {
  resultResource.hasCoverImage = NO;
  resultResource.coverImage = @"";
  return self;
}
- (BOOL) hasName {
  return resultResource.hasName;
}
- (NSString*) name {
  return resultResource.name;
}
- (TXPBResourceBuilder*) setName:(NSString*) value {
  resultResource.hasName = YES;
  resultResource.name = value;
  return self;
}
- (TXPBResourceBuilder*) clearName {
  resultResource.hasName = NO;
  resultResource.name = @"";
  return self;
}
- (BOOL) hasProviderId {
  return resultResource.hasProviderId;
}
- (SInt64) providerId {
  return resultResource.providerId;
}
- (TXPBResourceBuilder*) setProviderId:(SInt64) value {
  resultResource.hasProviderId = YES;
  resultResource.providerId = value;
  return self;
}
- (TXPBResourceBuilder*) clearProviderId {
  resultResource.hasProviderId = NO;
  resultResource.providerId = 0L;
  return self;
}
- (BOOL) hasProviderName {
  return resultResource.hasProviderName;
}
- (NSString*) providerName {
  return resultResource.providerName;
}
- (TXPBResourceBuilder*) setProviderName:(NSString*) value {
  resultResource.hasProviderName = YES;
  resultResource.providerName = value;
  return self;
}
- (TXPBResourceBuilder*) clearProviderName {
  resultResource.hasProviderName = NO;
  resultResource.providerName = @"";
  return self;
}
- (BOOL) hasUrl {
  return resultResource.hasUrl;
}
- (NSString*) url {
  return resultResource.url;
}
- (TXPBResourceBuilder*) setUrl:(NSString*) value {
  resultResource.hasUrl = YES;
  resultResource.url = value;
  return self;
}
- (TXPBResourceBuilder*) clearUrl {
  resultResource.hasUrl = NO;
  resultResource.url = @"";
  return self;
}
- (BOOL) hasLength {
  return resultResource.hasLength;
}
- (SInt32) length {
  return resultResource.length;
}
- (TXPBResourceBuilder*) setLength:(SInt32) value {
  resultResource.hasLength = YES;
  resultResource.length = value;
  return self;
}
- (TXPBResourceBuilder*) clearLength {
  resultResource.hasLength = NO;
  resultResource.length = 0;
  return self;
}
- (BOOL) hasAlbumId {
  return resultResource.hasAlbumId;
}
- (SInt64) albumId {
  return resultResource.albumId;
}
- (TXPBResourceBuilder*) setAlbumId:(SInt64) value {
  resultResource.hasAlbumId = YES;
  resultResource.albumId = value;
  return self;
}
- (TXPBResourceBuilder*) clearAlbumId {
  resultResource.hasAlbumId = NO;
  resultResource.albumId = 0L;
  return self;
}
- (BOOL) hasViewedCount {
  return resultResource.hasViewedCount;
}
- (SInt32) viewedCount {
  return resultResource.viewedCount;
}
- (TXPBResourceBuilder*) setViewedCount:(SInt32) value {
  resultResource.hasViewedCount = YES;
  resultResource.viewedCount = value;
  return self;
}
- (TXPBResourceBuilder*) clearViewedCount {
  resultResource.hasViewedCount = NO;
  resultResource.viewedCount = 0;
  return self;
}
- (BOOL) hasCommentCount {
  return resultResource.hasCommentCount;
}
- (SInt32) commentCount {
  return resultResource.commentCount;
}
- (TXPBResourceBuilder*) setCommentCount:(SInt32) value {
  resultResource.hasCommentCount = YES;
  resultResource.commentCount = value;
  return self;
}
- (TXPBResourceBuilder*) clearCommentCount {
  resultResource.hasCommentCount = NO;
  resultResource.commentCount = 0;
  return self;
}
- (BOOL) hasLikedCount {
  return resultResource.hasLikedCount;
}
- (SInt32) likedCount {
  return resultResource.likedCount;
}
- (TXPBResourceBuilder*) setLikedCount:(SInt32) value {
  resultResource.hasLikedCount = YES;
  resultResource.likedCount = value;
  return self;
}
- (TXPBResourceBuilder*) clearLikedCount {
  resultResource.hasLikedCount = NO;
  resultResource.likedCount = 0;
  return self;
}
- (BOOL) hasSharedUrl {
  return resultResource.hasSharedUrl;
}
- (NSString*) sharedUrl {
  return resultResource.sharedUrl;
}
- (TXPBResourceBuilder*) setSharedUrl:(NSString*) value {
  resultResource.hasSharedUrl = YES;
  resultResource.sharedUrl = value;
  return self;
}
- (TXPBResourceBuilder*) clearSharedUrl {
  resultResource.hasSharedUrl = NO;
  resultResource.sharedUrl = @"";
  return self;
}
- (BOOL) hasCreatedOn {
  return resultResource.hasCreatedOn;
}
- (SInt64) createdOn {
  return resultResource.createdOn;
}
- (TXPBResourceBuilder*) setCreatedOn:(SInt64) value {
  resultResource.hasCreatedOn = YES;
  resultResource.createdOn = value;
  return self;
}
- (TXPBResourceBuilder*) clearCreatedOn {
  resultResource.hasCreatedOn = NO;
  resultResource.createdOn = 0L;
  return self;
}
- (BOOL) hasLiked {
  return resultResource.hasLiked;
}
- (BOOL) liked {
  return resultResource.liked;
}
- (TXPBResourceBuilder*) setLiked:(BOOL) value {
  resultResource.hasLiked = YES;
  resultResource.liked = value;
  return self;
}
- (TXPBResourceBuilder*) clearLiked {
  resultResource.hasLiked = NO;
  resultResource.liked = NO;
  return self;
}
- (BOOL) hasAlbumEpisodes {
  return resultResource.hasAlbumEpisodes;
}
- (SInt32) albumEpisodes {
  return resultResource.albumEpisodes;
}
- (TXPBResourceBuilder*) setAlbumEpisodes:(SInt32) value {
  resultResource.hasAlbumEpisodes = YES;
  resultResource.albumEpisodes = value;
  return self;
}
- (TXPBResourceBuilder*) clearAlbumEpisodes {
  resultResource.hasAlbumEpisodes = NO;
  resultResource.albumEpisodes = 0;
  return self;
}
- (BOOL) hasLastPlayOn {
  return resultResource.hasLastPlayOn;
}
- (SInt64) lastPlayOn {
  return resultResource.lastPlayOn;
}
- (TXPBResourceBuilder*) setLastPlayOn:(SInt64) value {
  resultResource.hasLastPlayOn = YES;
  resultResource.lastPlayOn = value;
  return self;
}
- (TXPBResourceBuilder*) clearLastPlayOn {
  resultResource.hasLastPlayOn = NO;
  resultResource.lastPlayOn = 0L;
  return self;
}
@end

@interface TXPBFetchHomePageResourcesRequest ()
@end

@implementation TXPBFetchHomePageResourcesRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchHomePageResourcesRequest* defaultTXPBFetchHomePageResourcesRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHomePageResourcesRequest class]) {
    defaultTXPBFetchHomePageResourcesRequestInstance = [[TXPBFetchHomePageResourcesRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHomePageResourcesRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHomePageResourcesRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHomePageResourcesRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchHomePageResourcesRequest*)[[[TXPBFetchHomePageResourcesRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchHomePageResourcesRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHomePageResourcesRequest*)[[[TXPBFetchHomePageResourcesRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHomePageResourcesRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHomePageResourcesRequest*)[[[TXPBFetchHomePageResourcesRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHomePageResourcesRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHomePageResourcesRequest*)[[[TXPBFetchHomePageResourcesRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHomePageResourcesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHomePageResourcesRequest*)[[[TXPBFetchHomePageResourcesRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHomePageResourcesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHomePageResourcesRequest*)[[[TXPBFetchHomePageResourcesRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHomePageResourcesRequestBuilder*) builder {
  return [[TXPBFetchHomePageResourcesRequestBuilder alloc] init];
}
+ (TXPBFetchHomePageResourcesRequestBuilder*) builderWithPrototype:(TXPBFetchHomePageResourcesRequest*) prototype {
  return [[TXPBFetchHomePageResourcesRequest builder] mergeFrom:prototype];
}
- (TXPBFetchHomePageResourcesRequestBuilder*) builder {
  return [TXPBFetchHomePageResourcesRequest builder];
}
- (TXPBFetchHomePageResourcesRequestBuilder*) toBuilder {
  return [TXPBFetchHomePageResourcesRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHomePageResourcesRequest class]]) {
    return NO;
  }
  TXPBFetchHomePageResourcesRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHomePageResourcesRequestBuilder()
@property (strong) TXPBFetchHomePageResourcesRequest* resultFetchHomePageResourcesRequest;
@end

@implementation TXPBFetchHomePageResourcesRequestBuilder
@synthesize resultFetchHomePageResourcesRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHomePageResourcesRequest = [[TXPBFetchHomePageResourcesRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHomePageResourcesRequest;
}
- (TXPBFetchHomePageResourcesRequestBuilder*) clear {
  self.resultFetchHomePageResourcesRequest = [[TXPBFetchHomePageResourcesRequest alloc] init];
  return self;
}
- (TXPBFetchHomePageResourcesRequestBuilder*) clone {
  return [TXPBFetchHomePageResourcesRequest builderWithPrototype:resultFetchHomePageResourcesRequest];
}
- (TXPBFetchHomePageResourcesRequest*) defaultInstance {
  return [TXPBFetchHomePageResourcesRequest defaultInstance];
}
- (TXPBFetchHomePageResourcesRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHomePageResourcesRequest*) buildPartial {
  TXPBFetchHomePageResourcesRequest* returnMe = resultFetchHomePageResourcesRequest;
  self.resultFetchHomePageResourcesRequest = nil;
  return returnMe;
}
- (TXPBFetchHomePageResourcesRequestBuilder*) mergeFrom:(TXPBFetchHomePageResourcesRequest*) other {
  if (other == [TXPBFetchHomePageResourcesRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHomePageResourcesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHomePageResourcesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchHomePageResourcesResponse ()
@property (strong) NSMutableArray * hotArray;
@property (strong) NSMutableArray * latestArray;
@property (strong) NSMutableArray * recommendedArray;
@property (strong) NSMutableArray * providersArray;
@end

@implementation TXPBFetchHomePageResourcesResponse

@synthesize hotArray;
@dynamic hot;
@synthesize latestArray;
@dynamic latest;
@synthesize recommendedArray;
@dynamic recommended;
@synthesize providersArray;
@dynamic providers;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchHomePageResourcesResponse* defaultTXPBFetchHomePageResourcesResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHomePageResourcesResponse class]) {
    defaultTXPBFetchHomePageResourcesResponseInstance = [[TXPBFetchHomePageResourcesResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHomePageResourcesResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHomePageResourcesResponseInstance;
}
- (NSArray *)hot {
  return hotArray;
}
- (TXPBResource*)hotAtIndex:(NSUInteger)index {
  return [hotArray objectAtIndex:index];
}
- (NSArray *)latest {
  return latestArray;
}
- (TXPBResource*)latestAtIndex:(NSUInteger)index {
  return [latestArray objectAtIndex:index];
}
- (NSArray *)recommended {
  return recommendedArray;
}
- (TXPBResource*)recommendedAtIndex:(NSUInteger)index {
  return [recommendedArray objectAtIndex:index];
}
- (NSArray *)providers {
  return providersArray;
}
- (TXPBProvider*)providersAtIndex:(NSUInteger)index {
  return [providersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInithot = YES;
   [self.hot enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInithot = NO;
      *stop = YES;
    }
  }];
  if (!isInithot) return isInithot;
  __block BOOL isInitlatest = YES;
   [self.latest enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitlatest = NO;
      *stop = YES;
    }
  }];
  if (!isInitlatest) return isInitlatest;
  __block BOOL isInitrecommended = YES;
   [self.recommended enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitrecommended = NO;
      *stop = YES;
    }
  }];
  if (!isInitrecommended) return isInitrecommended;
  __block BOOL isInitproviders = YES;
   [self.providers enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitproviders = NO;
      *stop = YES;
    }
  }];
  if (!isInitproviders) return isInitproviders;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.hotArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.latestArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.recommendedArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.hotArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.latestArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.recommendedArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHomePageResourcesResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchHomePageResourcesResponse*)[[[TXPBFetchHomePageResourcesResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchHomePageResourcesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHomePageResourcesResponse*)[[[TXPBFetchHomePageResourcesResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHomePageResourcesResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHomePageResourcesResponse*)[[[TXPBFetchHomePageResourcesResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHomePageResourcesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHomePageResourcesResponse*)[[[TXPBFetchHomePageResourcesResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHomePageResourcesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHomePageResourcesResponse*)[[[TXPBFetchHomePageResourcesResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHomePageResourcesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHomePageResourcesResponse*)[[[TXPBFetchHomePageResourcesResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHomePageResourcesResponseBuilder*) builder {
  return [[TXPBFetchHomePageResourcesResponseBuilder alloc] init];
}
+ (TXPBFetchHomePageResourcesResponseBuilder*) builderWithPrototype:(TXPBFetchHomePageResourcesResponse*) prototype {
  return [[TXPBFetchHomePageResourcesResponse builder] mergeFrom:prototype];
}
- (TXPBFetchHomePageResourcesResponseBuilder*) builder {
  return [TXPBFetchHomePageResourcesResponse builder];
}
- (TXPBFetchHomePageResourcesResponseBuilder*) toBuilder {
  return [TXPBFetchHomePageResourcesResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.hotArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"hot"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.latestArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"latest"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.recommendedArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"recommended"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"providers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.hotArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"hot"];
  }
  for (TXPBResource* element in self.latestArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"latest"];
  }
  for (TXPBResource* element in self.recommendedArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"recommended"];
  }
  for (TXPBProvider* element in self.providersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"providers"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHomePageResourcesResponse class]]) {
    return NO;
  }
  TXPBFetchHomePageResourcesResponse *otherMessage = other;
  return
      [self.hotArray isEqualToArray:otherMessage.hotArray] &&
      [self.latestArray isEqualToArray:otherMessage.latestArray] &&
      [self.recommendedArray isEqualToArray:otherMessage.recommendedArray] &&
      [self.providersArray isEqualToArray:otherMessage.providersArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.hotArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.latestArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.recommendedArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHomePageResourcesResponseBuilder()
@property (strong) TXPBFetchHomePageResourcesResponse* resultFetchHomePageResourcesResponse;
@end

@implementation TXPBFetchHomePageResourcesResponseBuilder
@synthesize resultFetchHomePageResourcesResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHomePageResourcesResponse = [[TXPBFetchHomePageResourcesResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHomePageResourcesResponse;
}
- (TXPBFetchHomePageResourcesResponseBuilder*) clear {
  self.resultFetchHomePageResourcesResponse = [[TXPBFetchHomePageResourcesResponse alloc] init];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder*) clone {
  return [TXPBFetchHomePageResourcesResponse builderWithPrototype:resultFetchHomePageResourcesResponse];
}
- (TXPBFetchHomePageResourcesResponse*) defaultInstance {
  return [TXPBFetchHomePageResourcesResponse defaultInstance];
}
- (TXPBFetchHomePageResourcesResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHomePageResourcesResponse*) buildPartial {
  TXPBFetchHomePageResourcesResponse* returnMe = resultFetchHomePageResourcesResponse;
  self.resultFetchHomePageResourcesResponse = nil;
  return returnMe;
}
- (TXPBFetchHomePageResourcesResponseBuilder*) mergeFrom:(TXPBFetchHomePageResourcesResponse*) other {
  if (other == [TXPBFetchHomePageResourcesResponse defaultInstance]) {
    return self;
  }
  if (other.hotArray.count > 0) {
    if (resultFetchHomePageResourcesResponse.hotArray == nil) {
      resultFetchHomePageResourcesResponse.hotArray = [[NSMutableArray alloc] initWithArray:other.hotArray];
    } else {
      [resultFetchHomePageResourcesResponse.hotArray addObjectsFromArray:other.hotArray];
    }
  }
  if (other.latestArray.count > 0) {
    if (resultFetchHomePageResourcesResponse.latestArray == nil) {
      resultFetchHomePageResourcesResponse.latestArray = [[NSMutableArray alloc] initWithArray:other.latestArray];
    } else {
      [resultFetchHomePageResourcesResponse.latestArray addObjectsFromArray:other.latestArray];
    }
  }
  if (other.recommendedArray.count > 0) {
    if (resultFetchHomePageResourcesResponse.recommendedArray == nil) {
      resultFetchHomePageResourcesResponse.recommendedArray = [[NSMutableArray alloc] initWithArray:other.recommendedArray];
    } else {
      [resultFetchHomePageResourcesResponse.recommendedArray addObjectsFromArray:other.recommendedArray];
    }
  }
  if (other.providersArray.count > 0) {
    if (resultFetchHomePageResourcesResponse.providersArray == nil) {
      resultFetchHomePageResourcesResponse.providersArray = [[NSMutableArray alloc] initWithArray:other.providersArray];
    } else {
      [resultFetchHomePageResourcesResponse.providersArray addObjectsFromArray:other.providersArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHomePageResourcesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addHot:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addLatest:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRecommended:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        TXPBProviderBuilder* subBuilder = [TXPBProvider builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProviders:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)hot {
  return resultFetchHomePageResourcesResponse.hotArray;
}
- (TXPBResource*)hotAtIndex:(NSUInteger)index {
  return [resultFetchHomePageResourcesResponse hotAtIndex:index];
}
- (TXPBFetchHomePageResourcesResponseBuilder *)addHot:(TXPBResource*)value {
  if (resultFetchHomePageResourcesResponse.hotArray == nil) {
    resultFetchHomePageResourcesResponse.hotArray = [[NSMutableArray alloc]init];
  }
  [resultFetchHomePageResourcesResponse.hotArray addObject:value];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)setHotArray:(NSArray *)array {
  resultFetchHomePageResourcesResponse.hotArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)clearHot {
  resultFetchHomePageResourcesResponse.hotArray = nil;
  return self;
}
- (NSMutableArray *)latest {
  return resultFetchHomePageResourcesResponse.latestArray;
}
- (TXPBResource*)latestAtIndex:(NSUInteger)index {
  return [resultFetchHomePageResourcesResponse latestAtIndex:index];
}
- (TXPBFetchHomePageResourcesResponseBuilder *)addLatest:(TXPBResource*)value {
  if (resultFetchHomePageResourcesResponse.latestArray == nil) {
    resultFetchHomePageResourcesResponse.latestArray = [[NSMutableArray alloc]init];
  }
  [resultFetchHomePageResourcesResponse.latestArray addObject:value];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)setLatestArray:(NSArray *)array {
  resultFetchHomePageResourcesResponse.latestArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)clearLatest {
  resultFetchHomePageResourcesResponse.latestArray = nil;
  return self;
}
- (NSMutableArray *)recommended {
  return resultFetchHomePageResourcesResponse.recommendedArray;
}
- (TXPBResource*)recommendedAtIndex:(NSUInteger)index {
  return [resultFetchHomePageResourcesResponse recommendedAtIndex:index];
}
- (TXPBFetchHomePageResourcesResponseBuilder *)addRecommended:(TXPBResource*)value {
  if (resultFetchHomePageResourcesResponse.recommendedArray == nil) {
    resultFetchHomePageResourcesResponse.recommendedArray = [[NSMutableArray alloc]init];
  }
  [resultFetchHomePageResourcesResponse.recommendedArray addObject:value];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)setRecommendedArray:(NSArray *)array {
  resultFetchHomePageResourcesResponse.recommendedArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)clearRecommended {
  resultFetchHomePageResourcesResponse.recommendedArray = nil;
  return self;
}
- (NSMutableArray *)providers {
  return resultFetchHomePageResourcesResponse.providersArray;
}
- (TXPBProvider*)providersAtIndex:(NSUInteger)index {
  return [resultFetchHomePageResourcesResponse providersAtIndex:index];
}
- (TXPBFetchHomePageResourcesResponseBuilder *)addProviders:(TXPBProvider*)value {
  if (resultFetchHomePageResourcesResponse.providersArray == nil) {
    resultFetchHomePageResourcesResponse.providersArray = [[NSMutableArray alloc]init];
  }
  [resultFetchHomePageResourcesResponse.providersArray addObject:value];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)setProvidersArray:(NSArray *)array {
  resultFetchHomePageResourcesResponse.providersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchHomePageResourcesResponseBuilder *)clearProviders {
  resultFetchHomePageResourcesResponse.providersArray = nil;
  return self;
}
@end

@interface TXPBFetchHotResourceRequest ()
@property SInt32 page;
@end

@implementation TXPBFetchHotResourceRequest

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
  }
  return self;
}
static TXPBFetchHotResourceRequest* defaultTXPBFetchHotResourceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHotResourceRequest class]) {
    defaultTXPBFetchHotResourceRequestInstance = [[TXPBFetchHotResourceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHotResourceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHotResourceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHotResourceRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchHotResourceRequest*)[[[TXPBFetchHotResourceRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchHotResourceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotResourceRequest*)[[[TXPBFetchHotResourceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotResourceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHotResourceRequest*)[[[TXPBFetchHotResourceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHotResourceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotResourceRequest*)[[[TXPBFetchHotResourceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHotResourceRequest*)[[[TXPBFetchHotResourceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHotResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotResourceRequest*)[[[TXPBFetchHotResourceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotResourceRequestBuilder*) builder {
  return [[TXPBFetchHotResourceRequestBuilder alloc] init];
}
+ (TXPBFetchHotResourceRequestBuilder*) builderWithPrototype:(TXPBFetchHotResourceRequest*) prototype {
  return [[TXPBFetchHotResourceRequest builder] mergeFrom:prototype];
}
- (TXPBFetchHotResourceRequestBuilder*) builder {
  return [TXPBFetchHotResourceRequest builder];
}
- (TXPBFetchHotResourceRequestBuilder*) toBuilder {
  return [TXPBFetchHotResourceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHotResourceRequest class]]) {
    return NO;
  }
  TXPBFetchHotResourceRequest *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHotResourceRequestBuilder()
@property (strong) TXPBFetchHotResourceRequest* resultFetchHotResourceRequest;
@end

@implementation TXPBFetchHotResourceRequestBuilder
@synthesize resultFetchHotResourceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHotResourceRequest = [[TXPBFetchHotResourceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHotResourceRequest;
}
- (TXPBFetchHotResourceRequestBuilder*) clear {
  self.resultFetchHotResourceRequest = [[TXPBFetchHotResourceRequest alloc] init];
  return self;
}
- (TXPBFetchHotResourceRequestBuilder*) clone {
  return [TXPBFetchHotResourceRequest builderWithPrototype:resultFetchHotResourceRequest];
}
- (TXPBFetchHotResourceRequest*) defaultInstance {
  return [TXPBFetchHotResourceRequest defaultInstance];
}
- (TXPBFetchHotResourceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHotResourceRequest*) buildPartial {
  TXPBFetchHotResourceRequest* returnMe = resultFetchHotResourceRequest;
  self.resultFetchHotResourceRequest = nil;
  return returnMe;
}
- (TXPBFetchHotResourceRequestBuilder*) mergeFrom:(TXPBFetchHotResourceRequest*) other {
  if (other == [TXPBFetchHotResourceRequest defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHotResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHotResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return resultFetchHotResourceRequest.hasPage;
}
- (SInt32) page {
  return resultFetchHotResourceRequest.page;
}
- (TXPBFetchHotResourceRequestBuilder*) setPage:(SInt32) value {
  resultFetchHotResourceRequest.hasPage = YES;
  resultFetchHotResourceRequest.page = value;
  return self;
}
- (TXPBFetchHotResourceRequestBuilder*) clearPage {
  resultFetchHotResourceRequest.hasPage = NO;
  resultFetchHotResourceRequest.page = 0;
  return self;
}
@end

@interface TXPBFetchHotResourceResponse ()
@property (strong) NSMutableArray * resourcesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchHotResourceResponse

@synthesize resourcesArray;
@dynamic resources;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchHotResourceResponse* defaultTXPBFetchHotResourceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHotResourceResponse class]) {
    defaultTXPBFetchHotResourceResponseInstance = [[TXPBFetchHotResourceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHotResourceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHotResourceResponseInstance;
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHotResourceResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchHotResourceResponse*)[[[TXPBFetchHotResourceResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchHotResourceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotResourceResponse*)[[[TXPBFetchHotResourceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotResourceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHotResourceResponse*)[[[TXPBFetchHotResourceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHotResourceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotResourceResponse*)[[[TXPBFetchHotResourceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHotResourceResponse*)[[[TXPBFetchHotResourceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHotResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotResourceResponse*)[[[TXPBFetchHotResourceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotResourceResponseBuilder*) builder {
  return [[TXPBFetchHotResourceResponseBuilder alloc] init];
}
+ (TXPBFetchHotResourceResponseBuilder*) builderWithPrototype:(TXPBFetchHotResourceResponse*) prototype {
  return [[TXPBFetchHotResourceResponse builder] mergeFrom:prototype];
}
- (TXPBFetchHotResourceResponseBuilder*) builder {
  return [TXPBFetchHotResourceResponse builder];
}
- (TXPBFetchHotResourceResponseBuilder*) toBuilder {
  return [TXPBFetchHotResourceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHotResourceResponse class]]) {
    return NO;
  }
  TXPBFetchHotResourceResponse *otherMessage = other;
  return
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHotResourceResponseBuilder()
@property (strong) TXPBFetchHotResourceResponse* resultFetchHotResourceResponse;
@end

@implementation TXPBFetchHotResourceResponseBuilder
@synthesize resultFetchHotResourceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHotResourceResponse = [[TXPBFetchHotResourceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHotResourceResponse;
}
- (TXPBFetchHotResourceResponseBuilder*) clear {
  self.resultFetchHotResourceResponse = [[TXPBFetchHotResourceResponse alloc] init];
  return self;
}
- (TXPBFetchHotResourceResponseBuilder*) clone {
  return [TXPBFetchHotResourceResponse builderWithPrototype:resultFetchHotResourceResponse];
}
- (TXPBFetchHotResourceResponse*) defaultInstance {
  return [TXPBFetchHotResourceResponse defaultInstance];
}
- (TXPBFetchHotResourceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHotResourceResponse*) buildPartial {
  TXPBFetchHotResourceResponse* returnMe = resultFetchHotResourceResponse;
  self.resultFetchHotResourceResponse = nil;
  return returnMe;
}
- (TXPBFetchHotResourceResponseBuilder*) mergeFrom:(TXPBFetchHotResourceResponse*) other {
  if (other == [TXPBFetchHotResourceResponse defaultInstance]) {
    return self;
  }
  if (other.resourcesArray.count > 0) {
    if (resultFetchHotResourceResponse.resourcesArray == nil) {
      resultFetchHotResourceResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultFetchHotResourceResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHotResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHotResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resources {
  return resultFetchHotResourceResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultFetchHotResourceResponse resourcesAtIndex:index];
}
- (TXPBFetchHotResourceResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultFetchHotResourceResponse.resourcesArray == nil) {
    resultFetchHotResourceResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchHotResourceResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBFetchHotResourceResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultFetchHotResourceResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchHotResourceResponseBuilder *)clearResources {
  resultFetchHotResourceResponse.resourcesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchHotResourceResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchHotResourceResponse.hasMore;
}
- (TXPBFetchHotResourceResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchHotResourceResponse.hasHasMore = YES;
  resultFetchHotResourceResponse.hasMore = value;
  return self;
}
- (TXPBFetchHotResourceResponseBuilder*) clearHasMore {
  resultFetchHotResourceResponse.hasHasMore = NO;
  resultFetchHotResourceResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchResourceRequest ()
@property SInt64 sinceId;
@property SInt64 maxId;
@end

@implementation TXPBFetchResourceRequest

- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.sinceId = 0L;
    self.maxId = 0L;
  }
  return self;
}
static TXPBFetchResourceRequest* defaultTXPBFetchResourceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceRequest class]) {
    defaultTXPBFetchResourceRequestInstance = [[TXPBFetchResourceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSinceId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSinceId) {
    [output writeInt64:1 value:self.sinceId];
  }
  if (self.hasMaxId) {
    [output writeInt64:2 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSinceId) {
    size_ += computeInt64Size(1, self.sinceId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(2, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceRequest*)[[[TXPBFetchResourceRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceRequest*)[[[TXPBFetchResourceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceRequest*)[[[TXPBFetchResourceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceRequest*)[[[TXPBFetchResourceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceRequest*)[[[TXPBFetchResourceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceRequest*)[[[TXPBFetchResourceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceRequestBuilder*) builder {
  return [[TXPBFetchResourceRequestBuilder alloc] init];
}
+ (TXPBFetchResourceRequestBuilder*) builderWithPrototype:(TXPBFetchResourceRequest*) prototype {
  return [[TXPBFetchResourceRequest builder] mergeFrom:prototype];
}
- (TXPBFetchResourceRequestBuilder*) builder {
  return [TXPBFetchResourceRequest builder];
}
- (TXPBFetchResourceRequestBuilder*) toBuilder {
  return [TXPBFetchResourceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceRequest class]]) {
    return NO;
  }
  TXPBFetchResourceRequest *otherMessage = other;
  return
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceRequestBuilder()
@property (strong) TXPBFetchResourceRequest* resultFetchResourceRequest;
@end

@implementation TXPBFetchResourceRequestBuilder
@synthesize resultFetchResourceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceRequest = [[TXPBFetchResourceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceRequest;
}
- (TXPBFetchResourceRequestBuilder*) clear {
  self.resultFetchResourceRequest = [[TXPBFetchResourceRequest alloc] init];
  return self;
}
- (TXPBFetchResourceRequestBuilder*) clone {
  return [TXPBFetchResourceRequest builderWithPrototype:resultFetchResourceRequest];
}
- (TXPBFetchResourceRequest*) defaultInstance {
  return [TXPBFetchResourceRequest defaultInstance];
}
- (TXPBFetchResourceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceRequest*) buildPartial {
  TXPBFetchResourceRequest* returnMe = resultFetchResourceRequest;
  self.resultFetchResourceRequest = nil;
  return returnMe;
}
- (TXPBFetchResourceRequestBuilder*) mergeFrom:(TXPBFetchResourceRequest*) other {
  if (other == [TXPBFetchResourceRequest defaultInstance]) {
    return self;
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 16: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSinceId {
  return resultFetchResourceRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchResourceRequest.sinceId;
}
- (TXPBFetchResourceRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchResourceRequest.hasSinceId = YES;
  resultFetchResourceRequest.sinceId = value;
  return self;
}
- (TXPBFetchResourceRequestBuilder*) clearSinceId {
  resultFetchResourceRequest.hasSinceId = NO;
  resultFetchResourceRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchResourceRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchResourceRequest.maxId;
}
- (TXPBFetchResourceRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchResourceRequest.hasMaxId = YES;
  resultFetchResourceRequest.maxId = value;
  return self;
}
- (TXPBFetchResourceRequestBuilder*) clearMaxId {
  resultFetchResourceRequest.hasMaxId = NO;
  resultFetchResourceRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBFetchResourceResponse ()
@property (strong) NSMutableArray * resourcesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchResourceResponse

@synthesize resourcesArray;
@dynamic resources;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchResourceResponse* defaultTXPBFetchResourceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceResponse class]) {
    defaultTXPBFetchResourceResponseInstance = [[TXPBFetchResourceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceResponseInstance;
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceResponse*)[[[TXPBFetchResourceResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceResponse*)[[[TXPBFetchResourceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceResponse*)[[[TXPBFetchResourceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceResponse*)[[[TXPBFetchResourceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceResponse*)[[[TXPBFetchResourceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceResponse*)[[[TXPBFetchResourceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceResponseBuilder*) builder {
  return [[TXPBFetchResourceResponseBuilder alloc] init];
}
+ (TXPBFetchResourceResponseBuilder*) builderWithPrototype:(TXPBFetchResourceResponse*) prototype {
  return [[TXPBFetchResourceResponse builder] mergeFrom:prototype];
}
- (TXPBFetchResourceResponseBuilder*) builder {
  return [TXPBFetchResourceResponse builder];
}
- (TXPBFetchResourceResponseBuilder*) toBuilder {
  return [TXPBFetchResourceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceResponse class]]) {
    return NO;
  }
  TXPBFetchResourceResponse *otherMessage = other;
  return
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceResponseBuilder()
@property (strong) TXPBFetchResourceResponse* resultFetchResourceResponse;
@end

@implementation TXPBFetchResourceResponseBuilder
@synthesize resultFetchResourceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceResponse = [[TXPBFetchResourceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceResponse;
}
- (TXPBFetchResourceResponseBuilder*) clear {
  self.resultFetchResourceResponse = [[TXPBFetchResourceResponse alloc] init];
  return self;
}
- (TXPBFetchResourceResponseBuilder*) clone {
  return [TXPBFetchResourceResponse builderWithPrototype:resultFetchResourceResponse];
}
- (TXPBFetchResourceResponse*) defaultInstance {
  return [TXPBFetchResourceResponse defaultInstance];
}
- (TXPBFetchResourceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceResponse*) buildPartial {
  TXPBFetchResourceResponse* returnMe = resultFetchResourceResponse;
  self.resultFetchResourceResponse = nil;
  return returnMe;
}
- (TXPBFetchResourceResponseBuilder*) mergeFrom:(TXPBFetchResourceResponse*) other {
  if (other == [TXPBFetchResourceResponse defaultInstance]) {
    return self;
  }
  if (other.resourcesArray.count > 0) {
    if (resultFetchResourceResponse.resourcesArray == nil) {
      resultFetchResourceResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultFetchResourceResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resources {
  return resultFetchResourceResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultFetchResourceResponse resourcesAtIndex:index];
}
- (TXPBFetchResourceResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultFetchResourceResponse.resourcesArray == nil) {
    resultFetchResourceResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchResourceResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBFetchResourceResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultFetchResourceResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchResourceResponseBuilder *)clearResources {
  resultFetchResourceResponse.resourcesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchResourceResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchResourceResponse.hasMore;
}
- (TXPBFetchResourceResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchResourceResponse.hasHasMore = YES;
  resultFetchResourceResponse.hasMore = value;
  return self;
}
- (TXPBFetchResourceResponseBuilder*) clearHasMore {
  resultFetchResourceResponse.hasHasMore = NO;
  resultFetchResourceResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchRecommendedResourceRequest ()
@property SInt32 page;
@end

@implementation TXPBFetchRecommendedResourceRequest

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
  }
  return self;
}
static TXPBFetchRecommendedResourceRequest* defaultTXPBFetchRecommendedResourceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchRecommendedResourceRequest class]) {
    defaultTXPBFetchRecommendedResourceRequestInstance = [[TXPBFetchRecommendedResourceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendedResourceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendedResourceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchRecommendedResourceRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchRecommendedResourceRequest*)[[[TXPBFetchRecommendedResourceRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchRecommendedResourceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendedResourceRequest*)[[[TXPBFetchRecommendedResourceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendedResourceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchRecommendedResourceRequest*)[[[TXPBFetchRecommendedResourceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchRecommendedResourceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendedResourceRequest*)[[[TXPBFetchRecommendedResourceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendedResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchRecommendedResourceRequest*)[[[TXPBFetchRecommendedResourceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchRecommendedResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendedResourceRequest*)[[[TXPBFetchRecommendedResourceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendedResourceRequestBuilder*) builder {
  return [[TXPBFetchRecommendedResourceRequestBuilder alloc] init];
}
+ (TXPBFetchRecommendedResourceRequestBuilder*) builderWithPrototype:(TXPBFetchRecommendedResourceRequest*) prototype {
  return [[TXPBFetchRecommendedResourceRequest builder] mergeFrom:prototype];
}
- (TXPBFetchRecommendedResourceRequestBuilder*) builder {
  return [TXPBFetchRecommendedResourceRequest builder];
}
- (TXPBFetchRecommendedResourceRequestBuilder*) toBuilder {
  return [TXPBFetchRecommendedResourceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchRecommendedResourceRequest class]]) {
    return NO;
  }
  TXPBFetchRecommendedResourceRequest *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchRecommendedResourceRequestBuilder()
@property (strong) TXPBFetchRecommendedResourceRequest* resultFetchRecommendedResourceRequest;
@end

@implementation TXPBFetchRecommendedResourceRequestBuilder
@synthesize resultFetchRecommendedResourceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchRecommendedResourceRequest = [[TXPBFetchRecommendedResourceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchRecommendedResourceRequest;
}
- (TXPBFetchRecommendedResourceRequestBuilder*) clear {
  self.resultFetchRecommendedResourceRequest = [[TXPBFetchRecommendedResourceRequest alloc] init];
  return self;
}
- (TXPBFetchRecommendedResourceRequestBuilder*) clone {
  return [TXPBFetchRecommendedResourceRequest builderWithPrototype:resultFetchRecommendedResourceRequest];
}
- (TXPBFetchRecommendedResourceRequest*) defaultInstance {
  return [TXPBFetchRecommendedResourceRequest defaultInstance];
}
- (TXPBFetchRecommendedResourceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchRecommendedResourceRequest*) buildPartial {
  TXPBFetchRecommendedResourceRequest* returnMe = resultFetchRecommendedResourceRequest;
  self.resultFetchRecommendedResourceRequest = nil;
  return returnMe;
}
- (TXPBFetchRecommendedResourceRequestBuilder*) mergeFrom:(TXPBFetchRecommendedResourceRequest*) other {
  if (other == [TXPBFetchRecommendedResourceRequest defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchRecommendedResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchRecommendedResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return resultFetchRecommendedResourceRequest.hasPage;
}
- (SInt32) page {
  return resultFetchRecommendedResourceRequest.page;
}
- (TXPBFetchRecommendedResourceRequestBuilder*) setPage:(SInt32) value {
  resultFetchRecommendedResourceRequest.hasPage = YES;
  resultFetchRecommendedResourceRequest.page = value;
  return self;
}
- (TXPBFetchRecommendedResourceRequestBuilder*) clearPage {
  resultFetchRecommendedResourceRequest.hasPage = NO;
  resultFetchRecommendedResourceRequest.page = 0;
  return self;
}
@end

@interface TXPBFetchRecommendedResourceResponse ()
@property (strong) NSMutableArray * resourcesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchRecommendedResourceResponse

@synthesize resourcesArray;
@dynamic resources;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchRecommendedResourceResponse* defaultTXPBFetchRecommendedResourceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchRecommendedResourceResponse class]) {
    defaultTXPBFetchRecommendedResourceResponseInstance = [[TXPBFetchRecommendedResourceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendedResourceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendedResourceResponseInstance;
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchRecommendedResourceResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchRecommendedResourceResponse*)[[[TXPBFetchRecommendedResourceResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchRecommendedResourceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendedResourceResponse*)[[[TXPBFetchRecommendedResourceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendedResourceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchRecommendedResourceResponse*)[[[TXPBFetchRecommendedResourceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchRecommendedResourceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendedResourceResponse*)[[[TXPBFetchRecommendedResourceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendedResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchRecommendedResourceResponse*)[[[TXPBFetchRecommendedResourceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchRecommendedResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendedResourceResponse*)[[[TXPBFetchRecommendedResourceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendedResourceResponseBuilder*) builder {
  return [[TXPBFetchRecommendedResourceResponseBuilder alloc] init];
}
+ (TXPBFetchRecommendedResourceResponseBuilder*) builderWithPrototype:(TXPBFetchRecommendedResourceResponse*) prototype {
  return [[TXPBFetchRecommendedResourceResponse builder] mergeFrom:prototype];
}
- (TXPBFetchRecommendedResourceResponseBuilder*) builder {
  return [TXPBFetchRecommendedResourceResponse builder];
}
- (TXPBFetchRecommendedResourceResponseBuilder*) toBuilder {
  return [TXPBFetchRecommendedResourceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchRecommendedResourceResponse class]]) {
    return NO;
  }
  TXPBFetchRecommendedResourceResponse *otherMessage = other;
  return
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchRecommendedResourceResponseBuilder()
@property (strong) TXPBFetchRecommendedResourceResponse* resultFetchRecommendedResourceResponse;
@end

@implementation TXPBFetchRecommendedResourceResponseBuilder
@synthesize resultFetchRecommendedResourceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchRecommendedResourceResponse = [[TXPBFetchRecommendedResourceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchRecommendedResourceResponse;
}
- (TXPBFetchRecommendedResourceResponseBuilder*) clear {
  self.resultFetchRecommendedResourceResponse = [[TXPBFetchRecommendedResourceResponse alloc] init];
  return self;
}
- (TXPBFetchRecommendedResourceResponseBuilder*) clone {
  return [TXPBFetchRecommendedResourceResponse builderWithPrototype:resultFetchRecommendedResourceResponse];
}
- (TXPBFetchRecommendedResourceResponse*) defaultInstance {
  return [TXPBFetchRecommendedResourceResponse defaultInstance];
}
- (TXPBFetchRecommendedResourceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchRecommendedResourceResponse*) buildPartial {
  TXPBFetchRecommendedResourceResponse* returnMe = resultFetchRecommendedResourceResponse;
  self.resultFetchRecommendedResourceResponse = nil;
  return returnMe;
}
- (TXPBFetchRecommendedResourceResponseBuilder*) mergeFrom:(TXPBFetchRecommendedResourceResponse*) other {
  if (other == [TXPBFetchRecommendedResourceResponse defaultInstance]) {
    return self;
  }
  if (other.resourcesArray.count > 0) {
    if (resultFetchRecommendedResourceResponse.resourcesArray == nil) {
      resultFetchRecommendedResourceResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultFetchRecommendedResourceResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchRecommendedResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchRecommendedResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resources {
  return resultFetchRecommendedResourceResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultFetchRecommendedResourceResponse resourcesAtIndex:index];
}
- (TXPBFetchRecommendedResourceResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultFetchRecommendedResourceResponse.resourcesArray == nil) {
    resultFetchRecommendedResourceResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchRecommendedResourceResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBFetchRecommendedResourceResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultFetchRecommendedResourceResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchRecommendedResourceResponseBuilder *)clearResources {
  resultFetchRecommendedResourceResponse.resourcesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchRecommendedResourceResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchRecommendedResourceResponse.hasMore;
}
- (TXPBFetchRecommendedResourceResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchRecommendedResourceResponse.hasHasMore = YES;
  resultFetchRecommendedResourceResponse.hasMore = value;
  return self;
}
- (TXPBFetchRecommendedResourceResponseBuilder*) clearHasMore {
  resultFetchRecommendedResourceResponse.hasHasMore = NO;
  resultFetchRecommendedResourceResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBProvider ()
@property SInt64 id;
@property (strong) NSString* name;
@property (strong) NSString* introduction;
@property (strong) NSString* avatar;
@property SInt64 resCount;
@property SInt64 viewedCount;
@property SInt64 likedCount;
@property SInt64 resUpdatedOn;
@property SInt64 albumCount;
@end

@implementation TXPBProvider

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasIntroduction {
  return !!hasIntroduction_;
}
- (void) setHasIntroduction:(BOOL) _value_ {
  hasIntroduction_ = !!_value_;
}
@synthesize introduction;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasResCount {
  return !!hasResCount_;
}
- (void) setHasResCount:(BOOL) _value_ {
  hasResCount_ = !!_value_;
}
@synthesize resCount;
- (BOOL) hasViewedCount {
  return !!hasViewedCount_;
}
- (void) setHasViewedCount:(BOOL) _value_ {
  hasViewedCount_ = !!_value_;
}
@synthesize viewedCount;
- (BOOL) hasLikedCount {
  return !!hasLikedCount_;
}
- (void) setHasLikedCount:(BOOL) _value_ {
  hasLikedCount_ = !!_value_;
}
@synthesize likedCount;
- (BOOL) hasResUpdatedOn {
  return !!hasResUpdatedOn_;
}
- (void) setHasResUpdatedOn:(BOOL) _value_ {
  hasResUpdatedOn_ = !!_value_;
}
@synthesize resUpdatedOn;
- (BOOL) hasAlbumCount {
  return !!hasAlbumCount_;
}
- (void) setHasAlbumCount:(BOOL) _value_ {
  hasAlbumCount_ = !!_value_;
}
@synthesize albumCount;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.introduction = @"";
    self.avatar = @"";
    self.resCount = 0L;
    self.viewedCount = 0L;
    self.likedCount = 0L;
    self.resUpdatedOn = 0L;
    self.albumCount = 0L;
  }
  return self;
}
static TXPBProvider* defaultTXPBProviderInstance = nil;
+ (void) initialize {
  if (self == [TXPBProvider class]) {
    defaultTXPBProviderInstance = [[TXPBProvider alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBProviderInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBProviderInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasIntroduction) {
    return NO;
  }
  if (!self.hasAvatar) {
    return NO;
  }
  if (!self.hasResCount) {
    return NO;
  }
  if (!self.hasViewedCount) {
    return NO;
  }
  if (!self.hasLikedCount) {
    return NO;
  }
  if (!self.hasResUpdatedOn) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasIntroduction) {
    [output writeString:3 value:self.introduction];
  }
  if (self.hasAvatar) {
    [output writeString:4 value:self.avatar];
  }
  if (self.hasResCount) {
    [output writeInt64:5 value:self.resCount];
  }
  if (self.hasViewedCount) {
    [output writeInt64:6 value:self.viewedCount];
  }
  if (self.hasLikedCount) {
    [output writeInt64:7 value:self.likedCount];
  }
  if (self.hasResUpdatedOn) {
    [output writeInt64:8 value:self.resUpdatedOn];
  }
  if (self.hasAlbumCount) {
    [output writeInt64:9 value:self.albumCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasIntroduction) {
    size_ += computeStringSize(3, self.introduction);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(4, self.avatar);
  }
  if (self.hasResCount) {
    size_ += computeInt64Size(5, self.resCount);
  }
  if (self.hasViewedCount) {
    size_ += computeInt64Size(6, self.viewedCount);
  }
  if (self.hasLikedCount) {
    size_ += computeInt64Size(7, self.likedCount);
  }
  if (self.hasResUpdatedOn) {
    size_ += computeInt64Size(8, self.resUpdatedOn);
  }
  if (self.hasAlbumCount) {
    size_ += computeInt64Size(9, self.albumCount);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBProvider*) parseFromData:(NSData*) data {
  return (TXPBProvider*)[[[TXPBProvider builder] mergeFromData:data] build];
}
+ (TXPBProvider*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBProvider*)[[[TXPBProvider builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBProvider*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBProvider*)[[[TXPBProvider builder] mergeFromInputStream:input] build];
}
+ (TXPBProvider*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBProvider*)[[[TXPBProvider builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBProvider*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBProvider*)[[[TXPBProvider builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBProvider*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBProvider*)[[[TXPBProvider builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBProviderBuilder*) builder {
  return [[TXPBProviderBuilder alloc] init];
}
+ (TXPBProviderBuilder*) builderWithPrototype:(TXPBProvider*) prototype {
  return [[TXPBProvider builder] mergeFrom:prototype];
}
- (TXPBProviderBuilder*) builder {
  return [TXPBProvider builder];
}
- (TXPBProviderBuilder*) toBuilder {
  return [TXPBProvider builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasIntroduction) {
    [output appendFormat:@"%@%@: %@\n", indent, @"introduction", self.introduction];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasResCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resCount", [NSNumber numberWithLongLong:self.resCount]];
  }
  if (self.hasViewedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewedCount", [NSNumber numberWithLongLong:self.viewedCount]];
  }
  if (self.hasLikedCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"likedCount", [NSNumber numberWithLongLong:self.likedCount]];
  }
  if (self.hasResUpdatedOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resUpdatedOn", [NSNumber numberWithLongLong:self.resUpdatedOn]];
  }
  if (self.hasAlbumCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"albumCount", [NSNumber numberWithLongLong:self.albumCount]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasIntroduction) {
    [dictionary setObject: self.introduction forKey: @"introduction"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasResCount) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.resCount] forKey: @"resCount"];
  }
  if (self.hasViewedCount) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.viewedCount] forKey: @"viewedCount"];
  }
  if (self.hasLikedCount) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.likedCount] forKey: @"likedCount"];
  }
  if (self.hasResUpdatedOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.resUpdatedOn] forKey: @"resUpdatedOn"];
  }
  if (self.hasAlbumCount) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.albumCount] forKey: @"albumCount"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBProvider class]]) {
    return NO;
  }
  TXPBProvider *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasIntroduction == otherMessage.hasIntroduction &&
      (!self.hasIntroduction || [self.introduction isEqual:otherMessage.introduction]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasResCount == otherMessage.hasResCount &&
      (!self.hasResCount || self.resCount == otherMessage.resCount) &&
      self.hasViewedCount == otherMessage.hasViewedCount &&
      (!self.hasViewedCount || self.viewedCount == otherMessage.viewedCount) &&
      self.hasLikedCount == otherMessage.hasLikedCount &&
      (!self.hasLikedCount || self.likedCount == otherMessage.likedCount) &&
      self.hasResUpdatedOn == otherMessage.hasResUpdatedOn &&
      (!self.hasResUpdatedOn || self.resUpdatedOn == otherMessage.resUpdatedOn) &&
      self.hasAlbumCount == otherMessage.hasAlbumCount &&
      (!self.hasAlbumCount || self.albumCount == otherMessage.albumCount) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasIntroduction) {
    hashCode = hashCode * 31 + [self.introduction hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasResCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.resCount] hash];
  }
  if (self.hasViewedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.viewedCount] hash];
  }
  if (self.hasLikedCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.likedCount] hash];
  }
  if (self.hasResUpdatedOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.resUpdatedOn] hash];
  }
  if (self.hasAlbumCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.albumCount] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBProviderBuilder()
@property (strong) TXPBProvider* resultProvider;
@end

@implementation TXPBProviderBuilder
@synthesize resultProvider;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultProvider = [[TXPBProvider alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultProvider;
}
- (TXPBProviderBuilder*) clear {
  self.resultProvider = [[TXPBProvider alloc] init];
  return self;
}
- (TXPBProviderBuilder*) clone {
  return [TXPBProvider builderWithPrototype:resultProvider];
}
- (TXPBProvider*) defaultInstance {
  return [TXPBProvider defaultInstance];
}
- (TXPBProvider*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBProvider*) buildPartial {
  TXPBProvider* returnMe = resultProvider;
  self.resultProvider = nil;
  return returnMe;
}
- (TXPBProviderBuilder*) mergeFrom:(TXPBProvider*) other {
  if (other == [TXPBProvider defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasIntroduction) {
    [self setIntroduction:other.introduction];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasResCount) {
    [self setResCount:other.resCount];
  }
  if (other.hasViewedCount) {
    [self setViewedCount:other.viewedCount];
  }
  if (other.hasLikedCount) {
    [self setLikedCount:other.likedCount];
  }
  if (other.hasResUpdatedOn) {
    [self setResUpdatedOn:other.resUpdatedOn];
  }
  if (other.hasAlbumCount) {
    [self setAlbumCount:other.albumCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBProviderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBProviderBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setIntroduction:[input readString]];
        break;
      }
      case 34: {
        [self setAvatar:[input readString]];
        break;
      }
      case 40: {
        [self setResCount:[input readInt64]];
        break;
      }
      case 48: {
        [self setViewedCount:[input readInt64]];
        break;
      }
      case 56: {
        [self setLikedCount:[input readInt64]];
        break;
      }
      case 64: {
        [self setResUpdatedOn:[input readInt64]];
        break;
      }
      case 72: {
        [self setAlbumCount:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultProvider.hasId;
}
- (SInt64) id {
  return resultProvider.id;
}
- (TXPBProviderBuilder*) setId:(SInt64) value {
  resultProvider.hasId = YES;
  resultProvider.id = value;
  return self;
}
- (TXPBProviderBuilder*) clearId {
  resultProvider.hasId = NO;
  resultProvider.id = 0L;
  return self;
}
- (BOOL) hasName {
  return resultProvider.hasName;
}
- (NSString*) name {
  return resultProvider.name;
}
- (TXPBProviderBuilder*) setName:(NSString*) value {
  resultProvider.hasName = YES;
  resultProvider.name = value;
  return self;
}
- (TXPBProviderBuilder*) clearName {
  resultProvider.hasName = NO;
  resultProvider.name = @"";
  return self;
}
- (BOOL) hasIntroduction {
  return resultProvider.hasIntroduction;
}
- (NSString*) introduction {
  return resultProvider.introduction;
}
- (TXPBProviderBuilder*) setIntroduction:(NSString*) value {
  resultProvider.hasIntroduction = YES;
  resultProvider.introduction = value;
  return self;
}
- (TXPBProviderBuilder*) clearIntroduction {
  resultProvider.hasIntroduction = NO;
  resultProvider.introduction = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultProvider.hasAvatar;
}
- (NSString*) avatar {
  return resultProvider.avatar;
}
- (TXPBProviderBuilder*) setAvatar:(NSString*) value {
  resultProvider.hasAvatar = YES;
  resultProvider.avatar = value;
  return self;
}
- (TXPBProviderBuilder*) clearAvatar {
  resultProvider.hasAvatar = NO;
  resultProvider.avatar = @"";
  return self;
}
- (BOOL) hasResCount {
  return resultProvider.hasResCount;
}
- (SInt64) resCount {
  return resultProvider.resCount;
}
- (TXPBProviderBuilder*) setResCount:(SInt64) value {
  resultProvider.hasResCount = YES;
  resultProvider.resCount = value;
  return self;
}
- (TXPBProviderBuilder*) clearResCount {
  resultProvider.hasResCount = NO;
  resultProvider.resCount = 0L;
  return self;
}
- (BOOL) hasViewedCount {
  return resultProvider.hasViewedCount;
}
- (SInt64) viewedCount {
  return resultProvider.viewedCount;
}
- (TXPBProviderBuilder*) setViewedCount:(SInt64) value {
  resultProvider.hasViewedCount = YES;
  resultProvider.viewedCount = value;
  return self;
}
- (TXPBProviderBuilder*) clearViewedCount {
  resultProvider.hasViewedCount = NO;
  resultProvider.viewedCount = 0L;
  return self;
}
- (BOOL) hasLikedCount {
  return resultProvider.hasLikedCount;
}
- (SInt64) likedCount {
  return resultProvider.likedCount;
}
- (TXPBProviderBuilder*) setLikedCount:(SInt64) value {
  resultProvider.hasLikedCount = YES;
  resultProvider.likedCount = value;
  return self;
}
- (TXPBProviderBuilder*) clearLikedCount {
  resultProvider.hasLikedCount = NO;
  resultProvider.likedCount = 0L;
  return self;
}
- (BOOL) hasResUpdatedOn {
  return resultProvider.hasResUpdatedOn;
}
- (SInt64) resUpdatedOn {
  return resultProvider.resUpdatedOn;
}
- (TXPBProviderBuilder*) setResUpdatedOn:(SInt64) value {
  resultProvider.hasResUpdatedOn = YES;
  resultProvider.resUpdatedOn = value;
  return self;
}
- (TXPBProviderBuilder*) clearResUpdatedOn {
  resultProvider.hasResUpdatedOn = NO;
  resultProvider.resUpdatedOn = 0L;
  return self;
}
- (BOOL) hasAlbumCount {
  return resultProvider.hasAlbumCount;
}
- (SInt64) albumCount {
  return resultProvider.albumCount;
}
- (TXPBProviderBuilder*) setAlbumCount:(SInt64) value {
  resultProvider.hasAlbumCount = YES;
  resultProvider.albumCount = value;
  return self;
}
- (TXPBProviderBuilder*) clearAlbumCount {
  resultProvider.hasAlbumCount = NO;
  resultProvider.albumCount = 0L;
  return self;
}
@end

@interface TXPBFetchProviderRequest ()
@property SInt64 sinceId;
@property SInt64 maxId;
@end

@implementation TXPBFetchProviderRequest

- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.sinceId = 0L;
    self.maxId = 0L;
  }
  return self;
}
static TXPBFetchProviderRequest* defaultTXPBFetchProviderRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchProviderRequest class]) {
    defaultTXPBFetchProviderRequestInstance = [[TXPBFetchProviderRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchProviderRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchProviderRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasSinceId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSinceId) {
    [output writeInt64:1 value:self.sinceId];
  }
  if (self.hasMaxId) {
    [output writeInt64:2 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasSinceId) {
    size_ += computeInt64Size(1, self.sinceId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(2, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchProviderRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchProviderRequest*)[[[TXPBFetchProviderRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchProviderRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderRequest*)[[[TXPBFetchProviderRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchProviderRequest*)[[[TXPBFetchProviderRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchProviderRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderRequest*)[[[TXPBFetchProviderRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchProviderRequest*)[[[TXPBFetchProviderRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchProviderRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderRequest*)[[[TXPBFetchProviderRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderRequestBuilder*) builder {
  return [[TXPBFetchProviderRequestBuilder alloc] init];
}
+ (TXPBFetchProviderRequestBuilder*) builderWithPrototype:(TXPBFetchProviderRequest*) prototype {
  return [[TXPBFetchProviderRequest builder] mergeFrom:prototype];
}
- (TXPBFetchProviderRequestBuilder*) builder {
  return [TXPBFetchProviderRequest builder];
}
- (TXPBFetchProviderRequestBuilder*) toBuilder {
  return [TXPBFetchProviderRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchProviderRequest class]]) {
    return NO;
  }
  TXPBFetchProviderRequest *otherMessage = other;
  return
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchProviderRequestBuilder()
@property (strong) TXPBFetchProviderRequest* resultFetchProviderRequest;
@end

@implementation TXPBFetchProviderRequestBuilder
@synthesize resultFetchProviderRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchProviderRequest = [[TXPBFetchProviderRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchProviderRequest;
}
- (TXPBFetchProviderRequestBuilder*) clear {
  self.resultFetchProviderRequest = [[TXPBFetchProviderRequest alloc] init];
  return self;
}
- (TXPBFetchProviderRequestBuilder*) clone {
  return [TXPBFetchProviderRequest builderWithPrototype:resultFetchProviderRequest];
}
- (TXPBFetchProviderRequest*) defaultInstance {
  return [TXPBFetchProviderRequest defaultInstance];
}
- (TXPBFetchProviderRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchProviderRequest*) buildPartial {
  TXPBFetchProviderRequest* returnMe = resultFetchProviderRequest;
  self.resultFetchProviderRequest = nil;
  return returnMe;
}
- (TXPBFetchProviderRequestBuilder*) mergeFrom:(TXPBFetchProviderRequest*) other {
  if (other == [TXPBFetchProviderRequest defaultInstance]) {
    return self;
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchProviderRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchProviderRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 16: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasSinceId {
  return resultFetchProviderRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchProviderRequest.sinceId;
}
- (TXPBFetchProviderRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchProviderRequest.hasSinceId = YES;
  resultFetchProviderRequest.sinceId = value;
  return self;
}
- (TXPBFetchProviderRequestBuilder*) clearSinceId {
  resultFetchProviderRequest.hasSinceId = NO;
  resultFetchProviderRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchProviderRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchProviderRequest.maxId;
}
- (TXPBFetchProviderRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchProviderRequest.hasMaxId = YES;
  resultFetchProviderRequest.maxId = value;
  return self;
}
- (TXPBFetchProviderRequestBuilder*) clearMaxId {
  resultFetchProviderRequest.hasMaxId = NO;
  resultFetchProviderRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBFetchProviderResponse ()
@property (strong) NSMutableArray * providesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchProviderResponse

@synthesize providesArray;
@dynamic provides;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchProviderResponse* defaultTXPBFetchProviderResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchProviderResponse class]) {
    defaultTXPBFetchProviderResponseInstance = [[TXPBFetchProviderResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchProviderResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchProviderResponseInstance;
}
- (NSArray *)provides {
  return providesArray;
}
- (TXPBProvider*)providesAtIndex:(NSUInteger)index {
  return [providesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitprovides = YES;
   [self.provides enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitprovides = NO;
      *stop = YES;
    }
  }];
  if (!isInitprovides) return isInitprovides;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchProviderResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchProviderResponse*)[[[TXPBFetchProviderResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchProviderResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderResponse*)[[[TXPBFetchProviderResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchProviderResponse*)[[[TXPBFetchProviderResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchProviderResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderResponse*)[[[TXPBFetchProviderResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchProviderResponse*)[[[TXPBFetchProviderResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchProviderResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderResponse*)[[[TXPBFetchProviderResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderResponseBuilder*) builder {
  return [[TXPBFetchProviderResponseBuilder alloc] init];
}
+ (TXPBFetchProviderResponseBuilder*) builderWithPrototype:(TXPBFetchProviderResponse*) prototype {
  return [[TXPBFetchProviderResponse builder] mergeFrom:prototype];
}
- (TXPBFetchProviderResponseBuilder*) builder {
  return [TXPBFetchProviderResponse builder];
}
- (TXPBFetchProviderResponseBuilder*) toBuilder {
  return [TXPBFetchProviderResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"provides"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBProvider* element in self.providesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"provides"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchProviderResponse class]]) {
    return NO;
  }
  TXPBFetchProviderResponse *otherMessage = other;
  return
      [self.providesArray isEqualToArray:otherMessage.providesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchProviderResponseBuilder()
@property (strong) TXPBFetchProviderResponse* resultFetchProviderResponse;
@end

@implementation TXPBFetchProviderResponseBuilder
@synthesize resultFetchProviderResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchProviderResponse = [[TXPBFetchProviderResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchProviderResponse;
}
- (TXPBFetchProviderResponseBuilder*) clear {
  self.resultFetchProviderResponse = [[TXPBFetchProviderResponse alloc] init];
  return self;
}
- (TXPBFetchProviderResponseBuilder*) clone {
  return [TXPBFetchProviderResponse builderWithPrototype:resultFetchProviderResponse];
}
- (TXPBFetchProviderResponse*) defaultInstance {
  return [TXPBFetchProviderResponse defaultInstance];
}
- (TXPBFetchProviderResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchProviderResponse*) buildPartial {
  TXPBFetchProviderResponse* returnMe = resultFetchProviderResponse;
  self.resultFetchProviderResponse = nil;
  return returnMe;
}
- (TXPBFetchProviderResponseBuilder*) mergeFrom:(TXPBFetchProviderResponse*) other {
  if (other == [TXPBFetchProviderResponse defaultInstance]) {
    return self;
  }
  if (other.providesArray.count > 0) {
    if (resultFetchProviderResponse.providesArray == nil) {
      resultFetchProviderResponse.providesArray = [[NSMutableArray alloc] initWithArray:other.providesArray];
    } else {
      [resultFetchProviderResponse.providesArray addObjectsFromArray:other.providesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchProviderResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchProviderResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBProviderBuilder* subBuilder = [TXPBProvider builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProvides:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)provides {
  return resultFetchProviderResponse.providesArray;
}
- (TXPBProvider*)providesAtIndex:(NSUInteger)index {
  return [resultFetchProviderResponse providesAtIndex:index];
}
- (TXPBFetchProviderResponseBuilder *)addProvides:(TXPBProvider*)value {
  if (resultFetchProviderResponse.providesArray == nil) {
    resultFetchProviderResponse.providesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchProviderResponse.providesArray addObject:value];
  return self;
}
- (TXPBFetchProviderResponseBuilder *)setProvidesArray:(NSArray *)array {
  resultFetchProviderResponse.providesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchProviderResponseBuilder *)clearProvides {
  resultFetchProviderResponse.providesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchProviderResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchProviderResponse.hasMore;
}
- (TXPBFetchProviderResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchProviderResponse.hasHasMore = YES;
  resultFetchProviderResponse.hasMore = value;
  return self;
}
- (TXPBFetchProviderResponseBuilder*) clearHasMore {
  resultFetchProviderResponse.hasHasMore = NO;
  resultFetchProviderResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchProviderByUpdateRequest ()
@property SInt32 page;
@end

@implementation TXPBFetchProviderByUpdateRequest

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
  }
  return self;
}
static TXPBFetchProviderByUpdateRequest* defaultTXPBFetchProviderByUpdateRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchProviderByUpdateRequest class]) {
    defaultTXPBFetchProviderByUpdateRequestInstance = [[TXPBFetchProviderByUpdateRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByUpdateRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByUpdateRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchProviderByUpdateRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchProviderByUpdateRequest*)[[[TXPBFetchProviderByUpdateRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchProviderByUpdateRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByUpdateRequest*)[[[TXPBFetchProviderByUpdateRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByUpdateRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchProviderByUpdateRequest*)[[[TXPBFetchProviderByUpdateRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchProviderByUpdateRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByUpdateRequest*)[[[TXPBFetchProviderByUpdateRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByUpdateRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchProviderByUpdateRequest*)[[[TXPBFetchProviderByUpdateRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchProviderByUpdateRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByUpdateRequest*)[[[TXPBFetchProviderByUpdateRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByUpdateRequestBuilder*) builder {
  return [[TXPBFetchProviderByUpdateRequestBuilder alloc] init];
}
+ (TXPBFetchProviderByUpdateRequestBuilder*) builderWithPrototype:(TXPBFetchProviderByUpdateRequest*) prototype {
  return [[TXPBFetchProviderByUpdateRequest builder] mergeFrom:prototype];
}
- (TXPBFetchProviderByUpdateRequestBuilder*) builder {
  return [TXPBFetchProviderByUpdateRequest builder];
}
- (TXPBFetchProviderByUpdateRequestBuilder*) toBuilder {
  return [TXPBFetchProviderByUpdateRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchProviderByUpdateRequest class]]) {
    return NO;
  }
  TXPBFetchProviderByUpdateRequest *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchProviderByUpdateRequestBuilder()
@property (strong) TXPBFetchProviderByUpdateRequest* resultFetchProviderByUpdateRequest;
@end

@implementation TXPBFetchProviderByUpdateRequestBuilder
@synthesize resultFetchProviderByUpdateRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchProviderByUpdateRequest = [[TXPBFetchProviderByUpdateRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchProviderByUpdateRequest;
}
- (TXPBFetchProviderByUpdateRequestBuilder*) clear {
  self.resultFetchProviderByUpdateRequest = [[TXPBFetchProviderByUpdateRequest alloc] init];
  return self;
}
- (TXPBFetchProviderByUpdateRequestBuilder*) clone {
  return [TXPBFetchProviderByUpdateRequest builderWithPrototype:resultFetchProviderByUpdateRequest];
}
- (TXPBFetchProviderByUpdateRequest*) defaultInstance {
  return [TXPBFetchProviderByUpdateRequest defaultInstance];
}
- (TXPBFetchProviderByUpdateRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchProviderByUpdateRequest*) buildPartial {
  TXPBFetchProviderByUpdateRequest* returnMe = resultFetchProviderByUpdateRequest;
  self.resultFetchProviderByUpdateRequest = nil;
  return returnMe;
}
- (TXPBFetchProviderByUpdateRequestBuilder*) mergeFrom:(TXPBFetchProviderByUpdateRequest*) other {
  if (other == [TXPBFetchProviderByUpdateRequest defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchProviderByUpdateRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchProviderByUpdateRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return resultFetchProviderByUpdateRequest.hasPage;
}
- (SInt32) page {
  return resultFetchProviderByUpdateRequest.page;
}
- (TXPBFetchProviderByUpdateRequestBuilder*) setPage:(SInt32) value {
  resultFetchProviderByUpdateRequest.hasPage = YES;
  resultFetchProviderByUpdateRequest.page = value;
  return self;
}
- (TXPBFetchProviderByUpdateRequestBuilder*) clearPage {
  resultFetchProviderByUpdateRequest.hasPage = NO;
  resultFetchProviderByUpdateRequest.page = 0;
  return self;
}
@end

@interface TXPBFetchProviderByUpdateResponse ()
@property (strong) NSMutableArray * providesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchProviderByUpdateResponse

@synthesize providesArray;
@dynamic provides;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchProviderByUpdateResponse* defaultTXPBFetchProviderByUpdateResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchProviderByUpdateResponse class]) {
    defaultTXPBFetchProviderByUpdateResponseInstance = [[TXPBFetchProviderByUpdateResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByUpdateResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByUpdateResponseInstance;
}
- (NSArray *)provides {
  return providesArray;
}
- (TXPBProvider*)providesAtIndex:(NSUInteger)index {
  return [providesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitprovides = YES;
   [self.provides enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitprovides = NO;
      *stop = YES;
    }
  }];
  if (!isInitprovides) return isInitprovides;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchProviderByUpdateResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchProviderByUpdateResponse*)[[[TXPBFetchProviderByUpdateResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchProviderByUpdateResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByUpdateResponse*)[[[TXPBFetchProviderByUpdateResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByUpdateResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchProviderByUpdateResponse*)[[[TXPBFetchProviderByUpdateResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchProviderByUpdateResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByUpdateResponse*)[[[TXPBFetchProviderByUpdateResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByUpdateResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchProviderByUpdateResponse*)[[[TXPBFetchProviderByUpdateResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchProviderByUpdateResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByUpdateResponse*)[[[TXPBFetchProviderByUpdateResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByUpdateResponseBuilder*) builder {
  return [[TXPBFetchProviderByUpdateResponseBuilder alloc] init];
}
+ (TXPBFetchProviderByUpdateResponseBuilder*) builderWithPrototype:(TXPBFetchProviderByUpdateResponse*) prototype {
  return [[TXPBFetchProviderByUpdateResponse builder] mergeFrom:prototype];
}
- (TXPBFetchProviderByUpdateResponseBuilder*) builder {
  return [TXPBFetchProviderByUpdateResponse builder];
}
- (TXPBFetchProviderByUpdateResponseBuilder*) toBuilder {
  return [TXPBFetchProviderByUpdateResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"provides"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBProvider* element in self.providesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"provides"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchProviderByUpdateResponse class]]) {
    return NO;
  }
  TXPBFetchProviderByUpdateResponse *otherMessage = other;
  return
      [self.providesArray isEqualToArray:otherMessage.providesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.providesArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchProviderByUpdateResponseBuilder()
@property (strong) TXPBFetchProviderByUpdateResponse* resultFetchProviderByUpdateResponse;
@end

@implementation TXPBFetchProviderByUpdateResponseBuilder
@synthesize resultFetchProviderByUpdateResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchProviderByUpdateResponse = [[TXPBFetchProviderByUpdateResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchProviderByUpdateResponse;
}
- (TXPBFetchProviderByUpdateResponseBuilder*) clear {
  self.resultFetchProviderByUpdateResponse = [[TXPBFetchProviderByUpdateResponse alloc] init];
  return self;
}
- (TXPBFetchProviderByUpdateResponseBuilder*) clone {
  return [TXPBFetchProviderByUpdateResponse builderWithPrototype:resultFetchProviderByUpdateResponse];
}
- (TXPBFetchProviderByUpdateResponse*) defaultInstance {
  return [TXPBFetchProviderByUpdateResponse defaultInstance];
}
- (TXPBFetchProviderByUpdateResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchProviderByUpdateResponse*) buildPartial {
  TXPBFetchProviderByUpdateResponse* returnMe = resultFetchProviderByUpdateResponse;
  self.resultFetchProviderByUpdateResponse = nil;
  return returnMe;
}
- (TXPBFetchProviderByUpdateResponseBuilder*) mergeFrom:(TXPBFetchProviderByUpdateResponse*) other {
  if (other == [TXPBFetchProviderByUpdateResponse defaultInstance]) {
    return self;
  }
  if (other.providesArray.count > 0) {
    if (resultFetchProviderByUpdateResponse.providesArray == nil) {
      resultFetchProviderByUpdateResponse.providesArray = [[NSMutableArray alloc] initWithArray:other.providesArray];
    } else {
      [resultFetchProviderByUpdateResponse.providesArray addObjectsFromArray:other.providesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchProviderByUpdateResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchProviderByUpdateResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBProviderBuilder* subBuilder = [TXPBProvider builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProvides:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)provides {
  return resultFetchProviderByUpdateResponse.providesArray;
}
- (TXPBProvider*)providesAtIndex:(NSUInteger)index {
  return [resultFetchProviderByUpdateResponse providesAtIndex:index];
}
- (TXPBFetchProviderByUpdateResponseBuilder *)addProvides:(TXPBProvider*)value {
  if (resultFetchProviderByUpdateResponse.providesArray == nil) {
    resultFetchProviderByUpdateResponse.providesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchProviderByUpdateResponse.providesArray addObject:value];
  return self;
}
- (TXPBFetchProviderByUpdateResponseBuilder *)setProvidesArray:(NSArray *)array {
  resultFetchProviderByUpdateResponse.providesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchProviderByUpdateResponseBuilder *)clearProvides {
  resultFetchProviderByUpdateResponse.providesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchProviderByUpdateResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchProviderByUpdateResponse.hasMore;
}
- (TXPBFetchProviderByUpdateResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchProviderByUpdateResponse.hasHasMore = YES;
  resultFetchProviderByUpdateResponse.hasMore = value;
  return self;
}
- (TXPBFetchProviderByUpdateResponseBuilder*) clearHasMore {
  resultFetchProviderByUpdateResponse.hasHasMore = NO;
  resultFetchProviderByUpdateResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchPlayHistoryRequest ()
@property SInt32 page;
@end

@implementation TXPBFetchPlayHistoryRequest

- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.page = 0;
  }
  return self;
}
static TXPBFetchPlayHistoryRequest* defaultTXPBFetchPlayHistoryRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPlayHistoryRequest class]) {
    defaultTXPBFetchPlayHistoryRequestInstance = [[TXPBFetchPlayHistoryRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPlayHistoryRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPlayHistoryRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPage) {
    [output writeInt32:1 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPage) {
    size_ += computeInt32Size(1, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPlayHistoryRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchPlayHistoryRequest*)[[[TXPBFetchPlayHistoryRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchPlayHistoryRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPlayHistoryRequest*)[[[TXPBFetchPlayHistoryRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPlayHistoryRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPlayHistoryRequest*)[[[TXPBFetchPlayHistoryRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPlayHistoryRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPlayHistoryRequest*)[[[TXPBFetchPlayHistoryRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPlayHistoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPlayHistoryRequest*)[[[TXPBFetchPlayHistoryRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPlayHistoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPlayHistoryRequest*)[[[TXPBFetchPlayHistoryRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPlayHistoryRequestBuilder*) builder {
  return [[TXPBFetchPlayHistoryRequestBuilder alloc] init];
}
+ (TXPBFetchPlayHistoryRequestBuilder*) builderWithPrototype:(TXPBFetchPlayHistoryRequest*) prototype {
  return [[TXPBFetchPlayHistoryRequest builder] mergeFrom:prototype];
}
- (TXPBFetchPlayHistoryRequestBuilder*) builder {
  return [TXPBFetchPlayHistoryRequest builder];
}
- (TXPBFetchPlayHistoryRequestBuilder*) toBuilder {
  return [TXPBFetchPlayHistoryRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPlayHistoryRequest class]]) {
    return NO;
  }
  TXPBFetchPlayHistoryRequest *otherMessage = other;
  return
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPlayHistoryRequestBuilder()
@property (strong) TXPBFetchPlayHistoryRequest* resultFetchPlayHistoryRequest;
@end

@implementation TXPBFetchPlayHistoryRequestBuilder
@synthesize resultFetchPlayHistoryRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPlayHistoryRequest = [[TXPBFetchPlayHistoryRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPlayHistoryRequest;
}
- (TXPBFetchPlayHistoryRequestBuilder*) clear {
  self.resultFetchPlayHistoryRequest = [[TXPBFetchPlayHistoryRequest alloc] init];
  return self;
}
- (TXPBFetchPlayHistoryRequestBuilder*) clone {
  return [TXPBFetchPlayHistoryRequest builderWithPrototype:resultFetchPlayHistoryRequest];
}
- (TXPBFetchPlayHistoryRequest*) defaultInstance {
  return [TXPBFetchPlayHistoryRequest defaultInstance];
}
- (TXPBFetchPlayHistoryRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPlayHistoryRequest*) buildPartial {
  TXPBFetchPlayHistoryRequest* returnMe = resultFetchPlayHistoryRequest;
  self.resultFetchPlayHistoryRequest = nil;
  return returnMe;
}
- (TXPBFetchPlayHistoryRequestBuilder*) mergeFrom:(TXPBFetchPlayHistoryRequest*) other {
  if (other == [TXPBFetchPlayHistoryRequest defaultInstance]) {
    return self;
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPlayHistoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPlayHistoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPage {
  return resultFetchPlayHistoryRequest.hasPage;
}
- (SInt32) page {
  return resultFetchPlayHistoryRequest.page;
}
- (TXPBFetchPlayHistoryRequestBuilder*) setPage:(SInt32) value {
  resultFetchPlayHistoryRequest.hasPage = YES;
  resultFetchPlayHistoryRequest.page = value;
  return self;
}
- (TXPBFetchPlayHistoryRequestBuilder*) clearPage {
  resultFetchPlayHistoryRequest.hasPage = NO;
  resultFetchPlayHistoryRequest.page = 0;
  return self;
}
@end

@interface TXPBFetchPlayHistoryResponse ()
@property (strong) NSMutableArray * resourcesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchPlayHistoryResponse

@synthesize resourcesArray;
@dynamic resources;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchPlayHistoryResponse* defaultTXPBFetchPlayHistoryResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchPlayHistoryResponse class]) {
    defaultTXPBFetchPlayHistoryResponseInstance = [[TXPBFetchPlayHistoryResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchPlayHistoryResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchPlayHistoryResponseInstance;
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchPlayHistoryResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchPlayHistoryResponse*)[[[TXPBFetchPlayHistoryResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchPlayHistoryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPlayHistoryResponse*)[[[TXPBFetchPlayHistoryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPlayHistoryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchPlayHistoryResponse*)[[[TXPBFetchPlayHistoryResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchPlayHistoryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPlayHistoryResponse*)[[[TXPBFetchPlayHistoryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPlayHistoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchPlayHistoryResponse*)[[[TXPBFetchPlayHistoryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchPlayHistoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchPlayHistoryResponse*)[[[TXPBFetchPlayHistoryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchPlayHistoryResponseBuilder*) builder {
  return [[TXPBFetchPlayHistoryResponseBuilder alloc] init];
}
+ (TXPBFetchPlayHistoryResponseBuilder*) builderWithPrototype:(TXPBFetchPlayHistoryResponse*) prototype {
  return [[TXPBFetchPlayHistoryResponse builder] mergeFrom:prototype];
}
- (TXPBFetchPlayHistoryResponseBuilder*) builder {
  return [TXPBFetchPlayHistoryResponse builder];
}
- (TXPBFetchPlayHistoryResponseBuilder*) toBuilder {
  return [TXPBFetchPlayHistoryResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchPlayHistoryResponse class]]) {
    return NO;
  }
  TXPBFetchPlayHistoryResponse *otherMessage = other;
  return
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchPlayHistoryResponseBuilder()
@property (strong) TXPBFetchPlayHistoryResponse* resultFetchPlayHistoryResponse;
@end

@implementation TXPBFetchPlayHistoryResponseBuilder
@synthesize resultFetchPlayHistoryResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchPlayHistoryResponse = [[TXPBFetchPlayHistoryResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchPlayHistoryResponse;
}
- (TXPBFetchPlayHistoryResponseBuilder*) clear {
  self.resultFetchPlayHistoryResponse = [[TXPBFetchPlayHistoryResponse alloc] init];
  return self;
}
- (TXPBFetchPlayHistoryResponseBuilder*) clone {
  return [TXPBFetchPlayHistoryResponse builderWithPrototype:resultFetchPlayHistoryResponse];
}
- (TXPBFetchPlayHistoryResponse*) defaultInstance {
  return [TXPBFetchPlayHistoryResponse defaultInstance];
}
- (TXPBFetchPlayHistoryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchPlayHistoryResponse*) buildPartial {
  TXPBFetchPlayHistoryResponse* returnMe = resultFetchPlayHistoryResponse;
  self.resultFetchPlayHistoryResponse = nil;
  return returnMe;
}
- (TXPBFetchPlayHistoryResponseBuilder*) mergeFrom:(TXPBFetchPlayHistoryResponse*) other {
  if (other == [TXPBFetchPlayHistoryResponse defaultInstance]) {
    return self;
  }
  if (other.resourcesArray.count > 0) {
    if (resultFetchPlayHistoryResponse.resourcesArray == nil) {
      resultFetchPlayHistoryResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultFetchPlayHistoryResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchPlayHistoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchPlayHistoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resources {
  return resultFetchPlayHistoryResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultFetchPlayHistoryResponse resourcesAtIndex:index];
}
- (TXPBFetchPlayHistoryResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultFetchPlayHistoryResponse.resourcesArray == nil) {
    resultFetchPlayHistoryResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchPlayHistoryResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBFetchPlayHistoryResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultFetchPlayHistoryResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchPlayHistoryResponseBuilder *)clearResources {
  resultFetchPlayHistoryResponse.resourcesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchPlayHistoryResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchPlayHistoryResponse.hasMore;
}
- (TXPBFetchPlayHistoryResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchPlayHistoryResponse.hasHasMore = YES;
  resultFetchPlayHistoryResponse.hasMore = value;
  return self;
}
- (TXPBFetchPlayHistoryResponseBuilder*) clearHasMore {
  resultFetchPlayHistoryResponse.hasHasMore = NO;
  resultFetchPlayHistoryResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchSearchKeywordsRequest ()
@end

@implementation TXPBFetchSearchKeywordsRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchSearchKeywordsRequest* defaultTXPBFetchSearchKeywordsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchSearchKeywordsRequest class]) {
    defaultTXPBFetchSearchKeywordsRequestInstance = [[TXPBFetchSearchKeywordsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchSearchKeywordsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchSearchKeywordsRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchSearchKeywordsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchSearchKeywordsRequest*)[[[TXPBFetchSearchKeywordsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchSearchKeywordsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchSearchKeywordsRequest*)[[[TXPBFetchSearchKeywordsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchSearchKeywordsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchSearchKeywordsRequest*)[[[TXPBFetchSearchKeywordsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchSearchKeywordsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchSearchKeywordsRequest*)[[[TXPBFetchSearchKeywordsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchSearchKeywordsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchSearchKeywordsRequest*)[[[TXPBFetchSearchKeywordsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchSearchKeywordsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchSearchKeywordsRequest*)[[[TXPBFetchSearchKeywordsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchSearchKeywordsRequestBuilder*) builder {
  return [[TXPBFetchSearchKeywordsRequestBuilder alloc] init];
}
+ (TXPBFetchSearchKeywordsRequestBuilder*) builderWithPrototype:(TXPBFetchSearchKeywordsRequest*) prototype {
  return [[TXPBFetchSearchKeywordsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchSearchKeywordsRequestBuilder*) builder {
  return [TXPBFetchSearchKeywordsRequest builder];
}
- (TXPBFetchSearchKeywordsRequestBuilder*) toBuilder {
  return [TXPBFetchSearchKeywordsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchSearchKeywordsRequest class]]) {
    return NO;
  }
  TXPBFetchSearchKeywordsRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchSearchKeywordsRequestBuilder()
@property (strong) TXPBFetchSearchKeywordsRequest* resultFetchSearchKeywordsRequest;
@end

@implementation TXPBFetchSearchKeywordsRequestBuilder
@synthesize resultFetchSearchKeywordsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchSearchKeywordsRequest = [[TXPBFetchSearchKeywordsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchSearchKeywordsRequest;
}
- (TXPBFetchSearchKeywordsRequestBuilder*) clear {
  self.resultFetchSearchKeywordsRequest = [[TXPBFetchSearchKeywordsRequest alloc] init];
  return self;
}
- (TXPBFetchSearchKeywordsRequestBuilder*) clone {
  return [TXPBFetchSearchKeywordsRequest builderWithPrototype:resultFetchSearchKeywordsRequest];
}
- (TXPBFetchSearchKeywordsRequest*) defaultInstance {
  return [TXPBFetchSearchKeywordsRequest defaultInstance];
}
- (TXPBFetchSearchKeywordsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchSearchKeywordsRequest*) buildPartial {
  TXPBFetchSearchKeywordsRequest* returnMe = resultFetchSearchKeywordsRequest;
  self.resultFetchSearchKeywordsRequest = nil;
  return returnMe;
}
- (TXPBFetchSearchKeywordsRequestBuilder*) mergeFrom:(TXPBFetchSearchKeywordsRequest*) other {
  if (other == [TXPBFetchSearchKeywordsRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchSearchKeywordsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchSearchKeywordsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchSearchKeywordsResponse ()
@property (strong) NSMutableArray * hotArray;
@property (strong) NSMutableArray * recommendedArray;
@end

@implementation TXPBFetchSearchKeywordsResponse

@synthesize hotArray;
@dynamic hot;
@synthesize recommendedArray;
@dynamic recommended;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchSearchKeywordsResponse* defaultTXPBFetchSearchKeywordsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchSearchKeywordsResponse class]) {
    defaultTXPBFetchSearchKeywordsResponseInstance = [[TXPBFetchSearchKeywordsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchSearchKeywordsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchSearchKeywordsResponseInstance;
}
- (NSArray *)hot {
  return hotArray;
}
- (NSString*)hotAtIndex:(NSUInteger)index {
  return [hotArray objectAtIndex:index];
}
- (NSArray *)recommended {
  return recommendedArray;
}
- (NSString*)recommendedAtIndex:(NSUInteger)index {
  return [recommendedArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.hotArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  [self.recommendedArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:2 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.hotArray.count;
    [self.hotArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.recommendedArray.count;
    [self.recommendedArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchSearchKeywordsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchSearchKeywordsResponse*)[[[TXPBFetchSearchKeywordsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchSearchKeywordsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchSearchKeywordsResponse*)[[[TXPBFetchSearchKeywordsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchSearchKeywordsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchSearchKeywordsResponse*)[[[TXPBFetchSearchKeywordsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchSearchKeywordsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchSearchKeywordsResponse*)[[[TXPBFetchSearchKeywordsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchSearchKeywordsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchSearchKeywordsResponse*)[[[TXPBFetchSearchKeywordsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchSearchKeywordsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchSearchKeywordsResponse*)[[[TXPBFetchSearchKeywordsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchSearchKeywordsResponseBuilder*) builder {
  return [[TXPBFetchSearchKeywordsResponseBuilder alloc] init];
}
+ (TXPBFetchSearchKeywordsResponseBuilder*) builderWithPrototype:(TXPBFetchSearchKeywordsResponse*) prototype {
  return [[TXPBFetchSearchKeywordsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchSearchKeywordsResponseBuilder*) builder {
  return [TXPBFetchSearchKeywordsResponse builder];
}
- (TXPBFetchSearchKeywordsResponseBuilder*) toBuilder {
  return [TXPBFetchSearchKeywordsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.hotArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hot", obj];
  }];
  [self.recommendedArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"recommended", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [dictionary setObject:self.hot forKey: @"hot"];
  [dictionary setObject:self.recommended forKey: @"recommended"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchSearchKeywordsResponse class]]) {
    return NO;
  }
  TXPBFetchSearchKeywordsResponse *otherMessage = other;
  return
      [self.hotArray isEqualToArray:otherMessage.hotArray] &&
      [self.recommendedArray isEqualToArray:otherMessage.recommendedArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.hotArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.recommendedArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchSearchKeywordsResponseBuilder()
@property (strong) TXPBFetchSearchKeywordsResponse* resultFetchSearchKeywordsResponse;
@end

@implementation TXPBFetchSearchKeywordsResponseBuilder
@synthesize resultFetchSearchKeywordsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchSearchKeywordsResponse = [[TXPBFetchSearchKeywordsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchSearchKeywordsResponse;
}
- (TXPBFetchSearchKeywordsResponseBuilder*) clear {
  self.resultFetchSearchKeywordsResponse = [[TXPBFetchSearchKeywordsResponse alloc] init];
  return self;
}
- (TXPBFetchSearchKeywordsResponseBuilder*) clone {
  return [TXPBFetchSearchKeywordsResponse builderWithPrototype:resultFetchSearchKeywordsResponse];
}
- (TXPBFetchSearchKeywordsResponse*) defaultInstance {
  return [TXPBFetchSearchKeywordsResponse defaultInstance];
}
- (TXPBFetchSearchKeywordsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchSearchKeywordsResponse*) buildPartial {
  TXPBFetchSearchKeywordsResponse* returnMe = resultFetchSearchKeywordsResponse;
  self.resultFetchSearchKeywordsResponse = nil;
  return returnMe;
}
- (TXPBFetchSearchKeywordsResponseBuilder*) mergeFrom:(TXPBFetchSearchKeywordsResponse*) other {
  if (other == [TXPBFetchSearchKeywordsResponse defaultInstance]) {
    return self;
  }
  if (other.hotArray.count > 0) {
    if (resultFetchSearchKeywordsResponse.hotArray == nil) {
      resultFetchSearchKeywordsResponse.hotArray = [[NSMutableArray alloc] initWithArray:other.hotArray];
    } else {
      [resultFetchSearchKeywordsResponse.hotArray addObjectsFromArray:other.hotArray];
    }
  }
  if (other.recommendedArray.count > 0) {
    if (resultFetchSearchKeywordsResponse.recommendedArray == nil) {
      resultFetchSearchKeywordsResponse.recommendedArray = [[NSMutableArray alloc] initWithArray:other.recommendedArray];
    } else {
      [resultFetchSearchKeywordsResponse.recommendedArray addObjectsFromArray:other.recommendedArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchSearchKeywordsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchSearchKeywordsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addHot:[input readString]];
        break;
      }
      case 18: {
        [self addRecommended:[input readString]];
        break;
      }
    }
  }
}
- (NSMutableArray *)hot {
  return resultFetchSearchKeywordsResponse.hotArray;
}
- (NSString*)hotAtIndex:(NSUInteger)index {
  return [resultFetchSearchKeywordsResponse hotAtIndex:index];
}
- (TXPBFetchSearchKeywordsResponseBuilder *)addHot:(NSString*)value {
  if (resultFetchSearchKeywordsResponse.hotArray == nil) {
    resultFetchSearchKeywordsResponse.hotArray = [[NSMutableArray alloc]init];
  }
  [resultFetchSearchKeywordsResponse.hotArray addObject:value];
  return self;
}
- (TXPBFetchSearchKeywordsResponseBuilder *)setHotArray:(NSArray *)array {
  resultFetchSearchKeywordsResponse.hotArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (TXPBFetchSearchKeywordsResponseBuilder *)clearHot {
  resultFetchSearchKeywordsResponse.hotArray = nil;
  return self;
}
- (NSMutableArray *)recommended {
  return resultFetchSearchKeywordsResponse.recommendedArray;
}
- (NSString*)recommendedAtIndex:(NSUInteger)index {
  return [resultFetchSearchKeywordsResponse recommendedAtIndex:index];
}
- (TXPBFetchSearchKeywordsResponseBuilder *)addRecommended:(NSString*)value {
  if (resultFetchSearchKeywordsResponse.recommendedArray == nil) {
    resultFetchSearchKeywordsResponse.recommendedArray = [[NSMutableArray alloc]init];
  }
  [resultFetchSearchKeywordsResponse.recommendedArray addObject:value];
  return self;
}
- (TXPBFetchSearchKeywordsResponseBuilder *)setRecommendedArray:(NSArray *)array {
  resultFetchSearchKeywordsResponse.recommendedArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (TXPBFetchSearchKeywordsResponseBuilder *)clearRecommended {
  resultFetchSearchKeywordsResponse.recommendedArray = nil;
  return self;
}
@end

@interface TXPBSearchResourceRequest ()
@property (strong) NSString* keyword;
@property SInt32 page;
@property TXPBSearchResultCategory category;
@end

@implementation TXPBSearchResourceRequest

- (BOOL) hasKeyword {
  return !!hasKeyword_;
}
- (void) setHasKeyword:(BOOL) _value_ {
  hasKeyword_ = !!_value_;
}
@synthesize keyword;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) _value_ {
  hasCategory_ = !!_value_;
}
@synthesize category;
- (instancetype) init {
  if ((self = [super init])) {
    self.keyword = @"";
    self.page = 0;
    self.category = TXPBSearchResultCategoryTAlbum;
  }
  return self;
}
static TXPBSearchResourceRequest* defaultTXPBSearchResourceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBSearchResourceRequest class]) {
    defaultTXPBSearchResourceRequestInstance = [[TXPBSearchResourceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSearchResourceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSearchResourceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKeyword) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  if (!self.hasCategory) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKeyword) {
    [output writeString:1 value:self.keyword];
  }
  if (self.hasPage) {
    [output writeInt32:2 value:self.page];
  }
  if (self.hasCategory) {
    [output writeEnum:3 value:self.category];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKeyword) {
    size_ += computeStringSize(1, self.keyword);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(2, self.page);
  }
  if (self.hasCategory) {
    size_ += computeEnumSize(3, self.category);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSearchResourceRequest*) parseFromData:(NSData*) data {
  return (TXPBSearchResourceRequest*)[[[TXPBSearchResourceRequest builder] mergeFromData:data] build];
}
+ (TXPBSearchResourceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSearchResourceRequest*)[[[TXPBSearchResourceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSearchResourceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSearchResourceRequest*)[[[TXPBSearchResourceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBSearchResourceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSearchResourceRequest*)[[[TXPBSearchResourceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSearchResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSearchResourceRequest*)[[[TXPBSearchResourceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSearchResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSearchResourceRequest*)[[[TXPBSearchResourceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSearchResourceRequestBuilder*) builder {
  return [[TXPBSearchResourceRequestBuilder alloc] init];
}
+ (TXPBSearchResourceRequestBuilder*) builderWithPrototype:(TXPBSearchResourceRequest*) prototype {
  return [[TXPBSearchResourceRequest builder] mergeFrom:prototype];
}
- (TXPBSearchResourceRequestBuilder*) builder {
  return [TXPBSearchResourceRequest builder];
}
- (TXPBSearchResourceRequestBuilder*) toBuilder {
  return [TXPBSearchResourceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKeyword) {
    [output appendFormat:@"%@%@: %@\n", indent, @"keyword", self.keyword];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  if (self.hasCategory) {
    [output appendFormat:@"%@%@: %@\n", indent, @"category", NSStringFromTXPBSearchResultCategory(self.category)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKeyword) {
    [dictionary setObject: self.keyword forKey: @"keyword"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  if (self.hasCategory) {
    [dictionary setObject: @(self.category) forKey: @"category"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSearchResourceRequest class]]) {
    return NO;
  }
  TXPBSearchResourceRequest *otherMessage = other;
  return
      self.hasKeyword == otherMessage.hasKeyword &&
      (!self.hasKeyword || [self.keyword isEqual:otherMessage.keyword]) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      self.hasCategory == otherMessage.hasCategory &&
      (!self.hasCategory || self.category == otherMessage.category) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKeyword) {
    hashCode = hashCode * 31 + [self.keyword hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  if (self.hasCategory) {
    hashCode = hashCode * 31 + self.category;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSearchResourceRequestBuilder()
@property (strong) TXPBSearchResourceRequest* resultSearchResourceRequest;
@end

@implementation TXPBSearchResourceRequestBuilder
@synthesize resultSearchResourceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSearchResourceRequest = [[TXPBSearchResourceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSearchResourceRequest;
}
- (TXPBSearchResourceRequestBuilder*) clear {
  self.resultSearchResourceRequest = [[TXPBSearchResourceRequest alloc] init];
  return self;
}
- (TXPBSearchResourceRequestBuilder*) clone {
  return [TXPBSearchResourceRequest builderWithPrototype:resultSearchResourceRequest];
}
- (TXPBSearchResourceRequest*) defaultInstance {
  return [TXPBSearchResourceRequest defaultInstance];
}
- (TXPBSearchResourceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSearchResourceRequest*) buildPartial {
  TXPBSearchResourceRequest* returnMe = resultSearchResourceRequest;
  self.resultSearchResourceRequest = nil;
  return returnMe;
}
- (TXPBSearchResourceRequestBuilder*) mergeFrom:(TXPBSearchResourceRequest*) other {
  if (other == [TXPBSearchResourceRequest defaultInstance]) {
    return self;
  }
  if (other.hasKeyword) {
    [self setKeyword:other.keyword];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.hasCategory) {
    [self setCategory:other.category];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSearchResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSearchResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setKeyword:[input readString]];
        break;
      }
      case 16: {
        [self setPage:[input readInt32]];
        break;
      }
      case 24: {
        TXPBSearchResultCategory value = (TXPBSearchResultCategory)[input readEnum];
        if (TXPBSearchResultCategoryIsValidValue(value)) {
          [self setCategory:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasKeyword {
  return resultSearchResourceRequest.hasKeyword;
}
- (NSString*) keyword {
  return resultSearchResourceRequest.keyword;
}
- (TXPBSearchResourceRequestBuilder*) setKeyword:(NSString*) value {
  resultSearchResourceRequest.hasKeyword = YES;
  resultSearchResourceRequest.keyword = value;
  return self;
}
- (TXPBSearchResourceRequestBuilder*) clearKeyword {
  resultSearchResourceRequest.hasKeyword = NO;
  resultSearchResourceRequest.keyword = @"";
  return self;
}
- (BOOL) hasPage {
  return resultSearchResourceRequest.hasPage;
}
- (SInt32) page {
  return resultSearchResourceRequest.page;
}
- (TXPBSearchResourceRequestBuilder*) setPage:(SInt32) value {
  resultSearchResourceRequest.hasPage = YES;
  resultSearchResourceRequest.page = value;
  return self;
}
- (TXPBSearchResourceRequestBuilder*) clearPage {
  resultSearchResourceRequest.hasPage = NO;
  resultSearchResourceRequest.page = 0;
  return self;
}
- (BOOL) hasCategory {
  return resultSearchResourceRequest.hasCategory;
}
- (TXPBSearchResultCategory) category {
  return resultSearchResourceRequest.category;
}
- (TXPBSearchResourceRequestBuilder*) setCategory:(TXPBSearchResultCategory) value {
  resultSearchResourceRequest.hasCategory = YES;
  resultSearchResourceRequest.category = value;
  return self;
}
- (TXPBSearchResourceRequestBuilder*) clearCategory {
  resultSearchResourceRequest.hasCategory = NO;
  resultSearchResourceRequest.category = TXPBSearchResultCategoryTAlbum;
  return self;
}
@end

@interface TXPBSearchResourceResponse ()
@property (strong) NSMutableArray * albumsArray;
@property (strong) NSMutableArray * resourcesArray;
@property (strong) NSMutableArray * providersArray;
@property BOOL hasMore;
@end

@implementation TXPBSearchResourceResponse

@synthesize albumsArray;
@dynamic albums;
@synthesize resourcesArray;
@dynamic resources;
@synthesize providersArray;
@dynamic providers;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBSearchResourceResponse* defaultTXPBSearchResourceResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBSearchResourceResponse class]) {
    defaultTXPBSearchResourceResponseInstance = [[TXPBSearchResourceResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBSearchResourceResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBSearchResourceResponseInstance;
}
- (NSArray *)albums {
  return albumsArray;
}
- (TXPBAlbum*)albumsAtIndex:(NSUInteger)index {
  return [albumsArray objectAtIndex:index];
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (NSArray *)providers {
  return providersArray;
}
- (TXPBProvider*)providersAtIndex:(NSUInteger)index {
  return [providersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitalbums = YES;
   [self.albums enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitalbums = NO;
      *stop = YES;
    }
  }];
  if (!isInitalbums) return isInitalbums;
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  __block BOOL isInitproviders = YES;
   [self.providers enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitproviders = NO;
      *stop = YES;
    }
  }];
  if (!isInitproviders) return isInitproviders;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:4 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(4, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBSearchResourceResponse*) parseFromData:(NSData*) data {
  return (TXPBSearchResourceResponse*)[[[TXPBSearchResourceResponse builder] mergeFromData:data] build];
}
+ (TXPBSearchResourceResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSearchResourceResponse*)[[[TXPBSearchResourceResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBSearchResourceResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBSearchResourceResponse*)[[[TXPBSearchResourceResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBSearchResourceResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSearchResourceResponse*)[[[TXPBSearchResourceResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSearchResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBSearchResourceResponse*)[[[TXPBSearchResourceResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBSearchResourceResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBSearchResourceResponse*)[[[TXPBSearchResourceResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBSearchResourceResponseBuilder*) builder {
  return [[TXPBSearchResourceResponseBuilder alloc] init];
}
+ (TXPBSearchResourceResponseBuilder*) builderWithPrototype:(TXPBSearchResourceResponse*) prototype {
  return [[TXPBSearchResourceResponse builder] mergeFrom:prototype];
}
- (TXPBSearchResourceResponseBuilder*) builder {
  return [TXPBSearchResourceResponse builder];
}
- (TXPBSearchResourceResponseBuilder*) toBuilder {
  return [TXPBSearchResourceResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"albums"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"providers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBAlbum* element in self.albumsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"albums"];
  }
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  for (TXPBProvider* element in self.providersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"providers"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBSearchResourceResponse class]]) {
    return NO;
  }
  TXPBSearchResourceResponse *otherMessage = other;
  return
      [self.albumsArray isEqualToArray:otherMessage.albumsArray] &&
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      [self.providersArray isEqualToArray:otherMessage.providersArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  [self.providersArray enumerateObjectsUsingBlock:^(TXPBProvider *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBSearchResourceResponseBuilder()
@property (strong) TXPBSearchResourceResponse* resultSearchResourceResponse;
@end

@implementation TXPBSearchResourceResponseBuilder
@synthesize resultSearchResourceResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSearchResourceResponse = [[TXPBSearchResourceResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSearchResourceResponse;
}
- (TXPBSearchResourceResponseBuilder*) clear {
  self.resultSearchResourceResponse = [[TXPBSearchResourceResponse alloc] init];
  return self;
}
- (TXPBSearchResourceResponseBuilder*) clone {
  return [TXPBSearchResourceResponse builderWithPrototype:resultSearchResourceResponse];
}
- (TXPBSearchResourceResponse*) defaultInstance {
  return [TXPBSearchResourceResponse defaultInstance];
}
- (TXPBSearchResourceResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBSearchResourceResponse*) buildPartial {
  TXPBSearchResourceResponse* returnMe = resultSearchResourceResponse;
  self.resultSearchResourceResponse = nil;
  return returnMe;
}
- (TXPBSearchResourceResponseBuilder*) mergeFrom:(TXPBSearchResourceResponse*) other {
  if (other == [TXPBSearchResourceResponse defaultInstance]) {
    return self;
  }
  if (other.albumsArray.count > 0) {
    if (resultSearchResourceResponse.albumsArray == nil) {
      resultSearchResourceResponse.albumsArray = [[NSMutableArray alloc] initWithArray:other.albumsArray];
    } else {
      [resultSearchResourceResponse.albumsArray addObjectsFromArray:other.albumsArray];
    }
  }
  if (other.resourcesArray.count > 0) {
    if (resultSearchResourceResponse.resourcesArray == nil) {
      resultSearchResourceResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultSearchResourceResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.providersArray.count > 0) {
    if (resultSearchResourceResponse.providersArray == nil) {
      resultSearchResourceResponse.providersArray = [[NSMutableArray alloc] initWithArray:other.providersArray];
    } else {
      [resultSearchResourceResponse.providersArray addObjectsFromArray:other.providersArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBSearchResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBSearchResourceResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBAlbumBuilder* subBuilder = [TXPBAlbum builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAlbums:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        TXPBProviderBuilder* subBuilder = [TXPBProvider builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addProviders:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)albums {
  return resultSearchResourceResponse.albumsArray;
}
- (TXPBAlbum*)albumsAtIndex:(NSUInteger)index {
  return [resultSearchResourceResponse albumsAtIndex:index];
}
- (TXPBSearchResourceResponseBuilder *)addAlbums:(TXPBAlbum*)value {
  if (resultSearchResourceResponse.albumsArray == nil) {
    resultSearchResourceResponse.albumsArray = [[NSMutableArray alloc]init];
  }
  [resultSearchResourceResponse.albumsArray addObject:value];
  return self;
}
- (TXPBSearchResourceResponseBuilder *)setAlbumsArray:(NSArray *)array {
  resultSearchResourceResponse.albumsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSearchResourceResponseBuilder *)clearAlbums {
  resultSearchResourceResponse.albumsArray = nil;
  return self;
}
- (NSMutableArray *)resources {
  return resultSearchResourceResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultSearchResourceResponse resourcesAtIndex:index];
}
- (TXPBSearchResourceResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultSearchResourceResponse.resourcesArray == nil) {
    resultSearchResourceResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultSearchResourceResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBSearchResourceResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultSearchResourceResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSearchResourceResponseBuilder *)clearResources {
  resultSearchResourceResponse.resourcesArray = nil;
  return self;
}
- (NSMutableArray *)providers {
  return resultSearchResourceResponse.providersArray;
}
- (TXPBProvider*)providersAtIndex:(NSUInteger)index {
  return [resultSearchResourceResponse providersAtIndex:index];
}
- (TXPBSearchResourceResponseBuilder *)addProviders:(TXPBProvider*)value {
  if (resultSearchResourceResponse.providersArray == nil) {
    resultSearchResourceResponse.providersArray = [[NSMutableArray alloc]init];
  }
  [resultSearchResourceResponse.providersArray addObject:value];
  return self;
}
- (TXPBSearchResourceResponseBuilder *)setProvidersArray:(NSArray *)array {
  resultSearchResourceResponse.providersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBSearchResourceResponseBuilder *)clearProviders {
  resultSearchResourceResponse.providersArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultSearchResourceResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultSearchResourceResponse.hasMore;
}
- (TXPBSearchResourceResponseBuilder*) setHasMore:(BOOL) value {
  resultSearchResourceResponse.hasHasMore = YES;
  resultSearchResourceResponse.hasMore = value;
  return self;
}
- (TXPBSearchResourceResponseBuilder*) clearHasMore {
  resultSearchResourceResponse.hasHasMore = NO;
  resultSearchResourceResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchAlbumByCategoryRequest ()
@property SInt64 categoryId;
@property SInt64 sinceId;
@property SInt64 maxId;
@end

@implementation TXPBFetchAlbumByCategoryRequest

- (BOOL) hasCategoryId {
  return !!hasCategoryId_;
}
- (void) setHasCategoryId:(BOOL) _value_ {
  hasCategoryId_ = !!_value_;
}
@synthesize categoryId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.categoryId = 0L;
    self.sinceId = 0L;
    self.maxId = 0L;
  }
  return self;
}
static TXPBFetchAlbumByCategoryRequest* defaultTXPBFetchAlbumByCategoryRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAlbumByCategoryRequest class]) {
    defaultTXPBFetchAlbumByCategoryRequestInstance = [[TXPBFetchAlbumByCategoryRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByCategoryRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByCategoryRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCategoryId) {
    return NO;
  }
  if (!self.hasSinceId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategoryId) {
    [output writeInt64:1 value:self.categoryId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasMaxId) {
    [output writeInt64:3 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCategoryId) {
    size_ += computeInt64Size(1, self.categoryId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(3, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAlbumByCategoryRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchAlbumByCategoryRequest*)[[[TXPBFetchAlbumByCategoryRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchAlbumByCategoryRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByCategoryRequest*)[[[TXPBFetchAlbumByCategoryRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByCategoryRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAlbumByCategoryRequest*)[[[TXPBFetchAlbumByCategoryRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAlbumByCategoryRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByCategoryRequest*)[[[TXPBFetchAlbumByCategoryRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByCategoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAlbumByCategoryRequest*)[[[TXPBFetchAlbumByCategoryRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAlbumByCategoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByCategoryRequest*)[[[TXPBFetchAlbumByCategoryRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByCategoryRequestBuilder*) builder {
  return [[TXPBFetchAlbumByCategoryRequestBuilder alloc] init];
}
+ (TXPBFetchAlbumByCategoryRequestBuilder*) builderWithPrototype:(TXPBFetchAlbumByCategoryRequest*) prototype {
  return [[TXPBFetchAlbumByCategoryRequest builder] mergeFrom:prototype];
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) builder {
  return [TXPBFetchAlbumByCategoryRequest builder];
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) toBuilder {
  return [TXPBFetchAlbumByCategoryRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCategoryId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"categoryId", [NSNumber numberWithLongLong:self.categoryId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCategoryId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.categoryId] forKey: @"categoryId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAlbumByCategoryRequest class]]) {
    return NO;
  }
  TXPBFetchAlbumByCategoryRequest *otherMessage = other;
  return
      self.hasCategoryId == otherMessage.hasCategoryId &&
      (!self.hasCategoryId || self.categoryId == otherMessage.categoryId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCategoryId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.categoryId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAlbumByCategoryRequestBuilder()
@property (strong) TXPBFetchAlbumByCategoryRequest* resultFetchAlbumByCategoryRequest;
@end

@implementation TXPBFetchAlbumByCategoryRequestBuilder
@synthesize resultFetchAlbumByCategoryRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAlbumByCategoryRequest = [[TXPBFetchAlbumByCategoryRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAlbumByCategoryRequest;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) clear {
  self.resultFetchAlbumByCategoryRequest = [[TXPBFetchAlbumByCategoryRequest alloc] init];
  return self;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) clone {
  return [TXPBFetchAlbumByCategoryRequest builderWithPrototype:resultFetchAlbumByCategoryRequest];
}
- (TXPBFetchAlbumByCategoryRequest*) defaultInstance {
  return [TXPBFetchAlbumByCategoryRequest defaultInstance];
}
- (TXPBFetchAlbumByCategoryRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAlbumByCategoryRequest*) buildPartial {
  TXPBFetchAlbumByCategoryRequest* returnMe = resultFetchAlbumByCategoryRequest;
  self.resultFetchAlbumByCategoryRequest = nil;
  return returnMe;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) mergeFrom:(TXPBFetchAlbumByCategoryRequest*) other {
  if (other == [TXPBFetchAlbumByCategoryRequest defaultInstance]) {
    return self;
  }
  if (other.hasCategoryId) {
    [self setCategoryId:other.categoryId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCategoryId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCategoryId {
  return resultFetchAlbumByCategoryRequest.hasCategoryId;
}
- (SInt64) categoryId {
  return resultFetchAlbumByCategoryRequest.categoryId;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) setCategoryId:(SInt64) value {
  resultFetchAlbumByCategoryRequest.hasCategoryId = YES;
  resultFetchAlbumByCategoryRequest.categoryId = value;
  return self;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) clearCategoryId {
  resultFetchAlbumByCategoryRequest.hasCategoryId = NO;
  resultFetchAlbumByCategoryRequest.categoryId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchAlbumByCategoryRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchAlbumByCategoryRequest.sinceId;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchAlbumByCategoryRequest.hasSinceId = YES;
  resultFetchAlbumByCategoryRequest.sinceId = value;
  return self;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) clearSinceId {
  resultFetchAlbumByCategoryRequest.hasSinceId = NO;
  resultFetchAlbumByCategoryRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchAlbumByCategoryRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchAlbumByCategoryRequest.maxId;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchAlbumByCategoryRequest.hasMaxId = YES;
  resultFetchAlbumByCategoryRequest.maxId = value;
  return self;
}
- (TXPBFetchAlbumByCategoryRequestBuilder*) clearMaxId {
  resultFetchAlbumByCategoryRequest.hasMaxId = NO;
  resultFetchAlbumByCategoryRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBFetchAlbumByCategoryResponse ()
@property (strong) NSMutableArray * albumsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchAlbumByCategoryResponse

@synthesize albumsArray;
@dynamic albums;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchAlbumByCategoryResponse* defaultTXPBFetchAlbumByCategoryResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAlbumByCategoryResponse class]) {
    defaultTXPBFetchAlbumByCategoryResponseInstance = [[TXPBFetchAlbumByCategoryResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByCategoryResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByCategoryResponseInstance;
}
- (NSArray *)albums {
  return albumsArray;
}
- (TXPBAlbum*)albumsAtIndex:(NSUInteger)index {
  return [albumsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitalbums = YES;
   [self.albums enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitalbums = NO;
      *stop = YES;
    }
  }];
  if (!isInitalbums) return isInitalbums;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAlbumByCategoryResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchAlbumByCategoryResponse*)[[[TXPBFetchAlbumByCategoryResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchAlbumByCategoryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByCategoryResponse*)[[[TXPBFetchAlbumByCategoryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByCategoryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAlbumByCategoryResponse*)[[[TXPBFetchAlbumByCategoryResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAlbumByCategoryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByCategoryResponse*)[[[TXPBFetchAlbumByCategoryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByCategoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAlbumByCategoryResponse*)[[[TXPBFetchAlbumByCategoryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAlbumByCategoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByCategoryResponse*)[[[TXPBFetchAlbumByCategoryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByCategoryResponseBuilder*) builder {
  return [[TXPBFetchAlbumByCategoryResponseBuilder alloc] init];
}
+ (TXPBFetchAlbumByCategoryResponseBuilder*) builderWithPrototype:(TXPBFetchAlbumByCategoryResponse*) prototype {
  return [[TXPBFetchAlbumByCategoryResponse builder] mergeFrom:prototype];
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) builder {
  return [TXPBFetchAlbumByCategoryResponse builder];
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) toBuilder {
  return [TXPBFetchAlbumByCategoryResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"albums"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBAlbum* element in self.albumsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"albums"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAlbumByCategoryResponse class]]) {
    return NO;
  }
  TXPBFetchAlbumByCategoryResponse *otherMessage = other;
  return
      [self.albumsArray isEqualToArray:otherMessage.albumsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAlbumByCategoryResponseBuilder()
@property (strong) TXPBFetchAlbumByCategoryResponse* resultFetchAlbumByCategoryResponse;
@end

@implementation TXPBFetchAlbumByCategoryResponseBuilder
@synthesize resultFetchAlbumByCategoryResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAlbumByCategoryResponse = [[TXPBFetchAlbumByCategoryResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAlbumByCategoryResponse;
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) clear {
  self.resultFetchAlbumByCategoryResponse = [[TXPBFetchAlbumByCategoryResponse alloc] init];
  return self;
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) clone {
  return [TXPBFetchAlbumByCategoryResponse builderWithPrototype:resultFetchAlbumByCategoryResponse];
}
- (TXPBFetchAlbumByCategoryResponse*) defaultInstance {
  return [TXPBFetchAlbumByCategoryResponse defaultInstance];
}
- (TXPBFetchAlbumByCategoryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAlbumByCategoryResponse*) buildPartial {
  TXPBFetchAlbumByCategoryResponse* returnMe = resultFetchAlbumByCategoryResponse;
  self.resultFetchAlbumByCategoryResponse = nil;
  return returnMe;
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) mergeFrom:(TXPBFetchAlbumByCategoryResponse*) other {
  if (other == [TXPBFetchAlbumByCategoryResponse defaultInstance]) {
    return self;
  }
  if (other.albumsArray.count > 0) {
    if (resultFetchAlbumByCategoryResponse.albumsArray == nil) {
      resultFetchAlbumByCategoryResponse.albumsArray = [[NSMutableArray alloc] initWithArray:other.albumsArray];
    } else {
      [resultFetchAlbumByCategoryResponse.albumsArray addObjectsFromArray:other.albumsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBAlbumBuilder* subBuilder = [TXPBAlbum builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAlbums:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)albums {
  return resultFetchAlbumByCategoryResponse.albumsArray;
}
- (TXPBAlbum*)albumsAtIndex:(NSUInteger)index {
  return [resultFetchAlbumByCategoryResponse albumsAtIndex:index];
}
- (TXPBFetchAlbumByCategoryResponseBuilder *)addAlbums:(TXPBAlbum*)value {
  if (resultFetchAlbumByCategoryResponse.albumsArray == nil) {
    resultFetchAlbumByCategoryResponse.albumsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchAlbumByCategoryResponse.albumsArray addObject:value];
  return self;
}
- (TXPBFetchAlbumByCategoryResponseBuilder *)setAlbumsArray:(NSArray *)array {
  resultFetchAlbumByCategoryResponse.albumsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchAlbumByCategoryResponseBuilder *)clearAlbums {
  resultFetchAlbumByCategoryResponse.albumsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchAlbumByCategoryResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchAlbumByCategoryResponse.hasMore;
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchAlbumByCategoryResponse.hasHasMore = YES;
  resultFetchAlbumByCategoryResponse.hasMore = value;
  return self;
}
- (TXPBFetchAlbumByCategoryResponseBuilder*) clearHasMore {
  resultFetchAlbumByCategoryResponse.hasHasMore = NO;
  resultFetchAlbumByCategoryResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchResourceByCategoryRequest ()
@property SInt64 categoryId;
@property SInt64 sinceId;
@property SInt64 maxId;
@end

@implementation TXPBFetchResourceByCategoryRequest

- (BOOL) hasCategoryId {
  return !!hasCategoryId_;
}
- (void) setHasCategoryId:(BOOL) _value_ {
  hasCategoryId_ = !!_value_;
}
@synthesize categoryId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.categoryId = 0L;
    self.sinceId = 0L;
    self.maxId = 0L;
  }
  return self;
}
static TXPBFetchResourceByCategoryRequest* defaultTXPBFetchResourceByCategoryRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByCategoryRequest class]) {
    defaultTXPBFetchResourceByCategoryRequestInstance = [[TXPBFetchResourceByCategoryRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByCategoryRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByCategoryRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCategoryId) {
    return NO;
  }
  if (!self.hasSinceId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategoryId) {
    [output writeInt64:1 value:self.categoryId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasMaxId) {
    [output writeInt64:3 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCategoryId) {
    size_ += computeInt64Size(1, self.categoryId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(3, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByCategoryRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByCategoryRequest*)[[[TXPBFetchResourceByCategoryRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByCategoryRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByCategoryRequest*)[[[TXPBFetchResourceByCategoryRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByCategoryRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByCategoryRequest*)[[[TXPBFetchResourceByCategoryRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByCategoryRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByCategoryRequest*)[[[TXPBFetchResourceByCategoryRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByCategoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByCategoryRequest*)[[[TXPBFetchResourceByCategoryRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByCategoryRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByCategoryRequest*)[[[TXPBFetchResourceByCategoryRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByCategoryRequestBuilder*) builder {
  return [[TXPBFetchResourceByCategoryRequestBuilder alloc] init];
}
+ (TXPBFetchResourceByCategoryRequestBuilder*) builderWithPrototype:(TXPBFetchResourceByCategoryRequest*) prototype {
  return [[TXPBFetchResourceByCategoryRequest builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByCategoryRequestBuilder*) builder {
  return [TXPBFetchResourceByCategoryRequest builder];
}
- (TXPBFetchResourceByCategoryRequestBuilder*) toBuilder {
  return [TXPBFetchResourceByCategoryRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCategoryId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"categoryId", [NSNumber numberWithLongLong:self.categoryId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCategoryId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.categoryId] forKey: @"categoryId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByCategoryRequest class]]) {
    return NO;
  }
  TXPBFetchResourceByCategoryRequest *otherMessage = other;
  return
      self.hasCategoryId == otherMessage.hasCategoryId &&
      (!self.hasCategoryId || self.categoryId == otherMessage.categoryId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCategoryId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.categoryId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByCategoryRequestBuilder()
@property (strong) TXPBFetchResourceByCategoryRequest* resultFetchResourceByCategoryRequest;
@end

@implementation TXPBFetchResourceByCategoryRequestBuilder
@synthesize resultFetchResourceByCategoryRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByCategoryRequest = [[TXPBFetchResourceByCategoryRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByCategoryRequest;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) clear {
  self.resultFetchResourceByCategoryRequest = [[TXPBFetchResourceByCategoryRequest alloc] init];
  return self;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) clone {
  return [TXPBFetchResourceByCategoryRequest builderWithPrototype:resultFetchResourceByCategoryRequest];
}
- (TXPBFetchResourceByCategoryRequest*) defaultInstance {
  return [TXPBFetchResourceByCategoryRequest defaultInstance];
}
- (TXPBFetchResourceByCategoryRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByCategoryRequest*) buildPartial {
  TXPBFetchResourceByCategoryRequest* returnMe = resultFetchResourceByCategoryRequest;
  self.resultFetchResourceByCategoryRequest = nil;
  return returnMe;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) mergeFrom:(TXPBFetchResourceByCategoryRequest*) other {
  if (other == [TXPBFetchResourceByCategoryRequest defaultInstance]) {
    return self;
  }
  if (other.hasCategoryId) {
    [self setCategoryId:other.categoryId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByCategoryRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCategoryId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasCategoryId {
  return resultFetchResourceByCategoryRequest.hasCategoryId;
}
- (SInt64) categoryId {
  return resultFetchResourceByCategoryRequest.categoryId;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) setCategoryId:(SInt64) value {
  resultFetchResourceByCategoryRequest.hasCategoryId = YES;
  resultFetchResourceByCategoryRequest.categoryId = value;
  return self;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) clearCategoryId {
  resultFetchResourceByCategoryRequest.hasCategoryId = NO;
  resultFetchResourceByCategoryRequest.categoryId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchResourceByCategoryRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchResourceByCategoryRequest.sinceId;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchResourceByCategoryRequest.hasSinceId = YES;
  resultFetchResourceByCategoryRequest.sinceId = value;
  return self;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) clearSinceId {
  resultFetchResourceByCategoryRequest.hasSinceId = NO;
  resultFetchResourceByCategoryRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchResourceByCategoryRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchResourceByCategoryRequest.maxId;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchResourceByCategoryRequest.hasMaxId = YES;
  resultFetchResourceByCategoryRequest.maxId = value;
  return self;
}
- (TXPBFetchResourceByCategoryRequestBuilder*) clearMaxId {
  resultFetchResourceByCategoryRequest.hasMaxId = NO;
  resultFetchResourceByCategoryRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBFetchResourceByCategoryResponse ()
@property (strong) NSMutableArray * resourcesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchResourceByCategoryResponse

@synthesize resourcesArray;
@dynamic resources;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchResourceByCategoryResponse* defaultTXPBFetchResourceByCategoryResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByCategoryResponse class]) {
    defaultTXPBFetchResourceByCategoryResponseInstance = [[TXPBFetchResourceByCategoryResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByCategoryResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByCategoryResponseInstance;
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByCategoryResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByCategoryResponse*)[[[TXPBFetchResourceByCategoryResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByCategoryResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByCategoryResponse*)[[[TXPBFetchResourceByCategoryResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByCategoryResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByCategoryResponse*)[[[TXPBFetchResourceByCategoryResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByCategoryResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByCategoryResponse*)[[[TXPBFetchResourceByCategoryResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByCategoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByCategoryResponse*)[[[TXPBFetchResourceByCategoryResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByCategoryResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByCategoryResponse*)[[[TXPBFetchResourceByCategoryResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByCategoryResponseBuilder*) builder {
  return [[TXPBFetchResourceByCategoryResponseBuilder alloc] init];
}
+ (TXPBFetchResourceByCategoryResponseBuilder*) builderWithPrototype:(TXPBFetchResourceByCategoryResponse*) prototype {
  return [[TXPBFetchResourceByCategoryResponse builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByCategoryResponseBuilder*) builder {
  return [TXPBFetchResourceByCategoryResponse builder];
}
- (TXPBFetchResourceByCategoryResponseBuilder*) toBuilder {
  return [TXPBFetchResourceByCategoryResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByCategoryResponse class]]) {
    return NO;
  }
  TXPBFetchResourceByCategoryResponse *otherMessage = other;
  return
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByCategoryResponseBuilder()
@property (strong) TXPBFetchResourceByCategoryResponse* resultFetchResourceByCategoryResponse;
@end

@implementation TXPBFetchResourceByCategoryResponseBuilder
@synthesize resultFetchResourceByCategoryResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByCategoryResponse = [[TXPBFetchResourceByCategoryResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByCategoryResponse;
}
- (TXPBFetchResourceByCategoryResponseBuilder*) clear {
  self.resultFetchResourceByCategoryResponse = [[TXPBFetchResourceByCategoryResponse alloc] init];
  return self;
}
- (TXPBFetchResourceByCategoryResponseBuilder*) clone {
  return [TXPBFetchResourceByCategoryResponse builderWithPrototype:resultFetchResourceByCategoryResponse];
}
- (TXPBFetchResourceByCategoryResponse*) defaultInstance {
  return [TXPBFetchResourceByCategoryResponse defaultInstance];
}
- (TXPBFetchResourceByCategoryResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByCategoryResponse*) buildPartial {
  TXPBFetchResourceByCategoryResponse* returnMe = resultFetchResourceByCategoryResponse;
  self.resultFetchResourceByCategoryResponse = nil;
  return returnMe;
}
- (TXPBFetchResourceByCategoryResponseBuilder*) mergeFrom:(TXPBFetchResourceByCategoryResponse*) other {
  if (other == [TXPBFetchResourceByCategoryResponse defaultInstance]) {
    return self;
  }
  if (other.resourcesArray.count > 0) {
    if (resultFetchResourceByCategoryResponse.resourcesArray == nil) {
      resultFetchResourceByCategoryResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultFetchResourceByCategoryResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByCategoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByCategoryResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resources {
  return resultFetchResourceByCategoryResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultFetchResourceByCategoryResponse resourcesAtIndex:index];
}
- (TXPBFetchResourceByCategoryResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultFetchResourceByCategoryResponse.resourcesArray == nil) {
    resultFetchResourceByCategoryResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchResourceByCategoryResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBFetchResourceByCategoryResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultFetchResourceByCategoryResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchResourceByCategoryResponseBuilder *)clearResources {
  resultFetchResourceByCategoryResponse.resourcesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchResourceByCategoryResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchResourceByCategoryResponse.hasMore;
}
- (TXPBFetchResourceByCategoryResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchResourceByCategoryResponse.hasHasMore = YES;
  resultFetchResourceByCategoryResponse.hasMore = value;
  return self;
}
- (TXPBFetchResourceByCategoryResponseBuilder*) clearHasMore {
  resultFetchResourceByCategoryResponse.hasHasMore = NO;
  resultFetchResourceByCategoryResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchAlbumByProviderRequest ()
@property SInt64 providerId;
@property SInt64 sinceId;
@property SInt64 maxId;
@end

@implementation TXPBFetchAlbumByProviderRequest

- (BOOL) hasProviderId {
  return !!hasProviderId_;
}
- (void) setHasProviderId:(BOOL) _value_ {
  hasProviderId_ = !!_value_;
}
@synthesize providerId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.providerId = 0L;
    self.sinceId = 0L;
    self.maxId = 0L;
  }
  return self;
}
static TXPBFetchAlbumByProviderRequest* defaultTXPBFetchAlbumByProviderRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAlbumByProviderRequest class]) {
    defaultTXPBFetchAlbumByProviderRequestInstance = [[TXPBFetchAlbumByProviderRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByProviderRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByProviderRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasProviderId) {
    return NO;
  }
  if (!self.hasSinceId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProviderId) {
    [output writeInt64:1 value:self.providerId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasMaxId) {
    [output writeInt64:3 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProviderId) {
    size_ += computeInt64Size(1, self.providerId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(3, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAlbumByProviderRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchAlbumByProviderRequest*)[[[TXPBFetchAlbumByProviderRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchAlbumByProviderRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByProviderRequest*)[[[TXPBFetchAlbumByProviderRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByProviderRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAlbumByProviderRequest*)[[[TXPBFetchAlbumByProviderRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAlbumByProviderRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByProviderRequest*)[[[TXPBFetchAlbumByProviderRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByProviderRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAlbumByProviderRequest*)[[[TXPBFetchAlbumByProviderRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAlbumByProviderRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByProviderRequest*)[[[TXPBFetchAlbumByProviderRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByProviderRequestBuilder*) builder {
  return [[TXPBFetchAlbumByProviderRequestBuilder alloc] init];
}
+ (TXPBFetchAlbumByProviderRequestBuilder*) builderWithPrototype:(TXPBFetchAlbumByProviderRequest*) prototype {
  return [[TXPBFetchAlbumByProviderRequest builder] mergeFrom:prototype];
}
- (TXPBFetchAlbumByProviderRequestBuilder*) builder {
  return [TXPBFetchAlbumByProviderRequest builder];
}
- (TXPBFetchAlbumByProviderRequestBuilder*) toBuilder {
  return [TXPBFetchAlbumByProviderRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProviderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"providerId", [NSNumber numberWithLongLong:self.providerId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProviderId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.providerId] forKey: @"providerId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAlbumByProviderRequest class]]) {
    return NO;
  }
  TXPBFetchAlbumByProviderRequest *otherMessage = other;
  return
      self.hasProviderId == otherMessage.hasProviderId &&
      (!self.hasProviderId || self.providerId == otherMessage.providerId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProviderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.providerId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAlbumByProviderRequestBuilder()
@property (strong) TXPBFetchAlbumByProviderRequest* resultFetchAlbumByProviderRequest;
@end

@implementation TXPBFetchAlbumByProviderRequestBuilder
@synthesize resultFetchAlbumByProviderRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAlbumByProviderRequest = [[TXPBFetchAlbumByProviderRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAlbumByProviderRequest;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) clear {
  self.resultFetchAlbumByProviderRequest = [[TXPBFetchAlbumByProviderRequest alloc] init];
  return self;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) clone {
  return [TXPBFetchAlbumByProviderRequest builderWithPrototype:resultFetchAlbumByProviderRequest];
}
- (TXPBFetchAlbumByProviderRequest*) defaultInstance {
  return [TXPBFetchAlbumByProviderRequest defaultInstance];
}
- (TXPBFetchAlbumByProviderRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAlbumByProviderRequest*) buildPartial {
  TXPBFetchAlbumByProviderRequest* returnMe = resultFetchAlbumByProviderRequest;
  self.resultFetchAlbumByProviderRequest = nil;
  return returnMe;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) mergeFrom:(TXPBFetchAlbumByProviderRequest*) other {
  if (other == [TXPBFetchAlbumByProviderRequest defaultInstance]) {
    return self;
  }
  if (other.hasProviderId) {
    [self setProviderId:other.providerId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAlbumByProviderRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProviderId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasProviderId {
  return resultFetchAlbumByProviderRequest.hasProviderId;
}
- (SInt64) providerId {
  return resultFetchAlbumByProviderRequest.providerId;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) setProviderId:(SInt64) value {
  resultFetchAlbumByProviderRequest.hasProviderId = YES;
  resultFetchAlbumByProviderRequest.providerId = value;
  return self;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) clearProviderId {
  resultFetchAlbumByProviderRequest.hasProviderId = NO;
  resultFetchAlbumByProviderRequest.providerId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchAlbumByProviderRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchAlbumByProviderRequest.sinceId;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchAlbumByProviderRequest.hasSinceId = YES;
  resultFetchAlbumByProviderRequest.sinceId = value;
  return self;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) clearSinceId {
  resultFetchAlbumByProviderRequest.hasSinceId = NO;
  resultFetchAlbumByProviderRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchAlbumByProviderRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchAlbumByProviderRequest.maxId;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchAlbumByProviderRequest.hasMaxId = YES;
  resultFetchAlbumByProviderRequest.maxId = value;
  return self;
}
- (TXPBFetchAlbumByProviderRequestBuilder*) clearMaxId {
  resultFetchAlbumByProviderRequest.hasMaxId = NO;
  resultFetchAlbumByProviderRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBFetchAlbumByProviderResponse ()
@property (strong) NSMutableArray * albumsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchAlbumByProviderResponse

@synthesize albumsArray;
@dynamic albums;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchAlbumByProviderResponse* defaultTXPBFetchAlbumByProviderResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAlbumByProviderResponse class]) {
    defaultTXPBFetchAlbumByProviderResponseInstance = [[TXPBFetchAlbumByProviderResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByProviderResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByProviderResponseInstance;
}
- (NSArray *)albums {
  return albumsArray;
}
- (TXPBAlbum*)albumsAtIndex:(NSUInteger)index {
  return [albumsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitalbums = YES;
   [self.albums enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitalbums = NO;
      *stop = YES;
    }
  }];
  if (!isInitalbums) return isInitalbums;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAlbumByProviderResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchAlbumByProviderResponse*)[[[TXPBFetchAlbumByProviderResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchAlbumByProviderResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByProviderResponse*)[[[TXPBFetchAlbumByProviderResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByProviderResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAlbumByProviderResponse*)[[[TXPBFetchAlbumByProviderResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAlbumByProviderResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByProviderResponse*)[[[TXPBFetchAlbumByProviderResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByProviderResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAlbumByProviderResponse*)[[[TXPBFetchAlbumByProviderResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAlbumByProviderResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByProviderResponse*)[[[TXPBFetchAlbumByProviderResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByProviderResponseBuilder*) builder {
  return [[TXPBFetchAlbumByProviderResponseBuilder alloc] init];
}
+ (TXPBFetchAlbumByProviderResponseBuilder*) builderWithPrototype:(TXPBFetchAlbumByProviderResponse*) prototype {
  return [[TXPBFetchAlbumByProviderResponse builder] mergeFrom:prototype];
}
- (TXPBFetchAlbumByProviderResponseBuilder*) builder {
  return [TXPBFetchAlbumByProviderResponse builder];
}
- (TXPBFetchAlbumByProviderResponseBuilder*) toBuilder {
  return [TXPBFetchAlbumByProviderResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"albums"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBAlbum* element in self.albumsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"albums"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAlbumByProviderResponse class]]) {
    return NO;
  }
  TXPBFetchAlbumByProviderResponse *otherMessage = other;
  return
      [self.albumsArray isEqualToArray:otherMessage.albumsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.albumsArray enumerateObjectsUsingBlock:^(TXPBAlbum *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAlbumByProviderResponseBuilder()
@property (strong) TXPBFetchAlbumByProviderResponse* resultFetchAlbumByProviderResponse;
@end

@implementation TXPBFetchAlbumByProviderResponseBuilder
@synthesize resultFetchAlbumByProviderResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAlbumByProviderResponse = [[TXPBFetchAlbumByProviderResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAlbumByProviderResponse;
}
- (TXPBFetchAlbumByProviderResponseBuilder*) clear {
  self.resultFetchAlbumByProviderResponse = [[TXPBFetchAlbumByProviderResponse alloc] init];
  return self;
}
- (TXPBFetchAlbumByProviderResponseBuilder*) clone {
  return [TXPBFetchAlbumByProviderResponse builderWithPrototype:resultFetchAlbumByProviderResponse];
}
- (TXPBFetchAlbumByProviderResponse*) defaultInstance {
  return [TXPBFetchAlbumByProviderResponse defaultInstance];
}
- (TXPBFetchAlbumByProviderResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAlbumByProviderResponse*) buildPartial {
  TXPBFetchAlbumByProviderResponse* returnMe = resultFetchAlbumByProviderResponse;
  self.resultFetchAlbumByProviderResponse = nil;
  return returnMe;
}
- (TXPBFetchAlbumByProviderResponseBuilder*) mergeFrom:(TXPBFetchAlbumByProviderResponse*) other {
  if (other == [TXPBFetchAlbumByProviderResponse defaultInstance]) {
    return self;
  }
  if (other.albumsArray.count > 0) {
    if (resultFetchAlbumByProviderResponse.albumsArray == nil) {
      resultFetchAlbumByProviderResponse.albumsArray = [[NSMutableArray alloc] initWithArray:other.albumsArray];
    } else {
      [resultFetchAlbumByProviderResponse.albumsArray addObjectsFromArray:other.albumsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAlbumByProviderResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAlbumByProviderResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBAlbumBuilder* subBuilder = [TXPBAlbum builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAlbums:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)albums {
  return resultFetchAlbumByProviderResponse.albumsArray;
}
- (TXPBAlbum*)albumsAtIndex:(NSUInteger)index {
  return [resultFetchAlbumByProviderResponse albumsAtIndex:index];
}
- (TXPBFetchAlbumByProviderResponseBuilder *)addAlbums:(TXPBAlbum*)value {
  if (resultFetchAlbumByProviderResponse.albumsArray == nil) {
    resultFetchAlbumByProviderResponse.albumsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchAlbumByProviderResponse.albumsArray addObject:value];
  return self;
}
- (TXPBFetchAlbumByProviderResponseBuilder *)setAlbumsArray:(NSArray *)array {
  resultFetchAlbumByProviderResponse.albumsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchAlbumByProviderResponseBuilder *)clearAlbums {
  resultFetchAlbumByProviderResponse.albumsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchAlbumByProviderResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchAlbumByProviderResponse.hasMore;
}
- (TXPBFetchAlbumByProviderResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchAlbumByProviderResponse.hasHasMore = YES;
  resultFetchAlbumByProviderResponse.hasMore = value;
  return self;
}
- (TXPBFetchAlbumByProviderResponseBuilder*) clearHasMore {
  resultFetchAlbumByProviderResponse.hasHasMore = NO;
  resultFetchAlbumByProviderResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchResourceByProviderRequest ()
@property SInt64 providerId;
@property SInt64 sinceId;
@property SInt64 maxId;
@end

@implementation TXPBFetchResourceByProviderRequest

- (BOOL) hasProviderId {
  return !!hasProviderId_;
}
- (void) setHasProviderId:(BOOL) _value_ {
  hasProviderId_ = !!_value_;
}
@synthesize providerId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (instancetype) init {
  if ((self = [super init])) {
    self.providerId = 0L;
    self.sinceId = 0L;
    self.maxId = 0L;
  }
  return self;
}
static TXPBFetchResourceByProviderRequest* defaultTXPBFetchResourceByProviderRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByProviderRequest class]) {
    defaultTXPBFetchResourceByProviderRequestInstance = [[TXPBFetchResourceByProviderRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByProviderRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByProviderRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasProviderId) {
    return NO;
  }
  if (!self.hasSinceId) {
    return NO;
  }
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProviderId) {
    [output writeInt64:1 value:self.providerId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasMaxId) {
    [output writeInt64:3 value:self.maxId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProviderId) {
    size_ += computeInt64Size(1, self.providerId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(3, self.maxId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByProviderRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByProviderRequest*)[[[TXPBFetchResourceByProviderRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByProviderRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByProviderRequest*)[[[TXPBFetchResourceByProviderRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByProviderRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByProviderRequest*)[[[TXPBFetchResourceByProviderRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByProviderRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByProviderRequest*)[[[TXPBFetchResourceByProviderRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByProviderRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByProviderRequest*)[[[TXPBFetchResourceByProviderRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByProviderRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByProviderRequest*)[[[TXPBFetchResourceByProviderRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByProviderRequestBuilder*) builder {
  return [[TXPBFetchResourceByProviderRequestBuilder alloc] init];
}
+ (TXPBFetchResourceByProviderRequestBuilder*) builderWithPrototype:(TXPBFetchResourceByProviderRequest*) prototype {
  return [[TXPBFetchResourceByProviderRequest builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByProviderRequestBuilder*) builder {
  return [TXPBFetchResourceByProviderRequest builder];
}
- (TXPBFetchResourceByProviderRequestBuilder*) toBuilder {
  return [TXPBFetchResourceByProviderRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProviderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"providerId", [NSNumber numberWithLongLong:self.providerId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProviderId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.providerId] forKey: @"providerId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByProviderRequest class]]) {
    return NO;
  }
  TXPBFetchResourceByProviderRequest *otherMessage = other;
  return
      self.hasProviderId == otherMessage.hasProviderId &&
      (!self.hasProviderId || self.providerId == otherMessage.providerId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProviderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.providerId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByProviderRequestBuilder()
@property (strong) TXPBFetchResourceByProviderRequest* resultFetchResourceByProviderRequest;
@end

@implementation TXPBFetchResourceByProviderRequestBuilder
@synthesize resultFetchResourceByProviderRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByProviderRequest = [[TXPBFetchResourceByProviderRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByProviderRequest;
}
- (TXPBFetchResourceByProviderRequestBuilder*) clear {
  self.resultFetchResourceByProviderRequest = [[TXPBFetchResourceByProviderRequest alloc] init];
  return self;
}
- (TXPBFetchResourceByProviderRequestBuilder*) clone {
  return [TXPBFetchResourceByProviderRequest builderWithPrototype:resultFetchResourceByProviderRequest];
}
- (TXPBFetchResourceByProviderRequest*) defaultInstance {
  return [TXPBFetchResourceByProviderRequest defaultInstance];
}
- (TXPBFetchResourceByProviderRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByProviderRequest*) buildPartial {
  TXPBFetchResourceByProviderRequest* returnMe = resultFetchResourceByProviderRequest;
  self.resultFetchResourceByProviderRequest = nil;
  return returnMe;
}
- (TXPBFetchResourceByProviderRequestBuilder*) mergeFrom:(TXPBFetchResourceByProviderRequest*) other {
  if (other == [TXPBFetchResourceByProviderRequest defaultInstance]) {
    return self;
  }
  if (other.hasProviderId) {
    [self setProviderId:other.providerId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByProviderRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByProviderRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProviderId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setMaxId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasProviderId {
  return resultFetchResourceByProviderRequest.hasProviderId;
}
- (SInt64) providerId {
  return resultFetchResourceByProviderRequest.providerId;
}
- (TXPBFetchResourceByProviderRequestBuilder*) setProviderId:(SInt64) value {
  resultFetchResourceByProviderRequest.hasProviderId = YES;
  resultFetchResourceByProviderRequest.providerId = value;
  return self;
}
- (TXPBFetchResourceByProviderRequestBuilder*) clearProviderId {
  resultFetchResourceByProviderRequest.hasProviderId = NO;
  resultFetchResourceByProviderRequest.providerId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchResourceByProviderRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchResourceByProviderRequest.sinceId;
}
- (TXPBFetchResourceByProviderRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchResourceByProviderRequest.hasSinceId = YES;
  resultFetchResourceByProviderRequest.sinceId = value;
  return self;
}
- (TXPBFetchResourceByProviderRequestBuilder*) clearSinceId {
  resultFetchResourceByProviderRequest.hasSinceId = NO;
  resultFetchResourceByProviderRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchResourceByProviderRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchResourceByProviderRequest.maxId;
}
- (TXPBFetchResourceByProviderRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchResourceByProviderRequest.hasMaxId = YES;
  resultFetchResourceByProviderRequest.maxId = value;
  return self;
}
- (TXPBFetchResourceByProviderRequestBuilder*) clearMaxId {
  resultFetchResourceByProviderRequest.hasMaxId = NO;
  resultFetchResourceByProviderRequest.maxId = 0L;
  return self;
}
@end

@interface TXPBFetchResourceByProviderResponse ()
@property (strong) NSMutableArray * resourcesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchResourceByProviderResponse

@synthesize resourcesArray;
@dynamic resources;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchResourceByProviderResponse* defaultTXPBFetchResourceByProviderResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByProviderResponse class]) {
    defaultTXPBFetchResourceByProviderResponseInstance = [[TXPBFetchResourceByProviderResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByProviderResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByProviderResponseInstance;
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByProviderResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByProviderResponse*)[[[TXPBFetchResourceByProviderResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByProviderResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByProviderResponse*)[[[TXPBFetchResourceByProviderResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByProviderResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByProviderResponse*)[[[TXPBFetchResourceByProviderResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByProviderResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByProviderResponse*)[[[TXPBFetchResourceByProviderResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByProviderResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByProviderResponse*)[[[TXPBFetchResourceByProviderResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByProviderResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByProviderResponse*)[[[TXPBFetchResourceByProviderResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByProviderResponseBuilder*) builder {
  return [[TXPBFetchResourceByProviderResponseBuilder alloc] init];
}
+ (TXPBFetchResourceByProviderResponseBuilder*) builderWithPrototype:(TXPBFetchResourceByProviderResponse*) prototype {
  return [[TXPBFetchResourceByProviderResponse builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByProviderResponseBuilder*) builder {
  return [TXPBFetchResourceByProviderResponse builder];
}
- (TXPBFetchResourceByProviderResponseBuilder*) toBuilder {
  return [TXPBFetchResourceByProviderResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByProviderResponse class]]) {
    return NO;
  }
  TXPBFetchResourceByProviderResponse *otherMessage = other;
  return
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByProviderResponseBuilder()
@property (strong) TXPBFetchResourceByProviderResponse* resultFetchResourceByProviderResponse;
@end

@implementation TXPBFetchResourceByProviderResponseBuilder
@synthesize resultFetchResourceByProviderResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByProviderResponse = [[TXPBFetchResourceByProviderResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByProviderResponse;
}
- (TXPBFetchResourceByProviderResponseBuilder*) clear {
  self.resultFetchResourceByProviderResponse = [[TXPBFetchResourceByProviderResponse alloc] init];
  return self;
}
- (TXPBFetchResourceByProviderResponseBuilder*) clone {
  return [TXPBFetchResourceByProviderResponse builderWithPrototype:resultFetchResourceByProviderResponse];
}
- (TXPBFetchResourceByProviderResponse*) defaultInstance {
  return [TXPBFetchResourceByProviderResponse defaultInstance];
}
- (TXPBFetchResourceByProviderResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByProviderResponse*) buildPartial {
  TXPBFetchResourceByProviderResponse* returnMe = resultFetchResourceByProviderResponse;
  self.resultFetchResourceByProviderResponse = nil;
  return returnMe;
}
- (TXPBFetchResourceByProviderResponseBuilder*) mergeFrom:(TXPBFetchResourceByProviderResponse*) other {
  if (other == [TXPBFetchResourceByProviderResponse defaultInstance]) {
    return self;
  }
  if (other.resourcesArray.count > 0) {
    if (resultFetchResourceByProviderResponse.resourcesArray == nil) {
      resultFetchResourceByProviderResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultFetchResourceByProviderResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByProviderResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByProviderResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resources {
  return resultFetchResourceByProviderResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultFetchResourceByProviderResponse resourcesAtIndex:index];
}
- (TXPBFetchResourceByProviderResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultFetchResourceByProviderResponse.resourcesArray == nil) {
    resultFetchResourceByProviderResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchResourceByProviderResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBFetchResourceByProviderResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultFetchResourceByProviderResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchResourceByProviderResponseBuilder *)clearResources {
  resultFetchResourceByProviderResponse.resourcesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchResourceByProviderResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchResourceByProviderResponse.hasMore;
}
- (TXPBFetchResourceByProviderResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchResourceByProviderResponse.hasHasMore = YES;
  resultFetchResourceByProviderResponse.hasMore = value;
  return self;
}
- (TXPBFetchResourceByProviderResponseBuilder*) clearHasMore {
  resultFetchResourceByProviderResponse.hasHasMore = NO;
  resultFetchResourceByProviderResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchResourceByAlbumRequest ()
@property SInt64 albumId;
@property SInt32 page;
@end

@implementation TXPBFetchResourceByAlbumRequest

- (BOOL) hasAlbumId {
  return !!hasAlbumId_;
}
- (void) setHasAlbumId:(BOOL) _value_ {
  hasAlbumId_ = !!_value_;
}
@synthesize albumId;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (instancetype) init {
  if ((self = [super init])) {
    self.albumId = 0L;
    self.page = 0;
  }
  return self;
}
static TXPBFetchResourceByAlbumRequest* defaultTXPBFetchResourceByAlbumRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByAlbumRequest class]) {
    defaultTXPBFetchResourceByAlbumRequestInstance = [[TXPBFetchResourceByAlbumRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByAlbumRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByAlbumRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAlbumId) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAlbumId) {
    [output writeInt64:1 value:self.albumId];
  }
  if (self.hasPage) {
    [output writeInt32:2 value:self.page];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAlbumId) {
    size_ += computeInt64Size(1, self.albumId);
  }
  if (self.hasPage) {
    size_ += computeInt32Size(2, self.page);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByAlbumRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByAlbumRequest*)[[[TXPBFetchResourceByAlbumRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByAlbumRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByAlbumRequest*)[[[TXPBFetchResourceByAlbumRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByAlbumRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByAlbumRequest*)[[[TXPBFetchResourceByAlbumRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByAlbumRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByAlbumRequest*)[[[TXPBFetchResourceByAlbumRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByAlbumRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByAlbumRequest*)[[[TXPBFetchResourceByAlbumRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByAlbumRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByAlbumRequest*)[[[TXPBFetchResourceByAlbumRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByAlbumRequestBuilder*) builder {
  return [[TXPBFetchResourceByAlbumRequestBuilder alloc] init];
}
+ (TXPBFetchResourceByAlbumRequestBuilder*) builderWithPrototype:(TXPBFetchResourceByAlbumRequest*) prototype {
  return [[TXPBFetchResourceByAlbumRequest builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByAlbumRequestBuilder*) builder {
  return [TXPBFetchResourceByAlbumRequest builder];
}
- (TXPBFetchResourceByAlbumRequestBuilder*) toBuilder {
  return [TXPBFetchResourceByAlbumRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAlbumId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"albumId", [NSNumber numberWithLongLong:self.albumId]];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAlbumId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.albumId] forKey: @"albumId"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByAlbumRequest class]]) {
    return NO;
  }
  TXPBFetchResourceByAlbumRequest *otherMessage = other;
  return
      self.hasAlbumId == otherMessage.hasAlbumId &&
      (!self.hasAlbumId || self.albumId == otherMessage.albumId) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAlbumId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.albumId] hash];
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByAlbumRequestBuilder()
@property (strong) TXPBFetchResourceByAlbumRequest* resultFetchResourceByAlbumRequest;
@end

@implementation TXPBFetchResourceByAlbumRequestBuilder
@synthesize resultFetchResourceByAlbumRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByAlbumRequest = [[TXPBFetchResourceByAlbumRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByAlbumRequest;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) clear {
  self.resultFetchResourceByAlbumRequest = [[TXPBFetchResourceByAlbumRequest alloc] init];
  return self;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) clone {
  return [TXPBFetchResourceByAlbumRequest builderWithPrototype:resultFetchResourceByAlbumRequest];
}
- (TXPBFetchResourceByAlbumRequest*) defaultInstance {
  return [TXPBFetchResourceByAlbumRequest defaultInstance];
}
- (TXPBFetchResourceByAlbumRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByAlbumRequest*) buildPartial {
  TXPBFetchResourceByAlbumRequest* returnMe = resultFetchResourceByAlbumRequest;
  self.resultFetchResourceByAlbumRequest = nil;
  return returnMe;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) mergeFrom:(TXPBFetchResourceByAlbumRequest*) other {
  if (other == [TXPBFetchResourceByAlbumRequest defaultInstance]) {
    return self;
  }
  if (other.hasAlbumId) {
    [self setAlbumId:other.albumId];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByAlbumRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAlbumId:[input readInt64]];
        break;
      }
      case 16: {
        [self setPage:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasAlbumId {
  return resultFetchResourceByAlbumRequest.hasAlbumId;
}
- (SInt64) albumId {
  return resultFetchResourceByAlbumRequest.albumId;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) setAlbumId:(SInt64) value {
  resultFetchResourceByAlbumRequest.hasAlbumId = YES;
  resultFetchResourceByAlbumRequest.albumId = value;
  return self;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) clearAlbumId {
  resultFetchResourceByAlbumRequest.hasAlbumId = NO;
  resultFetchResourceByAlbumRequest.albumId = 0L;
  return self;
}
- (BOOL) hasPage {
  return resultFetchResourceByAlbumRequest.hasPage;
}
- (SInt32) page {
  return resultFetchResourceByAlbumRequest.page;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) setPage:(SInt32) value {
  resultFetchResourceByAlbumRequest.hasPage = YES;
  resultFetchResourceByAlbumRequest.page = value;
  return self;
}
- (TXPBFetchResourceByAlbumRequestBuilder*) clearPage {
  resultFetchResourceByAlbumRequest.hasPage = NO;
  resultFetchResourceByAlbumRequest.page = 0;
  return self;
}
@end

@interface TXPBFetchResourceByAlbumResponse ()
@property (strong) NSMutableArray * resourcesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchResourceByAlbumResponse

@synthesize resourcesArray;
@dynamic resources;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchResourceByAlbumResponse* defaultTXPBFetchResourceByAlbumResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByAlbumResponse class]) {
    defaultTXPBFetchResourceByAlbumResponseInstance = [[TXPBFetchResourceByAlbumResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByAlbumResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByAlbumResponseInstance;
}
- (NSArray *)resources {
  return resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resourcesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresources = YES;
   [self.resources enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresources = NO;
      *stop = YES;
    }
  }];
  if (!isInitresources) return isInitresources;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByAlbumResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByAlbumResponse*)[[[TXPBFetchResourceByAlbumResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByAlbumResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByAlbumResponse*)[[[TXPBFetchResourceByAlbumResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByAlbumResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByAlbumResponse*)[[[TXPBFetchResourceByAlbumResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByAlbumResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByAlbumResponse*)[[[TXPBFetchResourceByAlbumResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByAlbumResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByAlbumResponse*)[[[TXPBFetchResourceByAlbumResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByAlbumResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByAlbumResponse*)[[[TXPBFetchResourceByAlbumResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByAlbumResponseBuilder*) builder {
  return [[TXPBFetchResourceByAlbumResponseBuilder alloc] init];
}
+ (TXPBFetchResourceByAlbumResponseBuilder*) builderWithPrototype:(TXPBFetchResourceByAlbumResponse*) prototype {
  return [[TXPBFetchResourceByAlbumResponse builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByAlbumResponseBuilder*) builder {
  return [TXPBFetchResourceByAlbumResponse builder];
}
- (TXPBFetchResourceByAlbumResponseBuilder*) toBuilder {
  return [TXPBFetchResourceByAlbumResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resources"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourcesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resources"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByAlbumResponse class]]) {
    return NO;
  }
  TXPBFetchResourceByAlbumResponse *otherMessage = other;
  return
      [self.resourcesArray isEqualToArray:otherMessage.resourcesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourcesArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByAlbumResponseBuilder()
@property (strong) TXPBFetchResourceByAlbumResponse* resultFetchResourceByAlbumResponse;
@end

@implementation TXPBFetchResourceByAlbumResponseBuilder
@synthesize resultFetchResourceByAlbumResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByAlbumResponse = [[TXPBFetchResourceByAlbumResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByAlbumResponse;
}
- (TXPBFetchResourceByAlbumResponseBuilder*) clear {
  self.resultFetchResourceByAlbumResponse = [[TXPBFetchResourceByAlbumResponse alloc] init];
  return self;
}
- (TXPBFetchResourceByAlbumResponseBuilder*) clone {
  return [TXPBFetchResourceByAlbumResponse builderWithPrototype:resultFetchResourceByAlbumResponse];
}
- (TXPBFetchResourceByAlbumResponse*) defaultInstance {
  return [TXPBFetchResourceByAlbumResponse defaultInstance];
}
- (TXPBFetchResourceByAlbumResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByAlbumResponse*) buildPartial {
  TXPBFetchResourceByAlbumResponse* returnMe = resultFetchResourceByAlbumResponse;
  self.resultFetchResourceByAlbumResponse = nil;
  return returnMe;
}
- (TXPBFetchResourceByAlbumResponseBuilder*) mergeFrom:(TXPBFetchResourceByAlbumResponse*) other {
  if (other == [TXPBFetchResourceByAlbumResponse defaultInstance]) {
    return self;
  }
  if (other.resourcesArray.count > 0) {
    if (resultFetchResourceByAlbumResponse.resourcesArray == nil) {
      resultFetchResourceByAlbumResponse.resourcesArray = [[NSMutableArray alloc] initWithArray:other.resourcesArray];
    } else {
      [resultFetchResourceByAlbumResponse.resourcesArray addObjectsFromArray:other.resourcesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByAlbumResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByAlbumResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResources:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resources {
  return resultFetchResourceByAlbumResponse.resourcesArray;
}
- (TXPBResource*)resourcesAtIndex:(NSUInteger)index {
  return [resultFetchResourceByAlbumResponse resourcesAtIndex:index];
}
- (TXPBFetchResourceByAlbumResponseBuilder *)addResources:(TXPBResource*)value {
  if (resultFetchResourceByAlbumResponse.resourcesArray == nil) {
    resultFetchResourceByAlbumResponse.resourcesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchResourceByAlbumResponse.resourcesArray addObject:value];
  return self;
}
- (TXPBFetchResourceByAlbumResponseBuilder *)setResourcesArray:(NSArray *)array {
  resultFetchResourceByAlbumResponse.resourcesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchResourceByAlbumResponseBuilder *)clearResources {
  resultFetchResourceByAlbumResponse.resourcesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchResourceByAlbumResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchResourceByAlbumResponse.hasMore;
}
- (TXPBFetchResourceByAlbumResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchResourceByAlbumResponse.hasHasMore = YES;
  resultFetchResourceByAlbumResponse.hasMore = value;
  return self;
}
- (TXPBFetchResourceByAlbumResponseBuilder*) clearHasMore {
  resultFetchResourceByAlbumResponse.hasHasMore = NO;
  resultFetchResourceByAlbumResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBPlayNextRequest ()
@property SInt64 resourceId;
@property BOOL isPlayList;
@end

@implementation TXPBPlayNextRequest

- (BOOL) hasResourceId {
  return !!hasResourceId_;
}
- (void) setHasResourceId:(BOOL) _value_ {
  hasResourceId_ = !!_value_;
}
@synthesize resourceId;
- (BOOL) hasIsPlayList {
  return !!hasIsPlayList_;
}
- (void) setHasIsPlayList:(BOOL) _value_ {
  hasIsPlayList_ = !!_value_;
}
- (BOOL) isPlayList {
  return !!isPlayList_;
}
- (void) setIsPlayList:(BOOL) _value_ {
  isPlayList_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.resourceId = 0L;
    self.isPlayList = NO;
  }
  return self;
}
static TXPBPlayNextRequest* defaultTXPBPlayNextRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBPlayNextRequest class]) {
    defaultTXPBPlayNextRequestInstance = [[TXPBPlayNextRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPlayNextRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPlayNextRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResourceId) {
    return NO;
  }
  if (!self.hasIsPlayList) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResourceId) {
    [output writeInt64:1 value:self.resourceId];
  }
  if (self.hasIsPlayList) {
    [output writeBool:2 value:self.isPlayList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResourceId) {
    size_ += computeInt64Size(1, self.resourceId);
  }
  if (self.hasIsPlayList) {
    size_ += computeBoolSize(2, self.isPlayList);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPlayNextRequest*) parseFromData:(NSData*) data {
  return (TXPBPlayNextRequest*)[[[TXPBPlayNextRequest builder] mergeFromData:data] build];
}
+ (TXPBPlayNextRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayNextRequest*)[[[TXPBPlayNextRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayNextRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPlayNextRequest*)[[[TXPBPlayNextRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBPlayNextRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayNextRequest*)[[[TXPBPlayNextRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayNextRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPlayNextRequest*)[[[TXPBPlayNextRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPlayNextRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayNextRequest*)[[[TXPBPlayNextRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayNextRequestBuilder*) builder {
  return [[TXPBPlayNextRequestBuilder alloc] init];
}
+ (TXPBPlayNextRequestBuilder*) builderWithPrototype:(TXPBPlayNextRequest*) prototype {
  return [[TXPBPlayNextRequest builder] mergeFrom:prototype];
}
- (TXPBPlayNextRequestBuilder*) builder {
  return [TXPBPlayNextRequest builder];
}
- (TXPBPlayNextRequestBuilder*) toBuilder {
  return [TXPBPlayNextRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceId", [NSNumber numberWithLongLong:self.resourceId]];
  }
  if (self.hasIsPlayList) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isPlayList", [NSNumber numberWithBool:self.isPlayList]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResourceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.resourceId] forKey: @"resourceId"];
  }
  if (self.hasIsPlayList) {
    [dictionary setObject: [NSNumber numberWithBool:self.isPlayList] forKey: @"isPlayList"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPlayNextRequest class]]) {
    return NO;
  }
  TXPBPlayNextRequest *otherMessage = other;
  return
      self.hasResourceId == otherMessage.hasResourceId &&
      (!self.hasResourceId || self.resourceId == otherMessage.resourceId) &&
      self.hasIsPlayList == otherMessage.hasIsPlayList &&
      (!self.hasIsPlayList || self.isPlayList == otherMessage.isPlayList) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResourceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.resourceId] hash];
  }
  if (self.hasIsPlayList) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isPlayList] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPlayNextRequestBuilder()
@property (strong) TXPBPlayNextRequest* resultPlayNextRequest;
@end

@implementation TXPBPlayNextRequestBuilder
@synthesize resultPlayNextRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPlayNextRequest = [[TXPBPlayNextRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPlayNextRequest;
}
- (TXPBPlayNextRequestBuilder*) clear {
  self.resultPlayNextRequest = [[TXPBPlayNextRequest alloc] init];
  return self;
}
- (TXPBPlayNextRequestBuilder*) clone {
  return [TXPBPlayNextRequest builderWithPrototype:resultPlayNextRequest];
}
- (TXPBPlayNextRequest*) defaultInstance {
  return [TXPBPlayNextRequest defaultInstance];
}
- (TXPBPlayNextRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPlayNextRequest*) buildPartial {
  TXPBPlayNextRequest* returnMe = resultPlayNextRequest;
  self.resultPlayNextRequest = nil;
  return returnMe;
}
- (TXPBPlayNextRequestBuilder*) mergeFrom:(TXPBPlayNextRequest*) other {
  if (other == [TXPBPlayNextRequest defaultInstance]) {
    return self;
  }
  if (other.hasResourceId) {
    [self setResourceId:other.resourceId];
  }
  if (other.hasIsPlayList) {
    [self setIsPlayList:other.isPlayList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPlayNextRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPlayNextRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResourceId:[input readInt64]];
        break;
      }
      case 16: {
        [self setIsPlayList:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasResourceId {
  return resultPlayNextRequest.hasResourceId;
}
- (SInt64) resourceId {
  return resultPlayNextRequest.resourceId;
}
- (TXPBPlayNextRequestBuilder*) setResourceId:(SInt64) value {
  resultPlayNextRequest.hasResourceId = YES;
  resultPlayNextRequest.resourceId = value;
  return self;
}
- (TXPBPlayNextRequestBuilder*) clearResourceId {
  resultPlayNextRequest.hasResourceId = NO;
  resultPlayNextRequest.resourceId = 0L;
  return self;
}
- (BOOL) hasIsPlayList {
  return resultPlayNextRequest.hasIsPlayList;
}
- (BOOL) isPlayList {
  return resultPlayNextRequest.isPlayList;
}
- (TXPBPlayNextRequestBuilder*) setIsPlayList:(BOOL) value {
  resultPlayNextRequest.hasIsPlayList = YES;
  resultPlayNextRequest.isPlayList = value;
  return self;
}
- (TXPBPlayNextRequestBuilder*) clearIsPlayList {
  resultPlayNextRequest.hasIsPlayList = NO;
  resultPlayNextRequest.isPlayList = NO;
  return self;
}
@end

@interface TXPBPlayNextResponse ()
@property BOOL isLast;
@property (strong) TXPBResource* resource;
@end

@implementation TXPBPlayNextResponse

- (BOOL) hasIsLast {
  return !!hasIsLast_;
}
- (void) setHasIsLast:(BOOL) _value_ {
  hasIsLast_ = !!_value_;
}
- (BOOL) isLast {
  return !!isLast_;
}
- (void) setIsLast:(BOOL) _value_ {
  isLast_ = !!_value_;
}
- (BOOL) hasResource {
  return !!hasResource_;
}
- (void) setHasResource:(BOOL) _value_ {
  hasResource_ = !!_value_;
}
@synthesize resource;
- (instancetype) init {
  if ((self = [super init])) {
    self.isLast = NO;
    self.resource = [TXPBResource defaultInstance];
  }
  return self;
}
static TXPBPlayNextResponse* defaultTXPBPlayNextResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBPlayNextResponse class]) {
    defaultTXPBPlayNextResponseInstance = [[TXPBPlayNextResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPlayNextResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPlayNextResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIsLast) {
    return NO;
  }
  if (self.hasResource) {
    if (!self.resource.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsLast) {
    [output writeBool:1 value:self.isLast];
  }
  if (self.hasResource) {
    [output writeMessage:2 value:self.resource];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIsLast) {
    size_ += computeBoolSize(1, self.isLast);
  }
  if (self.hasResource) {
    size_ += computeMessageSize(2, self.resource);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPlayNextResponse*) parseFromData:(NSData*) data {
  return (TXPBPlayNextResponse*)[[[TXPBPlayNextResponse builder] mergeFromData:data] build];
}
+ (TXPBPlayNextResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayNextResponse*)[[[TXPBPlayNextResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayNextResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPlayNextResponse*)[[[TXPBPlayNextResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBPlayNextResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayNextResponse*)[[[TXPBPlayNextResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayNextResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPlayNextResponse*)[[[TXPBPlayNextResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPlayNextResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayNextResponse*)[[[TXPBPlayNextResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayNextResponseBuilder*) builder {
  return [[TXPBPlayNextResponseBuilder alloc] init];
}
+ (TXPBPlayNextResponseBuilder*) builderWithPrototype:(TXPBPlayNextResponse*) prototype {
  return [[TXPBPlayNextResponse builder] mergeFrom:prototype];
}
- (TXPBPlayNextResponseBuilder*) builder {
  return [TXPBPlayNextResponse builder];
}
- (TXPBPlayNextResponseBuilder*) toBuilder {
  return [TXPBPlayNextResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIsLast) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isLast", [NSNumber numberWithBool:self.isLast]];
  }
  if (self.hasResource) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [self.resource writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasIsLast) {
    [dictionary setObject: [NSNumber numberWithBool:self.isLast] forKey: @"isLast"];
  }
  if (self.hasResource) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.resource storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"resource"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPlayNextResponse class]]) {
    return NO;
  }
  TXPBPlayNextResponse *otherMessage = other;
  return
      self.hasIsLast == otherMessage.hasIsLast &&
      (!self.hasIsLast || self.isLast == otherMessage.isLast) &&
      self.hasResource == otherMessage.hasResource &&
      (!self.hasResource || [self.resource isEqual:otherMessage.resource]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasIsLast) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isLast] hash];
  }
  if (self.hasResource) {
    hashCode = hashCode * 31 + [self.resource hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPlayNextResponseBuilder()
@property (strong) TXPBPlayNextResponse* resultPlayNextResponse;
@end

@implementation TXPBPlayNextResponseBuilder
@synthesize resultPlayNextResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPlayNextResponse = [[TXPBPlayNextResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPlayNextResponse;
}
- (TXPBPlayNextResponseBuilder*) clear {
  self.resultPlayNextResponse = [[TXPBPlayNextResponse alloc] init];
  return self;
}
- (TXPBPlayNextResponseBuilder*) clone {
  return [TXPBPlayNextResponse builderWithPrototype:resultPlayNextResponse];
}
- (TXPBPlayNextResponse*) defaultInstance {
  return [TXPBPlayNextResponse defaultInstance];
}
- (TXPBPlayNextResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPlayNextResponse*) buildPartial {
  TXPBPlayNextResponse* returnMe = resultPlayNextResponse;
  self.resultPlayNextResponse = nil;
  return returnMe;
}
- (TXPBPlayNextResponseBuilder*) mergeFrom:(TXPBPlayNextResponse*) other {
  if (other == [TXPBPlayNextResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsLast) {
    [self setIsLast:other.isLast];
  }
  if (other.hasResource) {
    [self mergeResource:other.resource];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPlayNextResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPlayNextResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsLast:[input readBool]];
        break;
      }
      case 18: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        if (self.hasResource) {
          [subBuilder mergeFrom:self.resource];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResource:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsLast {
  return resultPlayNextResponse.hasIsLast;
}
- (BOOL) isLast {
  return resultPlayNextResponse.isLast;
}
- (TXPBPlayNextResponseBuilder*) setIsLast:(BOOL) value {
  resultPlayNextResponse.hasIsLast = YES;
  resultPlayNextResponse.isLast = value;
  return self;
}
- (TXPBPlayNextResponseBuilder*) clearIsLast {
  resultPlayNextResponse.hasIsLast = NO;
  resultPlayNextResponse.isLast = NO;
  return self;
}
- (BOOL) hasResource {
  return resultPlayNextResponse.hasResource;
}
- (TXPBResource*) resource {
  return resultPlayNextResponse.resource;
}
- (TXPBPlayNextResponseBuilder*) setResource:(TXPBResource*) value {
  resultPlayNextResponse.hasResource = YES;
  resultPlayNextResponse.resource = value;
  return self;
}
- (TXPBPlayNextResponseBuilder*) setResourceBuilder:(TXPBResourceBuilder*) builderForValue {
  return [self setResource:[builderForValue build]];
}
- (TXPBPlayNextResponseBuilder*) mergeResource:(TXPBResource*) value {
  if (resultPlayNextResponse.hasResource &&
      resultPlayNextResponse.resource != [TXPBResource defaultInstance]) {
    resultPlayNextResponse.resource =
      [[[TXPBResource builderWithPrototype:resultPlayNextResponse.resource] mergeFrom:value] buildPartial];
  } else {
    resultPlayNextResponse.resource = value;
  }
  resultPlayNextResponse.hasResource = YES;
  return self;
}
- (TXPBPlayNextResponseBuilder*) clearResource {
  resultPlayNextResponse.hasResource = NO;
  resultPlayNextResponse.resource = [TXPBResource defaultInstance];
  return self;
}
@end

@interface TXPBPlayPreviousRequest ()
@property SInt64 resourceId;
@property BOOL isPlayList;
@end

@implementation TXPBPlayPreviousRequest

- (BOOL) hasResourceId {
  return !!hasResourceId_;
}
- (void) setHasResourceId:(BOOL) _value_ {
  hasResourceId_ = !!_value_;
}
@synthesize resourceId;
- (BOOL) hasIsPlayList {
  return !!hasIsPlayList_;
}
- (void) setHasIsPlayList:(BOOL) _value_ {
  hasIsPlayList_ = !!_value_;
}
- (BOOL) isPlayList {
  return !!isPlayList_;
}
- (void) setIsPlayList:(BOOL) _value_ {
  isPlayList_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.resourceId = 0L;
    self.isPlayList = NO;
  }
  return self;
}
static TXPBPlayPreviousRequest* defaultTXPBPlayPreviousRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBPlayPreviousRequest class]) {
    defaultTXPBPlayPreviousRequestInstance = [[TXPBPlayPreviousRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPlayPreviousRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPlayPreviousRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResourceId) {
    return NO;
  }
  if (!self.hasIsPlayList) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResourceId) {
    [output writeInt64:1 value:self.resourceId];
  }
  if (self.hasIsPlayList) {
    [output writeBool:2 value:self.isPlayList];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResourceId) {
    size_ += computeInt64Size(1, self.resourceId);
  }
  if (self.hasIsPlayList) {
    size_ += computeBoolSize(2, self.isPlayList);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPlayPreviousRequest*) parseFromData:(NSData*) data {
  return (TXPBPlayPreviousRequest*)[[[TXPBPlayPreviousRequest builder] mergeFromData:data] build];
}
+ (TXPBPlayPreviousRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayPreviousRequest*)[[[TXPBPlayPreviousRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayPreviousRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPlayPreviousRequest*)[[[TXPBPlayPreviousRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBPlayPreviousRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayPreviousRequest*)[[[TXPBPlayPreviousRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayPreviousRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPlayPreviousRequest*)[[[TXPBPlayPreviousRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPlayPreviousRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayPreviousRequest*)[[[TXPBPlayPreviousRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayPreviousRequestBuilder*) builder {
  return [[TXPBPlayPreviousRequestBuilder alloc] init];
}
+ (TXPBPlayPreviousRequestBuilder*) builderWithPrototype:(TXPBPlayPreviousRequest*) prototype {
  return [[TXPBPlayPreviousRequest builder] mergeFrom:prototype];
}
- (TXPBPlayPreviousRequestBuilder*) builder {
  return [TXPBPlayPreviousRequest builder];
}
- (TXPBPlayPreviousRequestBuilder*) toBuilder {
  return [TXPBPlayPreviousRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resourceId", [NSNumber numberWithLongLong:self.resourceId]];
  }
  if (self.hasIsPlayList) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isPlayList", [NSNumber numberWithBool:self.isPlayList]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResourceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.resourceId] forKey: @"resourceId"];
  }
  if (self.hasIsPlayList) {
    [dictionary setObject: [NSNumber numberWithBool:self.isPlayList] forKey: @"isPlayList"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPlayPreviousRequest class]]) {
    return NO;
  }
  TXPBPlayPreviousRequest *otherMessage = other;
  return
      self.hasResourceId == otherMessage.hasResourceId &&
      (!self.hasResourceId || self.resourceId == otherMessage.resourceId) &&
      self.hasIsPlayList == otherMessage.hasIsPlayList &&
      (!self.hasIsPlayList || self.isPlayList == otherMessage.isPlayList) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResourceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.resourceId] hash];
  }
  if (self.hasIsPlayList) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isPlayList] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPlayPreviousRequestBuilder()
@property (strong) TXPBPlayPreviousRequest* resultPlayPreviousRequest;
@end

@implementation TXPBPlayPreviousRequestBuilder
@synthesize resultPlayPreviousRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPlayPreviousRequest = [[TXPBPlayPreviousRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPlayPreviousRequest;
}
- (TXPBPlayPreviousRequestBuilder*) clear {
  self.resultPlayPreviousRequest = [[TXPBPlayPreviousRequest alloc] init];
  return self;
}
- (TXPBPlayPreviousRequestBuilder*) clone {
  return [TXPBPlayPreviousRequest builderWithPrototype:resultPlayPreviousRequest];
}
- (TXPBPlayPreviousRequest*) defaultInstance {
  return [TXPBPlayPreviousRequest defaultInstance];
}
- (TXPBPlayPreviousRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPlayPreviousRequest*) buildPartial {
  TXPBPlayPreviousRequest* returnMe = resultPlayPreviousRequest;
  self.resultPlayPreviousRequest = nil;
  return returnMe;
}
- (TXPBPlayPreviousRequestBuilder*) mergeFrom:(TXPBPlayPreviousRequest*) other {
  if (other == [TXPBPlayPreviousRequest defaultInstance]) {
    return self;
  }
  if (other.hasResourceId) {
    [self setResourceId:other.resourceId];
  }
  if (other.hasIsPlayList) {
    [self setIsPlayList:other.isPlayList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPlayPreviousRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPlayPreviousRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResourceId:[input readInt64]];
        break;
      }
      case 16: {
        [self setIsPlayList:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasResourceId {
  return resultPlayPreviousRequest.hasResourceId;
}
- (SInt64) resourceId {
  return resultPlayPreviousRequest.resourceId;
}
- (TXPBPlayPreviousRequestBuilder*) setResourceId:(SInt64) value {
  resultPlayPreviousRequest.hasResourceId = YES;
  resultPlayPreviousRequest.resourceId = value;
  return self;
}
- (TXPBPlayPreviousRequestBuilder*) clearResourceId {
  resultPlayPreviousRequest.hasResourceId = NO;
  resultPlayPreviousRequest.resourceId = 0L;
  return self;
}
- (BOOL) hasIsPlayList {
  return resultPlayPreviousRequest.hasIsPlayList;
}
- (BOOL) isPlayList {
  return resultPlayPreviousRequest.isPlayList;
}
- (TXPBPlayPreviousRequestBuilder*) setIsPlayList:(BOOL) value {
  resultPlayPreviousRequest.hasIsPlayList = YES;
  resultPlayPreviousRequest.isPlayList = value;
  return self;
}
- (TXPBPlayPreviousRequestBuilder*) clearIsPlayList {
  resultPlayPreviousRequest.hasIsPlayList = NO;
  resultPlayPreviousRequest.isPlayList = NO;
  return self;
}
@end

@interface TXPBPlayPreviousResponse ()
@property BOOL isFirst;
@property (strong) TXPBResource* resource;
@end

@implementation TXPBPlayPreviousResponse

- (BOOL) hasIsFirst {
  return !!hasIsFirst_;
}
- (void) setHasIsFirst:(BOOL) _value_ {
  hasIsFirst_ = !!_value_;
}
- (BOOL) isFirst {
  return !!isFirst_;
}
- (void) setIsFirst:(BOOL) _value_ {
  isFirst_ = !!_value_;
}
- (BOOL) hasResource {
  return !!hasResource_;
}
- (void) setHasResource:(BOOL) _value_ {
  hasResource_ = !!_value_;
}
@synthesize resource;
- (instancetype) init {
  if ((self = [super init])) {
    self.isFirst = NO;
    self.resource = [TXPBResource defaultInstance];
  }
  return self;
}
static TXPBPlayPreviousResponse* defaultTXPBPlayPreviousResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBPlayPreviousResponse class]) {
    defaultTXPBPlayPreviousResponseInstance = [[TXPBPlayPreviousResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPlayPreviousResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPlayPreviousResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasIsFirst) {
    return NO;
  }
  if (self.hasResource) {
    if (!self.resource.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasIsFirst) {
    [output writeBool:1 value:self.isFirst];
  }
  if (self.hasResource) {
    [output writeMessage:2 value:self.resource];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasIsFirst) {
    size_ += computeBoolSize(1, self.isFirst);
  }
  if (self.hasResource) {
    size_ += computeMessageSize(2, self.resource);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPlayPreviousResponse*) parseFromData:(NSData*) data {
  return (TXPBPlayPreviousResponse*)[[[TXPBPlayPreviousResponse builder] mergeFromData:data] build];
}
+ (TXPBPlayPreviousResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayPreviousResponse*)[[[TXPBPlayPreviousResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayPreviousResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPlayPreviousResponse*)[[[TXPBPlayPreviousResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBPlayPreviousResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayPreviousResponse*)[[[TXPBPlayPreviousResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayPreviousResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPlayPreviousResponse*)[[[TXPBPlayPreviousResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPlayPreviousResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayPreviousResponse*)[[[TXPBPlayPreviousResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayPreviousResponseBuilder*) builder {
  return [[TXPBPlayPreviousResponseBuilder alloc] init];
}
+ (TXPBPlayPreviousResponseBuilder*) builderWithPrototype:(TXPBPlayPreviousResponse*) prototype {
  return [[TXPBPlayPreviousResponse builder] mergeFrom:prototype];
}
- (TXPBPlayPreviousResponseBuilder*) builder {
  return [TXPBPlayPreviousResponse builder];
}
- (TXPBPlayPreviousResponseBuilder*) toBuilder {
  return [TXPBPlayPreviousResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasIsFirst) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFirst", [NSNumber numberWithBool:self.isFirst]];
  }
  if (self.hasResource) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [self.resource writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasIsFirst) {
    [dictionary setObject: [NSNumber numberWithBool:self.isFirst] forKey: @"isFirst"];
  }
  if (self.hasResource) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.resource storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"resource"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPlayPreviousResponse class]]) {
    return NO;
  }
  TXPBPlayPreviousResponse *otherMessage = other;
  return
      self.hasIsFirst == otherMessage.hasIsFirst &&
      (!self.hasIsFirst || self.isFirst == otherMessage.isFirst) &&
      self.hasResource == otherMessage.hasResource &&
      (!self.hasResource || [self.resource isEqual:otherMessage.resource]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasIsFirst) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isFirst] hash];
  }
  if (self.hasResource) {
    hashCode = hashCode * 31 + [self.resource hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPlayPreviousResponseBuilder()
@property (strong) TXPBPlayPreviousResponse* resultPlayPreviousResponse;
@end

@implementation TXPBPlayPreviousResponseBuilder
@synthesize resultPlayPreviousResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPlayPreviousResponse = [[TXPBPlayPreviousResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPlayPreviousResponse;
}
- (TXPBPlayPreviousResponseBuilder*) clear {
  self.resultPlayPreviousResponse = [[TXPBPlayPreviousResponse alloc] init];
  return self;
}
- (TXPBPlayPreviousResponseBuilder*) clone {
  return [TXPBPlayPreviousResponse builderWithPrototype:resultPlayPreviousResponse];
}
- (TXPBPlayPreviousResponse*) defaultInstance {
  return [TXPBPlayPreviousResponse defaultInstance];
}
- (TXPBPlayPreviousResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPlayPreviousResponse*) buildPartial {
  TXPBPlayPreviousResponse* returnMe = resultPlayPreviousResponse;
  self.resultPlayPreviousResponse = nil;
  return returnMe;
}
- (TXPBPlayPreviousResponseBuilder*) mergeFrom:(TXPBPlayPreviousResponse*) other {
  if (other == [TXPBPlayPreviousResponse defaultInstance]) {
    return self;
  }
  if (other.hasIsFirst) {
    [self setIsFirst:other.isFirst];
  }
  if (other.hasResource) {
    [self mergeResource:other.resource];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPlayPreviousResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPlayPreviousResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setIsFirst:[input readBool]];
        break;
      }
      case 18: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        if (self.hasResource) {
          [subBuilder mergeFrom:self.resource];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResource:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasIsFirst {
  return resultPlayPreviousResponse.hasIsFirst;
}
- (BOOL) isFirst {
  return resultPlayPreviousResponse.isFirst;
}
- (TXPBPlayPreviousResponseBuilder*) setIsFirst:(BOOL) value {
  resultPlayPreviousResponse.hasIsFirst = YES;
  resultPlayPreviousResponse.isFirst = value;
  return self;
}
- (TXPBPlayPreviousResponseBuilder*) clearIsFirst {
  resultPlayPreviousResponse.hasIsFirst = NO;
  resultPlayPreviousResponse.isFirst = NO;
  return self;
}
- (BOOL) hasResource {
  return resultPlayPreviousResponse.hasResource;
}
- (TXPBResource*) resource {
  return resultPlayPreviousResponse.resource;
}
- (TXPBPlayPreviousResponseBuilder*) setResource:(TXPBResource*) value {
  resultPlayPreviousResponse.hasResource = YES;
  resultPlayPreviousResponse.resource = value;
  return self;
}
- (TXPBPlayPreviousResponseBuilder*) setResourceBuilder:(TXPBResourceBuilder*) builderForValue {
  return [self setResource:[builderForValue build]];
}
- (TXPBPlayPreviousResponseBuilder*) mergeResource:(TXPBResource*) value {
  if (resultPlayPreviousResponse.hasResource &&
      resultPlayPreviousResponse.resource != [TXPBResource defaultInstance]) {
    resultPlayPreviousResponse.resource =
      [[[TXPBResource builderWithPrototype:resultPlayPreviousResponse.resource] mergeFrom:value] buildPartial];
  } else {
    resultPlayPreviousResponse.resource = value;
  }
  resultPlayPreviousResponse.hasResource = YES;
  return self;
}
- (TXPBPlayPreviousResponseBuilder*) clearResource {
  resultPlayPreviousResponse.hasResource = NO;
  resultPlayPreviousResponse.resource = [TXPBResource defaultInstance];
  return self;
}
@end

@interface TXPBFetchNearResourcesRequest ()
@property SInt64 currentResourceId;
@property SInt32 count;
@property BOOL forward;
@end

@implementation TXPBFetchNearResourcesRequest

- (BOOL) hasCurrentResourceId {
  return !!hasCurrentResourceId_;
}
- (void) setHasCurrentResourceId:(BOOL) _value_ {
  hasCurrentResourceId_ = !!_value_;
}
@synthesize currentResourceId;
- (BOOL) hasCount {
  return !!hasCount_;
}
- (void) setHasCount:(BOOL) _value_ {
  hasCount_ = !!_value_;
}
@synthesize count;
- (BOOL) hasForward {
  return !!hasForward_;
}
- (void) setHasForward:(BOOL) _value_ {
  hasForward_ = !!_value_;
}
- (BOOL) forward {
  return !!forward_;
}
- (void) setForward:(BOOL) _value_ {
  forward_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.currentResourceId = 0L;
    self.count = 0;
    self.forward = NO;
  }
  return self;
}
static TXPBFetchNearResourcesRequest* defaultTXPBFetchNearResourcesRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNearResourcesRequest class]) {
    defaultTXPBFetchNearResourcesRequestInstance = [[TXPBFetchNearResourcesRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNearResourcesRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNearResourcesRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCurrentResourceId) {
    return NO;
  }
  if (!self.hasCount) {
    return NO;
  }
  if (!self.hasForward) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCurrentResourceId) {
    [output writeInt64:1 value:self.currentResourceId];
  }
  if (self.hasCount) {
    [output writeInt32:2 value:self.count];
  }
  if (self.hasForward) {
    [output writeBool:3 value:self.forward];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCurrentResourceId) {
    size_ += computeInt64Size(1, self.currentResourceId);
  }
  if (self.hasCount) {
    size_ += computeInt32Size(2, self.count);
  }
  if (self.hasForward) {
    size_ += computeBoolSize(3, self.forward);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNearResourcesRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchNearResourcesRequest*)[[[TXPBFetchNearResourcesRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchNearResourcesRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNearResourcesRequest*)[[[TXPBFetchNearResourcesRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNearResourcesRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNearResourcesRequest*)[[[TXPBFetchNearResourcesRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNearResourcesRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNearResourcesRequest*)[[[TXPBFetchNearResourcesRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNearResourcesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNearResourcesRequest*)[[[TXPBFetchNearResourcesRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNearResourcesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNearResourcesRequest*)[[[TXPBFetchNearResourcesRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNearResourcesRequestBuilder*) builder {
  return [[TXPBFetchNearResourcesRequestBuilder alloc] init];
}
+ (TXPBFetchNearResourcesRequestBuilder*) builderWithPrototype:(TXPBFetchNearResourcesRequest*) prototype {
  return [[TXPBFetchNearResourcesRequest builder] mergeFrom:prototype];
}
- (TXPBFetchNearResourcesRequestBuilder*) builder {
  return [TXPBFetchNearResourcesRequest builder];
}
- (TXPBFetchNearResourcesRequestBuilder*) toBuilder {
  return [TXPBFetchNearResourcesRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCurrentResourceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"currentResourceId", [NSNumber numberWithLongLong:self.currentResourceId]];
  }
  if (self.hasCount) {
    [output appendFormat:@"%@%@: %@\n", indent, @"count", [NSNumber numberWithInteger:self.count]];
  }
  if (self.hasForward) {
    [output appendFormat:@"%@%@: %@\n", indent, @"forward", [NSNumber numberWithBool:self.forward]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCurrentResourceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.currentResourceId] forKey: @"currentResourceId"];
  }
  if (self.hasCount) {
    [dictionary setObject: [NSNumber numberWithInteger:self.count] forKey: @"count"];
  }
  if (self.hasForward) {
    [dictionary setObject: [NSNumber numberWithBool:self.forward] forKey: @"forward"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNearResourcesRequest class]]) {
    return NO;
  }
  TXPBFetchNearResourcesRequest *otherMessage = other;
  return
      self.hasCurrentResourceId == otherMessage.hasCurrentResourceId &&
      (!self.hasCurrentResourceId || self.currentResourceId == otherMessage.currentResourceId) &&
      self.hasCount == otherMessage.hasCount &&
      (!self.hasCount || self.count == otherMessage.count) &&
      self.hasForward == otherMessage.hasForward &&
      (!self.hasForward || self.forward == otherMessage.forward) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCurrentResourceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.currentResourceId] hash];
  }
  if (self.hasCount) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.count] hash];
  }
  if (self.hasForward) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.forward] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNearResourcesRequestBuilder()
@property (strong) TXPBFetchNearResourcesRequest* resultFetchNearResourcesRequest;
@end

@implementation TXPBFetchNearResourcesRequestBuilder
@synthesize resultFetchNearResourcesRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNearResourcesRequest = [[TXPBFetchNearResourcesRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNearResourcesRequest;
}
- (TXPBFetchNearResourcesRequestBuilder*) clear {
  self.resultFetchNearResourcesRequest = [[TXPBFetchNearResourcesRequest alloc] init];
  return self;
}
- (TXPBFetchNearResourcesRequestBuilder*) clone {
  return [TXPBFetchNearResourcesRequest builderWithPrototype:resultFetchNearResourcesRequest];
}
- (TXPBFetchNearResourcesRequest*) defaultInstance {
  return [TXPBFetchNearResourcesRequest defaultInstance];
}
- (TXPBFetchNearResourcesRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNearResourcesRequest*) buildPartial {
  TXPBFetchNearResourcesRequest* returnMe = resultFetchNearResourcesRequest;
  self.resultFetchNearResourcesRequest = nil;
  return returnMe;
}
- (TXPBFetchNearResourcesRequestBuilder*) mergeFrom:(TXPBFetchNearResourcesRequest*) other {
  if (other == [TXPBFetchNearResourcesRequest defaultInstance]) {
    return self;
  }
  if (other.hasCurrentResourceId) {
    [self setCurrentResourceId:other.currentResourceId];
  }
  if (other.hasCount) {
    [self setCount:other.count];
  }
  if (other.hasForward) {
    [self setForward:other.forward];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNearResourcesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNearResourcesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCurrentResourceId:[input readInt64]];
        break;
      }
      case 16: {
        [self setCount:[input readInt32]];
        break;
      }
      case 24: {
        [self setForward:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasCurrentResourceId {
  return resultFetchNearResourcesRequest.hasCurrentResourceId;
}
- (SInt64) currentResourceId {
  return resultFetchNearResourcesRequest.currentResourceId;
}
- (TXPBFetchNearResourcesRequestBuilder*) setCurrentResourceId:(SInt64) value {
  resultFetchNearResourcesRequest.hasCurrentResourceId = YES;
  resultFetchNearResourcesRequest.currentResourceId = value;
  return self;
}
- (TXPBFetchNearResourcesRequestBuilder*) clearCurrentResourceId {
  resultFetchNearResourcesRequest.hasCurrentResourceId = NO;
  resultFetchNearResourcesRequest.currentResourceId = 0L;
  return self;
}
- (BOOL) hasCount {
  return resultFetchNearResourcesRequest.hasCount;
}
- (SInt32) count {
  return resultFetchNearResourcesRequest.count;
}
- (TXPBFetchNearResourcesRequestBuilder*) setCount:(SInt32) value {
  resultFetchNearResourcesRequest.hasCount = YES;
  resultFetchNearResourcesRequest.count = value;
  return self;
}
- (TXPBFetchNearResourcesRequestBuilder*) clearCount {
  resultFetchNearResourcesRequest.hasCount = NO;
  resultFetchNearResourcesRequest.count = 0;
  return self;
}
- (BOOL) hasForward {
  return resultFetchNearResourcesRequest.hasForward;
}
- (BOOL) forward {
  return resultFetchNearResourcesRequest.forward;
}
- (TXPBFetchNearResourcesRequestBuilder*) setForward:(BOOL) value {
  resultFetchNearResourcesRequest.hasForward = YES;
  resultFetchNearResourcesRequest.forward = value;
  return self;
}
- (TXPBFetchNearResourcesRequestBuilder*) clearForward {
  resultFetchNearResourcesRequest.hasForward = NO;
  resultFetchNearResourcesRequest.forward = NO;
  return self;
}
@end

@interface TXPBFetchNearResourcesResponse ()
@property (strong) NSMutableArray * resourceArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchNearResourcesResponse

@synthesize resourceArray;
@dynamic resource;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchNearResourcesResponse* defaultTXPBFetchNearResourcesResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchNearResourcesResponse class]) {
    defaultTXPBFetchNearResourcesResponseInstance = [[TXPBFetchNearResourcesResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchNearResourcesResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchNearResourcesResponseInstance;
}
- (NSArray *)resource {
  return resourceArray;
}
- (TXPBResource*)resourceAtIndex:(NSUInteger)index {
  return [resourceArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitresource = YES;
   [self.resource enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitresource = NO;
      *stop = YES;
    }
  }];
  if (!isInitresource) return isInitresource;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.resourceArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.resourceArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchNearResourcesResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchNearResourcesResponse*)[[[TXPBFetchNearResourcesResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchNearResourcesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNearResourcesResponse*)[[[TXPBFetchNearResourcesResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNearResourcesResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchNearResourcesResponse*)[[[TXPBFetchNearResourcesResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchNearResourcesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNearResourcesResponse*)[[[TXPBFetchNearResourcesResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNearResourcesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchNearResourcesResponse*)[[[TXPBFetchNearResourcesResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchNearResourcesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchNearResourcesResponse*)[[[TXPBFetchNearResourcesResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchNearResourcesResponseBuilder*) builder {
  return [[TXPBFetchNearResourcesResponseBuilder alloc] init];
}
+ (TXPBFetchNearResourcesResponseBuilder*) builderWithPrototype:(TXPBFetchNearResourcesResponse*) prototype {
  return [[TXPBFetchNearResourcesResponse builder] mergeFrom:prototype];
}
- (TXPBFetchNearResourcesResponseBuilder*) builder {
  return [TXPBFetchNearResourcesResponse builder];
}
- (TXPBFetchNearResourcesResponseBuilder*) toBuilder {
  return [TXPBFetchNearResourcesResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.resourceArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBResource* element in self.resourceArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"resource"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchNearResourcesResponse class]]) {
    return NO;
  }
  TXPBFetchNearResourcesResponse *otherMessage = other;
  return
      [self.resourceArray isEqualToArray:otherMessage.resourceArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.resourceArray enumerateObjectsUsingBlock:^(TXPBResource *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchNearResourcesResponseBuilder()
@property (strong) TXPBFetchNearResourcesResponse* resultFetchNearResourcesResponse;
@end

@implementation TXPBFetchNearResourcesResponseBuilder
@synthesize resultFetchNearResourcesResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchNearResourcesResponse = [[TXPBFetchNearResourcesResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchNearResourcesResponse;
}
- (TXPBFetchNearResourcesResponseBuilder*) clear {
  self.resultFetchNearResourcesResponse = [[TXPBFetchNearResourcesResponse alloc] init];
  return self;
}
- (TXPBFetchNearResourcesResponseBuilder*) clone {
  return [TXPBFetchNearResourcesResponse builderWithPrototype:resultFetchNearResourcesResponse];
}
- (TXPBFetchNearResourcesResponse*) defaultInstance {
  return [TXPBFetchNearResourcesResponse defaultInstance];
}
- (TXPBFetchNearResourcesResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchNearResourcesResponse*) buildPartial {
  TXPBFetchNearResourcesResponse* returnMe = resultFetchNearResourcesResponse;
  self.resultFetchNearResourcesResponse = nil;
  return returnMe;
}
- (TXPBFetchNearResourcesResponseBuilder*) mergeFrom:(TXPBFetchNearResourcesResponse*) other {
  if (other == [TXPBFetchNearResourcesResponse defaultInstance]) {
    return self;
  }
  if (other.resourceArray.count > 0) {
    if (resultFetchNearResourcesResponse.resourceArray == nil) {
      resultFetchNearResourcesResponse.resourceArray = [[NSMutableArray alloc] initWithArray:other.resourceArray];
    } else {
      [resultFetchNearResourcesResponse.resourceArray addObjectsFromArray:other.resourceArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchNearResourcesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchNearResourcesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addResource:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)resource {
  return resultFetchNearResourcesResponse.resourceArray;
}
- (TXPBResource*)resourceAtIndex:(NSUInteger)index {
  return [resultFetchNearResourcesResponse resourceAtIndex:index];
}
- (TXPBFetchNearResourcesResponseBuilder *)addResource:(TXPBResource*)value {
  if (resultFetchNearResourcesResponse.resourceArray == nil) {
    resultFetchNearResourcesResponse.resourceArray = [[NSMutableArray alloc]init];
  }
  [resultFetchNearResourcesResponse.resourceArray addObject:value];
  return self;
}
- (TXPBFetchNearResourcesResponseBuilder *)setResourceArray:(NSArray *)array {
  resultFetchNearResourcesResponse.resourceArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchNearResourcesResponseBuilder *)clearResource {
  resultFetchNearResourcesResponse.resourceArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchNearResourcesResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchNearResourcesResponse.hasMore;
}
- (TXPBFetchNearResourcesResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchNearResourcesResponse.hasHasMore = YES;
  resultFetchNearResourcesResponse.hasMore = value;
  return self;
}
- (TXPBFetchNearResourcesResponseBuilder*) clearHasMore {
  resultFetchNearResourcesResponse.hasHasMore = NO;
  resultFetchNearResourcesResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchResourcePicturesRequest ()
@property SInt64 resId;
@end

@implementation TXPBFetchResourcePicturesRequest

- (BOOL) hasResId {
  return !!hasResId_;
}
- (void) setHasResId:(BOOL) _value_ {
  hasResId_ = !!_value_;
}
@synthesize resId;
- (instancetype) init {
  if ((self = [super init])) {
    self.resId = 0L;
  }
  return self;
}
static TXPBFetchResourcePicturesRequest* defaultTXPBFetchResourcePicturesRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourcePicturesRequest class]) {
    defaultTXPBFetchResourcePicturesRequestInstance = [[TXPBFetchResourcePicturesRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourcePicturesRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourcePicturesRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResId) {
    [output writeInt64:1 value:self.resId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResId) {
    size_ += computeInt64Size(1, self.resId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourcePicturesRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchResourcePicturesRequest*)[[[TXPBFetchResourcePicturesRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchResourcePicturesRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourcePicturesRequest*)[[[TXPBFetchResourcePicturesRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourcePicturesRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourcePicturesRequest*)[[[TXPBFetchResourcePicturesRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourcePicturesRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourcePicturesRequest*)[[[TXPBFetchResourcePicturesRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourcePicturesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourcePicturesRequest*)[[[TXPBFetchResourcePicturesRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourcePicturesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourcePicturesRequest*)[[[TXPBFetchResourcePicturesRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourcePicturesRequestBuilder*) builder {
  return [[TXPBFetchResourcePicturesRequestBuilder alloc] init];
}
+ (TXPBFetchResourcePicturesRequestBuilder*) builderWithPrototype:(TXPBFetchResourcePicturesRequest*) prototype {
  return [[TXPBFetchResourcePicturesRequest builder] mergeFrom:prototype];
}
- (TXPBFetchResourcePicturesRequestBuilder*) builder {
  return [TXPBFetchResourcePicturesRequest builder];
}
- (TXPBFetchResourcePicturesRequestBuilder*) toBuilder {
  return [TXPBFetchResourcePicturesRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resId", [NSNumber numberWithLongLong:self.resId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.resId] forKey: @"resId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourcePicturesRequest class]]) {
    return NO;
  }
  TXPBFetchResourcePicturesRequest *otherMessage = other;
  return
      self.hasResId == otherMessage.hasResId &&
      (!self.hasResId || self.resId == otherMessage.resId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.resId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourcePicturesRequestBuilder()
@property (strong) TXPBFetchResourcePicturesRequest* resultFetchResourcePicturesRequest;
@end

@implementation TXPBFetchResourcePicturesRequestBuilder
@synthesize resultFetchResourcePicturesRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourcePicturesRequest = [[TXPBFetchResourcePicturesRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourcePicturesRequest;
}
- (TXPBFetchResourcePicturesRequestBuilder*) clear {
  self.resultFetchResourcePicturesRequest = [[TXPBFetchResourcePicturesRequest alloc] init];
  return self;
}
- (TXPBFetchResourcePicturesRequestBuilder*) clone {
  return [TXPBFetchResourcePicturesRequest builderWithPrototype:resultFetchResourcePicturesRequest];
}
- (TXPBFetchResourcePicturesRequest*) defaultInstance {
  return [TXPBFetchResourcePicturesRequest defaultInstance];
}
- (TXPBFetchResourcePicturesRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourcePicturesRequest*) buildPartial {
  TXPBFetchResourcePicturesRequest* returnMe = resultFetchResourcePicturesRequest;
  self.resultFetchResourcePicturesRequest = nil;
  return returnMe;
}
- (TXPBFetchResourcePicturesRequestBuilder*) mergeFrom:(TXPBFetchResourcePicturesRequest*) other {
  if (other == [TXPBFetchResourcePicturesRequest defaultInstance]) {
    return self;
  }
  if (other.hasResId) {
    [self setResId:other.resId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourcePicturesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourcePicturesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasResId {
  return resultFetchResourcePicturesRequest.hasResId;
}
- (SInt64) resId {
  return resultFetchResourcePicturesRequest.resId;
}
- (TXPBFetchResourcePicturesRequestBuilder*) setResId:(SInt64) value {
  resultFetchResourcePicturesRequest.hasResId = YES;
  resultFetchResourcePicturesRequest.resId = value;
  return self;
}
- (TXPBFetchResourcePicturesRequestBuilder*) clearResId {
  resultFetchResourcePicturesRequest.hasResId = NO;
  resultFetchResourcePicturesRequest.resId = 0L;
  return self;
}
@end

@interface TXPBFetchResourcePicturesResponse ()
@property (strong) NSMutableArray * picturesArray;
@end

@implementation TXPBFetchResourcePicturesResponse

@synthesize picturesArray;
@dynamic pictures;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchResourcePicturesResponse* defaultTXPBFetchResourcePicturesResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourcePicturesResponse class]) {
    defaultTXPBFetchResourcePicturesResponseInstance = [[TXPBFetchResourcePicturesResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourcePicturesResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourcePicturesResponseInstance;
}
- (NSArray *)pictures {
  return picturesArray;
}
- (NSString*)picturesAtIndex:(NSUInteger)index {
  return [picturesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.picturesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    [output writeString:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  {
    __block SInt32 dataSize = 0;
    const NSUInteger count = self.picturesArray.count;
    [self.picturesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
      dataSize += computeStringSizeNoTag(element);
    }];
    size_ += dataSize;
    size_ += (SInt32)(1 * count);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourcePicturesResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchResourcePicturesResponse*)[[[TXPBFetchResourcePicturesResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchResourcePicturesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourcePicturesResponse*)[[[TXPBFetchResourcePicturesResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourcePicturesResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourcePicturesResponse*)[[[TXPBFetchResourcePicturesResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourcePicturesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourcePicturesResponse*)[[[TXPBFetchResourcePicturesResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourcePicturesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourcePicturesResponse*)[[[TXPBFetchResourcePicturesResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourcePicturesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourcePicturesResponse*)[[[TXPBFetchResourcePicturesResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourcePicturesResponseBuilder*) builder {
  return [[TXPBFetchResourcePicturesResponseBuilder alloc] init];
}
+ (TXPBFetchResourcePicturesResponseBuilder*) builderWithPrototype:(TXPBFetchResourcePicturesResponse*) prototype {
  return [[TXPBFetchResourcePicturesResponse builder] mergeFrom:prototype];
}
- (TXPBFetchResourcePicturesResponseBuilder*) builder {
  return [TXPBFetchResourcePicturesResponse builder];
}
- (TXPBFetchResourcePicturesResponseBuilder*) toBuilder {
  return [TXPBFetchResourcePicturesResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.picturesArray enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pictures", obj];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [dictionary setObject:self.pictures forKey: @"pictures"];
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourcePicturesResponse class]]) {
    return NO;
  }
  TXPBFetchResourcePicturesResponse *otherMessage = other;
  return
      [self.picturesArray isEqualToArray:otherMessage.picturesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.picturesArray enumerateObjectsUsingBlock:^(NSString *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourcePicturesResponseBuilder()
@property (strong) TXPBFetchResourcePicturesResponse* resultFetchResourcePicturesResponse;
@end

@implementation TXPBFetchResourcePicturesResponseBuilder
@synthesize resultFetchResourcePicturesResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourcePicturesResponse = [[TXPBFetchResourcePicturesResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourcePicturesResponse;
}
- (TXPBFetchResourcePicturesResponseBuilder*) clear {
  self.resultFetchResourcePicturesResponse = [[TXPBFetchResourcePicturesResponse alloc] init];
  return self;
}
- (TXPBFetchResourcePicturesResponseBuilder*) clone {
  return [TXPBFetchResourcePicturesResponse builderWithPrototype:resultFetchResourcePicturesResponse];
}
- (TXPBFetchResourcePicturesResponse*) defaultInstance {
  return [TXPBFetchResourcePicturesResponse defaultInstance];
}
- (TXPBFetchResourcePicturesResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourcePicturesResponse*) buildPartial {
  TXPBFetchResourcePicturesResponse* returnMe = resultFetchResourcePicturesResponse;
  self.resultFetchResourcePicturesResponse = nil;
  return returnMe;
}
- (TXPBFetchResourcePicturesResponseBuilder*) mergeFrom:(TXPBFetchResourcePicturesResponse*) other {
  if (other == [TXPBFetchResourcePicturesResponse defaultInstance]) {
    return self;
  }
  if (other.picturesArray.count > 0) {
    if (resultFetchResourcePicturesResponse.picturesArray == nil) {
      resultFetchResourcePicturesResponse.picturesArray = [[NSMutableArray alloc] initWithArray:other.picturesArray];
    } else {
      [resultFetchResourcePicturesResponse.picturesArray addObjectsFromArray:other.picturesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourcePicturesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourcePicturesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addPictures:[input readString]];
        break;
      }
    }
  }
}
- (NSMutableArray *)pictures {
  return resultFetchResourcePicturesResponse.picturesArray;
}
- (NSString*)picturesAtIndex:(NSUInteger)index {
  return [resultFetchResourcePicturesResponse picturesAtIndex:index];
}
- (TXPBFetchResourcePicturesResponseBuilder *)addPictures:(NSString*)value {
  if (resultFetchResourcePicturesResponse.picturesArray == nil) {
    resultFetchResourcePicturesResponse.picturesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchResourcePicturesResponse.picturesArray addObject:value];
  return self;
}
- (TXPBFetchResourcePicturesResponseBuilder *)setPicturesArray:(NSArray *)array {
  resultFetchResourcePicturesResponse.picturesArray = [[NSMutableArray alloc] initWithArray:array];
  return self;
}
- (TXPBFetchResourcePicturesResponseBuilder *)clearPictures {
  resultFetchResourcePicturesResponse.picturesArray = nil;
  return self;
}
@end

@interface TXPBPlayResourceRequest ()
@property SInt64 resId;
@end

@implementation TXPBPlayResourceRequest

- (BOOL) hasResId {
  return !!hasResId_;
}
- (void) setHasResId:(BOOL) _value_ {
  hasResId_ = !!_value_;
}
@synthesize resId;
- (instancetype) init {
  if ((self = [super init])) {
    self.resId = 0L;
  }
  return self;
}
static TXPBPlayResourceRequest* defaultTXPBPlayResourceRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBPlayResourceRequest class]) {
    defaultTXPBPlayResourceRequestInstance = [[TXPBPlayResourceRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBPlayResourceRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBPlayResourceRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResId) {
    [output writeInt64:1 value:self.resId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResId) {
    size_ += computeInt64Size(1, self.resId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBPlayResourceRequest*) parseFromData:(NSData*) data {
  return (TXPBPlayResourceRequest*)[[[TXPBPlayResourceRequest builder] mergeFromData:data] build];
}
+ (TXPBPlayResourceRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayResourceRequest*)[[[TXPBPlayResourceRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayResourceRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBPlayResourceRequest*)[[[TXPBPlayResourceRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBPlayResourceRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayResourceRequest*)[[[TXPBPlayResourceRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBPlayResourceRequest*)[[[TXPBPlayResourceRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBPlayResourceRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBPlayResourceRequest*)[[[TXPBPlayResourceRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBPlayResourceRequestBuilder*) builder {
  return [[TXPBPlayResourceRequestBuilder alloc] init];
}
+ (TXPBPlayResourceRequestBuilder*) builderWithPrototype:(TXPBPlayResourceRequest*) prototype {
  return [[TXPBPlayResourceRequest builder] mergeFrom:prototype];
}
- (TXPBPlayResourceRequestBuilder*) builder {
  return [TXPBPlayResourceRequest builder];
}
- (TXPBPlayResourceRequestBuilder*) toBuilder {
  return [TXPBPlayResourceRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resId", [NSNumber numberWithLongLong:self.resId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.resId] forKey: @"resId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBPlayResourceRequest class]]) {
    return NO;
  }
  TXPBPlayResourceRequest *otherMessage = other;
  return
      self.hasResId == otherMessage.hasResId &&
      (!self.hasResId || self.resId == otherMessage.resId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.resId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBPlayResourceRequestBuilder()
@property (strong) TXPBPlayResourceRequest* resultPlayResourceRequest;
@end

@implementation TXPBPlayResourceRequestBuilder
@synthesize resultPlayResourceRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultPlayResourceRequest = [[TXPBPlayResourceRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultPlayResourceRequest;
}
- (TXPBPlayResourceRequestBuilder*) clear {
  self.resultPlayResourceRequest = [[TXPBPlayResourceRequest alloc] init];
  return self;
}
- (TXPBPlayResourceRequestBuilder*) clone {
  return [TXPBPlayResourceRequest builderWithPrototype:resultPlayResourceRequest];
}
- (TXPBPlayResourceRequest*) defaultInstance {
  return [TXPBPlayResourceRequest defaultInstance];
}
- (TXPBPlayResourceRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBPlayResourceRequest*) buildPartial {
  TXPBPlayResourceRequest* returnMe = resultPlayResourceRequest;
  self.resultPlayResourceRequest = nil;
  return returnMe;
}
- (TXPBPlayResourceRequestBuilder*) mergeFrom:(TXPBPlayResourceRequest*) other {
  if (other == [TXPBPlayResourceRequest defaultInstance]) {
    return self;
  }
  if (other.hasResId) {
    [self setResId:other.resId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBPlayResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBPlayResourceRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasResId {
  return resultPlayResourceRequest.hasResId;
}
- (SInt64) resId {
  return resultPlayResourceRequest.resId;
}
- (TXPBPlayResourceRequestBuilder*) setResId:(SInt64) value {
  resultPlayResourceRequest.hasResId = YES;
  resultPlayResourceRequest.resId = value;
  return self;
}
- (TXPBPlayResourceRequestBuilder*) clearResId {
  resultPlayResourceRequest.hasResId = NO;
  resultPlayResourceRequest.resId = 0L;
  return self;
}
@end

@interface TXPBFetchResourceByIdRequest ()
@property SInt64 resId;
@end

@implementation TXPBFetchResourceByIdRequest

- (BOOL) hasResId {
  return !!hasResId_;
}
- (void) setHasResId:(BOOL) _value_ {
  hasResId_ = !!_value_;
}
@synthesize resId;
- (instancetype) init {
  if ((self = [super init])) {
    self.resId = 0L;
  }
  return self;
}
static TXPBFetchResourceByIdRequest* defaultTXPBFetchResourceByIdRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByIdRequest class]) {
    defaultTXPBFetchResourceByIdRequestInstance = [[TXPBFetchResourceByIdRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByIdRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByIdRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResId) {
    [output writeInt64:1 value:self.resId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResId) {
    size_ += computeInt64Size(1, self.resId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByIdRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByIdRequest*)[[[TXPBFetchResourceByIdRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByIdRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByIdRequest*)[[[TXPBFetchResourceByIdRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByIdRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByIdRequest*)[[[TXPBFetchResourceByIdRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByIdRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByIdRequest*)[[[TXPBFetchResourceByIdRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByIdRequest*)[[[TXPBFetchResourceByIdRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByIdRequest*)[[[TXPBFetchResourceByIdRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByIdRequestBuilder*) builder {
  return [[TXPBFetchResourceByIdRequestBuilder alloc] init];
}
+ (TXPBFetchResourceByIdRequestBuilder*) builderWithPrototype:(TXPBFetchResourceByIdRequest*) prototype {
  return [[TXPBFetchResourceByIdRequest builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByIdRequestBuilder*) builder {
  return [TXPBFetchResourceByIdRequest builder];
}
- (TXPBFetchResourceByIdRequestBuilder*) toBuilder {
  return [TXPBFetchResourceByIdRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resId", [NSNumber numberWithLongLong:self.resId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.resId] forKey: @"resId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByIdRequest class]]) {
    return NO;
  }
  TXPBFetchResourceByIdRequest *otherMessage = other;
  return
      self.hasResId == otherMessage.hasResId &&
      (!self.hasResId || self.resId == otherMessage.resId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.resId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByIdRequestBuilder()
@property (strong) TXPBFetchResourceByIdRequest* resultFetchResourceByIdRequest;
@end

@implementation TXPBFetchResourceByIdRequestBuilder
@synthesize resultFetchResourceByIdRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByIdRequest = [[TXPBFetchResourceByIdRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByIdRequest;
}
- (TXPBFetchResourceByIdRequestBuilder*) clear {
  self.resultFetchResourceByIdRequest = [[TXPBFetchResourceByIdRequest alloc] init];
  return self;
}
- (TXPBFetchResourceByIdRequestBuilder*) clone {
  return [TXPBFetchResourceByIdRequest builderWithPrototype:resultFetchResourceByIdRequest];
}
- (TXPBFetchResourceByIdRequest*) defaultInstance {
  return [TXPBFetchResourceByIdRequest defaultInstance];
}
- (TXPBFetchResourceByIdRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByIdRequest*) buildPartial {
  TXPBFetchResourceByIdRequest* returnMe = resultFetchResourceByIdRequest;
  self.resultFetchResourceByIdRequest = nil;
  return returnMe;
}
- (TXPBFetchResourceByIdRequestBuilder*) mergeFrom:(TXPBFetchResourceByIdRequest*) other {
  if (other == [TXPBFetchResourceByIdRequest defaultInstance]) {
    return self;
  }
  if (other.hasResId) {
    [self setResId:other.resId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasResId {
  return resultFetchResourceByIdRequest.hasResId;
}
- (SInt64) resId {
  return resultFetchResourceByIdRequest.resId;
}
- (TXPBFetchResourceByIdRequestBuilder*) setResId:(SInt64) value {
  resultFetchResourceByIdRequest.hasResId = YES;
  resultFetchResourceByIdRequest.resId = value;
  return self;
}
- (TXPBFetchResourceByIdRequestBuilder*) clearResId {
  resultFetchResourceByIdRequest.hasResId = NO;
  resultFetchResourceByIdRequest.resId = 0L;
  return self;
}
@end

@interface TXPBFetchResourceByIdResponse ()
@property (strong) TXPBResource* resource;
@end

@implementation TXPBFetchResourceByIdResponse

- (BOOL) hasResource {
  return !!hasResource_;
}
- (void) setHasResource:(BOOL) _value_ {
  hasResource_ = !!_value_;
}
@synthesize resource;
- (instancetype) init {
  if ((self = [super init])) {
    self.resource = [TXPBResource defaultInstance];
  }
  return self;
}
static TXPBFetchResourceByIdResponse* defaultTXPBFetchResourceByIdResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchResourceByIdResponse class]) {
    defaultTXPBFetchResourceByIdResponseInstance = [[TXPBFetchResourceByIdResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByIdResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchResourceByIdResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasResource) {
    if (!self.resource.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResource) {
    [output writeMessage:1 value:self.resource];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasResource) {
    size_ += computeMessageSize(1, self.resource);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchResourceByIdResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchResourceByIdResponse*)[[[TXPBFetchResourceByIdResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchResourceByIdResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByIdResponse*)[[[TXPBFetchResourceByIdResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByIdResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchResourceByIdResponse*)[[[TXPBFetchResourceByIdResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchResourceByIdResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByIdResponse*)[[[TXPBFetchResourceByIdResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchResourceByIdResponse*)[[[TXPBFetchResourceByIdResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchResourceByIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchResourceByIdResponse*)[[[TXPBFetchResourceByIdResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchResourceByIdResponseBuilder*) builder {
  return [[TXPBFetchResourceByIdResponseBuilder alloc] init];
}
+ (TXPBFetchResourceByIdResponseBuilder*) builderWithPrototype:(TXPBFetchResourceByIdResponse*) prototype {
  return [[TXPBFetchResourceByIdResponse builder] mergeFrom:prototype];
}
- (TXPBFetchResourceByIdResponseBuilder*) builder {
  return [TXPBFetchResourceByIdResponse builder];
}
- (TXPBFetchResourceByIdResponseBuilder*) toBuilder {
  return [TXPBFetchResourceByIdResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasResource) {
    [output appendFormat:@"%@%@ {\n", indent, @"resource"];
    [self.resource writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasResource) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.resource storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"resource"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchResourceByIdResponse class]]) {
    return NO;
  }
  TXPBFetchResourceByIdResponse *otherMessage = other;
  return
      self.hasResource == otherMessage.hasResource &&
      (!self.hasResource || [self.resource isEqual:otherMessage.resource]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasResource) {
    hashCode = hashCode * 31 + [self.resource hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchResourceByIdResponseBuilder()
@property (strong) TXPBFetchResourceByIdResponse* resultFetchResourceByIdResponse;
@end

@implementation TXPBFetchResourceByIdResponseBuilder
@synthesize resultFetchResourceByIdResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchResourceByIdResponse = [[TXPBFetchResourceByIdResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchResourceByIdResponse;
}
- (TXPBFetchResourceByIdResponseBuilder*) clear {
  self.resultFetchResourceByIdResponse = [[TXPBFetchResourceByIdResponse alloc] init];
  return self;
}
- (TXPBFetchResourceByIdResponseBuilder*) clone {
  return [TXPBFetchResourceByIdResponse builderWithPrototype:resultFetchResourceByIdResponse];
}
- (TXPBFetchResourceByIdResponse*) defaultInstance {
  return [TXPBFetchResourceByIdResponse defaultInstance];
}
- (TXPBFetchResourceByIdResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchResourceByIdResponse*) buildPartial {
  TXPBFetchResourceByIdResponse* returnMe = resultFetchResourceByIdResponse;
  self.resultFetchResourceByIdResponse = nil;
  return returnMe;
}
- (TXPBFetchResourceByIdResponseBuilder*) mergeFrom:(TXPBFetchResourceByIdResponse*) other {
  if (other == [TXPBFetchResourceByIdResponse defaultInstance]) {
    return self;
  }
  if (other.hasResource) {
    [self mergeResource:other.resource];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchResourceByIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchResourceByIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBResourceBuilder* subBuilder = [TXPBResource builder];
        if (self.hasResource) {
          [subBuilder mergeFrom:self.resource];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setResource:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasResource {
  return resultFetchResourceByIdResponse.hasResource;
}
- (TXPBResource*) resource {
  return resultFetchResourceByIdResponse.resource;
}
- (TXPBFetchResourceByIdResponseBuilder*) setResource:(TXPBResource*) value {
  resultFetchResourceByIdResponse.hasResource = YES;
  resultFetchResourceByIdResponse.resource = value;
  return self;
}
- (TXPBFetchResourceByIdResponseBuilder*) setResourceBuilder:(TXPBResourceBuilder*) builderForValue {
  return [self setResource:[builderForValue build]];
}
- (TXPBFetchResourceByIdResponseBuilder*) mergeResource:(TXPBResource*) value {
  if (resultFetchResourceByIdResponse.hasResource &&
      resultFetchResourceByIdResponse.resource != [TXPBResource defaultInstance]) {
    resultFetchResourceByIdResponse.resource =
      [[[TXPBResource builderWithPrototype:resultFetchResourceByIdResponse.resource] mergeFrom:value] buildPartial];
  } else {
    resultFetchResourceByIdResponse.resource = value;
  }
  resultFetchResourceByIdResponse.hasResource = YES;
  return self;
}
- (TXPBFetchResourceByIdResponseBuilder*) clearResource {
  resultFetchResourceByIdResponse.hasResource = NO;
  resultFetchResourceByIdResponse.resource = [TXPBResource defaultInstance];
  return self;
}
@end

@interface TXPBFetchAlbumByIdRequest ()
@property SInt64 albumId;
@end

@implementation TXPBFetchAlbumByIdRequest

- (BOOL) hasAlbumId {
  return !!hasAlbumId_;
}
- (void) setHasAlbumId:(BOOL) _value_ {
  hasAlbumId_ = !!_value_;
}
@synthesize albumId;
- (instancetype) init {
  if ((self = [super init])) {
    self.albumId = 0L;
  }
  return self;
}
static TXPBFetchAlbumByIdRequest* defaultTXPBFetchAlbumByIdRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAlbumByIdRequest class]) {
    defaultTXPBFetchAlbumByIdRequestInstance = [[TXPBFetchAlbumByIdRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByIdRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByIdRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasAlbumId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAlbumId) {
    [output writeInt64:1 value:self.albumId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAlbumId) {
    size_ += computeInt64Size(1, self.albumId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAlbumByIdRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchAlbumByIdRequest*)[[[TXPBFetchAlbumByIdRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchAlbumByIdRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByIdRequest*)[[[TXPBFetchAlbumByIdRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByIdRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAlbumByIdRequest*)[[[TXPBFetchAlbumByIdRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAlbumByIdRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByIdRequest*)[[[TXPBFetchAlbumByIdRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAlbumByIdRequest*)[[[TXPBFetchAlbumByIdRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAlbumByIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByIdRequest*)[[[TXPBFetchAlbumByIdRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByIdRequestBuilder*) builder {
  return [[TXPBFetchAlbumByIdRequestBuilder alloc] init];
}
+ (TXPBFetchAlbumByIdRequestBuilder*) builderWithPrototype:(TXPBFetchAlbumByIdRequest*) prototype {
  return [[TXPBFetchAlbumByIdRequest builder] mergeFrom:prototype];
}
- (TXPBFetchAlbumByIdRequestBuilder*) builder {
  return [TXPBFetchAlbumByIdRequest builder];
}
- (TXPBFetchAlbumByIdRequestBuilder*) toBuilder {
  return [TXPBFetchAlbumByIdRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAlbumId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"albumId", [NSNumber numberWithLongLong:self.albumId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAlbumId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.albumId] forKey: @"albumId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAlbumByIdRequest class]]) {
    return NO;
  }
  TXPBFetchAlbumByIdRequest *otherMessage = other;
  return
      self.hasAlbumId == otherMessage.hasAlbumId &&
      (!self.hasAlbumId || self.albumId == otherMessage.albumId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAlbumId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.albumId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAlbumByIdRequestBuilder()
@property (strong) TXPBFetchAlbumByIdRequest* resultFetchAlbumByIdRequest;
@end

@implementation TXPBFetchAlbumByIdRequestBuilder
@synthesize resultFetchAlbumByIdRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAlbumByIdRequest = [[TXPBFetchAlbumByIdRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAlbumByIdRequest;
}
- (TXPBFetchAlbumByIdRequestBuilder*) clear {
  self.resultFetchAlbumByIdRequest = [[TXPBFetchAlbumByIdRequest alloc] init];
  return self;
}
- (TXPBFetchAlbumByIdRequestBuilder*) clone {
  return [TXPBFetchAlbumByIdRequest builderWithPrototype:resultFetchAlbumByIdRequest];
}
- (TXPBFetchAlbumByIdRequest*) defaultInstance {
  return [TXPBFetchAlbumByIdRequest defaultInstance];
}
- (TXPBFetchAlbumByIdRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAlbumByIdRequest*) buildPartial {
  TXPBFetchAlbumByIdRequest* returnMe = resultFetchAlbumByIdRequest;
  self.resultFetchAlbumByIdRequest = nil;
  return returnMe;
}
- (TXPBFetchAlbumByIdRequestBuilder*) mergeFrom:(TXPBFetchAlbumByIdRequest*) other {
  if (other == [TXPBFetchAlbumByIdRequest defaultInstance]) {
    return self;
  }
  if (other.hasAlbumId) {
    [self setAlbumId:other.albumId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAlbumByIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAlbumByIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setAlbumId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasAlbumId {
  return resultFetchAlbumByIdRequest.hasAlbumId;
}
- (SInt64) albumId {
  return resultFetchAlbumByIdRequest.albumId;
}
- (TXPBFetchAlbumByIdRequestBuilder*) setAlbumId:(SInt64) value {
  resultFetchAlbumByIdRequest.hasAlbumId = YES;
  resultFetchAlbumByIdRequest.albumId = value;
  return self;
}
- (TXPBFetchAlbumByIdRequestBuilder*) clearAlbumId {
  resultFetchAlbumByIdRequest.hasAlbumId = NO;
  resultFetchAlbumByIdRequest.albumId = 0L;
  return self;
}
@end

@interface TXPBFetchAlbumByIdResponse ()
@property (strong) TXPBAlbum* album;
@end

@implementation TXPBFetchAlbumByIdResponse

- (BOOL) hasAlbum {
  return !!hasAlbum_;
}
- (void) setHasAlbum:(BOOL) _value_ {
  hasAlbum_ = !!_value_;
}
@synthesize album;
- (instancetype) init {
  if ((self = [super init])) {
    self.album = [TXPBAlbum defaultInstance];
  }
  return self;
}
static TXPBFetchAlbumByIdResponse* defaultTXPBFetchAlbumByIdResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchAlbumByIdResponse class]) {
    defaultTXPBFetchAlbumByIdResponseInstance = [[TXPBFetchAlbumByIdResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByIdResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchAlbumByIdResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasAlbum) {
    if (!self.album.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasAlbum) {
    [output writeMessage:1 value:self.album];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasAlbum) {
    size_ += computeMessageSize(1, self.album);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchAlbumByIdResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchAlbumByIdResponse*)[[[TXPBFetchAlbumByIdResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchAlbumByIdResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByIdResponse*)[[[TXPBFetchAlbumByIdResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByIdResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchAlbumByIdResponse*)[[[TXPBFetchAlbumByIdResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchAlbumByIdResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByIdResponse*)[[[TXPBFetchAlbumByIdResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchAlbumByIdResponse*)[[[TXPBFetchAlbumByIdResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchAlbumByIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchAlbumByIdResponse*)[[[TXPBFetchAlbumByIdResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchAlbumByIdResponseBuilder*) builder {
  return [[TXPBFetchAlbumByIdResponseBuilder alloc] init];
}
+ (TXPBFetchAlbumByIdResponseBuilder*) builderWithPrototype:(TXPBFetchAlbumByIdResponse*) prototype {
  return [[TXPBFetchAlbumByIdResponse builder] mergeFrom:prototype];
}
- (TXPBFetchAlbumByIdResponseBuilder*) builder {
  return [TXPBFetchAlbumByIdResponse builder];
}
- (TXPBFetchAlbumByIdResponseBuilder*) toBuilder {
  return [TXPBFetchAlbumByIdResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasAlbum) {
    [output appendFormat:@"%@%@ {\n", indent, @"album"];
    [self.album writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasAlbum) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.album storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"album"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchAlbumByIdResponse class]]) {
    return NO;
  }
  TXPBFetchAlbumByIdResponse *otherMessage = other;
  return
      self.hasAlbum == otherMessage.hasAlbum &&
      (!self.hasAlbum || [self.album isEqual:otherMessage.album]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasAlbum) {
    hashCode = hashCode * 31 + [self.album hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchAlbumByIdResponseBuilder()
@property (strong) TXPBFetchAlbumByIdResponse* resultFetchAlbumByIdResponse;
@end

@implementation TXPBFetchAlbumByIdResponseBuilder
@synthesize resultFetchAlbumByIdResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchAlbumByIdResponse = [[TXPBFetchAlbumByIdResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchAlbumByIdResponse;
}
- (TXPBFetchAlbumByIdResponseBuilder*) clear {
  self.resultFetchAlbumByIdResponse = [[TXPBFetchAlbumByIdResponse alloc] init];
  return self;
}
- (TXPBFetchAlbumByIdResponseBuilder*) clone {
  return [TXPBFetchAlbumByIdResponse builderWithPrototype:resultFetchAlbumByIdResponse];
}
- (TXPBFetchAlbumByIdResponse*) defaultInstance {
  return [TXPBFetchAlbumByIdResponse defaultInstance];
}
- (TXPBFetchAlbumByIdResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchAlbumByIdResponse*) buildPartial {
  TXPBFetchAlbumByIdResponse* returnMe = resultFetchAlbumByIdResponse;
  self.resultFetchAlbumByIdResponse = nil;
  return returnMe;
}
- (TXPBFetchAlbumByIdResponseBuilder*) mergeFrom:(TXPBFetchAlbumByIdResponse*) other {
  if (other == [TXPBFetchAlbumByIdResponse defaultInstance]) {
    return self;
  }
  if (other.hasAlbum) {
    [self mergeAlbum:other.album];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchAlbumByIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchAlbumByIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBAlbumBuilder* subBuilder = [TXPBAlbum builder];
        if (self.hasAlbum) {
          [subBuilder mergeFrom:self.album];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setAlbum:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasAlbum {
  return resultFetchAlbumByIdResponse.hasAlbum;
}
- (TXPBAlbum*) album {
  return resultFetchAlbumByIdResponse.album;
}
- (TXPBFetchAlbumByIdResponseBuilder*) setAlbum:(TXPBAlbum*) value {
  resultFetchAlbumByIdResponse.hasAlbum = YES;
  resultFetchAlbumByIdResponse.album = value;
  return self;
}
- (TXPBFetchAlbumByIdResponseBuilder*) setAlbumBuilder:(TXPBAlbumBuilder*) builderForValue {
  return [self setAlbum:[builderForValue build]];
}
- (TXPBFetchAlbumByIdResponseBuilder*) mergeAlbum:(TXPBAlbum*) value {
  if (resultFetchAlbumByIdResponse.hasAlbum &&
      resultFetchAlbumByIdResponse.album != [TXPBAlbum defaultInstance]) {
    resultFetchAlbumByIdResponse.album =
      [[[TXPBAlbum builderWithPrototype:resultFetchAlbumByIdResponse.album] mergeFrom:value] buildPartial];
  } else {
    resultFetchAlbumByIdResponse.album = value;
  }
  resultFetchAlbumByIdResponse.hasAlbum = YES;
  return self;
}
- (TXPBFetchAlbumByIdResponseBuilder*) clearAlbum {
  resultFetchAlbumByIdResponse.hasAlbum = NO;
  resultFetchAlbumByIdResponse.album = [TXPBAlbum defaultInstance];
  return self;
}
@end

@interface TXPBFetchProviderByIdRequest ()
@property SInt64 providerId;
@end

@implementation TXPBFetchProviderByIdRequest

- (BOOL) hasProviderId {
  return !!hasProviderId_;
}
- (void) setHasProviderId:(BOOL) _value_ {
  hasProviderId_ = !!_value_;
}
@synthesize providerId;
- (instancetype) init {
  if ((self = [super init])) {
    self.providerId = 0L;
  }
  return self;
}
static TXPBFetchProviderByIdRequest* defaultTXPBFetchProviderByIdRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchProviderByIdRequest class]) {
    defaultTXPBFetchProviderByIdRequestInstance = [[TXPBFetchProviderByIdRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByIdRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByIdRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasProviderId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProviderId) {
    [output writeInt64:1 value:self.providerId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProviderId) {
    size_ += computeInt64Size(1, self.providerId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchProviderByIdRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchProviderByIdRequest*)[[[TXPBFetchProviderByIdRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchProviderByIdRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByIdRequest*)[[[TXPBFetchProviderByIdRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByIdRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchProviderByIdRequest*)[[[TXPBFetchProviderByIdRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchProviderByIdRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByIdRequest*)[[[TXPBFetchProviderByIdRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchProviderByIdRequest*)[[[TXPBFetchProviderByIdRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchProviderByIdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByIdRequest*)[[[TXPBFetchProviderByIdRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByIdRequestBuilder*) builder {
  return [[TXPBFetchProviderByIdRequestBuilder alloc] init];
}
+ (TXPBFetchProviderByIdRequestBuilder*) builderWithPrototype:(TXPBFetchProviderByIdRequest*) prototype {
  return [[TXPBFetchProviderByIdRequest builder] mergeFrom:prototype];
}
- (TXPBFetchProviderByIdRequestBuilder*) builder {
  return [TXPBFetchProviderByIdRequest builder];
}
- (TXPBFetchProviderByIdRequestBuilder*) toBuilder {
  return [TXPBFetchProviderByIdRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProviderId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"providerId", [NSNumber numberWithLongLong:self.providerId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProviderId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.providerId] forKey: @"providerId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchProviderByIdRequest class]]) {
    return NO;
  }
  TXPBFetchProviderByIdRequest *otherMessage = other;
  return
      self.hasProviderId == otherMessage.hasProviderId &&
      (!self.hasProviderId || self.providerId == otherMessage.providerId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProviderId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.providerId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchProviderByIdRequestBuilder()
@property (strong) TXPBFetchProviderByIdRequest* resultFetchProviderByIdRequest;
@end

@implementation TXPBFetchProviderByIdRequestBuilder
@synthesize resultFetchProviderByIdRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchProviderByIdRequest = [[TXPBFetchProviderByIdRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchProviderByIdRequest;
}
- (TXPBFetchProviderByIdRequestBuilder*) clear {
  self.resultFetchProviderByIdRequest = [[TXPBFetchProviderByIdRequest alloc] init];
  return self;
}
- (TXPBFetchProviderByIdRequestBuilder*) clone {
  return [TXPBFetchProviderByIdRequest builderWithPrototype:resultFetchProviderByIdRequest];
}
- (TXPBFetchProviderByIdRequest*) defaultInstance {
  return [TXPBFetchProviderByIdRequest defaultInstance];
}
- (TXPBFetchProviderByIdRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchProviderByIdRequest*) buildPartial {
  TXPBFetchProviderByIdRequest* returnMe = resultFetchProviderByIdRequest;
  self.resultFetchProviderByIdRequest = nil;
  return returnMe;
}
- (TXPBFetchProviderByIdRequestBuilder*) mergeFrom:(TXPBFetchProviderByIdRequest*) other {
  if (other == [TXPBFetchProviderByIdRequest defaultInstance]) {
    return self;
  }
  if (other.hasProviderId) {
    [self setProviderId:other.providerId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchProviderByIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchProviderByIdRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setProviderId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasProviderId {
  return resultFetchProviderByIdRequest.hasProviderId;
}
- (SInt64) providerId {
  return resultFetchProviderByIdRequest.providerId;
}
- (TXPBFetchProviderByIdRequestBuilder*) setProviderId:(SInt64) value {
  resultFetchProviderByIdRequest.hasProviderId = YES;
  resultFetchProviderByIdRequest.providerId = value;
  return self;
}
- (TXPBFetchProviderByIdRequestBuilder*) clearProviderId {
  resultFetchProviderByIdRequest.hasProviderId = NO;
  resultFetchProviderByIdRequest.providerId = 0L;
  return self;
}
@end

@interface TXPBFetchProviderByIdResponse ()
@property (strong) TXPBProvider* provider;
@end

@implementation TXPBFetchProviderByIdResponse

- (BOOL) hasProvider {
  return !!hasProvider_;
}
- (void) setHasProvider:(BOOL) _value_ {
  hasProvider_ = !!_value_;
}
@synthesize provider;
- (instancetype) init {
  if ((self = [super init])) {
    self.provider = [TXPBProvider defaultInstance];
  }
  return self;
}
static TXPBFetchProviderByIdResponse* defaultTXPBFetchProviderByIdResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchProviderByIdResponse class]) {
    defaultTXPBFetchProviderByIdResponseInstance = [[TXPBFetchProviderByIdResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByIdResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchProviderByIdResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasProvider) {
    if (!self.provider.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasProvider) {
    [output writeMessage:1 value:self.provider];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasProvider) {
    size_ += computeMessageSize(1, self.provider);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchProviderByIdResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchProviderByIdResponse*)[[[TXPBFetchProviderByIdResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchProviderByIdResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByIdResponse*)[[[TXPBFetchProviderByIdResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByIdResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchProviderByIdResponse*)[[[TXPBFetchProviderByIdResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchProviderByIdResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByIdResponse*)[[[TXPBFetchProviderByIdResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchProviderByIdResponse*)[[[TXPBFetchProviderByIdResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchProviderByIdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchProviderByIdResponse*)[[[TXPBFetchProviderByIdResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchProviderByIdResponseBuilder*) builder {
  return [[TXPBFetchProviderByIdResponseBuilder alloc] init];
}
+ (TXPBFetchProviderByIdResponseBuilder*) builderWithPrototype:(TXPBFetchProviderByIdResponse*) prototype {
  return [[TXPBFetchProviderByIdResponse builder] mergeFrom:prototype];
}
- (TXPBFetchProviderByIdResponseBuilder*) builder {
  return [TXPBFetchProviderByIdResponse builder];
}
- (TXPBFetchProviderByIdResponseBuilder*) toBuilder {
  return [TXPBFetchProviderByIdResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasProvider) {
    [output appendFormat:@"%@%@ {\n", indent, @"provider"];
    [self.provider writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasProvider) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.provider storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"provider"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchProviderByIdResponse class]]) {
    return NO;
  }
  TXPBFetchProviderByIdResponse *otherMessage = other;
  return
      self.hasProvider == otherMessage.hasProvider &&
      (!self.hasProvider || [self.provider isEqual:otherMessage.provider]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasProvider) {
    hashCode = hashCode * 31 + [self.provider hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchProviderByIdResponseBuilder()
@property (strong) TXPBFetchProviderByIdResponse* resultFetchProviderByIdResponse;
@end

@implementation TXPBFetchProviderByIdResponseBuilder
@synthesize resultFetchProviderByIdResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchProviderByIdResponse = [[TXPBFetchProviderByIdResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchProviderByIdResponse;
}
- (TXPBFetchProviderByIdResponseBuilder*) clear {
  self.resultFetchProviderByIdResponse = [[TXPBFetchProviderByIdResponse alloc] init];
  return self;
}
- (TXPBFetchProviderByIdResponseBuilder*) clone {
  return [TXPBFetchProviderByIdResponse builderWithPrototype:resultFetchProviderByIdResponse];
}
- (TXPBFetchProviderByIdResponse*) defaultInstance {
  return [TXPBFetchProviderByIdResponse defaultInstance];
}
- (TXPBFetchProviderByIdResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchProviderByIdResponse*) buildPartial {
  TXPBFetchProviderByIdResponse* returnMe = resultFetchProviderByIdResponse;
  self.resultFetchProviderByIdResponse = nil;
  return returnMe;
}
- (TXPBFetchProviderByIdResponseBuilder*) mergeFrom:(TXPBFetchProviderByIdResponse*) other {
  if (other == [TXPBFetchProviderByIdResponse defaultInstance]) {
    return self;
  }
  if (other.hasProvider) {
    [self mergeProvider:other.provider];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchProviderByIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchProviderByIdResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBProviderBuilder* subBuilder = [TXPBProvider builder];
        if (self.hasProvider) {
          [subBuilder mergeFrom:self.provider];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setProvider:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasProvider {
  return resultFetchProviderByIdResponse.hasProvider;
}
- (TXPBProvider*) provider {
  return resultFetchProviderByIdResponse.provider;
}
- (TXPBFetchProviderByIdResponseBuilder*) setProvider:(TXPBProvider*) value {
  resultFetchProviderByIdResponse.hasProvider = YES;
  resultFetchProviderByIdResponse.provider = value;
  return self;
}
- (TXPBFetchProviderByIdResponseBuilder*) setProviderBuilder:(TXPBProviderBuilder*) builderForValue {
  return [self setProvider:[builderForValue build]];
}
- (TXPBFetchProviderByIdResponseBuilder*) mergeProvider:(TXPBProvider*) value {
  if (resultFetchProviderByIdResponse.hasProvider &&
      resultFetchProviderByIdResponse.provider != [TXPBProvider defaultInstance]) {
    resultFetchProviderByIdResponse.provider =
      [[[TXPBProvider builderWithPrototype:resultFetchProviderByIdResponse.provider] mergeFrom:value] buildPartial];
  } else {
    resultFetchProviderByIdResponse.provider = value;
  }
  resultFetchProviderByIdResponse.hasProvider = YES;
  return self;
}
- (TXPBFetchProviderByIdResponseBuilder*) clearProvider {
  resultFetchProviderByIdResponse.hasProvider = NO;
  resultFetchProviderByIdResponse.provider = [TXPBProvider defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
