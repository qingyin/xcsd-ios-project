// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "TXPBJsb.pb.h"
// @@protoc_insertion_point(imports)

@implementation TXPBTxpbjsbRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [TXPBTxpbjsbRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ObjectivecDescriptorRoot registerAllExtensions:registry];
    [TXPBTxpbchatRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL TXPBTagTypeIsValidValue(TXPBTagType value) {
  switch (value) {
    case TXPBTagTypeTagQuestion:
    case TXPBTagTypeTagKnowledge:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBTagType(TXPBTagType value) {
  switch (value) {
    case TXPBTagTypeTagQuestion:
      return @"TXPBTagTypeTagQuestion";
    case TXPBTagTypeTagKnowledge:
      return @"TXPBTagTypeTagKnowledge";
    default:
      return nil;
  }
}

BOOL TXPBExpertTypeIsValidValue(TXPBExpertType value) {
  switch (value) {
    case TXPBExpertTypeAllTime:
    case TXPBExpertTypePartTime:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBExpertType(TXPBExpertType value) {
  switch (value) {
    case TXPBExpertTypeAllTime:
      return @"TXPBExpertTypeAllTime";
    case TXPBExpertTypePartTime:
      return @"TXPBExpertTypePartTime";
    default:
      return nil;
  }
}

BOOL TXPBKnowledegeContentTypeIsValidValue(TXPBKnowledegeContentType value) {
  switch (value) {
    case TXPBKnowledegeContentTypeKPlain:
    case TXPBKnowledegeContentTypeKPic:
    case TXPBKnowledegeContentTypeKVideo:
    case TXPBKnowledegeContentTypeKAll:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBKnowledegeContentType(TXPBKnowledegeContentType value) {
  switch (value) {
    case TXPBKnowledegeContentTypeKPlain:
      return @"TXPBKnowledegeContentTypeKPlain";
    case TXPBKnowledegeContentTypeKPic:
      return @"TXPBKnowledegeContentTypeKPic";
    case TXPBKnowledegeContentTypeKVideo:
      return @"TXPBKnowledegeContentTypeKVideo";
    case TXPBKnowledegeContentTypeKAll:
      return @"TXPBKnowledegeContentTypeKAll";
    default:
      return nil;
  }
}

BOOL TXPBCommunionObjTypeIsValidValue(TXPBCommunionObjType value) {
  switch (value) {
    case TXPBCommunionObjTypeTQuestion:
    case TXPBCommunionObjTypeTKnowledge:
    case TXPBCommunionObjTypeTExpert:
    case TXPBCommunionObjTypeTAnswer:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBCommunionObjType(TXPBCommunionObjType value) {
  switch (value) {
    case TXPBCommunionObjTypeTQuestion:
      return @"TXPBCommunionObjTypeTQuestion";
    case TXPBCommunionObjTypeTKnowledge:
      return @"TXPBCommunionObjTypeTKnowledge";
    case TXPBCommunionObjTypeTExpert:
      return @"TXPBCommunionObjTypeTExpert";
    case TXPBCommunionObjTypeTAnswer:
      return @"TXPBCommunionObjTypeTAnswer";
    default:
      return nil;
  }
}

BOOL TXPBCommunionActionIsValidValue(TXPBCommunionAction value) {
  switch (value) {
    case TXPBCommunionActionAAnswer:
    case TXPBCommunionActionAThank:
    case TXPBCommunionActionAFavorite:
    case TXPBCommunionActionAFollow:
    case TXPBCommunionActionAReply:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromTXPBCommunionAction(TXPBCommunionAction value) {
  switch (value) {
    case TXPBCommunionActionAAnswer:
      return @"TXPBCommunionActionAAnswer";
    case TXPBCommunionActionAThank:
      return @"TXPBCommunionActionAThank";
    case TXPBCommunionActionAFavorite:
      return @"TXPBCommunionActionAFavorite";
    case TXPBCommunionActionAFollow:
      return @"TXPBCommunionActionAFollow";
    case TXPBCommunionActionAReply:
      return @"TXPBCommunionActionAReply";
    default:
      return nil;
  }
}

@interface TXPBTag ()
@property SInt64 id;
@property (strong) NSString* name;
@property SInt64 parentId;
@property TXPBTagType type;
@end

@implementation TXPBTag

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasParentId {
  return !!hasParentId_;
}
- (void) setHasParentId:(BOOL) _value_ {
  hasParentId_ = !!_value_;
}
@synthesize parentId;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.parentId = 0L;
    self.type = TXPBTagTypeTagQuestion;
  }
  return self;
}
static TXPBTag* defaultTXPBTagInstance = nil;
+ (void) initialize {
  if (self == [TXPBTag class]) {
    defaultTXPBTagInstance = [[TXPBTag alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBTagInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBTagInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasParentId) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasParentId) {
    [output writeInt64:3 value:self.parentId];
  }
  if (self.hasType) {
    [output writeEnum:4 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasParentId) {
    size_ += computeInt64Size(3, self.parentId);
  }
  if (self.hasType) {
    size_ += computeEnumSize(4, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBTag*) parseFromData:(NSData*) data {
  return (TXPBTag*)[[[TXPBTag builder] mergeFromData:data] build];
}
+ (TXPBTag*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTag*)[[[TXPBTag builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBTag*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBTag*)[[[TXPBTag builder] mergeFromInputStream:input] build];
}
+ (TXPBTag*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTag*)[[[TXPBTag builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBTag*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBTag*)[[[TXPBTag builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBTag*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBTag*)[[[TXPBTag builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBTagBuilder*) builder {
  return [[TXPBTagBuilder alloc] init];
}
+ (TXPBTagBuilder*) builderWithPrototype:(TXPBTag*) prototype {
  return [[TXPBTag builder] mergeFrom:prototype];
}
- (TXPBTagBuilder*) builder {
  return [TXPBTag builder];
}
- (TXPBTagBuilder*) toBuilder {
  return [TXPBTag builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasParentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"parentId", [NSNumber numberWithLongLong:self.parentId]];
  }
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBTagType(self.type)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasParentId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.parentId] forKey: @"parentId"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBTag class]]) {
    return NO;
  }
  TXPBTag *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasParentId == otherMessage.hasParentId &&
      (!self.hasParentId || self.parentId == otherMessage.parentId) &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasParentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.parentId] hash];
  }
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBTagBuilder()
@property (strong) TXPBTag* resultTag;
@end

@implementation TXPBTagBuilder
@synthesize resultTag;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultTag = [[TXPBTag alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultTag;
}
- (TXPBTagBuilder*) clear {
  self.resultTag = [[TXPBTag alloc] init];
  return self;
}
- (TXPBTagBuilder*) clone {
  return [TXPBTag builderWithPrototype:resultTag];
}
- (TXPBTag*) defaultInstance {
  return [TXPBTag defaultInstance];
}
- (TXPBTag*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBTag*) buildPartial {
  TXPBTag* returnMe = resultTag;
  self.resultTag = nil;
  return returnMe;
}
- (TXPBTagBuilder*) mergeFrom:(TXPBTag*) other {
  if (other == [TXPBTag defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasParentId) {
    [self setParentId:other.parentId];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBTagBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBTagBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 24: {
        [self setParentId:[input readInt64]];
        break;
      }
      case 32: {
        TXPBTagType value = (TXPBTagType)[input readEnum];
        if (TXPBTagTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultTag.hasId;
}
- (SInt64) id {
  return resultTag.id;
}
- (TXPBTagBuilder*) setId:(SInt64) value {
  resultTag.hasId = YES;
  resultTag.id = value;
  return self;
}
- (TXPBTagBuilder*) clearId {
  resultTag.hasId = NO;
  resultTag.id = 0L;
  return self;
}
- (BOOL) hasName {
  return resultTag.hasName;
}
- (NSString*) name {
  return resultTag.name;
}
- (TXPBTagBuilder*) setName:(NSString*) value {
  resultTag.hasName = YES;
  resultTag.name = value;
  return self;
}
- (TXPBTagBuilder*) clearName {
  resultTag.hasName = NO;
  resultTag.name = @"";
  return self;
}
- (BOOL) hasParentId {
  return resultTag.hasParentId;
}
- (SInt64) parentId {
  return resultTag.parentId;
}
- (TXPBTagBuilder*) setParentId:(SInt64) value {
  resultTag.hasParentId = YES;
  resultTag.parentId = value;
  return self;
}
- (TXPBTagBuilder*) clearParentId {
  resultTag.hasParentId = NO;
  resultTag.parentId = 0L;
  return self;
}
- (BOOL) hasType {
  return resultTag.hasType;
}
- (TXPBTagType) type {
  return resultTag.type;
}
- (TXPBTagBuilder*) setType:(TXPBTagType) value {
  resultTag.hasType = YES;
  resultTag.type = value;
  return self;
}
- (TXPBTagBuilder*) clearType {
  resultTag.hasType = NO;
  resultTag.type = TXPBTagTypeTagQuestion;
  return self;
}
@end

@interface TXPBQuestion ()
@property SInt64 id;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property SInt64 authorId;
@property (strong) NSString* authorName;
@property (strong) NSString* authorAvatar;
@property BOOL anonymous;
@property SInt64 tagId;
@property (strong) NSString* tagName;
@property SInt32 replyNum;
@property SInt32 viewNum;
@property SInt32 followNum;
@property BOOL hasAnswered;
@property BOOL hasFollowed;
@property SInt64 createOn;
@property SInt64 updateOn;
@property (strong) NSMutableArray * attachesArray;
@end

@implementation TXPBQuestion

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasAuthorId {
  return !!hasAuthorId_;
}
- (void) setHasAuthorId:(BOOL) _value_ {
  hasAuthorId_ = !!_value_;
}
@synthesize authorId;
- (BOOL) hasAuthorName {
  return !!hasAuthorName_;
}
- (void) setHasAuthorName:(BOOL) _value_ {
  hasAuthorName_ = !!_value_;
}
@synthesize authorName;
- (BOOL) hasAuthorAvatar {
  return !!hasAuthorAvatar_;
}
- (void) setHasAuthorAvatar:(BOOL) _value_ {
  hasAuthorAvatar_ = !!_value_;
}
@synthesize authorAvatar;
- (BOOL) hasAnonymous {
  return !!hasAnonymous_;
}
- (void) setHasAnonymous:(BOOL) _value_ {
  hasAnonymous_ = !!_value_;
}
- (BOOL) anonymous {
  return !!anonymous_;
}
- (void) setAnonymous:(BOOL) _value_ {
  anonymous_ = !!_value_;
}
- (BOOL) hasTagId {
  return !!hasTagId_;
}
- (void) setHasTagId:(BOOL) _value_ {
  hasTagId_ = !!_value_;
}
@synthesize tagId;
- (BOOL) hasTagName {
  return !!hasTagName_;
}
- (void) setHasTagName:(BOOL) _value_ {
  hasTagName_ = !!_value_;
}
@synthesize tagName;
- (BOOL) hasReplyNum {
  return !!hasReplyNum_;
}
- (void) setHasReplyNum:(BOOL) _value_ {
  hasReplyNum_ = !!_value_;
}
@synthesize replyNum;
- (BOOL) hasViewNum {
  return !!hasViewNum_;
}
- (void) setHasViewNum:(BOOL) _value_ {
  hasViewNum_ = !!_value_;
}
@synthesize viewNum;
- (BOOL) hasFollowNum {
  return !!hasFollowNum_;
}
- (void) setHasFollowNum:(BOOL) _value_ {
  hasFollowNum_ = !!_value_;
}
@synthesize followNum;
- (BOOL) hasHasAnswered {
  return !!hasHasAnswered_;
}
- (void) setHasHasAnswered:(BOOL) _value_ {
  hasHasAnswered_ = !!_value_;
}
- (BOOL) hasAnswered {
  return !!hasAnswered_;
}
- (void) setHasAnswered:(BOOL) _value_ {
  hasAnswered_ = !!_value_;
}
- (BOOL) hasHasFollowed {
  return !!hasHasFollowed_;
}
- (void) setHasHasFollowed:(BOOL) _value_ {
  hasHasFollowed_ = !!_value_;
}
- (BOOL) hasFollowed {
  return !!hasFollowed_;
}
- (void) setHasFollowed:(BOOL) _value_ {
  hasFollowed_ = !!_value_;
}
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
@synthesize attachesArray;
@dynamic attaches;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.title = @"";
    self.content = @"";
    self.authorId = 0L;
    self.authorName = @"";
    self.authorAvatar = @"";
    self.anonymous = NO;
    self.tagId = 0L;
    self.tagName = @"";
    self.replyNum = 0;
    self.viewNum = 0;
    self.followNum = 0;
    self.hasAnswered = NO;
    self.hasFollowed = NO;
    self.createOn = 0L;
    self.updateOn = 0L;
  }
  return self;
}
static TXPBQuestion* defaultTXPBQuestionInstance = nil;
+ (void) initialize {
  if (self == [TXPBQuestion class]) {
    defaultTXPBQuestionInstance = [[TXPBQuestion alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBQuestionInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBQuestionInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasAuthorId) {
    return NO;
  }
  if (!self.hasAuthorName) {
    return NO;
  }
  if (!self.hasAnonymous) {
    return NO;
  }
  if (!self.hasTagId) {
    return NO;
  }
  if (!self.hasReplyNum) {
    return NO;
  }
  if (!self.hasViewNum) {
    return NO;
  }
  if (!self.hasFollowNum) {
    return NO;
  }
  if (!self.hasHasAnswered) {
    return NO;
  }
  if (!self.hasHasFollowed) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUpdateOn) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:3 value:self.content];
  }
  if (self.hasAuthorId) {
    [output writeInt64:4 value:self.authorId];
  }
  if (self.hasAuthorName) {
    [output writeString:5 value:self.authorName];
  }
  if (self.hasAuthorAvatar) {
    [output writeString:6 value:self.authorAvatar];
  }
  if (self.hasAnonymous) {
    [output writeBool:7 value:self.anonymous];
  }
  if (self.hasTagId) {
    [output writeInt64:8 value:self.tagId];
  }
  if (self.hasTagName) {
    [output writeString:9 value:self.tagName];
  }
  if (self.hasReplyNum) {
    [output writeInt32:10 value:self.replyNum];
  }
  if (self.hasViewNum) {
    [output writeInt32:11 value:self.viewNum];
  }
  if (self.hasFollowNum) {
    [output writeInt32:12 value:self.followNum];
  }
  if (self.hasHasAnswered) {
    [output writeBool:13 value:self.hasAnswered];
  }
  if (self.hasHasFollowed) {
    [output writeBool:14 value:self.hasFollowed];
  }
  if (self.hasCreateOn) {
    [output writeInt64:15 value:self.createOn];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:16 value:self.updateOn];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:17 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(2, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(3, self.content);
  }
  if (self.hasAuthorId) {
    size_ += computeInt64Size(4, self.authorId);
  }
  if (self.hasAuthorName) {
    size_ += computeStringSize(5, self.authorName);
  }
  if (self.hasAuthorAvatar) {
    size_ += computeStringSize(6, self.authorAvatar);
  }
  if (self.hasAnonymous) {
    size_ += computeBoolSize(7, self.anonymous);
  }
  if (self.hasTagId) {
    size_ += computeInt64Size(8, self.tagId);
  }
  if (self.hasTagName) {
    size_ += computeStringSize(9, self.tagName);
  }
  if (self.hasReplyNum) {
    size_ += computeInt32Size(10, self.replyNum);
  }
  if (self.hasViewNum) {
    size_ += computeInt32Size(11, self.viewNum);
  }
  if (self.hasFollowNum) {
    size_ += computeInt32Size(12, self.followNum);
  }
  if (self.hasHasAnswered) {
    size_ += computeBoolSize(13, self.hasAnswered);
  }
  if (self.hasHasFollowed) {
    size_ += computeBoolSize(14, self.hasFollowed);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(15, self.createOn);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(16, self.updateOn);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(17, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBQuestion*) parseFromData:(NSData*) data {
  return (TXPBQuestion*)[[[TXPBQuestion builder] mergeFromData:data] build];
}
+ (TXPBQuestion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBQuestion*)[[[TXPBQuestion builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBQuestion*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBQuestion*)[[[TXPBQuestion builder] mergeFromInputStream:input] build];
}
+ (TXPBQuestion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBQuestion*)[[[TXPBQuestion builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBQuestion*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBQuestion*)[[[TXPBQuestion builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBQuestion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBQuestion*)[[[TXPBQuestion builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBQuestionBuilder*) builder {
  return [[TXPBQuestionBuilder alloc] init];
}
+ (TXPBQuestionBuilder*) builderWithPrototype:(TXPBQuestion*) prototype {
  return [[TXPBQuestion builder] mergeFrom:prototype];
}
- (TXPBQuestionBuilder*) builder {
  return [TXPBQuestion builder];
}
- (TXPBQuestionBuilder*) toBuilder {
  return [TXPBQuestion builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasAuthorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorId", [NSNumber numberWithLongLong:self.authorId]];
  }
  if (self.hasAuthorName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorName", self.authorName];
  }
  if (self.hasAuthorAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorAvatar", self.authorAvatar];
  }
  if (self.hasAnonymous) {
    [output appendFormat:@"%@%@: %@\n", indent, @"anonymous", [NSNumber numberWithBool:self.anonymous]];
  }
  if (self.hasTagId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tagId", [NSNumber numberWithLongLong:self.tagId]];
  }
  if (self.hasTagName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tagName", self.tagName];
  }
  if (self.hasReplyNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyNum", [NSNumber numberWithInteger:self.replyNum]];
  }
  if (self.hasViewNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"viewNum", [NSNumber numberWithInteger:self.viewNum]];
  }
  if (self.hasFollowNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"followNum", [NSNumber numberWithInteger:self.followNum]];
  }
  if (self.hasHasAnswered) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasAnswered", [NSNumber numberWithBool:self.hasAnswered]];
  }
  if (self.hasHasFollowed) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasFollowed", [NSNumber numberWithBool:self.hasFollowed]];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasAuthorId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.authorId] forKey: @"authorId"];
  }
  if (self.hasAuthorName) {
    [dictionary setObject: self.authorName forKey: @"authorName"];
  }
  if (self.hasAuthorAvatar) {
    [dictionary setObject: self.authorAvatar forKey: @"authorAvatar"];
  }
  if (self.hasAnonymous) {
    [dictionary setObject: [NSNumber numberWithBool:self.anonymous] forKey: @"anonymous"];
  }
  if (self.hasTagId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.tagId] forKey: @"tagId"];
  }
  if (self.hasTagName) {
    [dictionary setObject: self.tagName forKey: @"tagName"];
  }
  if (self.hasReplyNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.replyNum] forKey: @"replyNum"];
  }
  if (self.hasViewNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.viewNum] forKey: @"viewNum"];
  }
  if (self.hasFollowNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.followNum] forKey: @"followNum"];
  }
  if (self.hasHasAnswered) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasAnswered] forKey: @"hasAnswered"];
  }
  if (self.hasHasFollowed) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasFollowed] forKey: @"hasFollowed"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBQuestion class]]) {
    return NO;
  }
  TXPBQuestion *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasAuthorId == otherMessage.hasAuthorId &&
      (!self.hasAuthorId || self.authorId == otherMessage.authorId) &&
      self.hasAuthorName == otherMessage.hasAuthorName &&
      (!self.hasAuthorName || [self.authorName isEqual:otherMessage.authorName]) &&
      self.hasAuthorAvatar == otherMessage.hasAuthorAvatar &&
      (!self.hasAuthorAvatar || [self.authorAvatar isEqual:otherMessage.authorAvatar]) &&
      self.hasAnonymous == otherMessage.hasAnonymous &&
      (!self.hasAnonymous || self.anonymous == otherMessage.anonymous) &&
      self.hasTagId == otherMessage.hasTagId &&
      (!self.hasTagId || self.tagId == otherMessage.tagId) &&
      self.hasTagName == otherMessage.hasTagName &&
      (!self.hasTagName || [self.tagName isEqual:otherMessage.tagName]) &&
      self.hasReplyNum == otherMessage.hasReplyNum &&
      (!self.hasReplyNum || self.replyNum == otherMessage.replyNum) &&
      self.hasViewNum == otherMessage.hasViewNum &&
      (!self.hasViewNum || self.viewNum == otherMessage.viewNum) &&
      self.hasFollowNum == otherMessage.hasFollowNum &&
      (!self.hasFollowNum || self.followNum == otherMessage.followNum) &&
      self.hasHasAnswered == otherMessage.hasHasAnswered &&
      (!self.hasHasAnswered || self.hasAnswered == otherMessage.hasAnswered) &&
      self.hasHasFollowed == otherMessage.hasHasFollowed &&
      (!self.hasHasFollowed || self.hasFollowed == otherMessage.hasFollowed) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasAuthorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.authorId] hash];
  }
  if (self.hasAuthorName) {
    hashCode = hashCode * 31 + [self.authorName hash];
  }
  if (self.hasAuthorAvatar) {
    hashCode = hashCode * 31 + [self.authorAvatar hash];
  }
  if (self.hasAnonymous) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.anonymous] hash];
  }
  if (self.hasTagId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.tagId] hash];
  }
  if (self.hasTagName) {
    hashCode = hashCode * 31 + [self.tagName hash];
  }
  if (self.hasReplyNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.replyNum] hash];
  }
  if (self.hasViewNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.viewNum] hash];
  }
  if (self.hasFollowNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.followNum] hash];
  }
  if (self.hasHasAnswered) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasAnswered] hash];
  }
  if (self.hasHasFollowed) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasFollowed] hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBQuestionBuilder()
@property (strong) TXPBQuestion* resultQuestion;
@end

@implementation TXPBQuestionBuilder
@synthesize resultQuestion;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultQuestion = [[TXPBQuestion alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultQuestion;
}
- (TXPBQuestionBuilder*) clear {
  self.resultQuestion = [[TXPBQuestion alloc] init];
  return self;
}
- (TXPBQuestionBuilder*) clone {
  return [TXPBQuestion builderWithPrototype:resultQuestion];
}
- (TXPBQuestion*) defaultInstance {
  return [TXPBQuestion defaultInstance];
}
- (TXPBQuestion*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBQuestion*) buildPartial {
  TXPBQuestion* returnMe = resultQuestion;
  self.resultQuestion = nil;
  return returnMe;
}
- (TXPBQuestionBuilder*) mergeFrom:(TXPBQuestion*) other {
  if (other == [TXPBQuestion defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasAuthorId) {
    [self setAuthorId:other.authorId];
  }
  if (other.hasAuthorName) {
    [self setAuthorName:other.authorName];
  }
  if (other.hasAuthorAvatar) {
    [self setAuthorAvatar:other.authorAvatar];
  }
  if (other.hasAnonymous) {
    [self setAnonymous:other.anonymous];
  }
  if (other.hasTagId) {
    [self setTagId:other.tagId];
  }
  if (other.hasTagName) {
    [self setTagName:other.tagName];
  }
  if (other.hasReplyNum) {
    [self setReplyNum:other.replyNum];
  }
  if (other.hasViewNum) {
    [self setViewNum:other.viewNum];
  }
  if (other.hasFollowNum) {
    [self setFollowNum:other.followNum];
  }
  if (other.hasHasAnswered) {
    [self setHasAnswered:other.hasAnswered];
  }
  if (other.hasHasFollowed) {
    [self setHasFollowed:other.hasFollowed];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.attachesArray.count > 0) {
    if (resultQuestion.attachesArray == nil) {
      resultQuestion.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultQuestion.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBQuestionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBQuestionBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 26: {
        [self setContent:[input readString]];
        break;
      }
      case 32: {
        [self setAuthorId:[input readInt64]];
        break;
      }
      case 42: {
        [self setAuthorName:[input readString]];
        break;
      }
      case 50: {
        [self setAuthorAvatar:[input readString]];
        break;
      }
      case 56: {
        [self setAnonymous:[input readBool]];
        break;
      }
      case 64: {
        [self setTagId:[input readInt64]];
        break;
      }
      case 74: {
        [self setTagName:[input readString]];
        break;
      }
      case 80: {
        [self setReplyNum:[input readInt32]];
        break;
      }
      case 88: {
        [self setViewNum:[input readInt32]];
        break;
      }
      case 96: {
        [self setFollowNum:[input readInt32]];
        break;
      }
      case 104: {
        [self setHasAnswered:[input readBool]];
        break;
      }
      case 112: {
        [self setHasFollowed:[input readBool]];
        break;
      }
      case 120: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 128: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 138: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultQuestion.hasId;
}
- (SInt64) id {
  return resultQuestion.id;
}
- (TXPBQuestionBuilder*) setId:(SInt64) value {
  resultQuestion.hasId = YES;
  resultQuestion.id = value;
  return self;
}
- (TXPBQuestionBuilder*) clearId {
  resultQuestion.hasId = NO;
  resultQuestion.id = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultQuestion.hasTitle;
}
- (NSString*) title {
  return resultQuestion.title;
}
- (TXPBQuestionBuilder*) setTitle:(NSString*) value {
  resultQuestion.hasTitle = YES;
  resultQuestion.title = value;
  return self;
}
- (TXPBQuestionBuilder*) clearTitle {
  resultQuestion.hasTitle = NO;
  resultQuestion.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultQuestion.hasContent;
}
- (NSString*) content {
  return resultQuestion.content;
}
- (TXPBQuestionBuilder*) setContent:(NSString*) value {
  resultQuestion.hasContent = YES;
  resultQuestion.content = value;
  return self;
}
- (TXPBQuestionBuilder*) clearContent {
  resultQuestion.hasContent = NO;
  resultQuestion.content = @"";
  return self;
}
- (BOOL) hasAuthorId {
  return resultQuestion.hasAuthorId;
}
- (SInt64) authorId {
  return resultQuestion.authorId;
}
- (TXPBQuestionBuilder*) setAuthorId:(SInt64) value {
  resultQuestion.hasAuthorId = YES;
  resultQuestion.authorId = value;
  return self;
}
- (TXPBQuestionBuilder*) clearAuthorId {
  resultQuestion.hasAuthorId = NO;
  resultQuestion.authorId = 0L;
  return self;
}
- (BOOL) hasAuthorName {
  return resultQuestion.hasAuthorName;
}
- (NSString*) authorName {
  return resultQuestion.authorName;
}
- (TXPBQuestionBuilder*) setAuthorName:(NSString*) value {
  resultQuestion.hasAuthorName = YES;
  resultQuestion.authorName = value;
  return self;
}
- (TXPBQuestionBuilder*) clearAuthorName {
  resultQuestion.hasAuthorName = NO;
  resultQuestion.authorName = @"";
  return self;
}
- (BOOL) hasAuthorAvatar {
  return resultQuestion.hasAuthorAvatar;
}
- (NSString*) authorAvatar {
  return resultQuestion.authorAvatar;
}
- (TXPBQuestionBuilder*) setAuthorAvatar:(NSString*) value {
  resultQuestion.hasAuthorAvatar = YES;
  resultQuestion.authorAvatar = value;
  return self;
}
- (TXPBQuestionBuilder*) clearAuthorAvatar {
  resultQuestion.hasAuthorAvatar = NO;
  resultQuestion.authorAvatar = @"";
  return self;
}
- (BOOL) hasAnonymous {
  return resultQuestion.hasAnonymous;
}
- (BOOL) anonymous {
  return resultQuestion.anonymous;
}
- (TXPBQuestionBuilder*) setAnonymous:(BOOL) value {
  resultQuestion.hasAnonymous = YES;
  resultQuestion.anonymous = value;
  return self;
}
- (TXPBQuestionBuilder*) clearAnonymous {
  resultQuestion.hasAnonymous = NO;
  resultQuestion.anonymous = NO;
  return self;
}
- (BOOL) hasTagId {
  return resultQuestion.hasTagId;
}
- (SInt64) tagId {
  return resultQuestion.tagId;
}
- (TXPBQuestionBuilder*) setTagId:(SInt64) value {
  resultQuestion.hasTagId = YES;
  resultQuestion.tagId = value;
  return self;
}
- (TXPBQuestionBuilder*) clearTagId {
  resultQuestion.hasTagId = NO;
  resultQuestion.tagId = 0L;
  return self;
}
- (BOOL) hasTagName {
  return resultQuestion.hasTagName;
}
- (NSString*) tagName {
  return resultQuestion.tagName;
}
- (TXPBQuestionBuilder*) setTagName:(NSString*) value {
  resultQuestion.hasTagName = YES;
  resultQuestion.tagName = value;
  return self;
}
- (TXPBQuestionBuilder*) clearTagName {
  resultQuestion.hasTagName = NO;
  resultQuestion.tagName = @"";
  return self;
}
- (BOOL) hasReplyNum {
  return resultQuestion.hasReplyNum;
}
- (SInt32) replyNum {
  return resultQuestion.replyNum;
}
- (TXPBQuestionBuilder*) setReplyNum:(SInt32) value {
  resultQuestion.hasReplyNum = YES;
  resultQuestion.replyNum = value;
  return self;
}
- (TXPBQuestionBuilder*) clearReplyNum {
  resultQuestion.hasReplyNum = NO;
  resultQuestion.replyNum = 0;
  return self;
}
- (BOOL) hasViewNum {
  return resultQuestion.hasViewNum;
}
- (SInt32) viewNum {
  return resultQuestion.viewNum;
}
- (TXPBQuestionBuilder*) setViewNum:(SInt32) value {
  resultQuestion.hasViewNum = YES;
  resultQuestion.viewNum = value;
  return self;
}
- (TXPBQuestionBuilder*) clearViewNum {
  resultQuestion.hasViewNum = NO;
  resultQuestion.viewNum = 0;
  return self;
}
- (BOOL) hasFollowNum {
  return resultQuestion.hasFollowNum;
}
- (SInt32) followNum {
  return resultQuestion.followNum;
}
- (TXPBQuestionBuilder*) setFollowNum:(SInt32) value {
  resultQuestion.hasFollowNum = YES;
  resultQuestion.followNum = value;
  return self;
}
- (TXPBQuestionBuilder*) clearFollowNum {
  resultQuestion.hasFollowNum = NO;
  resultQuestion.followNum = 0;
  return self;
}
- (BOOL) hasHasAnswered {
  return resultQuestion.hasHasAnswered;
}
- (BOOL) hasAnswered {
  return resultQuestion.hasAnswered;
}
- (TXPBQuestionBuilder*) setHasAnswered:(BOOL) value {
  resultQuestion.hasHasAnswered = YES;
  resultQuestion.hasAnswered = value;
  return self;
}
- (TXPBQuestionBuilder*) clearHasAnswered {
  resultQuestion.hasHasAnswered = NO;
  resultQuestion.hasAnswered = NO;
  return self;
}
- (BOOL) hasHasFollowed {
  return resultQuestion.hasHasFollowed;
}
- (BOOL) hasFollowed {
  return resultQuestion.hasFollowed;
}
- (TXPBQuestionBuilder*) setHasFollowed:(BOOL) value {
  resultQuestion.hasHasFollowed = YES;
  resultQuestion.hasFollowed = value;
  return self;
}
- (TXPBQuestionBuilder*) clearHasFollowed {
  resultQuestion.hasHasFollowed = NO;
  resultQuestion.hasFollowed = NO;
  return self;
}
- (BOOL) hasCreateOn {
  return resultQuestion.hasCreateOn;
}
- (SInt64) createOn {
  return resultQuestion.createOn;
}
- (TXPBQuestionBuilder*) setCreateOn:(SInt64) value {
  resultQuestion.hasCreateOn = YES;
  resultQuestion.createOn = value;
  return self;
}
- (TXPBQuestionBuilder*) clearCreateOn {
  resultQuestion.hasCreateOn = NO;
  resultQuestion.createOn = 0L;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultQuestion.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultQuestion.updateOn;
}
- (TXPBQuestionBuilder*) setUpdateOn:(SInt64) value {
  resultQuestion.hasUpdateOn = YES;
  resultQuestion.updateOn = value;
  return self;
}
- (TXPBQuestionBuilder*) clearUpdateOn {
  resultQuestion.hasUpdateOn = NO;
  resultQuestion.updateOn = 0L;
  return self;
}
- (NSMutableArray *)attaches {
  return resultQuestion.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultQuestion attachesAtIndex:index];
}
- (TXPBQuestionBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultQuestion.attachesArray == nil) {
    resultQuestion.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultQuestion.attachesArray addObject:value];
  return self;
}
- (TXPBQuestionBuilder *)setAttachesArray:(NSArray *)array {
  resultQuestion.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBQuestionBuilder *)clearAttaches {
  resultQuestion.attachesArray = nil;
  return self;
}
@end

@interface TXPBQuestionAnswer ()
@property SInt64 id;
@property SInt64 authorId;
@property (strong) NSString* authorName;
@property (strong) NSString* authorTitle;
@property (strong) NSString* authorAvatar;
@property TXPBUserType userType;
@property BOOL anonymous;
@property (strong) NSString* content;
@property SInt64 thankNum;
@property SInt64 replyNum;
@property SInt64 createOn;
@property SInt64 updateOn;
@property SInt64 questionId;
@property (strong) NSString* questionTitle;
@property (strong) NSMutableArray * attachesArray;
@property BOOL hasThanked;
@end

@implementation TXPBQuestionAnswer

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasAuthorId {
  return !!hasAuthorId_;
}
- (void) setHasAuthorId:(BOOL) _value_ {
  hasAuthorId_ = !!_value_;
}
@synthesize authorId;
- (BOOL) hasAuthorName {
  return !!hasAuthorName_;
}
- (void) setHasAuthorName:(BOOL) _value_ {
  hasAuthorName_ = !!_value_;
}
@synthesize authorName;
- (BOOL) hasAuthorTitle {
  return !!hasAuthorTitle_;
}
- (void) setHasAuthorTitle:(BOOL) _value_ {
  hasAuthorTitle_ = !!_value_;
}
@synthesize authorTitle;
- (BOOL) hasAuthorAvatar {
  return !!hasAuthorAvatar_;
}
- (void) setHasAuthorAvatar:(BOOL) _value_ {
  hasAuthorAvatar_ = !!_value_;
}
@synthesize authorAvatar;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) _value_ {
  hasUserType_ = !!_value_;
}
@synthesize userType;
- (BOOL) hasAnonymous {
  return !!hasAnonymous_;
}
- (void) setHasAnonymous:(BOOL) _value_ {
  hasAnonymous_ = !!_value_;
}
- (BOOL) anonymous {
  return !!anonymous_;
}
- (void) setAnonymous:(BOOL) _value_ {
  anonymous_ = !!_value_;
}
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasThankNum {
  return !!hasThankNum_;
}
- (void) setHasThankNum:(BOOL) _value_ {
  hasThankNum_ = !!_value_;
}
@synthesize thankNum;
- (BOOL) hasReplyNum {
  return !!hasReplyNum_;
}
- (void) setHasReplyNum:(BOOL) _value_ {
  hasReplyNum_ = !!_value_;
}
@synthesize replyNum;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
- (BOOL) hasQuestionId {
  return !!hasQuestionId_;
}
- (void) setHasQuestionId:(BOOL) _value_ {
  hasQuestionId_ = !!_value_;
}
@synthesize questionId;
- (BOOL) hasQuestionTitle {
  return !!hasQuestionTitle_;
}
- (void) setHasQuestionTitle:(BOOL) _value_ {
  hasQuestionTitle_ = !!_value_;
}
@synthesize questionTitle;
@synthesize attachesArray;
@dynamic attaches;
- (BOOL) hasHasThanked {
  return !!hasHasThanked_;
}
- (void) setHasHasThanked:(BOOL) _value_ {
  hasHasThanked_ = !!_value_;
}
- (BOOL) hasThanked {
  return !!hasThanked_;
}
- (void) setHasThanked:(BOOL) _value_ {
  hasThanked_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.authorId = 0L;
    self.authorName = @"";
    self.authorTitle = @"";
    self.authorAvatar = @"";
    self.userType = TXPBUserTypeChild;
    self.anonymous = NO;
    self.content = @"";
    self.thankNum = 0L;
    self.replyNum = 0L;
    self.createOn = 0L;
    self.updateOn = 0L;
    self.questionId = 0L;
    self.questionTitle = @"";
    self.hasThanked = NO;
  }
  return self;
}
static TXPBQuestionAnswer* defaultTXPBQuestionAnswerInstance = nil;
+ (void) initialize {
  if (self == [TXPBQuestionAnswer class]) {
    defaultTXPBQuestionAnswerInstance = [[TXPBQuestionAnswer alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBQuestionAnswerInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBQuestionAnswerInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasAuthorId) {
    return NO;
  }
  if (!self.hasAuthorName) {
    return NO;
  }
  if (!self.hasUserType) {
    return NO;
  }
  if (!self.hasAnonymous) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasThankNum) {
    return NO;
  }
  if (!self.hasReplyNum) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUpdateOn) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasAuthorId) {
    [output writeInt64:2 value:self.authorId];
  }
  if (self.hasAuthorName) {
    [output writeString:3 value:self.authorName];
  }
  if (self.hasAuthorTitle) {
    [output writeString:4 value:self.authorTitle];
  }
  if (self.hasAuthorAvatar) {
    [output writeString:5 value:self.authorAvatar];
  }
  if (self.hasUserType) {
    [output writeEnum:6 value:self.userType];
  }
  if (self.hasAnonymous) {
    [output writeBool:7 value:self.anonymous];
  }
  if (self.hasContent) {
    [output writeString:8 value:self.content];
  }
  if (self.hasThankNum) {
    [output writeInt64:9 value:self.thankNum];
  }
  if (self.hasReplyNum) {
    [output writeInt64:10 value:self.replyNum];
  }
  if (self.hasCreateOn) {
    [output writeInt64:11 value:self.createOn];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:12 value:self.updateOn];
  }
  if (self.hasQuestionId) {
    [output writeInt64:13 value:self.questionId];
  }
  if (self.hasQuestionTitle) {
    [output writeString:14 value:self.questionTitle];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:15 value:element];
  }];
  if (self.hasHasThanked) {
    [output writeBool:16 value:self.hasThanked];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasAuthorId) {
    size_ += computeInt64Size(2, self.authorId);
  }
  if (self.hasAuthorName) {
    size_ += computeStringSize(3, self.authorName);
  }
  if (self.hasAuthorTitle) {
    size_ += computeStringSize(4, self.authorTitle);
  }
  if (self.hasAuthorAvatar) {
    size_ += computeStringSize(5, self.authorAvatar);
  }
  if (self.hasUserType) {
    size_ += computeEnumSize(6, self.userType);
  }
  if (self.hasAnonymous) {
    size_ += computeBoolSize(7, self.anonymous);
  }
  if (self.hasContent) {
    size_ += computeStringSize(8, self.content);
  }
  if (self.hasThankNum) {
    size_ += computeInt64Size(9, self.thankNum);
  }
  if (self.hasReplyNum) {
    size_ += computeInt64Size(10, self.replyNum);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(11, self.createOn);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(12, self.updateOn);
  }
  if (self.hasQuestionId) {
    size_ += computeInt64Size(13, self.questionId);
  }
  if (self.hasQuestionTitle) {
    size_ += computeStringSize(14, self.questionTitle);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(15, element);
  }];
  if (self.hasHasThanked) {
    size_ += computeBoolSize(16, self.hasThanked);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBQuestionAnswer*) parseFromData:(NSData*) data {
  return (TXPBQuestionAnswer*)[[[TXPBQuestionAnswer builder] mergeFromData:data] build];
}
+ (TXPBQuestionAnswer*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBQuestionAnswer*)[[[TXPBQuestionAnswer builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBQuestionAnswer*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBQuestionAnswer*)[[[TXPBQuestionAnswer builder] mergeFromInputStream:input] build];
}
+ (TXPBQuestionAnswer*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBQuestionAnswer*)[[[TXPBQuestionAnswer builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBQuestionAnswer*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBQuestionAnswer*)[[[TXPBQuestionAnswer builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBQuestionAnswer*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBQuestionAnswer*)[[[TXPBQuestionAnswer builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBQuestionAnswerBuilder*) builder {
  return [[TXPBQuestionAnswerBuilder alloc] init];
}
+ (TXPBQuestionAnswerBuilder*) builderWithPrototype:(TXPBQuestionAnswer*) prototype {
  return [[TXPBQuestionAnswer builder] mergeFrom:prototype];
}
- (TXPBQuestionAnswerBuilder*) builder {
  return [TXPBQuestionAnswer builder];
}
- (TXPBQuestionAnswerBuilder*) toBuilder {
  return [TXPBQuestionAnswer builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasAuthorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorId", [NSNumber numberWithLongLong:self.authorId]];
  }
  if (self.hasAuthorName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorName", self.authorName];
  }
  if (self.hasAuthorTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorTitle", self.authorTitle];
  }
  if (self.hasAuthorAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorAvatar", self.authorAvatar];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userType", NSStringFromTXPBUserType(self.userType)];
  }
  if (self.hasAnonymous) {
    [output appendFormat:@"%@%@: %@\n", indent, @"anonymous", [NSNumber numberWithBool:self.anonymous]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasThankNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"thankNum", [NSNumber numberWithLongLong:self.thankNum]];
  }
  if (self.hasReplyNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyNum", [NSNumber numberWithLongLong:self.replyNum]];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  if (self.hasQuestionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questionId", [NSNumber numberWithLongLong:self.questionId]];
  }
  if (self.hasQuestionTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questionTitle", self.questionTitle];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasThanked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasThanked", [NSNumber numberWithBool:self.hasThanked]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasAuthorId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.authorId] forKey: @"authorId"];
  }
  if (self.hasAuthorName) {
    [dictionary setObject: self.authorName forKey: @"authorName"];
  }
  if (self.hasAuthorTitle) {
    [dictionary setObject: self.authorTitle forKey: @"authorTitle"];
  }
  if (self.hasAuthorAvatar) {
    [dictionary setObject: self.authorAvatar forKey: @"authorAvatar"];
  }
  if (self.hasUserType) {
    [dictionary setObject: @(self.userType) forKey: @"userType"];
  }
  if (self.hasAnonymous) {
    [dictionary setObject: [NSNumber numberWithBool:self.anonymous] forKey: @"anonymous"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasThankNum) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.thankNum] forKey: @"thankNum"];
  }
  if (self.hasReplyNum) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.replyNum] forKey: @"replyNum"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  if (self.hasQuestionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.questionId] forKey: @"questionId"];
  }
  if (self.hasQuestionTitle) {
    [dictionary setObject: self.questionTitle forKey: @"questionTitle"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  if (self.hasHasThanked) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasThanked] forKey: @"hasThanked"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBQuestionAnswer class]]) {
    return NO;
  }
  TXPBQuestionAnswer *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasAuthorId == otherMessage.hasAuthorId &&
      (!self.hasAuthorId || self.authorId == otherMessage.authorId) &&
      self.hasAuthorName == otherMessage.hasAuthorName &&
      (!self.hasAuthorName || [self.authorName isEqual:otherMessage.authorName]) &&
      self.hasAuthorTitle == otherMessage.hasAuthorTitle &&
      (!self.hasAuthorTitle || [self.authorTitle isEqual:otherMessage.authorTitle]) &&
      self.hasAuthorAvatar == otherMessage.hasAuthorAvatar &&
      (!self.hasAuthorAvatar || [self.authorAvatar isEqual:otherMessage.authorAvatar]) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      self.hasAnonymous == otherMessage.hasAnonymous &&
      (!self.hasAnonymous || self.anonymous == otherMessage.anonymous) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasThankNum == otherMessage.hasThankNum &&
      (!self.hasThankNum || self.thankNum == otherMessage.thankNum) &&
      self.hasReplyNum == otherMessage.hasReplyNum &&
      (!self.hasReplyNum || self.replyNum == otherMessage.replyNum) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      self.hasQuestionId == otherMessage.hasQuestionId &&
      (!self.hasQuestionId || self.questionId == otherMessage.questionId) &&
      self.hasQuestionTitle == otherMessage.hasQuestionTitle &&
      (!self.hasQuestionTitle || [self.questionTitle isEqual:otherMessage.questionTitle]) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      self.hasHasThanked == otherMessage.hasHasThanked &&
      (!self.hasHasThanked || self.hasThanked == otherMessage.hasThanked) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasAuthorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.authorId] hash];
  }
  if (self.hasAuthorName) {
    hashCode = hashCode * 31 + [self.authorName hash];
  }
  if (self.hasAuthorTitle) {
    hashCode = hashCode * 31 + [self.authorTitle hash];
  }
  if (self.hasAuthorAvatar) {
    hashCode = hashCode * 31 + [self.authorAvatar hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + self.userType;
  }
  if (self.hasAnonymous) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.anonymous] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasThankNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.thankNum] hash];
  }
  if (self.hasReplyNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.replyNum] hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  if (self.hasQuestionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.questionId] hash];
  }
  if (self.hasQuestionTitle) {
    hashCode = hashCode * 31 + [self.questionTitle hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasThanked) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasThanked] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBQuestionAnswerBuilder()
@property (strong) TXPBQuestionAnswer* resultQuestionAnswer;
@end

@implementation TXPBQuestionAnswerBuilder
@synthesize resultQuestionAnswer;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultQuestionAnswer = [[TXPBQuestionAnswer alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultQuestionAnswer;
}
- (TXPBQuestionAnswerBuilder*) clear {
  self.resultQuestionAnswer = [[TXPBQuestionAnswer alloc] init];
  return self;
}
- (TXPBQuestionAnswerBuilder*) clone {
  return [TXPBQuestionAnswer builderWithPrototype:resultQuestionAnswer];
}
- (TXPBQuestionAnswer*) defaultInstance {
  return [TXPBQuestionAnswer defaultInstance];
}
- (TXPBQuestionAnswer*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBQuestionAnswer*) buildPartial {
  TXPBQuestionAnswer* returnMe = resultQuestionAnswer;
  self.resultQuestionAnswer = nil;
  return returnMe;
}
- (TXPBQuestionAnswerBuilder*) mergeFrom:(TXPBQuestionAnswer*) other {
  if (other == [TXPBQuestionAnswer defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasAuthorId) {
    [self setAuthorId:other.authorId];
  }
  if (other.hasAuthorName) {
    [self setAuthorName:other.authorName];
  }
  if (other.hasAuthorTitle) {
    [self setAuthorTitle:other.authorTitle];
  }
  if (other.hasAuthorAvatar) {
    [self setAuthorAvatar:other.authorAvatar];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasAnonymous) {
    [self setAnonymous:other.anonymous];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasThankNum) {
    [self setThankNum:other.thankNum];
  }
  if (other.hasReplyNum) {
    [self setReplyNum:other.replyNum];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.hasQuestionId) {
    [self setQuestionId:other.questionId];
  }
  if (other.hasQuestionTitle) {
    [self setQuestionTitle:other.questionTitle];
  }
  if (other.attachesArray.count > 0) {
    if (resultQuestionAnswer.attachesArray == nil) {
      resultQuestionAnswer.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultQuestionAnswer.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  if (other.hasHasThanked) {
    [self setHasThanked:other.hasThanked];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBQuestionAnswerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBQuestionAnswerBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setAuthorId:[input readInt64]];
        break;
      }
      case 26: {
        [self setAuthorName:[input readString]];
        break;
      }
      case 34: {
        [self setAuthorTitle:[input readString]];
        break;
      }
      case 42: {
        [self setAuthorAvatar:[input readString]];
        break;
      }
      case 48: {
        TXPBUserType value = (TXPBUserType)[input readEnum];
        if (TXPBUserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 56: {
        [self setAnonymous:[input readBool]];
        break;
      }
      case 66: {
        [self setContent:[input readString]];
        break;
      }
      case 72: {
        [self setThankNum:[input readInt64]];
        break;
      }
      case 80: {
        [self setReplyNum:[input readInt64]];
        break;
      }
      case 88: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 96: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 104: {
        [self setQuestionId:[input readInt64]];
        break;
      }
      case 114: {
        [self setQuestionTitle:[input readString]];
        break;
      }
      case 122: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
      case 128: {
        [self setHasThanked:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultQuestionAnswer.hasId;
}
- (SInt64) id {
  return resultQuestionAnswer.id;
}
- (TXPBQuestionAnswerBuilder*) setId:(SInt64) value {
  resultQuestionAnswer.hasId = YES;
  resultQuestionAnswer.id = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearId {
  resultQuestionAnswer.hasId = NO;
  resultQuestionAnswer.id = 0L;
  return self;
}
- (BOOL) hasAuthorId {
  return resultQuestionAnswer.hasAuthorId;
}
- (SInt64) authorId {
  return resultQuestionAnswer.authorId;
}
- (TXPBQuestionAnswerBuilder*) setAuthorId:(SInt64) value {
  resultQuestionAnswer.hasAuthorId = YES;
  resultQuestionAnswer.authorId = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearAuthorId {
  resultQuestionAnswer.hasAuthorId = NO;
  resultQuestionAnswer.authorId = 0L;
  return self;
}
- (BOOL) hasAuthorName {
  return resultQuestionAnswer.hasAuthorName;
}
- (NSString*) authorName {
  return resultQuestionAnswer.authorName;
}
- (TXPBQuestionAnswerBuilder*) setAuthorName:(NSString*) value {
  resultQuestionAnswer.hasAuthorName = YES;
  resultQuestionAnswer.authorName = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearAuthorName {
  resultQuestionAnswer.hasAuthorName = NO;
  resultQuestionAnswer.authorName = @"";
  return self;
}
- (BOOL) hasAuthorTitle {
  return resultQuestionAnswer.hasAuthorTitle;
}
- (NSString*) authorTitle {
  return resultQuestionAnswer.authorTitle;
}
- (TXPBQuestionAnswerBuilder*) setAuthorTitle:(NSString*) value {
  resultQuestionAnswer.hasAuthorTitle = YES;
  resultQuestionAnswer.authorTitle = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearAuthorTitle {
  resultQuestionAnswer.hasAuthorTitle = NO;
  resultQuestionAnswer.authorTitle = @"";
  return self;
}
- (BOOL) hasAuthorAvatar {
  return resultQuestionAnswer.hasAuthorAvatar;
}
- (NSString*) authorAvatar {
  return resultQuestionAnswer.authorAvatar;
}
- (TXPBQuestionAnswerBuilder*) setAuthorAvatar:(NSString*) value {
  resultQuestionAnswer.hasAuthorAvatar = YES;
  resultQuestionAnswer.authorAvatar = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearAuthorAvatar {
  resultQuestionAnswer.hasAuthorAvatar = NO;
  resultQuestionAnswer.authorAvatar = @"";
  return self;
}
- (BOOL) hasUserType {
  return resultQuestionAnswer.hasUserType;
}
- (TXPBUserType) userType {
  return resultQuestionAnswer.userType;
}
- (TXPBQuestionAnswerBuilder*) setUserType:(TXPBUserType) value {
  resultQuestionAnswer.hasUserType = YES;
  resultQuestionAnswer.userType = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearUserType {
  resultQuestionAnswer.hasUserType = NO;
  resultQuestionAnswer.userType = TXPBUserTypeChild;
  return self;
}
- (BOOL) hasAnonymous {
  return resultQuestionAnswer.hasAnonymous;
}
- (BOOL) anonymous {
  return resultQuestionAnswer.anonymous;
}
- (TXPBQuestionAnswerBuilder*) setAnonymous:(BOOL) value {
  resultQuestionAnswer.hasAnonymous = YES;
  resultQuestionAnswer.anonymous = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearAnonymous {
  resultQuestionAnswer.hasAnonymous = NO;
  resultQuestionAnswer.anonymous = NO;
  return self;
}
- (BOOL) hasContent {
  return resultQuestionAnswer.hasContent;
}
- (NSString*) content {
  return resultQuestionAnswer.content;
}
- (TXPBQuestionAnswerBuilder*) setContent:(NSString*) value {
  resultQuestionAnswer.hasContent = YES;
  resultQuestionAnswer.content = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearContent {
  resultQuestionAnswer.hasContent = NO;
  resultQuestionAnswer.content = @"";
  return self;
}
- (BOOL) hasThankNum {
  return resultQuestionAnswer.hasThankNum;
}
- (SInt64) thankNum {
  return resultQuestionAnswer.thankNum;
}
- (TXPBQuestionAnswerBuilder*) setThankNum:(SInt64) value {
  resultQuestionAnswer.hasThankNum = YES;
  resultQuestionAnswer.thankNum = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearThankNum {
  resultQuestionAnswer.hasThankNum = NO;
  resultQuestionAnswer.thankNum = 0L;
  return self;
}
- (BOOL) hasReplyNum {
  return resultQuestionAnswer.hasReplyNum;
}
- (SInt64) replyNum {
  return resultQuestionAnswer.replyNum;
}
- (TXPBQuestionAnswerBuilder*) setReplyNum:(SInt64) value {
  resultQuestionAnswer.hasReplyNum = YES;
  resultQuestionAnswer.replyNum = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearReplyNum {
  resultQuestionAnswer.hasReplyNum = NO;
  resultQuestionAnswer.replyNum = 0L;
  return self;
}
- (BOOL) hasCreateOn {
  return resultQuestionAnswer.hasCreateOn;
}
- (SInt64) createOn {
  return resultQuestionAnswer.createOn;
}
- (TXPBQuestionAnswerBuilder*) setCreateOn:(SInt64) value {
  resultQuestionAnswer.hasCreateOn = YES;
  resultQuestionAnswer.createOn = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearCreateOn {
  resultQuestionAnswer.hasCreateOn = NO;
  resultQuestionAnswer.createOn = 0L;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultQuestionAnswer.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultQuestionAnswer.updateOn;
}
- (TXPBQuestionAnswerBuilder*) setUpdateOn:(SInt64) value {
  resultQuestionAnswer.hasUpdateOn = YES;
  resultQuestionAnswer.updateOn = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearUpdateOn {
  resultQuestionAnswer.hasUpdateOn = NO;
  resultQuestionAnswer.updateOn = 0L;
  return self;
}
- (BOOL) hasQuestionId {
  return resultQuestionAnswer.hasQuestionId;
}
- (SInt64) questionId {
  return resultQuestionAnswer.questionId;
}
- (TXPBQuestionAnswerBuilder*) setQuestionId:(SInt64) value {
  resultQuestionAnswer.hasQuestionId = YES;
  resultQuestionAnswer.questionId = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearQuestionId {
  resultQuestionAnswer.hasQuestionId = NO;
  resultQuestionAnswer.questionId = 0L;
  return self;
}
- (BOOL) hasQuestionTitle {
  return resultQuestionAnswer.hasQuestionTitle;
}
- (NSString*) questionTitle {
  return resultQuestionAnswer.questionTitle;
}
- (TXPBQuestionAnswerBuilder*) setQuestionTitle:(NSString*) value {
  resultQuestionAnswer.hasQuestionTitle = YES;
  resultQuestionAnswer.questionTitle = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearQuestionTitle {
  resultQuestionAnswer.hasQuestionTitle = NO;
  resultQuestionAnswer.questionTitle = @"";
  return self;
}
- (NSMutableArray *)attaches {
  return resultQuestionAnswer.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultQuestionAnswer attachesAtIndex:index];
}
- (TXPBQuestionAnswerBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultQuestionAnswer.attachesArray == nil) {
    resultQuestionAnswer.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultQuestionAnswer.attachesArray addObject:value];
  return self;
}
- (TXPBQuestionAnswerBuilder *)setAttachesArray:(NSArray *)array {
  resultQuestionAnswer.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBQuestionAnswerBuilder *)clearAttaches {
  resultQuestionAnswer.attachesArray = nil;
  return self;
}
- (BOOL) hasHasThanked {
  return resultQuestionAnswer.hasHasThanked;
}
- (BOOL) hasThanked {
  return resultQuestionAnswer.hasThanked;
}
- (TXPBQuestionAnswerBuilder*) setHasThanked:(BOOL) value {
  resultQuestionAnswer.hasHasThanked = YES;
  resultQuestionAnswer.hasThanked = value;
  return self;
}
- (TXPBQuestionAnswerBuilder*) clearHasThanked {
  resultQuestionAnswer.hasHasThanked = NO;
  resultQuestionAnswer.hasThanked = NO;
  return self;
}
@end

@interface TXPBExpert ()
@property SInt64 id;
@property (strong) NSString* name;
@property (strong) NSString* title;
@property (strong) NSString* avatar;
@property (strong) NSString* pb_description;
@property (strong) NSMutableArray * specialitiesArray;
@property TXPBExpertType type;
@property SInt32 followNum;
@property SInt32 thankNum;
@property SInt32 answerNum;
@property SInt32 knowledgeNum;
@property SInt64 rank;
@property (strong) NSString* rankBanner;
@property (strong) NSString* sign;
@property BOOL hasFollowed;
@end

@implementation TXPBExpert

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) _value_ {
  hasName_ = !!_value_;
}
@synthesize name;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasAvatar {
  return !!hasAvatar_;
}
- (void) setHasAvatar:(BOOL) _value_ {
  hasAvatar_ = !!_value_;
}
@synthesize avatar;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) _value_ {
  hasDescription_ = !!_value_;
}
@synthesize pb_description;
@synthesize specialitiesArray;
@dynamic specialities;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (BOOL) hasFollowNum {
  return !!hasFollowNum_;
}
- (void) setHasFollowNum:(BOOL) _value_ {
  hasFollowNum_ = !!_value_;
}
@synthesize followNum;
- (BOOL) hasThankNum {
  return !!hasThankNum_;
}
- (void) setHasThankNum:(BOOL) _value_ {
  hasThankNum_ = !!_value_;
}
@synthesize thankNum;
- (BOOL) hasAnswerNum {
  return !!hasAnswerNum_;
}
- (void) setHasAnswerNum:(BOOL) _value_ {
  hasAnswerNum_ = !!_value_;
}
@synthesize answerNum;
- (BOOL) hasKnowledgeNum {
  return !!hasKnowledgeNum_;
}
- (void) setHasKnowledgeNum:(BOOL) _value_ {
  hasKnowledgeNum_ = !!_value_;
}
@synthesize knowledgeNum;
- (BOOL) hasRank {
  return !!hasRank_;
}
- (void) setHasRank:(BOOL) _value_ {
  hasRank_ = !!_value_;
}
@synthesize rank;
- (BOOL) hasRankBanner {
  return !!hasRankBanner_;
}
- (void) setHasRankBanner:(BOOL) _value_ {
  hasRankBanner_ = !!_value_;
}
@synthesize rankBanner;
- (BOOL) hasSign {
  return !!hasSign_;
}
- (void) setHasSign:(BOOL) _value_ {
  hasSign_ = !!_value_;
}
@synthesize sign;
- (BOOL) hasHasFollowed {
  return !!hasHasFollowed_;
}
- (void) setHasHasFollowed:(BOOL) _value_ {
  hasHasFollowed_ = !!_value_;
}
- (BOOL) hasFollowed {
  return !!hasFollowed_;
}
- (void) setHasFollowed:(BOOL) _value_ {
  hasFollowed_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.name = @"";
    self.title = @"";
    self.avatar = @"";
    self.pb_description = @"";
    self.type = TXPBExpertTypeAllTime;
    self.followNum = 0;
    self.thankNum = 0;
    self.answerNum = 0;
    self.knowledgeNum = 0;
    self.rank = 0L;
    self.rankBanner = @"";
    self.sign = @"";
    self.hasFollowed = NO;
  }
  return self;
}
static TXPBExpert* defaultTXPBExpertInstance = nil;
+ (void) initialize {
  if (self == [TXPBExpert class]) {
    defaultTXPBExpertInstance = [[TXPBExpert alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBExpertInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBExpertInstance;
}
- (NSArray *)specialities {
  return specialitiesArray;
}
- (TXPBTag*)specialitiesAtIndex:(NSUInteger)index {
  return [specialitiesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasName) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasFollowNum) {
    return NO;
  }
  if (!self.hasThankNum) {
    return NO;
  }
  if (!self.hasAnswerNum) {
    return NO;
  }
  if (!self.hasKnowledgeNum) {
    return NO;
  }
  __block BOOL isInitspecialities = YES;
   [self.specialities enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitspecialities = NO;
      *stop = YES;
    }
  }];
  if (!isInitspecialities) return isInitspecialities;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasName) {
    [output writeString:2 value:self.name];
  }
  if (self.hasTitle) {
    [output writeString:3 value:self.title];
  }
  if (self.hasAvatar) {
    [output writeString:4 value:self.avatar];
  }
  if (self.hasDescription) {
    [output writeString:5 value:self.pb_description];
  }
  [self.specialitiesArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  if (self.hasType) {
    [output writeEnum:7 value:self.type];
  }
  if (self.hasFollowNum) {
    [output writeInt32:8 value:self.followNum];
  }
  if (self.hasThankNum) {
    [output writeInt32:9 value:self.thankNum];
  }
  if (self.hasAnswerNum) {
    [output writeInt32:10 value:self.answerNum];
  }
  if (self.hasKnowledgeNum) {
    [output writeInt32:11 value:self.knowledgeNum];
  }
  if (self.hasRank) {
    [output writeInt64:12 value:self.rank];
  }
  if (self.hasRankBanner) {
    [output writeString:13 value:self.rankBanner];
  }
  if (self.hasSign) {
    [output writeString:14 value:self.sign];
  }
  if (self.hasHasFollowed) {
    [output writeBool:15 value:self.hasFollowed];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasName) {
    size_ += computeStringSize(2, self.name);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(3, self.title);
  }
  if (self.hasAvatar) {
    size_ += computeStringSize(4, self.avatar);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(5, self.pb_description);
  }
  [self.specialitiesArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  if (self.hasType) {
    size_ += computeEnumSize(7, self.type);
  }
  if (self.hasFollowNum) {
    size_ += computeInt32Size(8, self.followNum);
  }
  if (self.hasThankNum) {
    size_ += computeInt32Size(9, self.thankNum);
  }
  if (self.hasAnswerNum) {
    size_ += computeInt32Size(10, self.answerNum);
  }
  if (self.hasKnowledgeNum) {
    size_ += computeInt32Size(11, self.knowledgeNum);
  }
  if (self.hasRank) {
    size_ += computeInt64Size(12, self.rank);
  }
  if (self.hasRankBanner) {
    size_ += computeStringSize(13, self.rankBanner);
  }
  if (self.hasSign) {
    size_ += computeStringSize(14, self.sign);
  }
  if (self.hasHasFollowed) {
    size_ += computeBoolSize(15, self.hasFollowed);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBExpert*) parseFromData:(NSData*) data {
  return (TXPBExpert*)[[[TXPBExpert builder] mergeFromData:data] build];
}
+ (TXPBExpert*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBExpert*)[[[TXPBExpert builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBExpert*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBExpert*)[[[TXPBExpert builder] mergeFromInputStream:input] build];
}
+ (TXPBExpert*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBExpert*)[[[TXPBExpert builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBExpert*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBExpert*)[[[TXPBExpert builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBExpert*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBExpert*)[[[TXPBExpert builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBExpertBuilder*) builder {
  return [[TXPBExpertBuilder alloc] init];
}
+ (TXPBExpertBuilder*) builderWithPrototype:(TXPBExpert*) prototype {
  return [[TXPBExpert builder] mergeFrom:prototype];
}
- (TXPBExpertBuilder*) builder {
  return [TXPBExpert builder];
}
- (TXPBExpertBuilder*) toBuilder {
  return [TXPBExpert builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"name", self.name];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"avatar", self.avatar];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_description", self.pb_description];
  }
  [self.specialitiesArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"specialities"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBExpertType(self.type)];
  }
  if (self.hasFollowNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"followNum", [NSNumber numberWithInteger:self.followNum]];
  }
  if (self.hasThankNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"thankNum", [NSNumber numberWithInteger:self.thankNum]];
  }
  if (self.hasAnswerNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"answerNum", [NSNumber numberWithInteger:self.answerNum]];
  }
  if (self.hasKnowledgeNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"knowledgeNum", [NSNumber numberWithInteger:self.knowledgeNum]];
  }
  if (self.hasRank) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rank", [NSNumber numberWithLongLong:self.rank]];
  }
  if (self.hasRankBanner) {
    [output appendFormat:@"%@%@: %@\n", indent, @"rankBanner", self.rankBanner];
  }
  if (self.hasSign) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sign", self.sign];
  }
  if (self.hasHasFollowed) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasFollowed", [NSNumber numberWithBool:self.hasFollowed]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasName) {
    [dictionary setObject: self.name forKey: @"name"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasAvatar) {
    [dictionary setObject: self.avatar forKey: @"avatar"];
  }
  if (self.hasDescription) {
    [dictionary setObject: self.pb_description forKey: @"pb_description"];
  }
  for (TXPBTag* element in self.specialitiesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"specialities"];
  }
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  if (self.hasFollowNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.followNum] forKey: @"followNum"];
  }
  if (self.hasThankNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.thankNum] forKey: @"thankNum"];
  }
  if (self.hasAnswerNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.answerNum] forKey: @"answerNum"];
  }
  if (self.hasKnowledgeNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.knowledgeNum] forKey: @"knowledgeNum"];
  }
  if (self.hasRank) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.rank] forKey: @"rank"];
  }
  if (self.hasRankBanner) {
    [dictionary setObject: self.rankBanner forKey: @"rankBanner"];
  }
  if (self.hasSign) {
    [dictionary setObject: self.sign forKey: @"sign"];
  }
  if (self.hasHasFollowed) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasFollowed] forKey: @"hasFollowed"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBExpert class]]) {
    return NO;
  }
  TXPBExpert *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasName == otherMessage.hasName &&
      (!self.hasName || [self.name isEqual:otherMessage.name]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasAvatar == otherMessage.hasAvatar &&
      (!self.hasAvatar || [self.avatar isEqual:otherMessage.avatar]) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.pb_description isEqual:otherMessage.pb_description]) &&
      [self.specialitiesArray isEqualToArray:otherMessage.specialitiesArray] &&
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      self.hasFollowNum == otherMessage.hasFollowNum &&
      (!self.hasFollowNum || self.followNum == otherMessage.followNum) &&
      self.hasThankNum == otherMessage.hasThankNum &&
      (!self.hasThankNum || self.thankNum == otherMessage.thankNum) &&
      self.hasAnswerNum == otherMessage.hasAnswerNum &&
      (!self.hasAnswerNum || self.answerNum == otherMessage.answerNum) &&
      self.hasKnowledgeNum == otherMessage.hasKnowledgeNum &&
      (!self.hasKnowledgeNum || self.knowledgeNum == otherMessage.knowledgeNum) &&
      self.hasRank == otherMessage.hasRank &&
      (!self.hasRank || self.rank == otherMessage.rank) &&
      self.hasRankBanner == otherMessage.hasRankBanner &&
      (!self.hasRankBanner || [self.rankBanner isEqual:otherMessage.rankBanner]) &&
      self.hasSign == otherMessage.hasSign &&
      (!self.hasSign || [self.sign isEqual:otherMessage.sign]) &&
      self.hasHasFollowed == otherMessage.hasHasFollowed &&
      (!self.hasHasFollowed || self.hasFollowed == otherMessage.hasFollowed) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasName) {
    hashCode = hashCode * 31 + [self.name hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasAvatar) {
    hashCode = hashCode * 31 + [self.avatar hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.pb_description hash];
  }
  [self.specialitiesArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  if (self.hasFollowNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.followNum] hash];
  }
  if (self.hasThankNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.thankNum] hash];
  }
  if (self.hasAnswerNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.answerNum] hash];
  }
  if (self.hasKnowledgeNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.knowledgeNum] hash];
  }
  if (self.hasRank) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.rank] hash];
  }
  if (self.hasRankBanner) {
    hashCode = hashCode * 31 + [self.rankBanner hash];
  }
  if (self.hasSign) {
    hashCode = hashCode * 31 + [self.sign hash];
  }
  if (self.hasHasFollowed) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasFollowed] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBExpertBuilder()
@property (strong) TXPBExpert* resultExpert;
@end

@implementation TXPBExpertBuilder
@synthesize resultExpert;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultExpert = [[TXPBExpert alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultExpert;
}
- (TXPBExpertBuilder*) clear {
  self.resultExpert = [[TXPBExpert alloc] init];
  return self;
}
- (TXPBExpertBuilder*) clone {
  return [TXPBExpert builderWithPrototype:resultExpert];
}
- (TXPBExpert*) defaultInstance {
  return [TXPBExpert defaultInstance];
}
- (TXPBExpert*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBExpert*) buildPartial {
  TXPBExpert* returnMe = resultExpert;
  self.resultExpert = nil;
  return returnMe;
}
- (TXPBExpertBuilder*) mergeFrom:(TXPBExpert*) other {
  if (other == [TXPBExpert defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasAvatar) {
    [self setAvatar:other.avatar];
  }
  if (other.hasDescription) {
    [self setDescription:other.pb_description];
  }
  if (other.specialitiesArray.count > 0) {
    if (resultExpert.specialitiesArray == nil) {
      resultExpert.specialitiesArray = [[NSMutableArray alloc] initWithArray:other.specialitiesArray];
    } else {
      [resultExpert.specialitiesArray addObjectsFromArray:other.specialitiesArray];
    }
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasFollowNum) {
    [self setFollowNum:other.followNum];
  }
  if (other.hasThankNum) {
    [self setThankNum:other.thankNum];
  }
  if (other.hasAnswerNum) {
    [self setAnswerNum:other.answerNum];
  }
  if (other.hasKnowledgeNum) {
    [self setKnowledgeNum:other.knowledgeNum];
  }
  if (other.hasRank) {
    [self setRank:other.rank];
  }
  if (other.hasRankBanner) {
    [self setRankBanner:other.rankBanner];
  }
  if (other.hasSign) {
    [self setSign:other.sign];
  }
  if (other.hasHasFollowed) {
    [self setHasFollowed:other.hasFollowed];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBExpertBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBExpertBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setName:[input readString]];
        break;
      }
      case 26: {
        [self setTitle:[input readString]];
        break;
      }
      case 34: {
        [self setAvatar:[input readString]];
        break;
      }
      case 42: {
        [self setDescription:[input readString]];
        break;
      }
      case 50: {
        TXPBTagBuilder* subBuilder = [TXPBTag builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSpecialities:[subBuilder buildPartial]];
        break;
      }
      case 56: {
        TXPBExpertType value = (TXPBExpertType)[input readEnum];
        if (TXPBExpertTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 64: {
        [self setFollowNum:[input readInt32]];
        break;
      }
      case 72: {
        [self setThankNum:[input readInt32]];
        break;
      }
      case 80: {
        [self setAnswerNum:[input readInt32]];
        break;
      }
      case 88: {
        [self setKnowledgeNum:[input readInt32]];
        break;
      }
      case 96: {
        [self setRank:[input readInt64]];
        break;
      }
      case 106: {
        [self setRankBanner:[input readString]];
        break;
      }
      case 114: {
        [self setSign:[input readString]];
        break;
      }
      case 120: {
        [self setHasFollowed:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultExpert.hasId;
}
- (SInt64) id {
  return resultExpert.id;
}
- (TXPBExpertBuilder*) setId:(SInt64) value {
  resultExpert.hasId = YES;
  resultExpert.id = value;
  return self;
}
- (TXPBExpertBuilder*) clearId {
  resultExpert.hasId = NO;
  resultExpert.id = 0L;
  return self;
}
- (BOOL) hasName {
  return resultExpert.hasName;
}
- (NSString*) name {
  return resultExpert.name;
}
- (TXPBExpertBuilder*) setName:(NSString*) value {
  resultExpert.hasName = YES;
  resultExpert.name = value;
  return self;
}
- (TXPBExpertBuilder*) clearName {
  resultExpert.hasName = NO;
  resultExpert.name = @"";
  return self;
}
- (BOOL) hasTitle {
  return resultExpert.hasTitle;
}
- (NSString*) title {
  return resultExpert.title;
}
- (TXPBExpertBuilder*) setTitle:(NSString*) value {
  resultExpert.hasTitle = YES;
  resultExpert.title = value;
  return self;
}
- (TXPBExpertBuilder*) clearTitle {
  resultExpert.hasTitle = NO;
  resultExpert.title = @"";
  return self;
}
- (BOOL) hasAvatar {
  return resultExpert.hasAvatar;
}
- (NSString*) avatar {
  return resultExpert.avatar;
}
- (TXPBExpertBuilder*) setAvatar:(NSString*) value {
  resultExpert.hasAvatar = YES;
  resultExpert.avatar = value;
  return self;
}
- (TXPBExpertBuilder*) clearAvatar {
  resultExpert.hasAvatar = NO;
  resultExpert.avatar = @"";
  return self;
}
- (BOOL) hasDescription {
  return resultExpert.hasDescription;
}
- (NSString*) pb_description {
  return resultExpert.pb_description;
}
- (TXPBExpertBuilder*) setDescription:(NSString*) value {
  resultExpert.hasDescription = YES;
  resultExpert.pb_description = value;
  return self;
}
- (TXPBExpertBuilder*) clearDescription {
  resultExpert.hasDescription = NO;
  resultExpert.pb_description = @"";
  return self;
}
- (NSMutableArray *)specialities {
  return resultExpert.specialitiesArray;
}
- (TXPBTag*)specialitiesAtIndex:(NSUInteger)index {
  return [resultExpert specialitiesAtIndex:index];
}
- (TXPBExpertBuilder *)addSpecialities:(TXPBTag*)value {
  if (resultExpert.specialitiesArray == nil) {
    resultExpert.specialitiesArray = [[NSMutableArray alloc]init];
  }
  [resultExpert.specialitiesArray addObject:value];
  return self;
}
- (TXPBExpertBuilder *)setSpecialitiesArray:(NSArray *)array {
  resultExpert.specialitiesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBExpertBuilder *)clearSpecialities {
  resultExpert.specialitiesArray = nil;
  return self;
}
- (BOOL) hasType {
  return resultExpert.hasType;
}
- (TXPBExpertType) type {
  return resultExpert.type;
}
- (TXPBExpertBuilder*) setType:(TXPBExpertType) value {
  resultExpert.hasType = YES;
  resultExpert.type = value;
  return self;
}
- (TXPBExpertBuilder*) clearType {
  resultExpert.hasType = NO;
  resultExpert.type = TXPBExpertTypeAllTime;
  return self;
}
- (BOOL) hasFollowNum {
  return resultExpert.hasFollowNum;
}
- (SInt32) followNum {
  return resultExpert.followNum;
}
- (TXPBExpertBuilder*) setFollowNum:(SInt32) value {
  resultExpert.hasFollowNum = YES;
  resultExpert.followNum = value;
  return self;
}
- (TXPBExpertBuilder*) clearFollowNum {
  resultExpert.hasFollowNum = NO;
  resultExpert.followNum = 0;
  return self;
}
- (BOOL) hasThankNum {
  return resultExpert.hasThankNum;
}
- (SInt32) thankNum {
  return resultExpert.thankNum;
}
- (TXPBExpertBuilder*) setThankNum:(SInt32) value {
  resultExpert.hasThankNum = YES;
  resultExpert.thankNum = value;
  return self;
}
- (TXPBExpertBuilder*) clearThankNum {
  resultExpert.hasThankNum = NO;
  resultExpert.thankNum = 0;
  return self;
}
- (BOOL) hasAnswerNum {
  return resultExpert.hasAnswerNum;
}
- (SInt32) answerNum {
  return resultExpert.answerNum;
}
- (TXPBExpertBuilder*) setAnswerNum:(SInt32) value {
  resultExpert.hasAnswerNum = YES;
  resultExpert.answerNum = value;
  return self;
}
- (TXPBExpertBuilder*) clearAnswerNum {
  resultExpert.hasAnswerNum = NO;
  resultExpert.answerNum = 0;
  return self;
}
- (BOOL) hasKnowledgeNum {
  return resultExpert.hasKnowledgeNum;
}
- (SInt32) knowledgeNum {
  return resultExpert.knowledgeNum;
}
- (TXPBExpertBuilder*) setKnowledgeNum:(SInt32) value {
  resultExpert.hasKnowledgeNum = YES;
  resultExpert.knowledgeNum = value;
  return self;
}
- (TXPBExpertBuilder*) clearKnowledgeNum {
  resultExpert.hasKnowledgeNum = NO;
  resultExpert.knowledgeNum = 0;
  return self;
}
- (BOOL) hasRank {
  return resultExpert.hasRank;
}
- (SInt64) rank {
  return resultExpert.rank;
}
- (TXPBExpertBuilder*) setRank:(SInt64) value {
  resultExpert.hasRank = YES;
  resultExpert.rank = value;
  return self;
}
- (TXPBExpertBuilder*) clearRank {
  resultExpert.hasRank = NO;
  resultExpert.rank = 0L;
  return self;
}
- (BOOL) hasRankBanner {
  return resultExpert.hasRankBanner;
}
- (NSString*) rankBanner {
  return resultExpert.rankBanner;
}
- (TXPBExpertBuilder*) setRankBanner:(NSString*) value {
  resultExpert.hasRankBanner = YES;
  resultExpert.rankBanner = value;
  return self;
}
- (TXPBExpertBuilder*) clearRankBanner {
  resultExpert.hasRankBanner = NO;
  resultExpert.rankBanner = @"";
  return self;
}
- (BOOL) hasSign {
  return resultExpert.hasSign;
}
- (NSString*) sign {
  return resultExpert.sign;
}
- (TXPBExpertBuilder*) setSign:(NSString*) value {
  resultExpert.hasSign = YES;
  resultExpert.sign = value;
  return self;
}
- (TXPBExpertBuilder*) clearSign {
  resultExpert.hasSign = NO;
  resultExpert.sign = @"";
  return self;
}
- (BOOL) hasHasFollowed {
  return resultExpert.hasHasFollowed;
}
- (BOOL) hasFollowed {
  return resultExpert.hasFollowed;
}
- (TXPBExpertBuilder*) setHasFollowed:(BOOL) value {
  resultExpert.hasHasFollowed = YES;
  resultExpert.hasFollowed = value;
  return self;
}
- (TXPBExpertBuilder*) clearHasFollowed {
  resultExpert.hasHasFollowed = NO;
  resultExpert.hasFollowed = NO;
  return self;
}
@end

@interface TXPBFetchTagsRequest ()
@property TXPBTagType type;
@end

@implementation TXPBFetchTagsRequest

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) _value_ {
  hasType_ = !!_value_;
}
@synthesize type;
- (instancetype) init {
  if ((self = [super init])) {
    self.type = TXPBTagTypeTagQuestion;
  }
  return self;
}
static TXPBFetchTagsRequest* defaultTXPBFetchTagsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchTagsRequest class]) {
    defaultTXPBFetchTagsRequestInstance = [[TXPBFetchTagsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchTagsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchTagsRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeEnum:1 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasType) {
    size_ += computeEnumSize(1, self.type);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchTagsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchTagsRequest*)[[[TXPBFetchTagsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchTagsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchTagsRequest*)[[[TXPBFetchTagsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchTagsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchTagsRequest*)[[[TXPBFetchTagsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchTagsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchTagsRequest*)[[[TXPBFetchTagsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchTagsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchTagsRequest*)[[[TXPBFetchTagsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchTagsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchTagsRequest*)[[[TXPBFetchTagsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchTagsRequestBuilder*) builder {
  return [[TXPBFetchTagsRequestBuilder alloc] init];
}
+ (TXPBFetchTagsRequestBuilder*) builderWithPrototype:(TXPBFetchTagsRequest*) prototype {
  return [[TXPBFetchTagsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchTagsRequestBuilder*) builder {
  return [TXPBFetchTagsRequest builder];
}
- (TXPBFetchTagsRequestBuilder*) toBuilder {
  return [TXPBFetchTagsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"type", NSStringFromTXPBTagType(self.type)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasType) {
    [dictionary setObject: @(self.type) forKey: @"type"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchTagsRequest class]]) {
    return NO;
  }
  TXPBFetchTagsRequest *otherMessage = other;
  return
      self.hasType == otherMessage.hasType &&
      (!self.hasType || self.type == otherMessage.type) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasType) {
    hashCode = hashCode * 31 + self.type;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchTagsRequestBuilder()
@property (strong) TXPBFetchTagsRequest* resultFetchTagsRequest;
@end

@implementation TXPBFetchTagsRequestBuilder
@synthesize resultFetchTagsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchTagsRequest = [[TXPBFetchTagsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchTagsRequest;
}
- (TXPBFetchTagsRequestBuilder*) clear {
  self.resultFetchTagsRequest = [[TXPBFetchTagsRequest alloc] init];
  return self;
}
- (TXPBFetchTagsRequestBuilder*) clone {
  return [TXPBFetchTagsRequest builderWithPrototype:resultFetchTagsRequest];
}
- (TXPBFetchTagsRequest*) defaultInstance {
  return [TXPBFetchTagsRequest defaultInstance];
}
- (TXPBFetchTagsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchTagsRequest*) buildPartial {
  TXPBFetchTagsRequest* returnMe = resultFetchTagsRequest;
  self.resultFetchTagsRequest = nil;
  return returnMe;
}
- (TXPBFetchTagsRequestBuilder*) mergeFrom:(TXPBFetchTagsRequest*) other {
  if (other == [TXPBFetchTagsRequest defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchTagsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchTagsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        TXPBTagType value = (TXPBTagType)[input readEnum];
        if (TXPBTagTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return resultFetchTagsRequest.hasType;
}
- (TXPBTagType) type {
  return resultFetchTagsRequest.type;
}
- (TXPBFetchTagsRequestBuilder*) setType:(TXPBTagType) value {
  resultFetchTagsRequest.hasType = YES;
  resultFetchTagsRequest.type = value;
  return self;
}
- (TXPBFetchTagsRequestBuilder*) clearType {
  resultFetchTagsRequest.hasType = NO;
  resultFetchTagsRequest.type = TXPBTagTypeTagQuestion;
  return self;
}
@end

@interface TXPBFetchTagsResponse ()
@property (strong) NSMutableArray * tagsArray;
@end

@implementation TXPBFetchTagsResponse

@synthesize tagsArray;
@dynamic tags;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchTagsResponse* defaultTXPBFetchTagsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchTagsResponse class]) {
    defaultTXPBFetchTagsResponseInstance = [[TXPBFetchTagsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchTagsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchTagsResponseInstance;
}
- (NSArray *)tags {
  return tagsArray;
}
- (TXPBTag*)tagsAtIndex:(NSUInteger)index {
  return [tagsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInittags = YES;
   [self.tags enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInittags = NO;
      *stop = YES;
    }
  }];
  if (!isInittags) return isInittags;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchTagsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchTagsResponse*)[[[TXPBFetchTagsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchTagsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchTagsResponse*)[[[TXPBFetchTagsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchTagsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchTagsResponse*)[[[TXPBFetchTagsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchTagsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchTagsResponse*)[[[TXPBFetchTagsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchTagsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchTagsResponse*)[[[TXPBFetchTagsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchTagsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchTagsResponse*)[[[TXPBFetchTagsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchTagsResponseBuilder*) builder {
  return [[TXPBFetchTagsResponseBuilder alloc] init];
}
+ (TXPBFetchTagsResponseBuilder*) builderWithPrototype:(TXPBFetchTagsResponse*) prototype {
  return [[TXPBFetchTagsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchTagsResponseBuilder*) builder {
  return [TXPBFetchTagsResponse builder];
}
- (TXPBFetchTagsResponseBuilder*) toBuilder {
  return [TXPBFetchTagsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"tags"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBTag* element in self.tagsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"tags"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchTagsResponse class]]) {
    return NO;
  }
  TXPBFetchTagsResponse *otherMessage = other;
  return
      [self.tagsArray isEqualToArray:otherMessage.tagsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchTagsResponseBuilder()
@property (strong) TXPBFetchTagsResponse* resultFetchTagsResponse;
@end

@implementation TXPBFetchTagsResponseBuilder
@synthesize resultFetchTagsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchTagsResponse = [[TXPBFetchTagsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchTagsResponse;
}
- (TXPBFetchTagsResponseBuilder*) clear {
  self.resultFetchTagsResponse = [[TXPBFetchTagsResponse alloc] init];
  return self;
}
- (TXPBFetchTagsResponseBuilder*) clone {
  return [TXPBFetchTagsResponse builderWithPrototype:resultFetchTagsResponse];
}
- (TXPBFetchTagsResponse*) defaultInstance {
  return [TXPBFetchTagsResponse defaultInstance];
}
- (TXPBFetchTagsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchTagsResponse*) buildPartial {
  TXPBFetchTagsResponse* returnMe = resultFetchTagsResponse;
  self.resultFetchTagsResponse = nil;
  return returnMe;
}
- (TXPBFetchTagsResponseBuilder*) mergeFrom:(TXPBFetchTagsResponse*) other {
  if (other == [TXPBFetchTagsResponse defaultInstance]) {
    return self;
  }
  if (other.tagsArray.count > 0) {
    if (resultFetchTagsResponse.tagsArray == nil) {
      resultFetchTagsResponse.tagsArray = [[NSMutableArray alloc] initWithArray:other.tagsArray];
    } else {
      [resultFetchTagsResponse.tagsArray addObjectsFromArray:other.tagsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchTagsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchTagsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBTagBuilder* subBuilder = [TXPBTag builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTags:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)tags {
  return resultFetchTagsResponse.tagsArray;
}
- (TXPBTag*)tagsAtIndex:(NSUInteger)index {
  return [resultFetchTagsResponse tagsAtIndex:index];
}
- (TXPBFetchTagsResponseBuilder *)addTags:(TXPBTag*)value {
  if (resultFetchTagsResponse.tagsArray == nil) {
    resultFetchTagsResponse.tagsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchTagsResponse.tagsArray addObject:value];
  return self;
}
- (TXPBFetchTagsResponseBuilder *)setTagsArray:(NSArray *)array {
  resultFetchTagsResponse.tagsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchTagsResponseBuilder *)clearTags {
  resultFetchTagsResponse.tagsArray = nil;
  return self;
}
@end

@interface TXPBFetchHotQuestionsRequest ()
@property SInt32 pageNum;
@end

@implementation TXPBFetchHotQuestionsRequest

- (BOOL) hasPageNum {
  return !!hasPageNum_;
}
- (void) setHasPageNum:(BOOL) _value_ {
  hasPageNum_ = !!_value_;
}
@synthesize pageNum;
- (instancetype) init {
  if ((self = [super init])) {
    self.pageNum = 0;
  }
  return self;
}
static TXPBFetchHotQuestionsRequest* defaultTXPBFetchHotQuestionsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHotQuestionsRequest class]) {
    defaultTXPBFetchHotQuestionsRequestInstance = [[TXPBFetchHotQuestionsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHotQuestionsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHotQuestionsRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPageNum) {
    [output writeInt32:1 value:self.pageNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPageNum) {
    size_ += computeInt32Size(1, self.pageNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHotQuestionsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchHotQuestionsRequest*)[[[TXPBFetchHotQuestionsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchHotQuestionsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotQuestionsRequest*)[[[TXPBFetchHotQuestionsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotQuestionsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHotQuestionsRequest*)[[[TXPBFetchHotQuestionsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHotQuestionsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotQuestionsRequest*)[[[TXPBFetchHotQuestionsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotQuestionsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHotQuestionsRequest*)[[[TXPBFetchHotQuestionsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHotQuestionsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotQuestionsRequest*)[[[TXPBFetchHotQuestionsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotQuestionsRequestBuilder*) builder {
  return [[TXPBFetchHotQuestionsRequestBuilder alloc] init];
}
+ (TXPBFetchHotQuestionsRequestBuilder*) builderWithPrototype:(TXPBFetchHotQuestionsRequest*) prototype {
  return [[TXPBFetchHotQuestionsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchHotQuestionsRequestBuilder*) builder {
  return [TXPBFetchHotQuestionsRequest builder];
}
- (TXPBFetchHotQuestionsRequestBuilder*) toBuilder {
  return [TXPBFetchHotQuestionsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPageNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageNum", [NSNumber numberWithInteger:self.pageNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPageNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageNum] forKey: @"pageNum"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHotQuestionsRequest class]]) {
    return NO;
  }
  TXPBFetchHotQuestionsRequest *otherMessage = other;
  return
      self.hasPageNum == otherMessage.hasPageNum &&
      (!self.hasPageNum || self.pageNum == otherMessage.pageNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPageNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHotQuestionsRequestBuilder()
@property (strong) TXPBFetchHotQuestionsRequest* resultFetchHotQuestionsRequest;
@end

@implementation TXPBFetchHotQuestionsRequestBuilder
@synthesize resultFetchHotQuestionsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHotQuestionsRequest = [[TXPBFetchHotQuestionsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHotQuestionsRequest;
}
- (TXPBFetchHotQuestionsRequestBuilder*) clear {
  self.resultFetchHotQuestionsRequest = [[TXPBFetchHotQuestionsRequest alloc] init];
  return self;
}
- (TXPBFetchHotQuestionsRequestBuilder*) clone {
  return [TXPBFetchHotQuestionsRequest builderWithPrototype:resultFetchHotQuestionsRequest];
}
- (TXPBFetchHotQuestionsRequest*) defaultInstance {
  return [TXPBFetchHotQuestionsRequest defaultInstance];
}
- (TXPBFetchHotQuestionsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHotQuestionsRequest*) buildPartial {
  TXPBFetchHotQuestionsRequest* returnMe = resultFetchHotQuestionsRequest;
  self.resultFetchHotQuestionsRequest = nil;
  return returnMe;
}
- (TXPBFetchHotQuestionsRequestBuilder*) mergeFrom:(TXPBFetchHotQuestionsRequest*) other {
  if (other == [TXPBFetchHotQuestionsRequest defaultInstance]) {
    return self;
  }
  if (other.hasPageNum) {
    [self setPageNum:other.pageNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHotQuestionsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHotQuestionsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPageNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPageNum {
  return resultFetchHotQuestionsRequest.hasPageNum;
}
- (SInt32) pageNum {
  return resultFetchHotQuestionsRequest.pageNum;
}
- (TXPBFetchHotQuestionsRequestBuilder*) setPageNum:(SInt32) value {
  resultFetchHotQuestionsRequest.hasPageNum = YES;
  resultFetchHotQuestionsRequest.pageNum = value;
  return self;
}
- (TXPBFetchHotQuestionsRequestBuilder*) clearPageNum {
  resultFetchHotQuestionsRequest.hasPageNum = NO;
  resultFetchHotQuestionsRequest.pageNum = 0;
  return self;
}
@end

@interface TXPBFetchHotQuestionsResponse ()
@property (strong) NSMutableArray * questionsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchHotQuestionsResponse

@synthesize questionsArray;
@dynamic questions;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchHotQuestionsResponse* defaultTXPBFetchHotQuestionsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHotQuestionsResponse class]) {
    defaultTXPBFetchHotQuestionsResponseInstance = [[TXPBFetchHotQuestionsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHotQuestionsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHotQuestionsResponseInstance;
}
- (NSArray *)questions {
  return questionsArray;
}
- (TXPBQuestion*)questionsAtIndex:(NSUInteger)index {
  return [questionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitquestions = YES;
   [self.questions enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitquestions = NO;
      *stop = YES;
    }
  }];
  if (!isInitquestions) return isInitquestions;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHotQuestionsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchHotQuestionsResponse*)[[[TXPBFetchHotQuestionsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchHotQuestionsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotQuestionsResponse*)[[[TXPBFetchHotQuestionsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotQuestionsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHotQuestionsResponse*)[[[TXPBFetchHotQuestionsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHotQuestionsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotQuestionsResponse*)[[[TXPBFetchHotQuestionsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotQuestionsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHotQuestionsResponse*)[[[TXPBFetchHotQuestionsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHotQuestionsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotQuestionsResponse*)[[[TXPBFetchHotQuestionsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotQuestionsResponseBuilder*) builder {
  return [[TXPBFetchHotQuestionsResponseBuilder alloc] init];
}
+ (TXPBFetchHotQuestionsResponseBuilder*) builderWithPrototype:(TXPBFetchHotQuestionsResponse*) prototype {
  return [[TXPBFetchHotQuestionsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchHotQuestionsResponseBuilder*) builder {
  return [TXPBFetchHotQuestionsResponse builder];
}
- (TXPBFetchHotQuestionsResponseBuilder*) toBuilder {
  return [TXPBFetchHotQuestionsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"questions"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBQuestion* element in self.questionsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"questions"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHotQuestionsResponse class]]) {
    return NO;
  }
  TXPBFetchHotQuestionsResponse *otherMessage = other;
  return
      [self.questionsArray isEqualToArray:otherMessage.questionsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHotQuestionsResponseBuilder()
@property (strong) TXPBFetchHotQuestionsResponse* resultFetchHotQuestionsResponse;
@end

@implementation TXPBFetchHotQuestionsResponseBuilder
@synthesize resultFetchHotQuestionsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHotQuestionsResponse = [[TXPBFetchHotQuestionsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHotQuestionsResponse;
}
- (TXPBFetchHotQuestionsResponseBuilder*) clear {
  self.resultFetchHotQuestionsResponse = [[TXPBFetchHotQuestionsResponse alloc] init];
  return self;
}
- (TXPBFetchHotQuestionsResponseBuilder*) clone {
  return [TXPBFetchHotQuestionsResponse builderWithPrototype:resultFetchHotQuestionsResponse];
}
- (TXPBFetchHotQuestionsResponse*) defaultInstance {
  return [TXPBFetchHotQuestionsResponse defaultInstance];
}
- (TXPBFetchHotQuestionsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHotQuestionsResponse*) buildPartial {
  TXPBFetchHotQuestionsResponse* returnMe = resultFetchHotQuestionsResponse;
  self.resultFetchHotQuestionsResponse = nil;
  return returnMe;
}
- (TXPBFetchHotQuestionsResponseBuilder*) mergeFrom:(TXPBFetchHotQuestionsResponse*) other {
  if (other == [TXPBFetchHotQuestionsResponse defaultInstance]) {
    return self;
  }
  if (other.questionsArray.count > 0) {
    if (resultFetchHotQuestionsResponse.questionsArray == nil) {
      resultFetchHotQuestionsResponse.questionsArray = [[NSMutableArray alloc] initWithArray:other.questionsArray];
    } else {
      [resultFetchHotQuestionsResponse.questionsArray addObjectsFromArray:other.questionsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHotQuestionsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHotQuestionsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBQuestionBuilder* subBuilder = [TXPBQuestion builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addQuestions:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)questions {
  return resultFetchHotQuestionsResponse.questionsArray;
}
- (TXPBQuestion*)questionsAtIndex:(NSUInteger)index {
  return [resultFetchHotQuestionsResponse questionsAtIndex:index];
}
- (TXPBFetchHotQuestionsResponseBuilder *)addQuestions:(TXPBQuestion*)value {
  if (resultFetchHotQuestionsResponse.questionsArray == nil) {
    resultFetchHotQuestionsResponse.questionsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchHotQuestionsResponse.questionsArray addObject:value];
  return self;
}
- (TXPBFetchHotQuestionsResponseBuilder *)setQuestionsArray:(NSArray *)array {
  resultFetchHotQuestionsResponse.questionsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchHotQuestionsResponseBuilder *)clearQuestions {
  resultFetchHotQuestionsResponse.questionsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchHotQuestionsResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchHotQuestionsResponse.hasMore;
}
- (TXPBFetchHotQuestionsResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchHotQuestionsResponse.hasHasMore = YES;
  resultFetchHotQuestionsResponse.hasMore = value;
  return self;
}
- (TXPBFetchHotQuestionsResponseBuilder*) clearHasMore {
  resultFetchHotQuestionsResponse.hasHasMore = NO;
  resultFetchHotQuestionsResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchQuestionsRequest ()
@property SInt64 tagId;
@property SInt64 authorId;
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchQuestionsRequest

- (BOOL) hasTagId {
  return !!hasTagId_;
}
- (void) setHasTagId:(BOOL) _value_ {
  hasTagId_ = !!_value_;
}
@synthesize tagId;
- (BOOL) hasAuthorId {
  return !!hasAuthorId_;
}
- (void) setHasAuthorId:(BOOL) _value_ {
  hasAuthorId_ = !!_value_;
}
@synthesize authorId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.tagId = 0L;
    self.authorId = 0L;
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchQuestionsRequest* defaultTXPBFetchQuestionsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchQuestionsRequest class]) {
    defaultTXPBFetchQuestionsRequestInstance = [[TXPBFetchQuestionsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionsRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTagId) {
    [output writeInt64:1 value:self.tagId];
  }
  if (self.hasAuthorId) {
    [output writeInt64:2 value:self.authorId];
  }
  if (self.hasMaxId) {
    [output writeInt64:3 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:4 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTagId) {
    size_ += computeInt64Size(1, self.tagId);
  }
  if (self.hasAuthorId) {
    size_ += computeInt64Size(2, self.authorId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(3, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(4, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchQuestionsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchQuestionsRequest*)[[[TXPBFetchQuestionsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchQuestionsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionsRequest*)[[[TXPBFetchQuestionsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchQuestionsRequest*)[[[TXPBFetchQuestionsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchQuestionsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionsRequest*)[[[TXPBFetchQuestionsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchQuestionsRequest*)[[[TXPBFetchQuestionsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchQuestionsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionsRequest*)[[[TXPBFetchQuestionsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionsRequestBuilder*) builder {
  return [[TXPBFetchQuestionsRequestBuilder alloc] init];
}
+ (TXPBFetchQuestionsRequestBuilder*) builderWithPrototype:(TXPBFetchQuestionsRequest*) prototype {
  return [[TXPBFetchQuestionsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchQuestionsRequestBuilder*) builder {
  return [TXPBFetchQuestionsRequest builder];
}
- (TXPBFetchQuestionsRequestBuilder*) toBuilder {
  return [TXPBFetchQuestionsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTagId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tagId", [NSNumber numberWithLongLong:self.tagId]];
  }
  if (self.hasAuthorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorId", [NSNumber numberWithLongLong:self.authorId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTagId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.tagId] forKey: @"tagId"];
  }
  if (self.hasAuthorId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.authorId] forKey: @"authorId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchQuestionsRequest class]]) {
    return NO;
  }
  TXPBFetchQuestionsRequest *otherMessage = other;
  return
      self.hasTagId == otherMessage.hasTagId &&
      (!self.hasTagId || self.tagId == otherMessage.tagId) &&
      self.hasAuthorId == otherMessage.hasAuthorId &&
      (!self.hasAuthorId || self.authorId == otherMessage.authorId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTagId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.tagId] hash];
  }
  if (self.hasAuthorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.authorId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchQuestionsRequestBuilder()
@property (strong) TXPBFetchQuestionsRequest* resultFetchQuestionsRequest;
@end

@implementation TXPBFetchQuestionsRequestBuilder
@synthesize resultFetchQuestionsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchQuestionsRequest = [[TXPBFetchQuestionsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchQuestionsRequest;
}
- (TXPBFetchQuestionsRequestBuilder*) clear {
  self.resultFetchQuestionsRequest = [[TXPBFetchQuestionsRequest alloc] init];
  return self;
}
- (TXPBFetchQuestionsRequestBuilder*) clone {
  return [TXPBFetchQuestionsRequest builderWithPrototype:resultFetchQuestionsRequest];
}
- (TXPBFetchQuestionsRequest*) defaultInstance {
  return [TXPBFetchQuestionsRequest defaultInstance];
}
- (TXPBFetchQuestionsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchQuestionsRequest*) buildPartial {
  TXPBFetchQuestionsRequest* returnMe = resultFetchQuestionsRequest;
  self.resultFetchQuestionsRequest = nil;
  return returnMe;
}
- (TXPBFetchQuestionsRequestBuilder*) mergeFrom:(TXPBFetchQuestionsRequest*) other {
  if (other == [TXPBFetchQuestionsRequest defaultInstance]) {
    return self;
  }
  if (other.hasTagId) {
    [self setTagId:other.tagId];
  }
  if (other.hasAuthorId) {
    [self setAuthorId:other.authorId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchQuestionsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchQuestionsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTagId:[input readInt64]];
        break;
      }
      case 16: {
        [self setAuthorId:[input readInt64]];
        break;
      }
      case 24: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 32: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasTagId {
  return resultFetchQuestionsRequest.hasTagId;
}
- (SInt64) tagId {
  return resultFetchQuestionsRequest.tagId;
}
- (TXPBFetchQuestionsRequestBuilder*) setTagId:(SInt64) value {
  resultFetchQuestionsRequest.hasTagId = YES;
  resultFetchQuestionsRequest.tagId = value;
  return self;
}
- (TXPBFetchQuestionsRequestBuilder*) clearTagId {
  resultFetchQuestionsRequest.hasTagId = NO;
  resultFetchQuestionsRequest.tagId = 0L;
  return self;
}
- (BOOL) hasAuthorId {
  return resultFetchQuestionsRequest.hasAuthorId;
}
- (SInt64) authorId {
  return resultFetchQuestionsRequest.authorId;
}
- (TXPBFetchQuestionsRequestBuilder*) setAuthorId:(SInt64) value {
  resultFetchQuestionsRequest.hasAuthorId = YES;
  resultFetchQuestionsRequest.authorId = value;
  return self;
}
- (TXPBFetchQuestionsRequestBuilder*) clearAuthorId {
  resultFetchQuestionsRequest.hasAuthorId = NO;
  resultFetchQuestionsRequest.authorId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchQuestionsRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchQuestionsRequest.maxId;
}
- (TXPBFetchQuestionsRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchQuestionsRequest.hasMaxId = YES;
  resultFetchQuestionsRequest.maxId = value;
  return self;
}
- (TXPBFetchQuestionsRequestBuilder*) clearMaxId {
  resultFetchQuestionsRequest.hasMaxId = NO;
  resultFetchQuestionsRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchQuestionsRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchQuestionsRequest.sinceId;
}
- (TXPBFetchQuestionsRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchQuestionsRequest.hasSinceId = YES;
  resultFetchQuestionsRequest.sinceId = value;
  return self;
}
- (TXPBFetchQuestionsRequestBuilder*) clearSinceId {
  resultFetchQuestionsRequest.hasSinceId = NO;
  resultFetchQuestionsRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFetchQuestionsResponse ()
@property (strong) NSMutableArray * questionsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchQuestionsResponse

@synthesize questionsArray;
@dynamic questions;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchQuestionsResponse* defaultTXPBFetchQuestionsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchQuestionsResponse class]) {
    defaultTXPBFetchQuestionsResponseInstance = [[TXPBFetchQuestionsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionsResponseInstance;
}
- (NSArray *)questions {
  return questionsArray;
}
- (TXPBQuestion*)questionsAtIndex:(NSUInteger)index {
  return [questionsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitquestions = YES;
   [self.questions enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitquestions = NO;
      *stop = YES;
    }
  }];
  if (!isInitquestions) return isInitquestions;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchQuestionsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchQuestionsResponse*)[[[TXPBFetchQuestionsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchQuestionsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionsResponse*)[[[TXPBFetchQuestionsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchQuestionsResponse*)[[[TXPBFetchQuestionsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchQuestionsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionsResponse*)[[[TXPBFetchQuestionsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchQuestionsResponse*)[[[TXPBFetchQuestionsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchQuestionsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionsResponse*)[[[TXPBFetchQuestionsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionsResponseBuilder*) builder {
  return [[TXPBFetchQuestionsResponseBuilder alloc] init];
}
+ (TXPBFetchQuestionsResponseBuilder*) builderWithPrototype:(TXPBFetchQuestionsResponse*) prototype {
  return [[TXPBFetchQuestionsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchQuestionsResponseBuilder*) builder {
  return [TXPBFetchQuestionsResponse builder];
}
- (TXPBFetchQuestionsResponseBuilder*) toBuilder {
  return [TXPBFetchQuestionsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"questions"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBQuestion* element in self.questionsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"questions"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchQuestionsResponse class]]) {
    return NO;
  }
  TXPBFetchQuestionsResponse *otherMessage = other;
  return
      [self.questionsArray isEqualToArray:otherMessage.questionsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.questionsArray enumerateObjectsUsingBlock:^(TXPBQuestion *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchQuestionsResponseBuilder()
@property (strong) TXPBFetchQuestionsResponse* resultFetchQuestionsResponse;
@end

@implementation TXPBFetchQuestionsResponseBuilder
@synthesize resultFetchQuestionsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchQuestionsResponse = [[TXPBFetchQuestionsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchQuestionsResponse;
}
- (TXPBFetchQuestionsResponseBuilder*) clear {
  self.resultFetchQuestionsResponse = [[TXPBFetchQuestionsResponse alloc] init];
  return self;
}
- (TXPBFetchQuestionsResponseBuilder*) clone {
  return [TXPBFetchQuestionsResponse builderWithPrototype:resultFetchQuestionsResponse];
}
- (TXPBFetchQuestionsResponse*) defaultInstance {
  return [TXPBFetchQuestionsResponse defaultInstance];
}
- (TXPBFetchQuestionsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchQuestionsResponse*) buildPartial {
  TXPBFetchQuestionsResponse* returnMe = resultFetchQuestionsResponse;
  self.resultFetchQuestionsResponse = nil;
  return returnMe;
}
- (TXPBFetchQuestionsResponseBuilder*) mergeFrom:(TXPBFetchQuestionsResponse*) other {
  if (other == [TXPBFetchQuestionsResponse defaultInstance]) {
    return self;
  }
  if (other.questionsArray.count > 0) {
    if (resultFetchQuestionsResponse.questionsArray == nil) {
      resultFetchQuestionsResponse.questionsArray = [[NSMutableArray alloc] initWithArray:other.questionsArray];
    } else {
      [resultFetchQuestionsResponse.questionsArray addObjectsFromArray:other.questionsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchQuestionsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchQuestionsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBQuestionBuilder* subBuilder = [TXPBQuestion builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addQuestions:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)questions {
  return resultFetchQuestionsResponse.questionsArray;
}
- (TXPBQuestion*)questionsAtIndex:(NSUInteger)index {
  return [resultFetchQuestionsResponse questionsAtIndex:index];
}
- (TXPBFetchQuestionsResponseBuilder *)addQuestions:(TXPBQuestion*)value {
  if (resultFetchQuestionsResponse.questionsArray == nil) {
    resultFetchQuestionsResponse.questionsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchQuestionsResponse.questionsArray addObject:value];
  return self;
}
- (TXPBFetchQuestionsResponseBuilder *)setQuestionsArray:(NSArray *)array {
  resultFetchQuestionsResponse.questionsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchQuestionsResponseBuilder *)clearQuestions {
  resultFetchQuestionsResponse.questionsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchQuestionsResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchQuestionsResponse.hasMore;
}
- (TXPBFetchQuestionsResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchQuestionsResponse.hasHasMore = YES;
  resultFetchQuestionsResponse.hasMore = value;
  return self;
}
- (TXPBFetchQuestionsResponseBuilder*) clearHasMore {
  resultFetchQuestionsResponse.hasHasMore = NO;
  resultFetchQuestionsResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBAskQuestionRequest ()
@property SInt64 tagId;
@property SInt64 expertId;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property BOOL anonymous;
@property (strong) NSMutableArray * attachesArray;
@end

@implementation TXPBAskQuestionRequest

- (BOOL) hasTagId {
  return !!hasTagId_;
}
- (void) setHasTagId:(BOOL) _value_ {
  hasTagId_ = !!_value_;
}
@synthesize tagId;
- (BOOL) hasExpertId {
  return !!hasExpertId_;
}
- (void) setHasExpertId:(BOOL) _value_ {
  hasExpertId_ = !!_value_;
}
@synthesize expertId;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasAnonymous {
  return !!hasAnonymous_;
}
- (void) setHasAnonymous:(BOOL) _value_ {
  hasAnonymous_ = !!_value_;
}
- (BOOL) anonymous {
  return !!anonymous_;
}
- (void) setAnonymous:(BOOL) _value_ {
  anonymous_ = !!_value_;
}
@synthesize attachesArray;
@dynamic attaches;
- (instancetype) init {
  if ((self = [super init])) {
    self.tagId = 0L;
    self.expertId = 0L;
    self.title = @"";
    self.content = @"";
    self.anonymous = NO;
  }
  return self;
}
static TXPBAskQuestionRequest* defaultTXPBAskQuestionRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBAskQuestionRequest class]) {
    defaultTXPBAskQuestionRequestInstance = [[TXPBAskQuestionRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAskQuestionRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAskQuestionRequestInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasTagId) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTagId) {
    [output writeInt64:1 value:self.tagId];
  }
  if (self.hasExpertId) {
    [output writeInt64:2 value:self.expertId];
  }
  if (self.hasTitle) {
    [output writeString:3 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:4 value:self.content];
  }
  if (self.hasAnonymous) {
    [output writeBool:5 value:self.anonymous];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:6 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTagId) {
    size_ += computeInt64Size(1, self.tagId);
  }
  if (self.hasExpertId) {
    size_ += computeInt64Size(2, self.expertId);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(3, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(4, self.content);
  }
  if (self.hasAnonymous) {
    size_ += computeBoolSize(5, self.anonymous);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(6, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAskQuestionRequest*) parseFromData:(NSData*) data {
  return (TXPBAskQuestionRequest*)[[[TXPBAskQuestionRequest builder] mergeFromData:data] build];
}
+ (TXPBAskQuestionRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAskQuestionRequest*)[[[TXPBAskQuestionRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAskQuestionRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAskQuestionRequest*)[[[TXPBAskQuestionRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBAskQuestionRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAskQuestionRequest*)[[[TXPBAskQuestionRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAskQuestionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAskQuestionRequest*)[[[TXPBAskQuestionRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAskQuestionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAskQuestionRequest*)[[[TXPBAskQuestionRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAskQuestionRequestBuilder*) builder {
  return [[TXPBAskQuestionRequestBuilder alloc] init];
}
+ (TXPBAskQuestionRequestBuilder*) builderWithPrototype:(TXPBAskQuestionRequest*) prototype {
  return [[TXPBAskQuestionRequest builder] mergeFrom:prototype];
}
- (TXPBAskQuestionRequestBuilder*) builder {
  return [TXPBAskQuestionRequest builder];
}
- (TXPBAskQuestionRequestBuilder*) toBuilder {
  return [TXPBAskQuestionRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTagId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tagId", [NSNumber numberWithLongLong:self.tagId]];
  }
  if (self.hasExpertId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expertId", [NSNumber numberWithLongLong:self.expertId]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasAnonymous) {
    [output appendFormat:@"%@%@: %@\n", indent, @"anonymous", [NSNumber numberWithBool:self.anonymous]];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTagId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.tagId] forKey: @"tagId"];
  }
  if (self.hasExpertId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.expertId] forKey: @"expertId"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasAnonymous) {
    [dictionary setObject: [NSNumber numberWithBool:self.anonymous] forKey: @"anonymous"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAskQuestionRequest class]]) {
    return NO;
  }
  TXPBAskQuestionRequest *otherMessage = other;
  return
      self.hasTagId == otherMessage.hasTagId &&
      (!self.hasTagId || self.tagId == otherMessage.tagId) &&
      self.hasExpertId == otherMessage.hasExpertId &&
      (!self.hasExpertId || self.expertId == otherMessage.expertId) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasAnonymous == otherMessage.hasAnonymous &&
      (!self.hasAnonymous || self.anonymous == otherMessage.anonymous) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTagId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.tagId] hash];
  }
  if (self.hasExpertId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.expertId] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasAnonymous) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.anonymous] hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAskQuestionRequestBuilder()
@property (strong) TXPBAskQuestionRequest* resultAskQuestionRequest;
@end

@implementation TXPBAskQuestionRequestBuilder
@synthesize resultAskQuestionRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAskQuestionRequest = [[TXPBAskQuestionRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAskQuestionRequest;
}
- (TXPBAskQuestionRequestBuilder*) clear {
  self.resultAskQuestionRequest = [[TXPBAskQuestionRequest alloc] init];
  return self;
}
- (TXPBAskQuestionRequestBuilder*) clone {
  return [TXPBAskQuestionRequest builderWithPrototype:resultAskQuestionRequest];
}
- (TXPBAskQuestionRequest*) defaultInstance {
  return [TXPBAskQuestionRequest defaultInstance];
}
- (TXPBAskQuestionRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAskQuestionRequest*) buildPartial {
  TXPBAskQuestionRequest* returnMe = resultAskQuestionRequest;
  self.resultAskQuestionRequest = nil;
  return returnMe;
}
- (TXPBAskQuestionRequestBuilder*) mergeFrom:(TXPBAskQuestionRequest*) other {
  if (other == [TXPBAskQuestionRequest defaultInstance]) {
    return self;
  }
  if (other.hasTagId) {
    [self setTagId:other.tagId];
  }
  if (other.hasExpertId) {
    [self setExpertId:other.expertId];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasAnonymous) {
    [self setAnonymous:other.anonymous];
  }
  if (other.attachesArray.count > 0) {
    if (resultAskQuestionRequest.attachesArray == nil) {
      resultAskQuestionRequest.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultAskQuestionRequest.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAskQuestionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAskQuestionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTagId:[input readInt64]];
        break;
      }
      case 16: {
        [self setExpertId:[input readInt64]];
        break;
      }
      case 26: {
        [self setTitle:[input readString]];
        break;
      }
      case 34: {
        [self setContent:[input readString]];
        break;
      }
      case 40: {
        [self setAnonymous:[input readBool]];
        break;
      }
      case 50: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasTagId {
  return resultAskQuestionRequest.hasTagId;
}
- (SInt64) tagId {
  return resultAskQuestionRequest.tagId;
}
- (TXPBAskQuestionRequestBuilder*) setTagId:(SInt64) value {
  resultAskQuestionRequest.hasTagId = YES;
  resultAskQuestionRequest.tagId = value;
  return self;
}
- (TXPBAskQuestionRequestBuilder*) clearTagId {
  resultAskQuestionRequest.hasTagId = NO;
  resultAskQuestionRequest.tagId = 0L;
  return self;
}
- (BOOL) hasExpertId {
  return resultAskQuestionRequest.hasExpertId;
}
- (SInt64) expertId {
  return resultAskQuestionRequest.expertId;
}
- (TXPBAskQuestionRequestBuilder*) setExpertId:(SInt64) value {
  resultAskQuestionRequest.hasExpertId = YES;
  resultAskQuestionRequest.expertId = value;
  return self;
}
- (TXPBAskQuestionRequestBuilder*) clearExpertId {
  resultAskQuestionRequest.hasExpertId = NO;
  resultAskQuestionRequest.expertId = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultAskQuestionRequest.hasTitle;
}
- (NSString*) title {
  return resultAskQuestionRequest.title;
}
- (TXPBAskQuestionRequestBuilder*) setTitle:(NSString*) value {
  resultAskQuestionRequest.hasTitle = YES;
  resultAskQuestionRequest.title = value;
  return self;
}
- (TXPBAskQuestionRequestBuilder*) clearTitle {
  resultAskQuestionRequest.hasTitle = NO;
  resultAskQuestionRequest.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultAskQuestionRequest.hasContent;
}
- (NSString*) content {
  return resultAskQuestionRequest.content;
}
- (TXPBAskQuestionRequestBuilder*) setContent:(NSString*) value {
  resultAskQuestionRequest.hasContent = YES;
  resultAskQuestionRequest.content = value;
  return self;
}
- (TXPBAskQuestionRequestBuilder*) clearContent {
  resultAskQuestionRequest.hasContent = NO;
  resultAskQuestionRequest.content = @"";
  return self;
}
- (BOOL) hasAnonymous {
  return resultAskQuestionRequest.hasAnonymous;
}
- (BOOL) anonymous {
  return resultAskQuestionRequest.anonymous;
}
- (TXPBAskQuestionRequestBuilder*) setAnonymous:(BOOL) value {
  resultAskQuestionRequest.hasAnonymous = YES;
  resultAskQuestionRequest.anonymous = value;
  return self;
}
- (TXPBAskQuestionRequestBuilder*) clearAnonymous {
  resultAskQuestionRequest.hasAnonymous = NO;
  resultAskQuestionRequest.anonymous = NO;
  return self;
}
- (NSMutableArray *)attaches {
  return resultAskQuestionRequest.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultAskQuestionRequest attachesAtIndex:index];
}
- (TXPBAskQuestionRequestBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultAskQuestionRequest.attachesArray == nil) {
    resultAskQuestionRequest.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultAskQuestionRequest.attachesArray addObject:value];
  return self;
}
- (TXPBAskQuestionRequestBuilder *)setAttachesArray:(NSArray *)array {
  resultAskQuestionRequest.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBAskQuestionRequestBuilder *)clearAttaches {
  resultAskQuestionRequest.attachesArray = nil;
  return self;
}
@end

@interface TXPBAskQuestionResponse ()
@end

@implementation TXPBAskQuestionResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBAskQuestionResponse* defaultTXPBAskQuestionResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBAskQuestionResponse class]) {
    defaultTXPBAskQuestionResponseInstance = [[TXPBAskQuestionResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAskQuestionResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAskQuestionResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAskQuestionResponse*) parseFromData:(NSData*) data {
  return (TXPBAskQuestionResponse*)[[[TXPBAskQuestionResponse builder] mergeFromData:data] build];
}
+ (TXPBAskQuestionResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAskQuestionResponse*)[[[TXPBAskQuestionResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAskQuestionResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAskQuestionResponse*)[[[TXPBAskQuestionResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBAskQuestionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAskQuestionResponse*)[[[TXPBAskQuestionResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAskQuestionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAskQuestionResponse*)[[[TXPBAskQuestionResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAskQuestionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAskQuestionResponse*)[[[TXPBAskQuestionResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAskQuestionResponseBuilder*) builder {
  return [[TXPBAskQuestionResponseBuilder alloc] init];
}
+ (TXPBAskQuestionResponseBuilder*) builderWithPrototype:(TXPBAskQuestionResponse*) prototype {
  return [[TXPBAskQuestionResponse builder] mergeFrom:prototype];
}
- (TXPBAskQuestionResponseBuilder*) builder {
  return [TXPBAskQuestionResponse builder];
}
- (TXPBAskQuestionResponseBuilder*) toBuilder {
  return [TXPBAskQuestionResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAskQuestionResponse class]]) {
    return NO;
  }
  TXPBAskQuestionResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAskQuestionResponseBuilder()
@property (strong) TXPBAskQuestionResponse* resultAskQuestionResponse;
@end

@implementation TXPBAskQuestionResponseBuilder
@synthesize resultAskQuestionResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAskQuestionResponse = [[TXPBAskQuestionResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAskQuestionResponse;
}
- (TXPBAskQuestionResponseBuilder*) clear {
  self.resultAskQuestionResponse = [[TXPBAskQuestionResponse alloc] init];
  return self;
}
- (TXPBAskQuestionResponseBuilder*) clone {
  return [TXPBAskQuestionResponse builderWithPrototype:resultAskQuestionResponse];
}
- (TXPBAskQuestionResponse*) defaultInstance {
  return [TXPBAskQuestionResponse defaultInstance];
}
- (TXPBAskQuestionResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAskQuestionResponse*) buildPartial {
  TXPBAskQuestionResponse* returnMe = resultAskQuestionResponse;
  self.resultAskQuestionResponse = nil;
  return returnMe;
}
- (TXPBAskQuestionResponseBuilder*) mergeFrom:(TXPBAskQuestionResponse*) other {
  if (other == [TXPBAskQuestionResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAskQuestionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAskQuestionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchQuestionDetailRequest ()
@property SInt64 questionId;
@end

@implementation TXPBFetchQuestionDetailRequest

- (BOOL) hasQuestionId {
  return !!hasQuestionId_;
}
- (void) setHasQuestionId:(BOOL) _value_ {
  hasQuestionId_ = !!_value_;
}
@synthesize questionId;
- (instancetype) init {
  if ((self = [super init])) {
    self.questionId = 0L;
  }
  return self;
}
static TXPBFetchQuestionDetailRequest* defaultTXPBFetchQuestionDetailRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchQuestionDetailRequest class]) {
    defaultTXPBFetchQuestionDetailRequestInstance = [[TXPBFetchQuestionDetailRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionDetailRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionDetailRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasQuestionId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestionId) {
    [output writeInt64:1 value:self.questionId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestionId) {
    size_ += computeInt64Size(1, self.questionId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchQuestionDetailRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchQuestionDetailRequest*)[[[TXPBFetchQuestionDetailRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchQuestionDetailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionDetailRequest*)[[[TXPBFetchQuestionDetailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionDetailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchQuestionDetailRequest*)[[[TXPBFetchQuestionDetailRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchQuestionDetailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionDetailRequest*)[[[TXPBFetchQuestionDetailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchQuestionDetailRequest*)[[[TXPBFetchQuestionDetailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchQuestionDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionDetailRequest*)[[[TXPBFetchQuestionDetailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionDetailRequestBuilder*) builder {
  return [[TXPBFetchQuestionDetailRequestBuilder alloc] init];
}
+ (TXPBFetchQuestionDetailRequestBuilder*) builderWithPrototype:(TXPBFetchQuestionDetailRequest*) prototype {
  return [[TXPBFetchQuestionDetailRequest builder] mergeFrom:prototype];
}
- (TXPBFetchQuestionDetailRequestBuilder*) builder {
  return [TXPBFetchQuestionDetailRequest builder];
}
- (TXPBFetchQuestionDetailRequestBuilder*) toBuilder {
  return [TXPBFetchQuestionDetailRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questionId", [NSNumber numberWithLongLong:self.questionId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasQuestionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.questionId] forKey: @"questionId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchQuestionDetailRequest class]]) {
    return NO;
  }
  TXPBFetchQuestionDetailRequest *otherMessage = other;
  return
      self.hasQuestionId == otherMessage.hasQuestionId &&
      (!self.hasQuestionId || self.questionId == otherMessage.questionId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasQuestionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.questionId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchQuestionDetailRequestBuilder()
@property (strong) TXPBFetchQuestionDetailRequest* resultFetchQuestionDetailRequest;
@end

@implementation TXPBFetchQuestionDetailRequestBuilder
@synthesize resultFetchQuestionDetailRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchQuestionDetailRequest = [[TXPBFetchQuestionDetailRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchQuestionDetailRequest;
}
- (TXPBFetchQuestionDetailRequestBuilder*) clear {
  self.resultFetchQuestionDetailRequest = [[TXPBFetchQuestionDetailRequest alloc] init];
  return self;
}
- (TXPBFetchQuestionDetailRequestBuilder*) clone {
  return [TXPBFetchQuestionDetailRequest builderWithPrototype:resultFetchQuestionDetailRequest];
}
- (TXPBFetchQuestionDetailRequest*) defaultInstance {
  return [TXPBFetchQuestionDetailRequest defaultInstance];
}
- (TXPBFetchQuestionDetailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchQuestionDetailRequest*) buildPartial {
  TXPBFetchQuestionDetailRequest* returnMe = resultFetchQuestionDetailRequest;
  self.resultFetchQuestionDetailRequest = nil;
  return returnMe;
}
- (TXPBFetchQuestionDetailRequestBuilder*) mergeFrom:(TXPBFetchQuestionDetailRequest*) other {
  if (other == [TXPBFetchQuestionDetailRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuestionId) {
    [self setQuestionId:other.questionId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchQuestionDetailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchQuestionDetailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setQuestionId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestionId {
  return resultFetchQuestionDetailRequest.hasQuestionId;
}
- (SInt64) questionId {
  return resultFetchQuestionDetailRequest.questionId;
}
- (TXPBFetchQuestionDetailRequestBuilder*) setQuestionId:(SInt64) value {
  resultFetchQuestionDetailRequest.hasQuestionId = YES;
  resultFetchQuestionDetailRequest.questionId = value;
  return self;
}
- (TXPBFetchQuestionDetailRequestBuilder*) clearQuestionId {
  resultFetchQuestionDetailRequest.hasQuestionId = NO;
  resultFetchQuestionDetailRequest.questionId = 0L;
  return self;
}
@end

@interface TXPBFetchQuestionDetailResponse ()
@property (strong) TXPBQuestion* question;
@end

@implementation TXPBFetchQuestionDetailResponse

- (BOOL) hasQuestion {
  return !!hasQuestion_;
}
- (void) setHasQuestion:(BOOL) _value_ {
  hasQuestion_ = !!_value_;
}
@synthesize question;
- (instancetype) init {
  if ((self = [super init])) {
    self.question = [TXPBQuestion defaultInstance];
  }
  return self;
}
static TXPBFetchQuestionDetailResponse* defaultTXPBFetchQuestionDetailResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchQuestionDetailResponse class]) {
    defaultTXPBFetchQuestionDetailResponseInstance = [[TXPBFetchQuestionDetailResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionDetailResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionDetailResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasQuestion) {
    if (!self.question.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestion) {
    [output writeMessage:1 value:self.question];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestion) {
    size_ += computeMessageSize(1, self.question);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchQuestionDetailResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchQuestionDetailResponse*)[[[TXPBFetchQuestionDetailResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchQuestionDetailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionDetailResponse*)[[[TXPBFetchQuestionDetailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionDetailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchQuestionDetailResponse*)[[[TXPBFetchQuestionDetailResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchQuestionDetailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionDetailResponse*)[[[TXPBFetchQuestionDetailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchQuestionDetailResponse*)[[[TXPBFetchQuestionDetailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchQuestionDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionDetailResponse*)[[[TXPBFetchQuestionDetailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionDetailResponseBuilder*) builder {
  return [[TXPBFetchQuestionDetailResponseBuilder alloc] init];
}
+ (TXPBFetchQuestionDetailResponseBuilder*) builderWithPrototype:(TXPBFetchQuestionDetailResponse*) prototype {
  return [[TXPBFetchQuestionDetailResponse builder] mergeFrom:prototype];
}
- (TXPBFetchQuestionDetailResponseBuilder*) builder {
  return [TXPBFetchQuestionDetailResponse builder];
}
- (TXPBFetchQuestionDetailResponseBuilder*) toBuilder {
  return [TXPBFetchQuestionDetailResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestion) {
    [output appendFormat:@"%@%@ {\n", indent, @"question"];
    [self.question writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasQuestion) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.question storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"question"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchQuestionDetailResponse class]]) {
    return NO;
  }
  TXPBFetchQuestionDetailResponse *otherMessage = other;
  return
      self.hasQuestion == otherMessage.hasQuestion &&
      (!self.hasQuestion || [self.question isEqual:otherMessage.question]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasQuestion) {
    hashCode = hashCode * 31 + [self.question hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchQuestionDetailResponseBuilder()
@property (strong) TXPBFetchQuestionDetailResponse* resultFetchQuestionDetailResponse;
@end

@implementation TXPBFetchQuestionDetailResponseBuilder
@synthesize resultFetchQuestionDetailResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchQuestionDetailResponse = [[TXPBFetchQuestionDetailResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchQuestionDetailResponse;
}
- (TXPBFetchQuestionDetailResponseBuilder*) clear {
  self.resultFetchQuestionDetailResponse = [[TXPBFetchQuestionDetailResponse alloc] init];
  return self;
}
- (TXPBFetchQuestionDetailResponseBuilder*) clone {
  return [TXPBFetchQuestionDetailResponse builderWithPrototype:resultFetchQuestionDetailResponse];
}
- (TXPBFetchQuestionDetailResponse*) defaultInstance {
  return [TXPBFetchQuestionDetailResponse defaultInstance];
}
- (TXPBFetchQuestionDetailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchQuestionDetailResponse*) buildPartial {
  TXPBFetchQuestionDetailResponse* returnMe = resultFetchQuestionDetailResponse;
  self.resultFetchQuestionDetailResponse = nil;
  return returnMe;
}
- (TXPBFetchQuestionDetailResponseBuilder*) mergeFrom:(TXPBFetchQuestionDetailResponse*) other {
  if (other == [TXPBFetchQuestionDetailResponse defaultInstance]) {
    return self;
  }
  if (other.hasQuestion) {
    [self mergeQuestion:other.question];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchQuestionDetailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchQuestionDetailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBQuestionBuilder* subBuilder = [TXPBQuestion builder];
        if (self.hasQuestion) {
          [subBuilder mergeFrom:self.question];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setQuestion:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestion {
  return resultFetchQuestionDetailResponse.hasQuestion;
}
- (TXPBQuestion*) question {
  return resultFetchQuestionDetailResponse.question;
}
- (TXPBFetchQuestionDetailResponseBuilder*) setQuestion:(TXPBQuestion*) value {
  resultFetchQuestionDetailResponse.hasQuestion = YES;
  resultFetchQuestionDetailResponse.question = value;
  return self;
}
- (TXPBFetchQuestionDetailResponseBuilder*) setQuestionBuilder:(TXPBQuestionBuilder*) builderForValue {
  return [self setQuestion:[builderForValue build]];
}
- (TXPBFetchQuestionDetailResponseBuilder*) mergeQuestion:(TXPBQuestion*) value {
  if (resultFetchQuestionDetailResponse.hasQuestion &&
      resultFetchQuestionDetailResponse.question != [TXPBQuestion defaultInstance]) {
    resultFetchQuestionDetailResponse.question =
      [[[TXPBQuestion builderWithPrototype:resultFetchQuestionDetailResponse.question] mergeFrom:value] buildPartial];
  } else {
    resultFetchQuestionDetailResponse.question = value;
  }
  resultFetchQuestionDetailResponse.hasQuestion = YES;
  return self;
}
- (TXPBFetchQuestionDetailResponseBuilder*) clearQuestion {
  resultFetchQuestionDetailResponse.hasQuestion = NO;
  resultFetchQuestionDetailResponse.question = [TXPBQuestion defaultInstance];
  return self;
}
@end

@interface TXPBFetchQuestionAnswersRequest ()
@property SInt64 questionId;
@property TXPBUserType userType;
@property SInt64 authorId;
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchQuestionAnswersRequest

- (BOOL) hasQuestionId {
  return !!hasQuestionId_;
}
- (void) setHasQuestionId:(BOOL) _value_ {
  hasQuestionId_ = !!_value_;
}
@synthesize questionId;
- (BOOL) hasUserType {
  return !!hasUserType_;
}
- (void) setHasUserType:(BOOL) _value_ {
  hasUserType_ = !!_value_;
}
@synthesize userType;
- (BOOL) hasAuthorId {
  return !!hasAuthorId_;
}
- (void) setHasAuthorId:(BOOL) _value_ {
  hasAuthorId_ = !!_value_;
}
@synthesize authorId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.questionId = 0L;
    self.userType = TXPBUserTypeChild;
    self.authorId = 0L;
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchQuestionAnswersRequest* defaultTXPBFetchQuestionAnswersRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchQuestionAnswersRequest class]) {
    defaultTXPBFetchQuestionAnswersRequestInstance = [[TXPBFetchQuestionAnswersRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionAnswersRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionAnswersRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestionId) {
    [output writeInt64:1 value:self.questionId];
  }
  if (self.hasUserType) {
    [output writeEnum:2 value:self.userType];
  }
  if (self.hasAuthorId) {
    [output writeInt64:3 value:self.authorId];
  }
  if (self.hasMaxId) {
    [output writeInt64:4 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:5 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestionId) {
    size_ += computeInt64Size(1, self.questionId);
  }
  if (self.hasUserType) {
    size_ += computeEnumSize(2, self.userType);
  }
  if (self.hasAuthorId) {
    size_ += computeInt64Size(3, self.authorId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(4, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(5, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchQuestionAnswersRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchQuestionAnswersRequest*)[[[TXPBFetchQuestionAnswersRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchQuestionAnswersRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionAnswersRequest*)[[[TXPBFetchQuestionAnswersRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionAnswersRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchQuestionAnswersRequest*)[[[TXPBFetchQuestionAnswersRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchQuestionAnswersRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionAnswersRequest*)[[[TXPBFetchQuestionAnswersRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionAnswersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchQuestionAnswersRequest*)[[[TXPBFetchQuestionAnswersRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchQuestionAnswersRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionAnswersRequest*)[[[TXPBFetchQuestionAnswersRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionAnswersRequestBuilder*) builder {
  return [[TXPBFetchQuestionAnswersRequestBuilder alloc] init];
}
+ (TXPBFetchQuestionAnswersRequestBuilder*) builderWithPrototype:(TXPBFetchQuestionAnswersRequest*) prototype {
  return [[TXPBFetchQuestionAnswersRequest builder] mergeFrom:prototype];
}
- (TXPBFetchQuestionAnswersRequestBuilder*) builder {
  return [TXPBFetchQuestionAnswersRequest builder];
}
- (TXPBFetchQuestionAnswersRequestBuilder*) toBuilder {
  return [TXPBFetchQuestionAnswersRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questionId", [NSNumber numberWithLongLong:self.questionId]];
  }
  if (self.hasUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userType", NSStringFromTXPBUserType(self.userType)];
  }
  if (self.hasAuthorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorId", [NSNumber numberWithLongLong:self.authorId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasQuestionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.questionId] forKey: @"questionId"];
  }
  if (self.hasUserType) {
    [dictionary setObject: @(self.userType) forKey: @"userType"];
  }
  if (self.hasAuthorId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.authorId] forKey: @"authorId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchQuestionAnswersRequest class]]) {
    return NO;
  }
  TXPBFetchQuestionAnswersRequest *otherMessage = other;
  return
      self.hasQuestionId == otherMessage.hasQuestionId &&
      (!self.hasQuestionId || self.questionId == otherMessage.questionId) &&
      self.hasUserType == otherMessage.hasUserType &&
      (!self.hasUserType || self.userType == otherMessage.userType) &&
      self.hasAuthorId == otherMessage.hasAuthorId &&
      (!self.hasAuthorId || self.authorId == otherMessage.authorId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasQuestionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.questionId] hash];
  }
  if (self.hasUserType) {
    hashCode = hashCode * 31 + self.userType;
  }
  if (self.hasAuthorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.authorId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchQuestionAnswersRequestBuilder()
@property (strong) TXPBFetchQuestionAnswersRequest* resultFetchQuestionAnswersRequest;
@end

@implementation TXPBFetchQuestionAnswersRequestBuilder
@synthesize resultFetchQuestionAnswersRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchQuestionAnswersRequest = [[TXPBFetchQuestionAnswersRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchQuestionAnswersRequest;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) clear {
  self.resultFetchQuestionAnswersRequest = [[TXPBFetchQuestionAnswersRequest alloc] init];
  return self;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) clone {
  return [TXPBFetchQuestionAnswersRequest builderWithPrototype:resultFetchQuestionAnswersRequest];
}
- (TXPBFetchQuestionAnswersRequest*) defaultInstance {
  return [TXPBFetchQuestionAnswersRequest defaultInstance];
}
- (TXPBFetchQuestionAnswersRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchQuestionAnswersRequest*) buildPartial {
  TXPBFetchQuestionAnswersRequest* returnMe = resultFetchQuestionAnswersRequest;
  self.resultFetchQuestionAnswersRequest = nil;
  return returnMe;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) mergeFrom:(TXPBFetchQuestionAnswersRequest*) other {
  if (other == [TXPBFetchQuestionAnswersRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuestionId) {
    [self setQuestionId:other.questionId];
  }
  if (other.hasUserType) {
    [self setUserType:other.userType];
  }
  if (other.hasAuthorId) {
    [self setAuthorId:other.authorId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchQuestionAnswersRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setQuestionId:[input readInt64]];
        break;
      }
      case 16: {
        TXPBUserType value = (TXPBUserType)[input readEnum];
        if (TXPBUserTypeIsValidValue(value)) {
          [self setUserType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setAuthorId:[input readInt64]];
        break;
      }
      case 32: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 40: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestionId {
  return resultFetchQuestionAnswersRequest.hasQuestionId;
}
- (SInt64) questionId {
  return resultFetchQuestionAnswersRequest.questionId;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) setQuestionId:(SInt64) value {
  resultFetchQuestionAnswersRequest.hasQuestionId = YES;
  resultFetchQuestionAnswersRequest.questionId = value;
  return self;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) clearQuestionId {
  resultFetchQuestionAnswersRequest.hasQuestionId = NO;
  resultFetchQuestionAnswersRequest.questionId = 0L;
  return self;
}
- (BOOL) hasUserType {
  return resultFetchQuestionAnswersRequest.hasUserType;
}
- (TXPBUserType) userType {
  return resultFetchQuestionAnswersRequest.userType;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) setUserType:(TXPBUserType) value {
  resultFetchQuestionAnswersRequest.hasUserType = YES;
  resultFetchQuestionAnswersRequest.userType = value;
  return self;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) clearUserType {
  resultFetchQuestionAnswersRequest.hasUserType = NO;
  resultFetchQuestionAnswersRequest.userType = TXPBUserTypeChild;
  return self;
}
- (BOOL) hasAuthorId {
  return resultFetchQuestionAnswersRequest.hasAuthorId;
}
- (SInt64) authorId {
  return resultFetchQuestionAnswersRequest.authorId;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) setAuthorId:(SInt64) value {
  resultFetchQuestionAnswersRequest.hasAuthorId = YES;
  resultFetchQuestionAnswersRequest.authorId = value;
  return self;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) clearAuthorId {
  resultFetchQuestionAnswersRequest.hasAuthorId = NO;
  resultFetchQuestionAnswersRequest.authorId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchQuestionAnswersRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchQuestionAnswersRequest.maxId;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchQuestionAnswersRequest.hasMaxId = YES;
  resultFetchQuestionAnswersRequest.maxId = value;
  return self;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) clearMaxId {
  resultFetchQuestionAnswersRequest.hasMaxId = NO;
  resultFetchQuestionAnswersRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchQuestionAnswersRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchQuestionAnswersRequest.sinceId;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchQuestionAnswersRequest.hasSinceId = YES;
  resultFetchQuestionAnswersRequest.sinceId = value;
  return self;
}
- (TXPBFetchQuestionAnswersRequestBuilder*) clearSinceId {
  resultFetchQuestionAnswersRequest.hasSinceId = NO;
  resultFetchQuestionAnswersRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFetchQuestionAnswersResponse ()
@property (strong) NSMutableArray * answersArray;
@property BOOL hasMore;
@property (strong) NSMutableArray * expertAnswersArray;
@property BOOL hasMoreExpertAnswer;
@end

@implementation TXPBFetchQuestionAnswersResponse

@synthesize answersArray;
@dynamic answers;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
@synthesize expertAnswersArray;
@dynamic expertAnswers;
- (BOOL) hasHasMoreExpertAnswer {
  return !!hasHasMoreExpertAnswer_;
}
- (void) setHasHasMoreExpertAnswer:(BOOL) _value_ {
  hasHasMoreExpertAnswer_ = !!_value_;
}
- (BOOL) hasMoreExpertAnswer {
  return !!hasMoreExpertAnswer_;
}
- (void) setHasMoreExpertAnswer:(BOOL) _value_ {
  hasMoreExpertAnswer_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
    self.hasMoreExpertAnswer = NO;
  }
  return self;
}
static TXPBFetchQuestionAnswersResponse* defaultTXPBFetchQuestionAnswersResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchQuestionAnswersResponse class]) {
    defaultTXPBFetchQuestionAnswersResponseInstance = [[TXPBFetchQuestionAnswersResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionAnswersResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchQuestionAnswersResponseInstance;
}
- (NSArray *)answers {
  return answersArray;
}
- (TXPBQuestionAnswer*)answersAtIndex:(NSUInteger)index {
  return [answersArray objectAtIndex:index];
}
- (NSArray *)expertAnswers {
  return expertAnswersArray;
}
- (TXPBQuestionAnswer*)expertAnswersAtIndex:(NSUInteger)index {
  return [expertAnswersArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitanswers = YES;
   [self.answers enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitanswers = NO;
      *stop = YES;
    }
  }];
  if (!isInitanswers) return isInitanswers;
  __block BOOL isInitexpertAnswers = YES;
   [self.expertAnswers enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitexpertAnswers = NO;
      *stop = YES;
    }
  }];
  if (!isInitexpertAnswers) return isInitexpertAnswers;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.expertAnswersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:3 value:element];
  }];
  if (self.hasHasMoreExpertAnswer) {
    [output writeBool:4 value:self.hasMoreExpertAnswer];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  [self.expertAnswersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(3, element);
  }];
  if (self.hasHasMoreExpertAnswer) {
    size_ += computeBoolSize(4, self.hasMoreExpertAnswer);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchQuestionAnswersResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchQuestionAnswersResponse*)[[[TXPBFetchQuestionAnswersResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchQuestionAnswersResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionAnswersResponse*)[[[TXPBFetchQuestionAnswersResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionAnswersResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchQuestionAnswersResponse*)[[[TXPBFetchQuestionAnswersResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchQuestionAnswersResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionAnswersResponse*)[[[TXPBFetchQuestionAnswersResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionAnswersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchQuestionAnswersResponse*)[[[TXPBFetchQuestionAnswersResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchQuestionAnswersResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchQuestionAnswersResponse*)[[[TXPBFetchQuestionAnswersResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchQuestionAnswersResponseBuilder*) builder {
  return [[TXPBFetchQuestionAnswersResponseBuilder alloc] init];
}
+ (TXPBFetchQuestionAnswersResponseBuilder*) builderWithPrototype:(TXPBFetchQuestionAnswersResponse*) prototype {
  return [[TXPBFetchQuestionAnswersResponse builder] mergeFrom:prototype];
}
- (TXPBFetchQuestionAnswersResponseBuilder*) builder {
  return [TXPBFetchQuestionAnswersResponse builder];
}
- (TXPBFetchQuestionAnswersResponseBuilder*) toBuilder {
  return [TXPBFetchQuestionAnswersResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"answers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.expertAnswersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"expertAnswers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMoreExpertAnswer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMoreExpertAnswer", [NSNumber numberWithBool:self.hasMoreExpertAnswer]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBQuestionAnswer* element in self.answersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"answers"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  for (TXPBQuestionAnswer* element in self.expertAnswersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"expertAnswers"];
  }
  if (self.hasHasMoreExpertAnswer) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMoreExpertAnswer] forKey: @"hasMoreExpertAnswer"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchQuestionAnswersResponse class]]) {
    return NO;
  }
  TXPBFetchQuestionAnswersResponse *otherMessage = other;
  return
      [self.answersArray isEqualToArray:otherMessage.answersArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      [self.expertAnswersArray isEqualToArray:otherMessage.expertAnswersArray] &&
      self.hasHasMoreExpertAnswer == otherMessage.hasHasMoreExpertAnswer &&
      (!self.hasHasMoreExpertAnswer || self.hasMoreExpertAnswer == otherMessage.hasMoreExpertAnswer) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  [self.expertAnswersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMoreExpertAnswer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMoreExpertAnswer] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchQuestionAnswersResponseBuilder()
@property (strong) TXPBFetchQuestionAnswersResponse* resultFetchQuestionAnswersResponse;
@end

@implementation TXPBFetchQuestionAnswersResponseBuilder
@synthesize resultFetchQuestionAnswersResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchQuestionAnswersResponse = [[TXPBFetchQuestionAnswersResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchQuestionAnswersResponse;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) clear {
  self.resultFetchQuestionAnswersResponse = [[TXPBFetchQuestionAnswersResponse alloc] init];
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) clone {
  return [TXPBFetchQuestionAnswersResponse builderWithPrototype:resultFetchQuestionAnswersResponse];
}
- (TXPBFetchQuestionAnswersResponse*) defaultInstance {
  return [TXPBFetchQuestionAnswersResponse defaultInstance];
}
- (TXPBFetchQuestionAnswersResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchQuestionAnswersResponse*) buildPartial {
  TXPBFetchQuestionAnswersResponse* returnMe = resultFetchQuestionAnswersResponse;
  self.resultFetchQuestionAnswersResponse = nil;
  return returnMe;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) mergeFrom:(TXPBFetchQuestionAnswersResponse*) other {
  if (other == [TXPBFetchQuestionAnswersResponse defaultInstance]) {
    return self;
  }
  if (other.answersArray.count > 0) {
    if (resultFetchQuestionAnswersResponse.answersArray == nil) {
      resultFetchQuestionAnswersResponse.answersArray = [[NSMutableArray alloc] initWithArray:other.answersArray];
    } else {
      [resultFetchQuestionAnswersResponse.answersArray addObjectsFromArray:other.answersArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  if (other.expertAnswersArray.count > 0) {
    if (resultFetchQuestionAnswersResponse.expertAnswersArray == nil) {
      resultFetchQuestionAnswersResponse.expertAnswersArray = [[NSMutableArray alloc] initWithArray:other.expertAnswersArray];
    } else {
      [resultFetchQuestionAnswersResponse.expertAnswersArray addObjectsFromArray:other.expertAnswersArray];
    }
  }
  if (other.hasHasMoreExpertAnswer) {
    [self setHasMoreExpertAnswer:other.hasMoreExpertAnswer];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchQuestionAnswersResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBQuestionAnswerBuilder* subBuilder = [TXPBQuestionAnswer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAnswers:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
      case 26: {
        TXPBQuestionAnswerBuilder* subBuilder = [TXPBQuestionAnswer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExpertAnswers:[subBuilder buildPartial]];
        break;
      }
      case 32: {
        [self setHasMoreExpertAnswer:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)answers {
  return resultFetchQuestionAnswersResponse.answersArray;
}
- (TXPBQuestionAnswer*)answersAtIndex:(NSUInteger)index {
  return [resultFetchQuestionAnswersResponse answersAtIndex:index];
}
- (TXPBFetchQuestionAnswersResponseBuilder *)addAnswers:(TXPBQuestionAnswer*)value {
  if (resultFetchQuestionAnswersResponse.answersArray == nil) {
    resultFetchQuestionAnswersResponse.answersArray = [[NSMutableArray alloc]init];
  }
  [resultFetchQuestionAnswersResponse.answersArray addObject:value];
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder *)setAnswersArray:(NSArray *)array {
  resultFetchQuestionAnswersResponse.answersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder *)clearAnswers {
  resultFetchQuestionAnswersResponse.answersArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchQuestionAnswersResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchQuestionAnswersResponse.hasMore;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchQuestionAnswersResponse.hasHasMore = YES;
  resultFetchQuestionAnswersResponse.hasMore = value;
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) clearHasMore {
  resultFetchQuestionAnswersResponse.hasHasMore = NO;
  resultFetchQuestionAnswersResponse.hasMore = NO;
  return self;
}
- (NSMutableArray *)expertAnswers {
  return resultFetchQuestionAnswersResponse.expertAnswersArray;
}
- (TXPBQuestionAnswer*)expertAnswersAtIndex:(NSUInteger)index {
  return [resultFetchQuestionAnswersResponse expertAnswersAtIndex:index];
}
- (TXPBFetchQuestionAnswersResponseBuilder *)addExpertAnswers:(TXPBQuestionAnswer*)value {
  if (resultFetchQuestionAnswersResponse.expertAnswersArray == nil) {
    resultFetchQuestionAnswersResponse.expertAnswersArray = [[NSMutableArray alloc]init];
  }
  [resultFetchQuestionAnswersResponse.expertAnswersArray addObject:value];
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder *)setExpertAnswersArray:(NSArray *)array {
  resultFetchQuestionAnswersResponse.expertAnswersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder *)clearExpertAnswers {
  resultFetchQuestionAnswersResponse.expertAnswersArray = nil;
  return self;
}
- (BOOL) hasHasMoreExpertAnswer {
  return resultFetchQuestionAnswersResponse.hasHasMoreExpertAnswer;
}
- (BOOL) hasMoreExpertAnswer {
  return resultFetchQuestionAnswersResponse.hasMoreExpertAnswer;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) setHasMoreExpertAnswer:(BOOL) value {
  resultFetchQuestionAnswersResponse.hasHasMoreExpertAnswer = YES;
  resultFetchQuestionAnswersResponse.hasMoreExpertAnswer = value;
  return self;
}
- (TXPBFetchQuestionAnswersResponseBuilder*) clearHasMoreExpertAnswer {
  resultFetchQuestionAnswersResponse.hasHasMoreExpertAnswer = NO;
  resultFetchQuestionAnswersResponse.hasMoreExpertAnswer = NO;
  return self;
}
@end

@interface TXPBFollowQuestionRequest ()
@property SInt64 questionId;
@property BOOL isFollow;
@end

@implementation TXPBFollowQuestionRequest

- (BOOL) hasQuestionId {
  return !!hasQuestionId_;
}
- (void) setHasQuestionId:(BOOL) _value_ {
  hasQuestionId_ = !!_value_;
}
@synthesize questionId;
- (BOOL) hasIsFollow {
  return !!hasIsFollow_;
}
- (void) setHasIsFollow:(BOOL) _value_ {
  hasIsFollow_ = !!_value_;
}
- (BOOL) isFollow {
  return !!isFollow_;
}
- (void) setIsFollow:(BOOL) _value_ {
  isFollow_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.questionId = 0L;
    self.isFollow = NO;
  }
  return self;
}
static TXPBFollowQuestionRequest* defaultTXPBFollowQuestionRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFollowQuestionRequest class]) {
    defaultTXPBFollowQuestionRequestInstance = [[TXPBFollowQuestionRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFollowQuestionRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFollowQuestionRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasQuestionId) {
    return NO;
  }
  if (!self.hasIsFollow) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestionId) {
    [output writeInt64:1 value:self.questionId];
  }
  if (self.hasIsFollow) {
    [output writeBool:2 value:self.isFollow];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestionId) {
    size_ += computeInt64Size(1, self.questionId);
  }
  if (self.hasIsFollow) {
    size_ += computeBoolSize(2, self.isFollow);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFollowQuestionRequest*) parseFromData:(NSData*) data {
  return (TXPBFollowQuestionRequest*)[[[TXPBFollowQuestionRequest builder] mergeFromData:data] build];
}
+ (TXPBFollowQuestionRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowQuestionRequest*)[[[TXPBFollowQuestionRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowQuestionRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFollowQuestionRequest*)[[[TXPBFollowQuestionRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFollowQuestionRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowQuestionRequest*)[[[TXPBFollowQuestionRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowQuestionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFollowQuestionRequest*)[[[TXPBFollowQuestionRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFollowQuestionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowQuestionRequest*)[[[TXPBFollowQuestionRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowQuestionRequestBuilder*) builder {
  return [[TXPBFollowQuestionRequestBuilder alloc] init];
}
+ (TXPBFollowQuestionRequestBuilder*) builderWithPrototype:(TXPBFollowQuestionRequest*) prototype {
  return [[TXPBFollowQuestionRequest builder] mergeFrom:prototype];
}
- (TXPBFollowQuestionRequestBuilder*) builder {
  return [TXPBFollowQuestionRequest builder];
}
- (TXPBFollowQuestionRequestBuilder*) toBuilder {
  return [TXPBFollowQuestionRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questionId", [NSNumber numberWithLongLong:self.questionId]];
  }
  if (self.hasIsFollow) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFollow", [NSNumber numberWithBool:self.isFollow]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasQuestionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.questionId] forKey: @"questionId"];
  }
  if (self.hasIsFollow) {
    [dictionary setObject: [NSNumber numberWithBool:self.isFollow] forKey: @"isFollow"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFollowQuestionRequest class]]) {
    return NO;
  }
  TXPBFollowQuestionRequest *otherMessage = other;
  return
      self.hasQuestionId == otherMessage.hasQuestionId &&
      (!self.hasQuestionId || self.questionId == otherMessage.questionId) &&
      self.hasIsFollow == otherMessage.hasIsFollow &&
      (!self.hasIsFollow || self.isFollow == otherMessage.isFollow) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasQuestionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.questionId] hash];
  }
  if (self.hasIsFollow) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isFollow] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFollowQuestionRequestBuilder()
@property (strong) TXPBFollowQuestionRequest* resultFollowQuestionRequest;
@end

@implementation TXPBFollowQuestionRequestBuilder
@synthesize resultFollowQuestionRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFollowQuestionRequest = [[TXPBFollowQuestionRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFollowQuestionRequest;
}
- (TXPBFollowQuestionRequestBuilder*) clear {
  self.resultFollowQuestionRequest = [[TXPBFollowQuestionRequest alloc] init];
  return self;
}
- (TXPBFollowQuestionRequestBuilder*) clone {
  return [TXPBFollowQuestionRequest builderWithPrototype:resultFollowQuestionRequest];
}
- (TXPBFollowQuestionRequest*) defaultInstance {
  return [TXPBFollowQuestionRequest defaultInstance];
}
- (TXPBFollowQuestionRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFollowQuestionRequest*) buildPartial {
  TXPBFollowQuestionRequest* returnMe = resultFollowQuestionRequest;
  self.resultFollowQuestionRequest = nil;
  return returnMe;
}
- (TXPBFollowQuestionRequestBuilder*) mergeFrom:(TXPBFollowQuestionRequest*) other {
  if (other == [TXPBFollowQuestionRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuestionId) {
    [self setQuestionId:other.questionId];
  }
  if (other.hasIsFollow) {
    [self setIsFollow:other.isFollow];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFollowQuestionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFollowQuestionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setQuestionId:[input readInt64]];
        break;
      }
      case 16: {
        [self setIsFollow:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestionId {
  return resultFollowQuestionRequest.hasQuestionId;
}
- (SInt64) questionId {
  return resultFollowQuestionRequest.questionId;
}
- (TXPBFollowQuestionRequestBuilder*) setQuestionId:(SInt64) value {
  resultFollowQuestionRequest.hasQuestionId = YES;
  resultFollowQuestionRequest.questionId = value;
  return self;
}
- (TXPBFollowQuestionRequestBuilder*) clearQuestionId {
  resultFollowQuestionRequest.hasQuestionId = NO;
  resultFollowQuestionRequest.questionId = 0L;
  return self;
}
- (BOOL) hasIsFollow {
  return resultFollowQuestionRequest.hasIsFollow;
}
- (BOOL) isFollow {
  return resultFollowQuestionRequest.isFollow;
}
- (TXPBFollowQuestionRequestBuilder*) setIsFollow:(BOOL) value {
  resultFollowQuestionRequest.hasIsFollow = YES;
  resultFollowQuestionRequest.isFollow = value;
  return self;
}
- (TXPBFollowQuestionRequestBuilder*) clearIsFollow {
  resultFollowQuestionRequest.hasIsFollow = NO;
  resultFollowQuestionRequest.isFollow = NO;
  return self;
}
@end

@interface TXPBFollowQuestionResponse ()
@end

@implementation TXPBFollowQuestionResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFollowQuestionResponse* defaultTXPBFollowQuestionResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFollowQuestionResponse class]) {
    defaultTXPBFollowQuestionResponseInstance = [[TXPBFollowQuestionResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFollowQuestionResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFollowQuestionResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFollowQuestionResponse*) parseFromData:(NSData*) data {
  return (TXPBFollowQuestionResponse*)[[[TXPBFollowQuestionResponse builder] mergeFromData:data] build];
}
+ (TXPBFollowQuestionResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowQuestionResponse*)[[[TXPBFollowQuestionResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowQuestionResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFollowQuestionResponse*)[[[TXPBFollowQuestionResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFollowQuestionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowQuestionResponse*)[[[TXPBFollowQuestionResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowQuestionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFollowQuestionResponse*)[[[TXPBFollowQuestionResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFollowQuestionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowQuestionResponse*)[[[TXPBFollowQuestionResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowQuestionResponseBuilder*) builder {
  return [[TXPBFollowQuestionResponseBuilder alloc] init];
}
+ (TXPBFollowQuestionResponseBuilder*) builderWithPrototype:(TXPBFollowQuestionResponse*) prototype {
  return [[TXPBFollowQuestionResponse builder] mergeFrom:prototype];
}
- (TXPBFollowQuestionResponseBuilder*) builder {
  return [TXPBFollowQuestionResponse builder];
}
- (TXPBFollowQuestionResponseBuilder*) toBuilder {
  return [TXPBFollowQuestionResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFollowQuestionResponse class]]) {
    return NO;
  }
  TXPBFollowQuestionResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFollowQuestionResponseBuilder()
@property (strong) TXPBFollowQuestionResponse* resultFollowQuestionResponse;
@end

@implementation TXPBFollowQuestionResponseBuilder
@synthesize resultFollowQuestionResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFollowQuestionResponse = [[TXPBFollowQuestionResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFollowQuestionResponse;
}
- (TXPBFollowQuestionResponseBuilder*) clear {
  self.resultFollowQuestionResponse = [[TXPBFollowQuestionResponse alloc] init];
  return self;
}
- (TXPBFollowQuestionResponseBuilder*) clone {
  return [TXPBFollowQuestionResponse builderWithPrototype:resultFollowQuestionResponse];
}
- (TXPBFollowQuestionResponse*) defaultInstance {
  return [TXPBFollowQuestionResponse defaultInstance];
}
- (TXPBFollowQuestionResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFollowQuestionResponse*) buildPartial {
  TXPBFollowQuestionResponse* returnMe = resultFollowQuestionResponse;
  self.resultFollowQuestionResponse = nil;
  return returnMe;
}
- (TXPBFollowQuestionResponseBuilder*) mergeFrom:(TXPBFollowQuestionResponse*) other {
  if (other == [TXPBFollowQuestionResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFollowQuestionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFollowQuestionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBAnswerQuestionRequest ()
@property SInt64 questionId;
@property (strong) NSString* content;
@property BOOL anonymous;
@property (strong) NSMutableArray * attachesArray;
@end

@implementation TXPBAnswerQuestionRequest

- (BOOL) hasQuestionId {
  return !!hasQuestionId_;
}
- (void) setHasQuestionId:(BOOL) _value_ {
  hasQuestionId_ = !!_value_;
}
@synthesize questionId;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasAnonymous {
  return !!hasAnonymous_;
}
- (void) setHasAnonymous:(BOOL) _value_ {
  hasAnonymous_ = !!_value_;
}
- (BOOL) anonymous {
  return !!anonymous_;
}
- (void) setAnonymous:(BOOL) _value_ {
  anonymous_ = !!_value_;
}
@synthesize attachesArray;
@dynamic attaches;
- (instancetype) init {
  if ((self = [super init])) {
    self.questionId = 0L;
    self.content = @"";
    self.anonymous = NO;
  }
  return self;
}
static TXPBAnswerQuestionRequest* defaultTXPBAnswerQuestionRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBAnswerQuestionRequest class]) {
    defaultTXPBAnswerQuestionRequestInstance = [[TXPBAnswerQuestionRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAnswerQuestionRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAnswerQuestionRequestInstance;
}
- (NSArray *)attaches {
  return attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [attachesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasQuestionId) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  __block BOOL isInitattaches = YES;
   [self.attaches enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitattaches = NO;
      *stop = YES;
    }
  }];
  if (!isInitattaches) return isInitattaches;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestionId) {
    [output writeInt64:1 value:self.questionId];
  }
  if (self.hasContent) {
    [output writeString:2 value:self.content];
  }
  if (self.hasAnonymous) {
    [output writeBool:3 value:self.anonymous];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestionId) {
    size_ += computeInt64Size(1, self.questionId);
  }
  if (self.hasContent) {
    size_ += computeStringSize(2, self.content);
  }
  if (self.hasAnonymous) {
    size_ += computeBoolSize(3, self.anonymous);
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAnswerQuestionRequest*) parseFromData:(NSData*) data {
  return (TXPBAnswerQuestionRequest*)[[[TXPBAnswerQuestionRequest builder] mergeFromData:data] build];
}
+ (TXPBAnswerQuestionRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAnswerQuestionRequest*)[[[TXPBAnswerQuestionRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAnswerQuestionRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAnswerQuestionRequest*)[[[TXPBAnswerQuestionRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBAnswerQuestionRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAnswerQuestionRequest*)[[[TXPBAnswerQuestionRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAnswerQuestionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAnswerQuestionRequest*)[[[TXPBAnswerQuestionRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAnswerQuestionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAnswerQuestionRequest*)[[[TXPBAnswerQuestionRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAnswerQuestionRequestBuilder*) builder {
  return [[TXPBAnswerQuestionRequestBuilder alloc] init];
}
+ (TXPBAnswerQuestionRequestBuilder*) builderWithPrototype:(TXPBAnswerQuestionRequest*) prototype {
  return [[TXPBAnswerQuestionRequest builder] mergeFrom:prototype];
}
- (TXPBAnswerQuestionRequestBuilder*) builder {
  return [TXPBAnswerQuestionRequest builder];
}
- (TXPBAnswerQuestionRequestBuilder*) toBuilder {
  return [TXPBAnswerQuestionRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestionId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questionId", [NSNumber numberWithLongLong:self.questionId]];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasAnonymous) {
    [output appendFormat:@"%@%@: %@\n", indent, @"anonymous", [NSNumber numberWithBool:self.anonymous]];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"attaches"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasQuestionId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.questionId] forKey: @"questionId"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasAnonymous) {
    [dictionary setObject: [NSNumber numberWithBool:self.anonymous] forKey: @"anonymous"];
  }
  for (TXPBAttach* element in self.attachesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"attaches"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAnswerQuestionRequest class]]) {
    return NO;
  }
  TXPBAnswerQuestionRequest *otherMessage = other;
  return
      self.hasQuestionId == otherMessage.hasQuestionId &&
      (!self.hasQuestionId || self.questionId == otherMessage.questionId) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasAnonymous == otherMessage.hasAnonymous &&
      (!self.hasAnonymous || self.anonymous == otherMessage.anonymous) &&
      [self.attachesArray isEqualToArray:otherMessage.attachesArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasQuestionId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.questionId] hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasAnonymous) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.anonymous] hash];
  }
  [self.attachesArray enumerateObjectsUsingBlock:^(TXPBAttach *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAnswerQuestionRequestBuilder()
@property (strong) TXPBAnswerQuestionRequest* resultAnswerQuestionRequest;
@end

@implementation TXPBAnswerQuestionRequestBuilder
@synthesize resultAnswerQuestionRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAnswerQuestionRequest = [[TXPBAnswerQuestionRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAnswerQuestionRequest;
}
- (TXPBAnswerQuestionRequestBuilder*) clear {
  self.resultAnswerQuestionRequest = [[TXPBAnswerQuestionRequest alloc] init];
  return self;
}
- (TXPBAnswerQuestionRequestBuilder*) clone {
  return [TXPBAnswerQuestionRequest builderWithPrototype:resultAnswerQuestionRequest];
}
- (TXPBAnswerQuestionRequest*) defaultInstance {
  return [TXPBAnswerQuestionRequest defaultInstance];
}
- (TXPBAnswerQuestionRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAnswerQuestionRequest*) buildPartial {
  TXPBAnswerQuestionRequest* returnMe = resultAnswerQuestionRequest;
  self.resultAnswerQuestionRequest = nil;
  return returnMe;
}
- (TXPBAnswerQuestionRequestBuilder*) mergeFrom:(TXPBAnswerQuestionRequest*) other {
  if (other == [TXPBAnswerQuestionRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuestionId) {
    [self setQuestionId:other.questionId];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasAnonymous) {
    [self setAnonymous:other.anonymous];
  }
  if (other.attachesArray.count > 0) {
    if (resultAnswerQuestionRequest.attachesArray == nil) {
      resultAnswerQuestionRequest.attachesArray = [[NSMutableArray alloc] initWithArray:other.attachesArray];
    } else {
      [resultAnswerQuestionRequest.attachesArray addObjectsFromArray:other.attachesArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAnswerQuestionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAnswerQuestionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setQuestionId:[input readInt64]];
        break;
      }
      case 18: {
        [self setContent:[input readString]];
        break;
      }
      case 24: {
        [self setAnonymous:[input readBool]];
        break;
      }
      case 34: {
        TXPBAttachBuilder* subBuilder = [TXPBAttach builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAttaches:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestionId {
  return resultAnswerQuestionRequest.hasQuestionId;
}
- (SInt64) questionId {
  return resultAnswerQuestionRequest.questionId;
}
- (TXPBAnswerQuestionRequestBuilder*) setQuestionId:(SInt64) value {
  resultAnswerQuestionRequest.hasQuestionId = YES;
  resultAnswerQuestionRequest.questionId = value;
  return self;
}
- (TXPBAnswerQuestionRequestBuilder*) clearQuestionId {
  resultAnswerQuestionRequest.hasQuestionId = NO;
  resultAnswerQuestionRequest.questionId = 0L;
  return self;
}
- (BOOL) hasContent {
  return resultAnswerQuestionRequest.hasContent;
}
- (NSString*) content {
  return resultAnswerQuestionRequest.content;
}
- (TXPBAnswerQuestionRequestBuilder*) setContent:(NSString*) value {
  resultAnswerQuestionRequest.hasContent = YES;
  resultAnswerQuestionRequest.content = value;
  return self;
}
- (TXPBAnswerQuestionRequestBuilder*) clearContent {
  resultAnswerQuestionRequest.hasContent = NO;
  resultAnswerQuestionRequest.content = @"";
  return self;
}
- (BOOL) hasAnonymous {
  return resultAnswerQuestionRequest.hasAnonymous;
}
- (BOOL) anonymous {
  return resultAnswerQuestionRequest.anonymous;
}
- (TXPBAnswerQuestionRequestBuilder*) setAnonymous:(BOOL) value {
  resultAnswerQuestionRequest.hasAnonymous = YES;
  resultAnswerQuestionRequest.anonymous = value;
  return self;
}
- (TXPBAnswerQuestionRequestBuilder*) clearAnonymous {
  resultAnswerQuestionRequest.hasAnonymous = NO;
  resultAnswerQuestionRequest.anonymous = NO;
  return self;
}
- (NSMutableArray *)attaches {
  return resultAnswerQuestionRequest.attachesArray;
}
- (TXPBAttach*)attachesAtIndex:(NSUInteger)index {
  return [resultAnswerQuestionRequest attachesAtIndex:index];
}
- (TXPBAnswerQuestionRequestBuilder *)addAttaches:(TXPBAttach*)value {
  if (resultAnswerQuestionRequest.attachesArray == nil) {
    resultAnswerQuestionRequest.attachesArray = [[NSMutableArray alloc]init];
  }
  [resultAnswerQuestionRequest.attachesArray addObject:value];
  return self;
}
- (TXPBAnswerQuestionRequestBuilder *)setAttachesArray:(NSArray *)array {
  resultAnswerQuestionRequest.attachesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBAnswerQuestionRequestBuilder *)clearAttaches {
  resultAnswerQuestionRequest.attachesArray = nil;
  return self;
}
@end

@interface TXPBAnswerQuestionResponse ()
@end

@implementation TXPBAnswerQuestionResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBAnswerQuestionResponse* defaultTXPBAnswerQuestionResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBAnswerQuestionResponse class]) {
    defaultTXPBAnswerQuestionResponseInstance = [[TXPBAnswerQuestionResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBAnswerQuestionResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBAnswerQuestionResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBAnswerQuestionResponse*) parseFromData:(NSData*) data {
  return (TXPBAnswerQuestionResponse*)[[[TXPBAnswerQuestionResponse builder] mergeFromData:data] build];
}
+ (TXPBAnswerQuestionResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAnswerQuestionResponse*)[[[TXPBAnswerQuestionResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBAnswerQuestionResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBAnswerQuestionResponse*)[[[TXPBAnswerQuestionResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBAnswerQuestionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAnswerQuestionResponse*)[[[TXPBAnswerQuestionResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAnswerQuestionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBAnswerQuestionResponse*)[[[TXPBAnswerQuestionResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBAnswerQuestionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBAnswerQuestionResponse*)[[[TXPBAnswerQuestionResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBAnswerQuestionResponseBuilder*) builder {
  return [[TXPBAnswerQuestionResponseBuilder alloc] init];
}
+ (TXPBAnswerQuestionResponseBuilder*) builderWithPrototype:(TXPBAnswerQuestionResponse*) prototype {
  return [[TXPBAnswerQuestionResponse builder] mergeFrom:prototype];
}
- (TXPBAnswerQuestionResponseBuilder*) builder {
  return [TXPBAnswerQuestionResponse builder];
}
- (TXPBAnswerQuestionResponseBuilder*) toBuilder {
  return [TXPBAnswerQuestionResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBAnswerQuestionResponse class]]) {
    return NO;
  }
  TXPBAnswerQuestionResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBAnswerQuestionResponseBuilder()
@property (strong) TXPBAnswerQuestionResponse* resultAnswerQuestionResponse;
@end

@implementation TXPBAnswerQuestionResponseBuilder
@synthesize resultAnswerQuestionResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultAnswerQuestionResponse = [[TXPBAnswerQuestionResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultAnswerQuestionResponse;
}
- (TXPBAnswerQuestionResponseBuilder*) clear {
  self.resultAnswerQuestionResponse = [[TXPBAnswerQuestionResponse alloc] init];
  return self;
}
- (TXPBAnswerQuestionResponseBuilder*) clone {
  return [TXPBAnswerQuestionResponse builderWithPrototype:resultAnswerQuestionResponse];
}
- (TXPBAnswerQuestionResponse*) defaultInstance {
  return [TXPBAnswerQuestionResponse defaultInstance];
}
- (TXPBAnswerQuestionResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBAnswerQuestionResponse*) buildPartial {
  TXPBAnswerQuestionResponse* returnMe = resultAnswerQuestionResponse;
  self.resultAnswerQuestionResponse = nil;
  return returnMe;
}
- (TXPBAnswerQuestionResponseBuilder*) mergeFrom:(TXPBAnswerQuestionResponse*) other {
  if (other == [TXPBAnswerQuestionResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBAnswerQuestionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBAnswerQuestionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBDeleteQuestionAnswerRequest ()
@property SInt64 questionAnswerId;
@end

@implementation TXPBDeleteQuestionAnswerRequest

- (BOOL) hasQuestionAnswerId {
  return !!hasQuestionAnswerId_;
}
- (void) setHasQuestionAnswerId:(BOOL) _value_ {
  hasQuestionAnswerId_ = !!_value_;
}
@synthesize questionAnswerId;
- (instancetype) init {
  if ((self = [super init])) {
    self.questionAnswerId = 0L;
  }
  return self;
}
static TXPBDeleteQuestionAnswerRequest* defaultTXPBDeleteQuestionAnswerRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBDeleteQuestionAnswerRequest class]) {
    defaultTXPBDeleteQuestionAnswerRequestInstance = [[TXPBDeleteQuestionAnswerRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDeleteQuestionAnswerRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDeleteQuestionAnswerRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasQuestionAnswerId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasQuestionAnswerId) {
    [output writeInt64:1 value:self.questionAnswerId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasQuestionAnswerId) {
    size_ += computeInt64Size(1, self.questionAnswerId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDeleteQuestionAnswerRequest*) parseFromData:(NSData*) data {
  return (TXPBDeleteQuestionAnswerRequest*)[[[TXPBDeleteQuestionAnswerRequest builder] mergeFromData:data] build];
}
+ (TXPBDeleteQuestionAnswerRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteQuestionAnswerRequest*)[[[TXPBDeleteQuestionAnswerRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteQuestionAnswerRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDeleteQuestionAnswerRequest*)[[[TXPBDeleteQuestionAnswerRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBDeleteQuestionAnswerRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteQuestionAnswerRequest*)[[[TXPBDeleteQuestionAnswerRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteQuestionAnswerRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDeleteQuestionAnswerRequest*)[[[TXPBDeleteQuestionAnswerRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDeleteQuestionAnswerRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteQuestionAnswerRequest*)[[[TXPBDeleteQuestionAnswerRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteQuestionAnswerRequestBuilder*) builder {
  return [[TXPBDeleteQuestionAnswerRequestBuilder alloc] init];
}
+ (TXPBDeleteQuestionAnswerRequestBuilder*) builderWithPrototype:(TXPBDeleteQuestionAnswerRequest*) prototype {
  return [[TXPBDeleteQuestionAnswerRequest builder] mergeFrom:prototype];
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) builder {
  return [TXPBDeleteQuestionAnswerRequest builder];
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) toBuilder {
  return [TXPBDeleteQuestionAnswerRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasQuestionAnswerId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"questionAnswerId", [NSNumber numberWithLongLong:self.questionAnswerId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasQuestionAnswerId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.questionAnswerId] forKey: @"questionAnswerId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDeleteQuestionAnswerRequest class]]) {
    return NO;
  }
  TXPBDeleteQuestionAnswerRequest *otherMessage = other;
  return
      self.hasQuestionAnswerId == otherMessage.hasQuestionAnswerId &&
      (!self.hasQuestionAnswerId || self.questionAnswerId == otherMessage.questionAnswerId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasQuestionAnswerId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.questionAnswerId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDeleteQuestionAnswerRequestBuilder()
@property (strong) TXPBDeleteQuestionAnswerRequest* resultDeleteQuestionAnswerRequest;
@end

@implementation TXPBDeleteQuestionAnswerRequestBuilder
@synthesize resultDeleteQuestionAnswerRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteQuestionAnswerRequest = [[TXPBDeleteQuestionAnswerRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteQuestionAnswerRequest;
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) clear {
  self.resultDeleteQuestionAnswerRequest = [[TXPBDeleteQuestionAnswerRequest alloc] init];
  return self;
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) clone {
  return [TXPBDeleteQuestionAnswerRequest builderWithPrototype:resultDeleteQuestionAnswerRequest];
}
- (TXPBDeleteQuestionAnswerRequest*) defaultInstance {
  return [TXPBDeleteQuestionAnswerRequest defaultInstance];
}
- (TXPBDeleteQuestionAnswerRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDeleteQuestionAnswerRequest*) buildPartial {
  TXPBDeleteQuestionAnswerRequest* returnMe = resultDeleteQuestionAnswerRequest;
  self.resultDeleteQuestionAnswerRequest = nil;
  return returnMe;
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) mergeFrom:(TXPBDeleteQuestionAnswerRequest*) other {
  if (other == [TXPBDeleteQuestionAnswerRequest defaultInstance]) {
    return self;
  }
  if (other.hasQuestionAnswerId) {
    [self setQuestionAnswerId:other.questionAnswerId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setQuestionAnswerId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasQuestionAnswerId {
  return resultDeleteQuestionAnswerRequest.hasQuestionAnswerId;
}
- (SInt64) questionAnswerId {
  return resultDeleteQuestionAnswerRequest.questionAnswerId;
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) setQuestionAnswerId:(SInt64) value {
  resultDeleteQuestionAnswerRequest.hasQuestionAnswerId = YES;
  resultDeleteQuestionAnswerRequest.questionAnswerId = value;
  return self;
}
- (TXPBDeleteQuestionAnswerRequestBuilder*) clearQuestionAnswerId {
  resultDeleteQuestionAnswerRequest.hasQuestionAnswerId = NO;
  resultDeleteQuestionAnswerRequest.questionAnswerId = 0L;
  return self;
}
@end

@interface TXPBDeleteQuestionAnswerResponse ()
@end

@implementation TXPBDeleteQuestionAnswerResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBDeleteQuestionAnswerResponse* defaultTXPBDeleteQuestionAnswerResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBDeleteQuestionAnswerResponse class]) {
    defaultTXPBDeleteQuestionAnswerResponseInstance = [[TXPBDeleteQuestionAnswerResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBDeleteQuestionAnswerResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBDeleteQuestionAnswerResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBDeleteQuestionAnswerResponse*) parseFromData:(NSData*) data {
  return (TXPBDeleteQuestionAnswerResponse*)[[[TXPBDeleteQuestionAnswerResponse builder] mergeFromData:data] build];
}
+ (TXPBDeleteQuestionAnswerResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteQuestionAnswerResponse*)[[[TXPBDeleteQuestionAnswerResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteQuestionAnswerResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBDeleteQuestionAnswerResponse*)[[[TXPBDeleteQuestionAnswerResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBDeleteQuestionAnswerResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteQuestionAnswerResponse*)[[[TXPBDeleteQuestionAnswerResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteQuestionAnswerResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBDeleteQuestionAnswerResponse*)[[[TXPBDeleteQuestionAnswerResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBDeleteQuestionAnswerResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBDeleteQuestionAnswerResponse*)[[[TXPBDeleteQuestionAnswerResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBDeleteQuestionAnswerResponseBuilder*) builder {
  return [[TXPBDeleteQuestionAnswerResponseBuilder alloc] init];
}
+ (TXPBDeleteQuestionAnswerResponseBuilder*) builderWithPrototype:(TXPBDeleteQuestionAnswerResponse*) prototype {
  return [[TXPBDeleteQuestionAnswerResponse builder] mergeFrom:prototype];
}
- (TXPBDeleteQuestionAnswerResponseBuilder*) builder {
  return [TXPBDeleteQuestionAnswerResponse builder];
}
- (TXPBDeleteQuestionAnswerResponseBuilder*) toBuilder {
  return [TXPBDeleteQuestionAnswerResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBDeleteQuestionAnswerResponse class]]) {
    return NO;
  }
  TXPBDeleteQuestionAnswerResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBDeleteQuestionAnswerResponseBuilder()
@property (strong) TXPBDeleteQuestionAnswerResponse* resultDeleteQuestionAnswerResponse;
@end

@implementation TXPBDeleteQuestionAnswerResponseBuilder
@synthesize resultDeleteQuestionAnswerResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultDeleteQuestionAnswerResponse = [[TXPBDeleteQuestionAnswerResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultDeleteQuestionAnswerResponse;
}
- (TXPBDeleteQuestionAnswerResponseBuilder*) clear {
  self.resultDeleteQuestionAnswerResponse = [[TXPBDeleteQuestionAnswerResponse alloc] init];
  return self;
}
- (TXPBDeleteQuestionAnswerResponseBuilder*) clone {
  return [TXPBDeleteQuestionAnswerResponse builderWithPrototype:resultDeleteQuestionAnswerResponse];
}
- (TXPBDeleteQuestionAnswerResponse*) defaultInstance {
  return [TXPBDeleteQuestionAnswerResponse defaultInstance];
}
- (TXPBDeleteQuestionAnswerResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBDeleteQuestionAnswerResponse*) buildPartial {
  TXPBDeleteQuestionAnswerResponse* returnMe = resultDeleteQuestionAnswerResponse;
  self.resultDeleteQuestionAnswerResponse = nil;
  return returnMe;
}
- (TXPBDeleteQuestionAnswerResponseBuilder*) mergeFrom:(TXPBDeleteQuestionAnswerResponse*) other {
  if (other == [TXPBDeleteQuestionAnswerResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBDeleteQuestionAnswerResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBDeleteQuestionAnswerResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchExpertsRequest ()
@property SInt32 pageNum;
@end

@implementation TXPBFetchExpertsRequest

- (BOOL) hasPageNum {
  return !!hasPageNum_;
}
- (void) setHasPageNum:(BOOL) _value_ {
  hasPageNum_ = !!_value_;
}
@synthesize pageNum;
- (instancetype) init {
  if ((self = [super init])) {
    self.pageNum = 0;
  }
  return self;
}
static TXPBFetchExpertsRequest* defaultTXPBFetchExpertsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchExpertsRequest class]) {
    defaultTXPBFetchExpertsRequestInstance = [[TXPBFetchExpertsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchExpertsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchExpertsRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPageNum) {
    [output writeInt32:1 value:self.pageNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPageNum) {
    size_ += computeInt32Size(1, self.pageNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchExpertsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchExpertsRequest*)[[[TXPBFetchExpertsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchExpertsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertsRequest*)[[[TXPBFetchExpertsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchExpertsRequest*)[[[TXPBFetchExpertsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchExpertsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertsRequest*)[[[TXPBFetchExpertsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchExpertsRequest*)[[[TXPBFetchExpertsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchExpertsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertsRequest*)[[[TXPBFetchExpertsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertsRequestBuilder*) builder {
  return [[TXPBFetchExpertsRequestBuilder alloc] init];
}
+ (TXPBFetchExpertsRequestBuilder*) builderWithPrototype:(TXPBFetchExpertsRequest*) prototype {
  return [[TXPBFetchExpertsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchExpertsRequestBuilder*) builder {
  return [TXPBFetchExpertsRequest builder];
}
- (TXPBFetchExpertsRequestBuilder*) toBuilder {
  return [TXPBFetchExpertsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPageNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageNum", [NSNumber numberWithInteger:self.pageNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPageNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageNum] forKey: @"pageNum"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchExpertsRequest class]]) {
    return NO;
  }
  TXPBFetchExpertsRequest *otherMessage = other;
  return
      self.hasPageNum == otherMessage.hasPageNum &&
      (!self.hasPageNum || self.pageNum == otherMessage.pageNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPageNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchExpertsRequestBuilder()
@property (strong) TXPBFetchExpertsRequest* resultFetchExpertsRequest;
@end

@implementation TXPBFetchExpertsRequestBuilder
@synthesize resultFetchExpertsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchExpertsRequest = [[TXPBFetchExpertsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchExpertsRequest;
}
- (TXPBFetchExpertsRequestBuilder*) clear {
  self.resultFetchExpertsRequest = [[TXPBFetchExpertsRequest alloc] init];
  return self;
}
- (TXPBFetchExpertsRequestBuilder*) clone {
  return [TXPBFetchExpertsRequest builderWithPrototype:resultFetchExpertsRequest];
}
- (TXPBFetchExpertsRequest*) defaultInstance {
  return [TXPBFetchExpertsRequest defaultInstance];
}
- (TXPBFetchExpertsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchExpertsRequest*) buildPartial {
  TXPBFetchExpertsRequest* returnMe = resultFetchExpertsRequest;
  self.resultFetchExpertsRequest = nil;
  return returnMe;
}
- (TXPBFetchExpertsRequestBuilder*) mergeFrom:(TXPBFetchExpertsRequest*) other {
  if (other == [TXPBFetchExpertsRequest defaultInstance]) {
    return self;
  }
  if (other.hasPageNum) {
    [self setPageNum:other.pageNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchExpertsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchExpertsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPageNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPageNum {
  return resultFetchExpertsRequest.hasPageNum;
}
- (SInt32) pageNum {
  return resultFetchExpertsRequest.pageNum;
}
- (TXPBFetchExpertsRequestBuilder*) setPageNum:(SInt32) value {
  resultFetchExpertsRequest.hasPageNum = YES;
  resultFetchExpertsRequest.pageNum = value;
  return self;
}
- (TXPBFetchExpertsRequestBuilder*) clearPageNum {
  resultFetchExpertsRequest.hasPageNum = NO;
  resultFetchExpertsRequest.pageNum = 0;
  return self;
}
@end

@interface TXPBFetchExpertsResponse ()
@property (strong) NSMutableArray * expertsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchExpertsResponse

@synthesize expertsArray;
@dynamic experts;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchExpertsResponse* defaultTXPBFetchExpertsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchExpertsResponse class]) {
    defaultTXPBFetchExpertsResponseInstance = [[TXPBFetchExpertsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchExpertsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchExpertsResponseInstance;
}
- (NSArray *)experts {
  return expertsArray;
}
- (TXPBExpert*)expertsAtIndex:(NSUInteger)index {
  return [expertsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitexperts = YES;
   [self.experts enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitexperts = NO;
      *stop = YES;
    }
  }];
  if (!isInitexperts) return isInitexperts;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchExpertsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchExpertsResponse*)[[[TXPBFetchExpertsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchExpertsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertsResponse*)[[[TXPBFetchExpertsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchExpertsResponse*)[[[TXPBFetchExpertsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchExpertsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertsResponse*)[[[TXPBFetchExpertsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchExpertsResponse*)[[[TXPBFetchExpertsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchExpertsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertsResponse*)[[[TXPBFetchExpertsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertsResponseBuilder*) builder {
  return [[TXPBFetchExpertsResponseBuilder alloc] init];
}
+ (TXPBFetchExpertsResponseBuilder*) builderWithPrototype:(TXPBFetchExpertsResponse*) prototype {
  return [[TXPBFetchExpertsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchExpertsResponseBuilder*) builder {
  return [TXPBFetchExpertsResponse builder];
}
- (TXPBFetchExpertsResponseBuilder*) toBuilder {
  return [TXPBFetchExpertsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"experts"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBExpert* element in self.expertsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"experts"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchExpertsResponse class]]) {
    return NO;
  }
  TXPBFetchExpertsResponse *otherMessage = other;
  return
      [self.expertsArray isEqualToArray:otherMessage.expertsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchExpertsResponseBuilder()
@property (strong) TXPBFetchExpertsResponse* resultFetchExpertsResponse;
@end

@implementation TXPBFetchExpertsResponseBuilder
@synthesize resultFetchExpertsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchExpertsResponse = [[TXPBFetchExpertsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchExpertsResponse;
}
- (TXPBFetchExpertsResponseBuilder*) clear {
  self.resultFetchExpertsResponse = [[TXPBFetchExpertsResponse alloc] init];
  return self;
}
- (TXPBFetchExpertsResponseBuilder*) clone {
  return [TXPBFetchExpertsResponse builderWithPrototype:resultFetchExpertsResponse];
}
- (TXPBFetchExpertsResponse*) defaultInstance {
  return [TXPBFetchExpertsResponse defaultInstance];
}
- (TXPBFetchExpertsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchExpertsResponse*) buildPartial {
  TXPBFetchExpertsResponse* returnMe = resultFetchExpertsResponse;
  self.resultFetchExpertsResponse = nil;
  return returnMe;
}
- (TXPBFetchExpertsResponseBuilder*) mergeFrom:(TXPBFetchExpertsResponse*) other {
  if (other == [TXPBFetchExpertsResponse defaultInstance]) {
    return self;
  }
  if (other.expertsArray.count > 0) {
    if (resultFetchExpertsResponse.expertsArray == nil) {
      resultFetchExpertsResponse.expertsArray = [[NSMutableArray alloc] initWithArray:other.expertsArray];
    } else {
      [resultFetchExpertsResponse.expertsArray addObjectsFromArray:other.expertsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchExpertsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchExpertsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBExpertBuilder* subBuilder = [TXPBExpert builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExperts:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)experts {
  return resultFetchExpertsResponse.expertsArray;
}
- (TXPBExpert*)expertsAtIndex:(NSUInteger)index {
  return [resultFetchExpertsResponse expertsAtIndex:index];
}
- (TXPBFetchExpertsResponseBuilder *)addExperts:(TXPBExpert*)value {
  if (resultFetchExpertsResponse.expertsArray == nil) {
    resultFetchExpertsResponse.expertsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchExpertsResponse.expertsArray addObject:value];
  return self;
}
- (TXPBFetchExpertsResponseBuilder *)setExpertsArray:(NSArray *)array {
  resultFetchExpertsResponse.expertsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchExpertsResponseBuilder *)clearExperts {
  resultFetchExpertsResponse.expertsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchExpertsResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchExpertsResponse.hasMore;
}
- (TXPBFetchExpertsResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchExpertsResponse.hasHasMore = YES;
  resultFetchExpertsResponse.hasMore = value;
  return self;
}
- (TXPBFetchExpertsResponseBuilder*) clearHasMore {
  resultFetchExpertsResponse.hasHasMore = NO;
  resultFetchExpertsResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchRecommendExpertsRequest ()
@end

@implementation TXPBFetchRecommendExpertsRequest

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchRecommendExpertsRequest* defaultTXPBFetchRecommendExpertsRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchRecommendExpertsRequest class]) {
    defaultTXPBFetchRecommendExpertsRequestInstance = [[TXPBFetchRecommendExpertsRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendExpertsRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendExpertsRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchRecommendExpertsRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchRecommendExpertsRequest*)[[[TXPBFetchRecommendExpertsRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchRecommendExpertsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendExpertsRequest*)[[[TXPBFetchRecommendExpertsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendExpertsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchRecommendExpertsRequest*)[[[TXPBFetchRecommendExpertsRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchRecommendExpertsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendExpertsRequest*)[[[TXPBFetchRecommendExpertsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendExpertsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchRecommendExpertsRequest*)[[[TXPBFetchRecommendExpertsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchRecommendExpertsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendExpertsRequest*)[[[TXPBFetchRecommendExpertsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendExpertsRequestBuilder*) builder {
  return [[TXPBFetchRecommendExpertsRequestBuilder alloc] init];
}
+ (TXPBFetchRecommendExpertsRequestBuilder*) builderWithPrototype:(TXPBFetchRecommendExpertsRequest*) prototype {
  return [[TXPBFetchRecommendExpertsRequest builder] mergeFrom:prototype];
}
- (TXPBFetchRecommendExpertsRequestBuilder*) builder {
  return [TXPBFetchRecommendExpertsRequest builder];
}
- (TXPBFetchRecommendExpertsRequestBuilder*) toBuilder {
  return [TXPBFetchRecommendExpertsRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchRecommendExpertsRequest class]]) {
    return NO;
  }
  TXPBFetchRecommendExpertsRequest *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchRecommendExpertsRequestBuilder()
@property (strong) TXPBFetchRecommendExpertsRequest* resultFetchRecommendExpertsRequest;
@end

@implementation TXPBFetchRecommendExpertsRequestBuilder
@synthesize resultFetchRecommendExpertsRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchRecommendExpertsRequest = [[TXPBFetchRecommendExpertsRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchRecommendExpertsRequest;
}
- (TXPBFetchRecommendExpertsRequestBuilder*) clear {
  self.resultFetchRecommendExpertsRequest = [[TXPBFetchRecommendExpertsRequest alloc] init];
  return self;
}
- (TXPBFetchRecommendExpertsRequestBuilder*) clone {
  return [TXPBFetchRecommendExpertsRequest builderWithPrototype:resultFetchRecommendExpertsRequest];
}
- (TXPBFetchRecommendExpertsRequest*) defaultInstance {
  return [TXPBFetchRecommendExpertsRequest defaultInstance];
}
- (TXPBFetchRecommendExpertsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchRecommendExpertsRequest*) buildPartial {
  TXPBFetchRecommendExpertsRequest* returnMe = resultFetchRecommendExpertsRequest;
  self.resultFetchRecommendExpertsRequest = nil;
  return returnMe;
}
- (TXPBFetchRecommendExpertsRequestBuilder*) mergeFrom:(TXPBFetchRecommendExpertsRequest*) other {
  if (other == [TXPBFetchRecommendExpertsRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchRecommendExpertsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchRecommendExpertsRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBFetchRecommendExpertsResponse ()
@property (strong) NSMutableArray * expertsArray;
@end

@implementation TXPBFetchRecommendExpertsResponse

@synthesize expertsArray;
@dynamic experts;
- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFetchRecommendExpertsResponse* defaultTXPBFetchRecommendExpertsResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchRecommendExpertsResponse class]) {
    defaultTXPBFetchRecommendExpertsResponseInstance = [[TXPBFetchRecommendExpertsResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendExpertsResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchRecommendExpertsResponseInstance;
}
- (NSArray *)experts {
  return expertsArray;
}
- (TXPBExpert*)expertsAtIndex:(NSUInteger)index {
  return [expertsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  __block BOOL isInitexperts = YES;
   [self.experts enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitexperts = NO;
      *stop = YES;
    }
  }];
  if (!isInitexperts) return isInitexperts;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchRecommendExpertsResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchRecommendExpertsResponse*)[[[TXPBFetchRecommendExpertsResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchRecommendExpertsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendExpertsResponse*)[[[TXPBFetchRecommendExpertsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendExpertsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchRecommendExpertsResponse*)[[[TXPBFetchRecommendExpertsResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchRecommendExpertsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendExpertsResponse*)[[[TXPBFetchRecommendExpertsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendExpertsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchRecommendExpertsResponse*)[[[TXPBFetchRecommendExpertsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchRecommendExpertsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchRecommendExpertsResponse*)[[[TXPBFetchRecommendExpertsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchRecommendExpertsResponseBuilder*) builder {
  return [[TXPBFetchRecommendExpertsResponseBuilder alloc] init];
}
+ (TXPBFetchRecommendExpertsResponseBuilder*) builderWithPrototype:(TXPBFetchRecommendExpertsResponse*) prototype {
  return [[TXPBFetchRecommendExpertsResponse builder] mergeFrom:prototype];
}
- (TXPBFetchRecommendExpertsResponseBuilder*) builder {
  return [TXPBFetchRecommendExpertsResponse builder];
}
- (TXPBFetchRecommendExpertsResponseBuilder*) toBuilder {
  return [TXPBFetchRecommendExpertsResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"experts"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBExpert* element in self.expertsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"experts"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchRecommendExpertsResponse class]]) {
    return NO;
  }
  TXPBFetchRecommendExpertsResponse *otherMessage = other;
  return
      [self.expertsArray isEqualToArray:otherMessage.expertsArray] &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.expertsArray enumerateObjectsUsingBlock:^(TXPBExpert *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchRecommendExpertsResponseBuilder()
@property (strong) TXPBFetchRecommendExpertsResponse* resultFetchRecommendExpertsResponse;
@end

@implementation TXPBFetchRecommendExpertsResponseBuilder
@synthesize resultFetchRecommendExpertsResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchRecommendExpertsResponse = [[TXPBFetchRecommendExpertsResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchRecommendExpertsResponse;
}
- (TXPBFetchRecommendExpertsResponseBuilder*) clear {
  self.resultFetchRecommendExpertsResponse = [[TXPBFetchRecommendExpertsResponse alloc] init];
  return self;
}
- (TXPBFetchRecommendExpertsResponseBuilder*) clone {
  return [TXPBFetchRecommendExpertsResponse builderWithPrototype:resultFetchRecommendExpertsResponse];
}
- (TXPBFetchRecommendExpertsResponse*) defaultInstance {
  return [TXPBFetchRecommendExpertsResponse defaultInstance];
}
- (TXPBFetchRecommendExpertsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchRecommendExpertsResponse*) buildPartial {
  TXPBFetchRecommendExpertsResponse* returnMe = resultFetchRecommendExpertsResponse;
  self.resultFetchRecommendExpertsResponse = nil;
  return returnMe;
}
- (TXPBFetchRecommendExpertsResponseBuilder*) mergeFrom:(TXPBFetchRecommendExpertsResponse*) other {
  if (other == [TXPBFetchRecommendExpertsResponse defaultInstance]) {
    return self;
  }
  if (other.expertsArray.count > 0) {
    if (resultFetchRecommendExpertsResponse.expertsArray == nil) {
      resultFetchRecommendExpertsResponse.expertsArray = [[NSMutableArray alloc] initWithArray:other.expertsArray];
    } else {
      [resultFetchRecommendExpertsResponse.expertsArray addObjectsFromArray:other.expertsArray];
    }
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchRecommendExpertsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchRecommendExpertsResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBExpertBuilder* subBuilder = [TXPBExpert builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addExperts:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSMutableArray *)experts {
  return resultFetchRecommendExpertsResponse.expertsArray;
}
- (TXPBExpert*)expertsAtIndex:(NSUInteger)index {
  return [resultFetchRecommendExpertsResponse expertsAtIndex:index];
}
- (TXPBFetchRecommendExpertsResponseBuilder *)addExperts:(TXPBExpert*)value {
  if (resultFetchRecommendExpertsResponse.expertsArray == nil) {
    resultFetchRecommendExpertsResponse.expertsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchRecommendExpertsResponse.expertsArray addObject:value];
  return self;
}
- (TXPBFetchRecommendExpertsResponseBuilder *)setExpertsArray:(NSArray *)array {
  resultFetchRecommendExpertsResponse.expertsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchRecommendExpertsResponseBuilder *)clearExperts {
  resultFetchRecommendExpertsResponse.expertsArray = nil;
  return self;
}
@end

@interface TXPBFetchExpertRequest ()
@property SInt64 id;
@end

@implementation TXPBFetchExpertRequest

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
  }
  return self;
}
static TXPBFetchExpertRequest* defaultTXPBFetchExpertRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchExpertRequest class]) {
    defaultTXPBFetchExpertRequestInstance = [[TXPBFetchExpertRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchExpertRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchExpertRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchExpertRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchExpertRequest*)[[[TXPBFetchExpertRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchExpertRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertRequest*)[[[TXPBFetchExpertRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchExpertRequest*)[[[TXPBFetchExpertRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchExpertRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertRequest*)[[[TXPBFetchExpertRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchExpertRequest*)[[[TXPBFetchExpertRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchExpertRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertRequest*)[[[TXPBFetchExpertRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertRequestBuilder*) builder {
  return [[TXPBFetchExpertRequestBuilder alloc] init];
}
+ (TXPBFetchExpertRequestBuilder*) builderWithPrototype:(TXPBFetchExpertRequest*) prototype {
  return [[TXPBFetchExpertRequest builder] mergeFrom:prototype];
}
- (TXPBFetchExpertRequestBuilder*) builder {
  return [TXPBFetchExpertRequest builder];
}
- (TXPBFetchExpertRequestBuilder*) toBuilder {
  return [TXPBFetchExpertRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchExpertRequest class]]) {
    return NO;
  }
  TXPBFetchExpertRequest *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchExpertRequestBuilder()
@property (strong) TXPBFetchExpertRequest* resultFetchExpertRequest;
@end

@implementation TXPBFetchExpertRequestBuilder
@synthesize resultFetchExpertRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchExpertRequest = [[TXPBFetchExpertRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchExpertRequest;
}
- (TXPBFetchExpertRequestBuilder*) clear {
  self.resultFetchExpertRequest = [[TXPBFetchExpertRequest alloc] init];
  return self;
}
- (TXPBFetchExpertRequestBuilder*) clone {
  return [TXPBFetchExpertRequest builderWithPrototype:resultFetchExpertRequest];
}
- (TXPBFetchExpertRequest*) defaultInstance {
  return [TXPBFetchExpertRequest defaultInstance];
}
- (TXPBFetchExpertRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchExpertRequest*) buildPartial {
  TXPBFetchExpertRequest* returnMe = resultFetchExpertRequest;
  self.resultFetchExpertRequest = nil;
  return returnMe;
}
- (TXPBFetchExpertRequestBuilder*) mergeFrom:(TXPBFetchExpertRequest*) other {
  if (other == [TXPBFetchExpertRequest defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchExpertRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchExpertRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultFetchExpertRequest.hasId;
}
- (SInt64) id {
  return resultFetchExpertRequest.id;
}
- (TXPBFetchExpertRequestBuilder*) setId:(SInt64) value {
  resultFetchExpertRequest.hasId = YES;
  resultFetchExpertRequest.id = value;
  return self;
}
- (TXPBFetchExpertRequestBuilder*) clearId {
  resultFetchExpertRequest.hasId = NO;
  resultFetchExpertRequest.id = 0L;
  return self;
}
@end

@interface TXPBFetchExpertResponse ()
@property (strong) TXPBExpert* expert;
@property (strong) NSMutableArray * answersArray;
@property BOOL hasMoreAnswer;
@property (strong) NSMutableArray * knowledgesArray;
@property BOOL hasMoreKnowledges;
@end

@implementation TXPBFetchExpertResponse

- (BOOL) hasExpert {
  return !!hasExpert_;
}
- (void) setHasExpert:(BOOL) _value_ {
  hasExpert_ = !!_value_;
}
@synthesize expert;
@synthesize answersArray;
@dynamic answers;
- (BOOL) hasHasMoreAnswer {
  return !!hasHasMoreAnswer_;
}
- (void) setHasHasMoreAnswer:(BOOL) _value_ {
  hasHasMoreAnswer_ = !!_value_;
}
- (BOOL) hasMoreAnswer {
  return !!hasMoreAnswer_;
}
- (void) setHasMoreAnswer:(BOOL) _value_ {
  hasMoreAnswer_ = !!_value_;
}
@synthesize knowledgesArray;
@dynamic knowledges;
- (BOOL) hasHasMoreKnowledges {
  return !!hasHasMoreKnowledges_;
}
- (void) setHasHasMoreKnowledges:(BOOL) _value_ {
  hasHasMoreKnowledges_ = !!_value_;
}
- (BOOL) hasMoreKnowledges {
  return !!hasMoreKnowledges_;
}
- (void) setHasMoreKnowledges:(BOOL) _value_ {
  hasMoreKnowledges_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.expert = [TXPBExpert defaultInstance];
    self.hasMoreAnswer = NO;
    self.hasMoreKnowledges = NO;
  }
  return self;
}
static TXPBFetchExpertResponse* defaultTXPBFetchExpertResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchExpertResponse class]) {
    defaultTXPBFetchExpertResponseInstance = [[TXPBFetchExpertResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchExpertResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchExpertResponseInstance;
}
- (NSArray *)answers {
  return answersArray;
}
- (TXPBQuestionAnswer*)answersAtIndex:(NSUInteger)index {
  return [answersArray objectAtIndex:index];
}
- (NSArray *)knowledges {
  return knowledgesArray;
}
- (TXPBKnowledge*)knowledgesAtIndex:(NSUInteger)index {
  return [knowledgesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (self.hasExpert) {
    if (!self.expert.isInitialized) {
      return NO;
    }
  }
  __block BOOL isInitanswers = YES;
   [self.answers enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitanswers = NO;
      *stop = YES;
    }
  }];
  if (!isInitanswers) return isInitanswers;
  __block BOOL isInitknowledges = YES;
   [self.knowledges enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitknowledges = NO;
      *stop = YES;
    }
  }];
  if (!isInitknowledges) return isInitknowledges;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasExpert) {
    [output writeMessage:1 value:self.expert];
  }
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:2 value:element];
  }];
  if (self.hasHasMoreAnswer) {
    [output writeBool:3 value:self.hasMoreAnswer];
  }
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasHasMoreKnowledges) {
    [output writeBool:5 value:self.hasMoreKnowledges];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasExpert) {
    size_ += computeMessageSize(1, self.expert);
  }
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(2, element);
  }];
  if (self.hasHasMoreAnswer) {
    size_ += computeBoolSize(3, self.hasMoreAnswer);
  }
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasHasMoreKnowledges) {
    size_ += computeBoolSize(5, self.hasMoreKnowledges);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchExpertResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchExpertResponse*)[[[TXPBFetchExpertResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchExpertResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertResponse*)[[[TXPBFetchExpertResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchExpertResponse*)[[[TXPBFetchExpertResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchExpertResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertResponse*)[[[TXPBFetchExpertResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchExpertResponse*)[[[TXPBFetchExpertResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchExpertResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchExpertResponse*)[[[TXPBFetchExpertResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchExpertResponseBuilder*) builder {
  return [[TXPBFetchExpertResponseBuilder alloc] init];
}
+ (TXPBFetchExpertResponseBuilder*) builderWithPrototype:(TXPBFetchExpertResponse*) prototype {
  return [[TXPBFetchExpertResponse builder] mergeFrom:prototype];
}
- (TXPBFetchExpertResponseBuilder*) builder {
  return [TXPBFetchExpertResponse builder];
}
- (TXPBFetchExpertResponseBuilder*) toBuilder {
  return [TXPBFetchExpertResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasExpert) {
    [output appendFormat:@"%@%@ {\n", indent, @"expert"];
    [self.expert writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"answers"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMoreAnswer) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMoreAnswer", [NSNumber numberWithBool:self.hasMoreAnswer]];
  }
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"knowledges"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMoreKnowledges) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMoreKnowledges", [NSNumber numberWithBool:self.hasMoreKnowledges]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasExpert) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.expert storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"expert"];
  }
  for (TXPBQuestionAnswer* element in self.answersArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"answers"];
  }
  if (self.hasHasMoreAnswer) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMoreAnswer] forKey: @"hasMoreAnswer"];
  }
  for (TXPBKnowledge* element in self.knowledgesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"knowledges"];
  }
  if (self.hasHasMoreKnowledges) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMoreKnowledges] forKey: @"hasMoreKnowledges"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchExpertResponse class]]) {
    return NO;
  }
  TXPBFetchExpertResponse *otherMessage = other;
  return
      self.hasExpert == otherMessage.hasExpert &&
      (!self.hasExpert || [self.expert isEqual:otherMessage.expert]) &&
      [self.answersArray isEqualToArray:otherMessage.answersArray] &&
      self.hasHasMoreAnswer == otherMessage.hasHasMoreAnswer &&
      (!self.hasHasMoreAnswer || self.hasMoreAnswer == otherMessage.hasMoreAnswer) &&
      [self.knowledgesArray isEqualToArray:otherMessage.knowledgesArray] &&
      self.hasHasMoreKnowledges == otherMessage.hasHasMoreKnowledges &&
      (!self.hasHasMoreKnowledges || self.hasMoreKnowledges == otherMessage.hasMoreKnowledges) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasExpert) {
    hashCode = hashCode * 31 + [self.expert hash];
  }
  [self.answersArray enumerateObjectsUsingBlock:^(TXPBQuestionAnswer *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMoreAnswer) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMoreAnswer] hash];
  }
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMoreKnowledges) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMoreKnowledges] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchExpertResponseBuilder()
@property (strong) TXPBFetchExpertResponse* resultFetchExpertResponse;
@end

@implementation TXPBFetchExpertResponseBuilder
@synthesize resultFetchExpertResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchExpertResponse = [[TXPBFetchExpertResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchExpertResponse;
}
- (TXPBFetchExpertResponseBuilder*) clear {
  self.resultFetchExpertResponse = [[TXPBFetchExpertResponse alloc] init];
  return self;
}
- (TXPBFetchExpertResponseBuilder*) clone {
  return [TXPBFetchExpertResponse builderWithPrototype:resultFetchExpertResponse];
}
- (TXPBFetchExpertResponse*) defaultInstance {
  return [TXPBFetchExpertResponse defaultInstance];
}
- (TXPBFetchExpertResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchExpertResponse*) buildPartial {
  TXPBFetchExpertResponse* returnMe = resultFetchExpertResponse;
  self.resultFetchExpertResponse = nil;
  return returnMe;
}
- (TXPBFetchExpertResponseBuilder*) mergeFrom:(TXPBFetchExpertResponse*) other {
  if (other == [TXPBFetchExpertResponse defaultInstance]) {
    return self;
  }
  if (other.hasExpert) {
    [self mergeExpert:other.expert];
  }
  if (other.answersArray.count > 0) {
    if (resultFetchExpertResponse.answersArray == nil) {
      resultFetchExpertResponse.answersArray = [[NSMutableArray alloc] initWithArray:other.answersArray];
    } else {
      [resultFetchExpertResponse.answersArray addObjectsFromArray:other.answersArray];
    }
  }
  if (other.hasHasMoreAnswer) {
    [self setHasMoreAnswer:other.hasMoreAnswer];
  }
  if (other.knowledgesArray.count > 0) {
    if (resultFetchExpertResponse.knowledgesArray == nil) {
      resultFetchExpertResponse.knowledgesArray = [[NSMutableArray alloc] initWithArray:other.knowledgesArray];
    } else {
      [resultFetchExpertResponse.knowledgesArray addObjectsFromArray:other.knowledgesArray];
    }
  }
  if (other.hasHasMoreKnowledges) {
    [self setHasMoreKnowledges:other.hasMoreKnowledges];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchExpertResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchExpertResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBExpertBuilder* subBuilder = [TXPBExpert builder];
        if (self.hasExpert) {
          [subBuilder mergeFrom:self.expert];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setExpert:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TXPBQuestionAnswerBuilder* subBuilder = [TXPBQuestionAnswer builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addAnswers:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setHasMoreAnswer:[input readBool]];
        break;
      }
      case 34: {
        TXPBKnowledgeBuilder* subBuilder = [TXPBKnowledge builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKnowledges:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setHasMoreKnowledges:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasExpert {
  return resultFetchExpertResponse.hasExpert;
}
- (TXPBExpert*) expert {
  return resultFetchExpertResponse.expert;
}
- (TXPBFetchExpertResponseBuilder*) setExpert:(TXPBExpert*) value {
  resultFetchExpertResponse.hasExpert = YES;
  resultFetchExpertResponse.expert = value;
  return self;
}
- (TXPBFetchExpertResponseBuilder*) setExpertBuilder:(TXPBExpertBuilder*) builderForValue {
  return [self setExpert:[builderForValue build]];
}
- (TXPBFetchExpertResponseBuilder*) mergeExpert:(TXPBExpert*) value {
  if (resultFetchExpertResponse.hasExpert &&
      resultFetchExpertResponse.expert != [TXPBExpert defaultInstance]) {
    resultFetchExpertResponse.expert =
      [[[TXPBExpert builderWithPrototype:resultFetchExpertResponse.expert] mergeFrom:value] buildPartial];
  } else {
    resultFetchExpertResponse.expert = value;
  }
  resultFetchExpertResponse.hasExpert = YES;
  return self;
}
- (TXPBFetchExpertResponseBuilder*) clearExpert {
  resultFetchExpertResponse.hasExpert = NO;
  resultFetchExpertResponse.expert = [TXPBExpert defaultInstance];
  return self;
}
- (NSMutableArray *)answers {
  return resultFetchExpertResponse.answersArray;
}
- (TXPBQuestionAnswer*)answersAtIndex:(NSUInteger)index {
  return [resultFetchExpertResponse answersAtIndex:index];
}
- (TXPBFetchExpertResponseBuilder *)addAnswers:(TXPBQuestionAnswer*)value {
  if (resultFetchExpertResponse.answersArray == nil) {
    resultFetchExpertResponse.answersArray = [[NSMutableArray alloc]init];
  }
  [resultFetchExpertResponse.answersArray addObject:value];
  return self;
}
- (TXPBFetchExpertResponseBuilder *)setAnswersArray:(NSArray *)array {
  resultFetchExpertResponse.answersArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchExpertResponseBuilder *)clearAnswers {
  resultFetchExpertResponse.answersArray = nil;
  return self;
}
- (BOOL) hasHasMoreAnswer {
  return resultFetchExpertResponse.hasHasMoreAnswer;
}
- (BOOL) hasMoreAnswer {
  return resultFetchExpertResponse.hasMoreAnswer;
}
- (TXPBFetchExpertResponseBuilder*) setHasMoreAnswer:(BOOL) value {
  resultFetchExpertResponse.hasHasMoreAnswer = YES;
  resultFetchExpertResponse.hasMoreAnswer = value;
  return self;
}
- (TXPBFetchExpertResponseBuilder*) clearHasMoreAnswer {
  resultFetchExpertResponse.hasHasMoreAnswer = NO;
  resultFetchExpertResponse.hasMoreAnswer = NO;
  return self;
}
- (NSMutableArray *)knowledges {
  return resultFetchExpertResponse.knowledgesArray;
}
- (TXPBKnowledge*)knowledgesAtIndex:(NSUInteger)index {
  return [resultFetchExpertResponse knowledgesAtIndex:index];
}
- (TXPBFetchExpertResponseBuilder *)addKnowledges:(TXPBKnowledge*)value {
  if (resultFetchExpertResponse.knowledgesArray == nil) {
    resultFetchExpertResponse.knowledgesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchExpertResponse.knowledgesArray addObject:value];
  return self;
}
- (TXPBFetchExpertResponseBuilder *)setKnowledgesArray:(NSArray *)array {
  resultFetchExpertResponse.knowledgesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchExpertResponseBuilder *)clearKnowledges {
  resultFetchExpertResponse.knowledgesArray = nil;
  return self;
}
- (BOOL) hasHasMoreKnowledges {
  return resultFetchExpertResponse.hasHasMoreKnowledges;
}
- (BOOL) hasMoreKnowledges {
  return resultFetchExpertResponse.hasMoreKnowledges;
}
- (TXPBFetchExpertResponseBuilder*) setHasMoreKnowledges:(BOOL) value {
  resultFetchExpertResponse.hasHasMoreKnowledges = YES;
  resultFetchExpertResponse.hasMoreKnowledges = value;
  return self;
}
- (TXPBFetchExpertResponseBuilder*) clearHasMoreKnowledges {
  resultFetchExpertResponse.hasHasMoreKnowledges = NO;
  resultFetchExpertResponse.hasMoreKnowledges = NO;
  return self;
}
@end

@interface TXPBFollowExpertRequest ()
@property SInt64 expertId;
@property BOOL isFollow;
@end

@implementation TXPBFollowExpertRequest

- (BOOL) hasExpertId {
  return !!hasExpertId_;
}
- (void) setHasExpertId:(BOOL) _value_ {
  hasExpertId_ = !!_value_;
}
@synthesize expertId;
- (BOOL) hasIsFollow {
  return !!hasIsFollow_;
}
- (void) setHasIsFollow:(BOOL) _value_ {
  hasIsFollow_ = !!_value_;
}
- (BOOL) isFollow {
  return !!isFollow_;
}
- (void) setIsFollow:(BOOL) _value_ {
  isFollow_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.expertId = 0L;
    self.isFollow = NO;
  }
  return self;
}
static TXPBFollowExpertRequest* defaultTXPBFollowExpertRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFollowExpertRequest class]) {
    defaultTXPBFollowExpertRequestInstance = [[TXPBFollowExpertRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFollowExpertRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFollowExpertRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasExpertId) {
    return NO;
  }
  if (!self.hasIsFollow) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasExpertId) {
    [output writeInt64:1 value:self.expertId];
  }
  if (self.hasIsFollow) {
    [output writeBool:2 value:self.isFollow];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasExpertId) {
    size_ += computeInt64Size(1, self.expertId);
  }
  if (self.hasIsFollow) {
    size_ += computeBoolSize(2, self.isFollow);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFollowExpertRequest*) parseFromData:(NSData*) data {
  return (TXPBFollowExpertRequest*)[[[TXPBFollowExpertRequest builder] mergeFromData:data] build];
}
+ (TXPBFollowExpertRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowExpertRequest*)[[[TXPBFollowExpertRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowExpertRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFollowExpertRequest*)[[[TXPBFollowExpertRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFollowExpertRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowExpertRequest*)[[[TXPBFollowExpertRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowExpertRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFollowExpertRequest*)[[[TXPBFollowExpertRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFollowExpertRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowExpertRequest*)[[[TXPBFollowExpertRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowExpertRequestBuilder*) builder {
  return [[TXPBFollowExpertRequestBuilder alloc] init];
}
+ (TXPBFollowExpertRequestBuilder*) builderWithPrototype:(TXPBFollowExpertRequest*) prototype {
  return [[TXPBFollowExpertRequest builder] mergeFrom:prototype];
}
- (TXPBFollowExpertRequestBuilder*) builder {
  return [TXPBFollowExpertRequest builder];
}
- (TXPBFollowExpertRequestBuilder*) toBuilder {
  return [TXPBFollowExpertRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasExpertId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"expertId", [NSNumber numberWithLongLong:self.expertId]];
  }
  if (self.hasIsFollow) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFollow", [NSNumber numberWithBool:self.isFollow]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasExpertId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.expertId] forKey: @"expertId"];
  }
  if (self.hasIsFollow) {
    [dictionary setObject: [NSNumber numberWithBool:self.isFollow] forKey: @"isFollow"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFollowExpertRequest class]]) {
    return NO;
  }
  TXPBFollowExpertRequest *otherMessage = other;
  return
      self.hasExpertId == otherMessage.hasExpertId &&
      (!self.hasExpertId || self.expertId == otherMessage.expertId) &&
      self.hasIsFollow == otherMessage.hasIsFollow &&
      (!self.hasIsFollow || self.isFollow == otherMessage.isFollow) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasExpertId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.expertId] hash];
  }
  if (self.hasIsFollow) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isFollow] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFollowExpertRequestBuilder()
@property (strong) TXPBFollowExpertRequest* resultFollowExpertRequest;
@end

@implementation TXPBFollowExpertRequestBuilder
@synthesize resultFollowExpertRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFollowExpertRequest = [[TXPBFollowExpertRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFollowExpertRequest;
}
- (TXPBFollowExpertRequestBuilder*) clear {
  self.resultFollowExpertRequest = [[TXPBFollowExpertRequest alloc] init];
  return self;
}
- (TXPBFollowExpertRequestBuilder*) clone {
  return [TXPBFollowExpertRequest builderWithPrototype:resultFollowExpertRequest];
}
- (TXPBFollowExpertRequest*) defaultInstance {
  return [TXPBFollowExpertRequest defaultInstance];
}
- (TXPBFollowExpertRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFollowExpertRequest*) buildPartial {
  TXPBFollowExpertRequest* returnMe = resultFollowExpertRequest;
  self.resultFollowExpertRequest = nil;
  return returnMe;
}
- (TXPBFollowExpertRequestBuilder*) mergeFrom:(TXPBFollowExpertRequest*) other {
  if (other == [TXPBFollowExpertRequest defaultInstance]) {
    return self;
  }
  if (other.hasExpertId) {
    [self setExpertId:other.expertId];
  }
  if (other.hasIsFollow) {
    [self setIsFollow:other.isFollow];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFollowExpertRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFollowExpertRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setExpertId:[input readInt64]];
        break;
      }
      case 16: {
        [self setIsFollow:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasExpertId {
  return resultFollowExpertRequest.hasExpertId;
}
- (SInt64) expertId {
  return resultFollowExpertRequest.expertId;
}
- (TXPBFollowExpertRequestBuilder*) setExpertId:(SInt64) value {
  resultFollowExpertRequest.hasExpertId = YES;
  resultFollowExpertRequest.expertId = value;
  return self;
}
- (TXPBFollowExpertRequestBuilder*) clearExpertId {
  resultFollowExpertRequest.hasExpertId = NO;
  resultFollowExpertRequest.expertId = 0L;
  return self;
}
- (BOOL) hasIsFollow {
  return resultFollowExpertRequest.hasIsFollow;
}
- (BOOL) isFollow {
  return resultFollowExpertRequest.isFollow;
}
- (TXPBFollowExpertRequestBuilder*) setIsFollow:(BOOL) value {
  resultFollowExpertRequest.hasIsFollow = YES;
  resultFollowExpertRequest.isFollow = value;
  return self;
}
- (TXPBFollowExpertRequestBuilder*) clearIsFollow {
  resultFollowExpertRequest.hasIsFollow = NO;
  resultFollowExpertRequest.isFollow = NO;
  return self;
}
@end

@interface TXPBFollowExpertResponse ()
@end

@implementation TXPBFollowExpertResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFollowExpertResponse* defaultTXPBFollowExpertResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFollowExpertResponse class]) {
    defaultTXPBFollowExpertResponseInstance = [[TXPBFollowExpertResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFollowExpertResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFollowExpertResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFollowExpertResponse*) parseFromData:(NSData*) data {
  return (TXPBFollowExpertResponse*)[[[TXPBFollowExpertResponse builder] mergeFromData:data] build];
}
+ (TXPBFollowExpertResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowExpertResponse*)[[[TXPBFollowExpertResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowExpertResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFollowExpertResponse*)[[[TXPBFollowExpertResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFollowExpertResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowExpertResponse*)[[[TXPBFollowExpertResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowExpertResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFollowExpertResponse*)[[[TXPBFollowExpertResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFollowExpertResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFollowExpertResponse*)[[[TXPBFollowExpertResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFollowExpertResponseBuilder*) builder {
  return [[TXPBFollowExpertResponseBuilder alloc] init];
}
+ (TXPBFollowExpertResponseBuilder*) builderWithPrototype:(TXPBFollowExpertResponse*) prototype {
  return [[TXPBFollowExpertResponse builder] mergeFrom:prototype];
}
- (TXPBFollowExpertResponseBuilder*) builder {
  return [TXPBFollowExpertResponse builder];
}
- (TXPBFollowExpertResponseBuilder*) toBuilder {
  return [TXPBFollowExpertResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFollowExpertResponse class]]) {
    return NO;
  }
  TXPBFollowExpertResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFollowExpertResponseBuilder()
@property (strong) TXPBFollowExpertResponse* resultFollowExpertResponse;
@end

@implementation TXPBFollowExpertResponseBuilder
@synthesize resultFollowExpertResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFollowExpertResponse = [[TXPBFollowExpertResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFollowExpertResponse;
}
- (TXPBFollowExpertResponseBuilder*) clear {
  self.resultFollowExpertResponse = [[TXPBFollowExpertResponse alloc] init];
  return self;
}
- (TXPBFollowExpertResponseBuilder*) clone {
  return [TXPBFollowExpertResponse builderWithPrototype:resultFollowExpertResponse];
}
- (TXPBFollowExpertResponse*) defaultInstance {
  return [TXPBFollowExpertResponse defaultInstance];
}
- (TXPBFollowExpertResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFollowExpertResponse*) buildPartial {
  TXPBFollowExpertResponse* returnMe = resultFollowExpertResponse;
  self.resultFollowExpertResponse = nil;
  return returnMe;
}
- (TXPBFollowExpertResponseBuilder*) mergeFrom:(TXPBFollowExpertResponse*) other {
  if (other == [TXPBFollowExpertResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFollowExpertResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFollowExpertResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBKnowledge ()
@property SInt64 id;
@property (strong) NSString* title;
@property SInt64 authorId;
@property (strong) NSString* authorName;
@property (strong) NSString* authorTitle;
@property (strong) NSString* authorAvatar;
@property SInt64 favoriteNum;
@property SInt64 likedNum;
@property SInt64 replyNum;
@property BOOL hasFavorite;
@property SInt64 createOn;
@property SInt64 updateOn;
@property (strong) NSMutableArray * tagsArray;
@property BOOL hasLiked;
@property (strong) NSString* pb_description;
@property (strong) NSString* content;
@property (strong) NSString* contentUrl;
@property (strong) NSString* coverPicUrl;
@property TXPBKnowledegeContentType contentType;
@end

@implementation TXPBKnowledge

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasAuthorId {
  return !!hasAuthorId_;
}
- (void) setHasAuthorId:(BOOL) _value_ {
  hasAuthorId_ = !!_value_;
}
@synthesize authorId;
- (BOOL) hasAuthorName {
  return !!hasAuthorName_;
}
- (void) setHasAuthorName:(BOOL) _value_ {
  hasAuthorName_ = !!_value_;
}
@synthesize authorName;
- (BOOL) hasAuthorTitle {
  return !!hasAuthorTitle_;
}
- (void) setHasAuthorTitle:(BOOL) _value_ {
  hasAuthorTitle_ = !!_value_;
}
@synthesize authorTitle;
- (BOOL) hasAuthorAvatar {
  return !!hasAuthorAvatar_;
}
- (void) setHasAuthorAvatar:(BOOL) _value_ {
  hasAuthorAvatar_ = !!_value_;
}
@synthesize authorAvatar;
- (BOOL) hasFavoriteNum {
  return !!hasFavoriteNum_;
}
- (void) setHasFavoriteNum:(BOOL) _value_ {
  hasFavoriteNum_ = !!_value_;
}
@synthesize favoriteNum;
- (BOOL) hasLikedNum {
  return !!hasLikedNum_;
}
- (void) setHasLikedNum:(BOOL) _value_ {
  hasLikedNum_ = !!_value_;
}
@synthesize likedNum;
- (BOOL) hasReplyNum {
  return !!hasReplyNum_;
}
- (void) setHasReplyNum:(BOOL) _value_ {
  hasReplyNum_ = !!_value_;
}
@synthesize replyNum;
- (BOOL) hasHasFavorite {
  return !!hasHasFavorite_;
}
- (void) setHasHasFavorite:(BOOL) _value_ {
  hasHasFavorite_ = !!_value_;
}
- (BOOL) hasFavorite {
  return !!hasFavorite_;
}
- (void) setHasFavorite:(BOOL) _value_ {
  hasFavorite_ = !!_value_;
}
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasUpdateOn {
  return !!hasUpdateOn_;
}
- (void) setHasUpdateOn:(BOOL) _value_ {
  hasUpdateOn_ = !!_value_;
}
@synthesize updateOn;
@synthesize tagsArray;
@dynamic tags;
- (BOOL) hasHasLiked {
  return !!hasHasLiked_;
}
- (void) setHasHasLiked:(BOOL) _value_ {
  hasHasLiked_ = !!_value_;
}
- (BOOL) hasLiked {
  return !!hasLiked_;
}
- (void) setHasLiked:(BOOL) _value_ {
  hasLiked_ = !!_value_;
}
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) _value_ {
  hasDescription_ = !!_value_;
}
@synthesize pb_description;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasContentUrl {
  return !!hasContentUrl_;
}
- (void) setHasContentUrl:(BOOL) _value_ {
  hasContentUrl_ = !!_value_;
}
@synthesize contentUrl;
- (BOOL) hasCoverPicUrl {
  return !!hasCoverPicUrl_;
}
- (void) setHasCoverPicUrl:(BOOL) _value_ {
  hasCoverPicUrl_ = !!_value_;
}
@synthesize coverPicUrl;
- (BOOL) hasContentType {
  return !!hasContentType_;
}
- (void) setHasContentType:(BOOL) _value_ {
  hasContentType_ = !!_value_;
}
@synthesize contentType;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.title = @"";
    self.authorId = 0L;
    self.authorName = @"";
    self.authorTitle = @"";
    self.authorAvatar = @"";
    self.favoriteNum = 0L;
    self.likedNum = 0L;
    self.replyNum = 0L;
    self.hasFavorite = NO;
    self.createOn = 0L;
    self.updateOn = 0L;
    self.hasLiked = NO;
    self.pb_description = @"";
    self.content = @"";
    self.contentUrl = @"";
    self.coverPicUrl = @"";
    self.contentType = TXPBKnowledegeContentTypeKPlain;
  }
  return self;
}
static TXPBKnowledge* defaultTXPBKnowledgeInstance = nil;
+ (void) initialize {
  if (self == [TXPBKnowledge class]) {
    defaultTXPBKnowledgeInstance = [[TXPBKnowledge alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBKnowledgeInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBKnowledgeInstance;
}
- (NSArray *)tags {
  return tagsArray;
}
- (TXPBTag*)tagsAtIndex:(NSUInteger)index {
  return [tagsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasTitle) {
    return NO;
  }
  if (!self.hasAuthorId) {
    return NO;
  }
  if (!self.hasAuthorName) {
    return NO;
  }
  if (!self.hasFavoriteNum) {
    return NO;
  }
  if (!self.hasLikedNum) {
    return NO;
  }
  if (!self.hasReplyNum) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (!self.hasUpdateOn) {
    return NO;
  }
  if (!self.hasDescription) {
    return NO;
  }
  if (!self.hasContent) {
    return NO;
  }
  if (!self.hasContentUrl) {
    return NO;
  }
  if (!self.hasCoverPicUrl) {
    return NO;
  }
  if (!self.hasContentType) {
    return NO;
  }
  __block BOOL isInittags = YES;
   [self.tags enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInittags = NO;
      *stop = YES;
    }
  }];
  if (!isInittags) return isInittags;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasTitle) {
    [output writeString:2 value:self.title];
  }
  if (self.hasAuthorId) {
    [output writeInt64:3 value:self.authorId];
  }
  if (self.hasAuthorName) {
    [output writeString:4 value:self.authorName];
  }
  if (self.hasAuthorTitle) {
    [output writeString:5 value:self.authorTitle];
  }
  if (self.hasAuthorAvatar) {
    [output writeString:6 value:self.authorAvatar];
  }
  if (self.hasFavoriteNum) {
    [output writeInt64:7 value:self.favoriteNum];
  }
  if (self.hasLikedNum) {
    [output writeInt64:8 value:self.likedNum];
  }
  if (self.hasReplyNum) {
    [output writeInt64:9 value:self.replyNum];
  }
  if (self.hasHasFavorite) {
    [output writeBool:10 value:self.hasFavorite];
  }
  if (self.hasCreateOn) {
    [output writeInt64:11 value:self.createOn];
  }
  if (self.hasUpdateOn) {
    [output writeInt64:12 value:self.updateOn];
  }
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:13 value:element];
  }];
  if (self.hasHasLiked) {
    [output writeBool:14 value:self.hasLiked];
  }
  if (self.hasDescription) {
    [output writeString:15 value:self.pb_description];
  }
  if (self.hasContent) {
    [output writeString:16 value:self.content];
  }
  if (self.hasContentUrl) {
    [output writeString:17 value:self.contentUrl];
  }
  if (self.hasCoverPicUrl) {
    [output writeString:18 value:self.coverPicUrl];
  }
  if (self.hasContentType) {
    [output writeEnum:19 value:self.contentType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(2, self.title);
  }
  if (self.hasAuthorId) {
    size_ += computeInt64Size(3, self.authorId);
  }
  if (self.hasAuthorName) {
    size_ += computeStringSize(4, self.authorName);
  }
  if (self.hasAuthorTitle) {
    size_ += computeStringSize(5, self.authorTitle);
  }
  if (self.hasAuthorAvatar) {
    size_ += computeStringSize(6, self.authorAvatar);
  }
  if (self.hasFavoriteNum) {
    size_ += computeInt64Size(7, self.favoriteNum);
  }
  if (self.hasLikedNum) {
    size_ += computeInt64Size(8, self.likedNum);
  }
  if (self.hasReplyNum) {
    size_ += computeInt64Size(9, self.replyNum);
  }
  if (self.hasHasFavorite) {
    size_ += computeBoolSize(10, self.hasFavorite);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(11, self.createOn);
  }
  if (self.hasUpdateOn) {
    size_ += computeInt64Size(12, self.updateOn);
  }
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(13, element);
  }];
  if (self.hasHasLiked) {
    size_ += computeBoolSize(14, self.hasLiked);
  }
  if (self.hasDescription) {
    size_ += computeStringSize(15, self.pb_description);
  }
  if (self.hasContent) {
    size_ += computeStringSize(16, self.content);
  }
  if (self.hasContentUrl) {
    size_ += computeStringSize(17, self.contentUrl);
  }
  if (self.hasCoverPicUrl) {
    size_ += computeStringSize(18, self.coverPicUrl);
  }
  if (self.hasContentType) {
    size_ += computeEnumSize(19, self.contentType);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBKnowledge*) parseFromData:(NSData*) data {
  return (TXPBKnowledge*)[[[TXPBKnowledge builder] mergeFromData:data] build];
}
+ (TXPBKnowledge*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBKnowledge*)[[[TXPBKnowledge builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBKnowledge*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBKnowledge*)[[[TXPBKnowledge builder] mergeFromInputStream:input] build];
}
+ (TXPBKnowledge*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBKnowledge*)[[[TXPBKnowledge builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBKnowledge*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBKnowledge*)[[[TXPBKnowledge builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBKnowledge*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBKnowledge*)[[[TXPBKnowledge builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBKnowledgeBuilder*) builder {
  return [[TXPBKnowledgeBuilder alloc] init];
}
+ (TXPBKnowledgeBuilder*) builderWithPrototype:(TXPBKnowledge*) prototype {
  return [[TXPBKnowledge builder] mergeFrom:prototype];
}
- (TXPBKnowledgeBuilder*) builder {
  return [TXPBKnowledge builder];
}
- (TXPBKnowledgeBuilder*) toBuilder {
  return [TXPBKnowledge builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasAuthorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorId", [NSNumber numberWithLongLong:self.authorId]];
  }
  if (self.hasAuthorName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorName", self.authorName];
  }
  if (self.hasAuthorTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorTitle", self.authorTitle];
  }
  if (self.hasAuthorAvatar) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorAvatar", self.authorAvatar];
  }
  if (self.hasFavoriteNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"favoriteNum", [NSNumber numberWithLongLong:self.favoriteNum]];
  }
  if (self.hasLikedNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"likedNum", [NSNumber numberWithLongLong:self.likedNum]];
  }
  if (self.hasReplyNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"replyNum", [NSNumber numberWithLongLong:self.replyNum]];
  }
  if (self.hasHasFavorite) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasFavorite", [NSNumber numberWithBool:self.hasFavorite]];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasUpdateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateOn", [NSNumber numberWithLongLong:self.updateOn]];
  }
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"tags"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasLiked) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasLiked", [NSNumber numberWithBool:self.hasLiked]];
  }
  if (self.hasDescription) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pb_description", self.pb_description];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasContentUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contentUrl", self.contentUrl];
  }
  if (self.hasCoverPicUrl) {
    [output appendFormat:@"%@%@: %@\n", indent, @"coverPicUrl", self.coverPicUrl];
  }
  if (self.hasContentType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"contentType", NSStringFromTXPBKnowledegeContentType(self.contentType)];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasAuthorId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.authorId] forKey: @"authorId"];
  }
  if (self.hasAuthorName) {
    [dictionary setObject: self.authorName forKey: @"authorName"];
  }
  if (self.hasAuthorTitle) {
    [dictionary setObject: self.authorTitle forKey: @"authorTitle"];
  }
  if (self.hasAuthorAvatar) {
    [dictionary setObject: self.authorAvatar forKey: @"authorAvatar"];
  }
  if (self.hasFavoriteNum) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.favoriteNum] forKey: @"favoriteNum"];
  }
  if (self.hasLikedNum) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.likedNum] forKey: @"likedNum"];
  }
  if (self.hasReplyNum) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.replyNum] forKey: @"replyNum"];
  }
  if (self.hasHasFavorite) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasFavorite] forKey: @"hasFavorite"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasUpdateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.updateOn] forKey: @"updateOn"];
  }
  for (TXPBTag* element in self.tagsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"tags"];
  }
  if (self.hasHasLiked) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasLiked] forKey: @"hasLiked"];
  }
  if (self.hasDescription) {
    [dictionary setObject: self.pb_description forKey: @"pb_description"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasContentUrl) {
    [dictionary setObject: self.contentUrl forKey: @"contentUrl"];
  }
  if (self.hasCoverPicUrl) {
    [dictionary setObject: self.coverPicUrl forKey: @"coverPicUrl"];
  }
  if (self.hasContentType) {
    [dictionary setObject: @(self.contentType) forKey: @"contentType"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBKnowledge class]]) {
    return NO;
  }
  TXPBKnowledge *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasAuthorId == otherMessage.hasAuthorId &&
      (!self.hasAuthorId || self.authorId == otherMessage.authorId) &&
      self.hasAuthorName == otherMessage.hasAuthorName &&
      (!self.hasAuthorName || [self.authorName isEqual:otherMessage.authorName]) &&
      self.hasAuthorTitle == otherMessage.hasAuthorTitle &&
      (!self.hasAuthorTitle || [self.authorTitle isEqual:otherMessage.authorTitle]) &&
      self.hasAuthorAvatar == otherMessage.hasAuthorAvatar &&
      (!self.hasAuthorAvatar || [self.authorAvatar isEqual:otherMessage.authorAvatar]) &&
      self.hasFavoriteNum == otherMessage.hasFavoriteNum &&
      (!self.hasFavoriteNum || self.favoriteNum == otherMessage.favoriteNum) &&
      self.hasLikedNum == otherMessage.hasLikedNum &&
      (!self.hasLikedNum || self.likedNum == otherMessage.likedNum) &&
      self.hasReplyNum == otherMessage.hasReplyNum &&
      (!self.hasReplyNum || self.replyNum == otherMessage.replyNum) &&
      self.hasHasFavorite == otherMessage.hasHasFavorite &&
      (!self.hasHasFavorite || self.hasFavorite == otherMessage.hasFavorite) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasUpdateOn == otherMessage.hasUpdateOn &&
      (!self.hasUpdateOn || self.updateOn == otherMessage.updateOn) &&
      [self.tagsArray isEqualToArray:otherMessage.tagsArray] &&
      self.hasHasLiked == otherMessage.hasHasLiked &&
      (!self.hasHasLiked || self.hasLiked == otherMessage.hasLiked) &&
      self.hasDescription == otherMessage.hasDescription &&
      (!self.hasDescription || [self.pb_description isEqual:otherMessage.pb_description]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasContentUrl == otherMessage.hasContentUrl &&
      (!self.hasContentUrl || [self.contentUrl isEqual:otherMessage.contentUrl]) &&
      self.hasCoverPicUrl == otherMessage.hasCoverPicUrl &&
      (!self.hasCoverPicUrl || [self.coverPicUrl isEqual:otherMessage.coverPicUrl]) &&
      self.hasContentType == otherMessage.hasContentType &&
      (!self.hasContentType || self.contentType == otherMessage.contentType) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasAuthorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.authorId] hash];
  }
  if (self.hasAuthorName) {
    hashCode = hashCode * 31 + [self.authorName hash];
  }
  if (self.hasAuthorTitle) {
    hashCode = hashCode * 31 + [self.authorTitle hash];
  }
  if (self.hasAuthorAvatar) {
    hashCode = hashCode * 31 + [self.authorAvatar hash];
  }
  if (self.hasFavoriteNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.favoriteNum] hash];
  }
  if (self.hasLikedNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.likedNum] hash];
  }
  if (self.hasReplyNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.replyNum] hash];
  }
  if (self.hasHasFavorite) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasFavorite] hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasUpdateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.updateOn] hash];
  }
  [self.tagsArray enumerateObjectsUsingBlock:^(TXPBTag *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasLiked) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasLiked] hash];
  }
  if (self.hasDescription) {
    hashCode = hashCode * 31 + [self.pb_description hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasContentUrl) {
    hashCode = hashCode * 31 + [self.contentUrl hash];
  }
  if (self.hasCoverPicUrl) {
    hashCode = hashCode * 31 + [self.coverPicUrl hash];
  }
  if (self.hasContentType) {
    hashCode = hashCode * 31 + self.contentType;
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBKnowledgeBuilder()
@property (strong) TXPBKnowledge* resultKnowledge;
@end

@implementation TXPBKnowledgeBuilder
@synthesize resultKnowledge;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultKnowledge = [[TXPBKnowledge alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultKnowledge;
}
- (TXPBKnowledgeBuilder*) clear {
  self.resultKnowledge = [[TXPBKnowledge alloc] init];
  return self;
}
- (TXPBKnowledgeBuilder*) clone {
  return [TXPBKnowledge builderWithPrototype:resultKnowledge];
}
- (TXPBKnowledge*) defaultInstance {
  return [TXPBKnowledge defaultInstance];
}
- (TXPBKnowledge*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBKnowledge*) buildPartial {
  TXPBKnowledge* returnMe = resultKnowledge;
  self.resultKnowledge = nil;
  return returnMe;
}
- (TXPBKnowledgeBuilder*) mergeFrom:(TXPBKnowledge*) other {
  if (other == [TXPBKnowledge defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasAuthorId) {
    [self setAuthorId:other.authorId];
  }
  if (other.hasAuthorName) {
    [self setAuthorName:other.authorName];
  }
  if (other.hasAuthorTitle) {
    [self setAuthorTitle:other.authorTitle];
  }
  if (other.hasAuthorAvatar) {
    [self setAuthorAvatar:other.authorAvatar];
  }
  if (other.hasFavoriteNum) {
    [self setFavoriteNum:other.favoriteNum];
  }
  if (other.hasLikedNum) {
    [self setLikedNum:other.likedNum];
  }
  if (other.hasReplyNum) {
    [self setReplyNum:other.replyNum];
  }
  if (other.hasHasFavorite) {
    [self setHasFavorite:other.hasFavorite];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasUpdateOn) {
    [self setUpdateOn:other.updateOn];
  }
  if (other.tagsArray.count > 0) {
    if (resultKnowledge.tagsArray == nil) {
      resultKnowledge.tagsArray = [[NSMutableArray alloc] initWithArray:other.tagsArray];
    } else {
      [resultKnowledge.tagsArray addObjectsFromArray:other.tagsArray];
    }
  }
  if (other.hasHasLiked) {
    [self setHasLiked:other.hasLiked];
  }
  if (other.hasDescription) {
    [self setDescription:other.pb_description];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasContentUrl) {
    [self setContentUrl:other.contentUrl];
  }
  if (other.hasCoverPicUrl) {
    [self setCoverPicUrl:other.coverPicUrl];
  }
  if (other.hasContentType) {
    [self setContentType:other.contentType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBKnowledgeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBKnowledgeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        [self setTitle:[input readString]];
        break;
      }
      case 24: {
        [self setAuthorId:[input readInt64]];
        break;
      }
      case 34: {
        [self setAuthorName:[input readString]];
        break;
      }
      case 42: {
        [self setAuthorTitle:[input readString]];
        break;
      }
      case 50: {
        [self setAuthorAvatar:[input readString]];
        break;
      }
      case 56: {
        [self setFavoriteNum:[input readInt64]];
        break;
      }
      case 64: {
        [self setLikedNum:[input readInt64]];
        break;
      }
      case 72: {
        [self setReplyNum:[input readInt64]];
        break;
      }
      case 80: {
        [self setHasFavorite:[input readBool]];
        break;
      }
      case 88: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 96: {
        [self setUpdateOn:[input readInt64]];
        break;
      }
      case 106: {
        TXPBTagBuilder* subBuilder = [TXPBTag builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addTags:[subBuilder buildPartial]];
        break;
      }
      case 112: {
        [self setHasLiked:[input readBool]];
        break;
      }
      case 122: {
        [self setDescription:[input readString]];
        break;
      }
      case 130: {
        [self setContent:[input readString]];
        break;
      }
      case 138: {
        [self setContentUrl:[input readString]];
        break;
      }
      case 146: {
        [self setCoverPicUrl:[input readString]];
        break;
      }
      case 152: {
        TXPBKnowledegeContentType value = (TXPBKnowledegeContentType)[input readEnum];
        if (TXPBKnowledegeContentTypeIsValidValue(value)) {
          [self setContentType:value];
        } else {
          [unknownFields mergeVarintField:19 value:value];
        }
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultKnowledge.hasId;
}
- (SInt64) id {
  return resultKnowledge.id;
}
- (TXPBKnowledgeBuilder*) setId:(SInt64) value {
  resultKnowledge.hasId = YES;
  resultKnowledge.id = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearId {
  resultKnowledge.hasId = NO;
  resultKnowledge.id = 0L;
  return self;
}
- (BOOL) hasTitle {
  return resultKnowledge.hasTitle;
}
- (NSString*) title {
  return resultKnowledge.title;
}
- (TXPBKnowledgeBuilder*) setTitle:(NSString*) value {
  resultKnowledge.hasTitle = YES;
  resultKnowledge.title = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearTitle {
  resultKnowledge.hasTitle = NO;
  resultKnowledge.title = @"";
  return self;
}
- (BOOL) hasAuthorId {
  return resultKnowledge.hasAuthorId;
}
- (SInt64) authorId {
  return resultKnowledge.authorId;
}
- (TXPBKnowledgeBuilder*) setAuthorId:(SInt64) value {
  resultKnowledge.hasAuthorId = YES;
  resultKnowledge.authorId = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearAuthorId {
  resultKnowledge.hasAuthorId = NO;
  resultKnowledge.authorId = 0L;
  return self;
}
- (BOOL) hasAuthorName {
  return resultKnowledge.hasAuthorName;
}
- (NSString*) authorName {
  return resultKnowledge.authorName;
}
- (TXPBKnowledgeBuilder*) setAuthorName:(NSString*) value {
  resultKnowledge.hasAuthorName = YES;
  resultKnowledge.authorName = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearAuthorName {
  resultKnowledge.hasAuthorName = NO;
  resultKnowledge.authorName = @"";
  return self;
}
- (BOOL) hasAuthorTitle {
  return resultKnowledge.hasAuthorTitle;
}
- (NSString*) authorTitle {
  return resultKnowledge.authorTitle;
}
- (TXPBKnowledgeBuilder*) setAuthorTitle:(NSString*) value {
  resultKnowledge.hasAuthorTitle = YES;
  resultKnowledge.authorTitle = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearAuthorTitle {
  resultKnowledge.hasAuthorTitle = NO;
  resultKnowledge.authorTitle = @"";
  return self;
}
- (BOOL) hasAuthorAvatar {
  return resultKnowledge.hasAuthorAvatar;
}
- (NSString*) authorAvatar {
  return resultKnowledge.authorAvatar;
}
- (TXPBKnowledgeBuilder*) setAuthorAvatar:(NSString*) value {
  resultKnowledge.hasAuthorAvatar = YES;
  resultKnowledge.authorAvatar = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearAuthorAvatar {
  resultKnowledge.hasAuthorAvatar = NO;
  resultKnowledge.authorAvatar = @"";
  return self;
}
- (BOOL) hasFavoriteNum {
  return resultKnowledge.hasFavoriteNum;
}
- (SInt64) favoriteNum {
  return resultKnowledge.favoriteNum;
}
- (TXPBKnowledgeBuilder*) setFavoriteNum:(SInt64) value {
  resultKnowledge.hasFavoriteNum = YES;
  resultKnowledge.favoriteNum = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearFavoriteNum {
  resultKnowledge.hasFavoriteNum = NO;
  resultKnowledge.favoriteNum = 0L;
  return self;
}
- (BOOL) hasLikedNum {
  return resultKnowledge.hasLikedNum;
}
- (SInt64) likedNum {
  return resultKnowledge.likedNum;
}
- (TXPBKnowledgeBuilder*) setLikedNum:(SInt64) value {
  resultKnowledge.hasLikedNum = YES;
  resultKnowledge.likedNum = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearLikedNum {
  resultKnowledge.hasLikedNum = NO;
  resultKnowledge.likedNum = 0L;
  return self;
}
- (BOOL) hasReplyNum {
  return resultKnowledge.hasReplyNum;
}
- (SInt64) replyNum {
  return resultKnowledge.replyNum;
}
- (TXPBKnowledgeBuilder*) setReplyNum:(SInt64) value {
  resultKnowledge.hasReplyNum = YES;
  resultKnowledge.replyNum = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearReplyNum {
  resultKnowledge.hasReplyNum = NO;
  resultKnowledge.replyNum = 0L;
  return self;
}
- (BOOL) hasHasFavorite {
  return resultKnowledge.hasHasFavorite;
}
- (BOOL) hasFavorite {
  return resultKnowledge.hasFavorite;
}
- (TXPBKnowledgeBuilder*) setHasFavorite:(BOOL) value {
  resultKnowledge.hasHasFavorite = YES;
  resultKnowledge.hasFavorite = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearHasFavorite {
  resultKnowledge.hasHasFavorite = NO;
  resultKnowledge.hasFavorite = NO;
  return self;
}
- (BOOL) hasCreateOn {
  return resultKnowledge.hasCreateOn;
}
- (SInt64) createOn {
  return resultKnowledge.createOn;
}
- (TXPBKnowledgeBuilder*) setCreateOn:(SInt64) value {
  resultKnowledge.hasCreateOn = YES;
  resultKnowledge.createOn = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearCreateOn {
  resultKnowledge.hasCreateOn = NO;
  resultKnowledge.createOn = 0L;
  return self;
}
- (BOOL) hasUpdateOn {
  return resultKnowledge.hasUpdateOn;
}
- (SInt64) updateOn {
  return resultKnowledge.updateOn;
}
- (TXPBKnowledgeBuilder*) setUpdateOn:(SInt64) value {
  resultKnowledge.hasUpdateOn = YES;
  resultKnowledge.updateOn = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearUpdateOn {
  resultKnowledge.hasUpdateOn = NO;
  resultKnowledge.updateOn = 0L;
  return self;
}
- (NSMutableArray *)tags {
  return resultKnowledge.tagsArray;
}
- (TXPBTag*)tagsAtIndex:(NSUInteger)index {
  return [resultKnowledge tagsAtIndex:index];
}
- (TXPBKnowledgeBuilder *)addTags:(TXPBTag*)value {
  if (resultKnowledge.tagsArray == nil) {
    resultKnowledge.tagsArray = [[NSMutableArray alloc]init];
  }
  [resultKnowledge.tagsArray addObject:value];
  return self;
}
- (TXPBKnowledgeBuilder *)setTagsArray:(NSArray *)array {
  resultKnowledge.tagsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBKnowledgeBuilder *)clearTags {
  resultKnowledge.tagsArray = nil;
  return self;
}
- (BOOL) hasHasLiked {
  return resultKnowledge.hasHasLiked;
}
- (BOOL) hasLiked {
  return resultKnowledge.hasLiked;
}
- (TXPBKnowledgeBuilder*) setHasLiked:(BOOL) value {
  resultKnowledge.hasHasLiked = YES;
  resultKnowledge.hasLiked = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearHasLiked {
  resultKnowledge.hasHasLiked = NO;
  resultKnowledge.hasLiked = NO;
  return self;
}
- (BOOL) hasDescription {
  return resultKnowledge.hasDescription;
}
- (NSString*) pb_description {
  return resultKnowledge.pb_description;
}
- (TXPBKnowledgeBuilder*) setDescription:(NSString*) value {
  resultKnowledge.hasDescription = YES;
  resultKnowledge.pb_description = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearDescription {
  resultKnowledge.hasDescription = NO;
  resultKnowledge.pb_description = @"";
  return self;
}
- (BOOL) hasContent {
  return resultKnowledge.hasContent;
}
- (NSString*) content {
  return resultKnowledge.content;
}
- (TXPBKnowledgeBuilder*) setContent:(NSString*) value {
  resultKnowledge.hasContent = YES;
  resultKnowledge.content = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearContent {
  resultKnowledge.hasContent = NO;
  resultKnowledge.content = @"";
  return self;
}
- (BOOL) hasContentUrl {
  return resultKnowledge.hasContentUrl;
}
- (NSString*) contentUrl {
  return resultKnowledge.contentUrl;
}
- (TXPBKnowledgeBuilder*) setContentUrl:(NSString*) value {
  resultKnowledge.hasContentUrl = YES;
  resultKnowledge.contentUrl = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearContentUrl {
  resultKnowledge.hasContentUrl = NO;
  resultKnowledge.contentUrl = @"";
  return self;
}
- (BOOL) hasCoverPicUrl {
  return resultKnowledge.hasCoverPicUrl;
}
- (NSString*) coverPicUrl {
  return resultKnowledge.coverPicUrl;
}
- (TXPBKnowledgeBuilder*) setCoverPicUrl:(NSString*) value {
  resultKnowledge.hasCoverPicUrl = YES;
  resultKnowledge.coverPicUrl = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearCoverPicUrl {
  resultKnowledge.hasCoverPicUrl = NO;
  resultKnowledge.coverPicUrl = @"";
  return self;
}
- (BOOL) hasContentType {
  return resultKnowledge.hasContentType;
}
- (TXPBKnowledegeContentType) contentType {
  return resultKnowledge.contentType;
}
- (TXPBKnowledgeBuilder*) setContentType:(TXPBKnowledegeContentType) value {
  resultKnowledge.hasContentType = YES;
  resultKnowledge.contentType = value;
  return self;
}
- (TXPBKnowledgeBuilder*) clearContentType {
  resultKnowledge.hasContentType = NO;
  resultKnowledge.contentType = TXPBKnowledegeContentTypeKPlain;
  return self;
}
@end

@interface TXPBFetchHotKnowledgesRequest ()
@property SInt32 pageNum;
@end

@implementation TXPBFetchHotKnowledgesRequest

- (BOOL) hasPageNum {
  return !!hasPageNum_;
}
- (void) setHasPageNum:(BOOL) _value_ {
  hasPageNum_ = !!_value_;
}
@synthesize pageNum;
- (instancetype) init {
  if ((self = [super init])) {
    self.pageNum = 0;
  }
  return self;
}
static TXPBFetchHotKnowledgesRequest* defaultTXPBFetchHotKnowledgesRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHotKnowledgesRequest class]) {
    defaultTXPBFetchHotKnowledgesRequestInstance = [[TXPBFetchHotKnowledgesRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHotKnowledgesRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHotKnowledgesRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPageNum) {
    [output writeInt32:1 value:self.pageNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasPageNum) {
    size_ += computeInt32Size(1, self.pageNum);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHotKnowledgesRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchHotKnowledgesRequest*)[[[TXPBFetchHotKnowledgesRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchHotKnowledgesRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotKnowledgesRequest*)[[[TXPBFetchHotKnowledgesRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotKnowledgesRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHotKnowledgesRequest*)[[[TXPBFetchHotKnowledgesRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHotKnowledgesRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotKnowledgesRequest*)[[[TXPBFetchHotKnowledgesRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotKnowledgesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHotKnowledgesRequest*)[[[TXPBFetchHotKnowledgesRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHotKnowledgesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotKnowledgesRequest*)[[[TXPBFetchHotKnowledgesRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotKnowledgesRequestBuilder*) builder {
  return [[TXPBFetchHotKnowledgesRequestBuilder alloc] init];
}
+ (TXPBFetchHotKnowledgesRequestBuilder*) builderWithPrototype:(TXPBFetchHotKnowledgesRequest*) prototype {
  return [[TXPBFetchHotKnowledgesRequest builder] mergeFrom:prototype];
}
- (TXPBFetchHotKnowledgesRequestBuilder*) builder {
  return [TXPBFetchHotKnowledgesRequest builder];
}
- (TXPBFetchHotKnowledgesRequestBuilder*) toBuilder {
  return [TXPBFetchHotKnowledgesRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasPageNum) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageNum", [NSNumber numberWithInteger:self.pageNum]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasPageNum) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageNum] forKey: @"pageNum"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHotKnowledgesRequest class]]) {
    return NO;
  }
  TXPBFetchHotKnowledgesRequest *otherMessage = other;
  return
      self.hasPageNum == otherMessage.hasPageNum &&
      (!self.hasPageNum || self.pageNum == otherMessage.pageNum) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasPageNum) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageNum] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHotKnowledgesRequestBuilder()
@property (strong) TXPBFetchHotKnowledgesRequest* resultFetchHotKnowledgesRequest;
@end

@implementation TXPBFetchHotKnowledgesRequestBuilder
@synthesize resultFetchHotKnowledgesRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHotKnowledgesRequest = [[TXPBFetchHotKnowledgesRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHotKnowledgesRequest;
}
- (TXPBFetchHotKnowledgesRequestBuilder*) clear {
  self.resultFetchHotKnowledgesRequest = [[TXPBFetchHotKnowledgesRequest alloc] init];
  return self;
}
- (TXPBFetchHotKnowledgesRequestBuilder*) clone {
  return [TXPBFetchHotKnowledgesRequest builderWithPrototype:resultFetchHotKnowledgesRequest];
}
- (TXPBFetchHotKnowledgesRequest*) defaultInstance {
  return [TXPBFetchHotKnowledgesRequest defaultInstance];
}
- (TXPBFetchHotKnowledgesRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHotKnowledgesRequest*) buildPartial {
  TXPBFetchHotKnowledgesRequest* returnMe = resultFetchHotKnowledgesRequest;
  self.resultFetchHotKnowledgesRequest = nil;
  return returnMe;
}
- (TXPBFetchHotKnowledgesRequestBuilder*) mergeFrom:(TXPBFetchHotKnowledgesRequest*) other {
  if (other == [TXPBFetchHotKnowledgesRequest defaultInstance]) {
    return self;
  }
  if (other.hasPageNum) {
    [self setPageNum:other.pageNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHotKnowledgesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHotKnowledgesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPageNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPageNum {
  return resultFetchHotKnowledgesRequest.hasPageNum;
}
- (SInt32) pageNum {
  return resultFetchHotKnowledgesRequest.pageNum;
}
- (TXPBFetchHotKnowledgesRequestBuilder*) setPageNum:(SInt32) value {
  resultFetchHotKnowledgesRequest.hasPageNum = YES;
  resultFetchHotKnowledgesRequest.pageNum = value;
  return self;
}
- (TXPBFetchHotKnowledgesRequestBuilder*) clearPageNum {
  resultFetchHotKnowledgesRequest.hasPageNum = NO;
  resultFetchHotKnowledgesRequest.pageNum = 0;
  return self;
}
@end

@interface TXPBFetchHotKnowlegdesResponse ()
@property (strong) NSMutableArray * knowledgesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchHotKnowlegdesResponse

@synthesize knowledgesArray;
@dynamic knowledges;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchHotKnowlegdesResponse* defaultTXPBFetchHotKnowlegdesResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchHotKnowlegdesResponse class]) {
    defaultTXPBFetchHotKnowlegdesResponseInstance = [[TXPBFetchHotKnowlegdesResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchHotKnowlegdesResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchHotKnowlegdesResponseInstance;
}
- (NSArray *)knowledges {
  return knowledgesArray;
}
- (TXPBKnowledge*)knowledgesAtIndex:(NSUInteger)index {
  return [knowledgesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitknowledges = YES;
   [self.knowledges enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitknowledges = NO;
      *stop = YES;
    }
  }];
  if (!isInitknowledges) return isInitknowledges;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchHotKnowlegdesResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchHotKnowlegdesResponse*)[[[TXPBFetchHotKnowlegdesResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchHotKnowlegdesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotKnowlegdesResponse*)[[[TXPBFetchHotKnowlegdesResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotKnowlegdesResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchHotKnowlegdesResponse*)[[[TXPBFetchHotKnowlegdesResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchHotKnowlegdesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotKnowlegdesResponse*)[[[TXPBFetchHotKnowlegdesResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotKnowlegdesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchHotKnowlegdesResponse*)[[[TXPBFetchHotKnowlegdesResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchHotKnowlegdesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchHotKnowlegdesResponse*)[[[TXPBFetchHotKnowlegdesResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchHotKnowlegdesResponseBuilder*) builder {
  return [[TXPBFetchHotKnowlegdesResponseBuilder alloc] init];
}
+ (TXPBFetchHotKnowlegdesResponseBuilder*) builderWithPrototype:(TXPBFetchHotKnowlegdesResponse*) prototype {
  return [[TXPBFetchHotKnowlegdesResponse builder] mergeFrom:prototype];
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) builder {
  return [TXPBFetchHotKnowlegdesResponse builder];
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) toBuilder {
  return [TXPBFetchHotKnowlegdesResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"knowledges"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBKnowledge* element in self.knowledgesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"knowledges"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchHotKnowlegdesResponse class]]) {
    return NO;
  }
  TXPBFetchHotKnowlegdesResponse *otherMessage = other;
  return
      [self.knowledgesArray isEqualToArray:otherMessage.knowledgesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchHotKnowlegdesResponseBuilder()
@property (strong) TXPBFetchHotKnowlegdesResponse* resultFetchHotKnowlegdesResponse;
@end

@implementation TXPBFetchHotKnowlegdesResponseBuilder
@synthesize resultFetchHotKnowlegdesResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchHotKnowlegdesResponse = [[TXPBFetchHotKnowlegdesResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchHotKnowlegdesResponse;
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) clear {
  self.resultFetchHotKnowlegdesResponse = [[TXPBFetchHotKnowlegdesResponse alloc] init];
  return self;
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) clone {
  return [TXPBFetchHotKnowlegdesResponse builderWithPrototype:resultFetchHotKnowlegdesResponse];
}
- (TXPBFetchHotKnowlegdesResponse*) defaultInstance {
  return [TXPBFetchHotKnowlegdesResponse defaultInstance];
}
- (TXPBFetchHotKnowlegdesResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchHotKnowlegdesResponse*) buildPartial {
  TXPBFetchHotKnowlegdesResponse* returnMe = resultFetchHotKnowlegdesResponse;
  self.resultFetchHotKnowlegdesResponse = nil;
  return returnMe;
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) mergeFrom:(TXPBFetchHotKnowlegdesResponse*) other {
  if (other == [TXPBFetchHotKnowlegdesResponse defaultInstance]) {
    return self;
  }
  if (other.knowledgesArray.count > 0) {
    if (resultFetchHotKnowlegdesResponse.knowledgesArray == nil) {
      resultFetchHotKnowlegdesResponse.knowledgesArray = [[NSMutableArray alloc] initWithArray:other.knowledgesArray];
    } else {
      [resultFetchHotKnowlegdesResponse.knowledgesArray addObjectsFromArray:other.knowledgesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBKnowledgeBuilder* subBuilder = [TXPBKnowledge builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKnowledges:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)knowledges {
  return resultFetchHotKnowlegdesResponse.knowledgesArray;
}
- (TXPBKnowledge*)knowledgesAtIndex:(NSUInteger)index {
  return [resultFetchHotKnowlegdesResponse knowledgesAtIndex:index];
}
- (TXPBFetchHotKnowlegdesResponseBuilder *)addKnowledges:(TXPBKnowledge*)value {
  if (resultFetchHotKnowlegdesResponse.knowledgesArray == nil) {
    resultFetchHotKnowlegdesResponse.knowledgesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchHotKnowlegdesResponse.knowledgesArray addObject:value];
  return self;
}
- (TXPBFetchHotKnowlegdesResponseBuilder *)setKnowledgesArray:(NSArray *)array {
  resultFetchHotKnowlegdesResponse.knowledgesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchHotKnowlegdesResponseBuilder *)clearKnowledges {
  resultFetchHotKnowlegdesResponse.knowledgesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchHotKnowlegdesResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchHotKnowlegdesResponse.hasMore;
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchHotKnowlegdesResponse.hasHasMore = YES;
  resultFetchHotKnowlegdesResponse.hasMore = value;
  return self;
}
- (TXPBFetchHotKnowlegdesResponseBuilder*) clearHasMore {
  resultFetchHotKnowlegdesResponse.hasHasMore = NO;
  resultFetchHotKnowlegdesResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchKnowledgesRequest ()
@property SInt64 tagId;
@property SInt64 authorId;
@property SInt64 maxId;
@property SInt64 sinceId;
@end

@implementation TXPBFetchKnowledgesRequest

- (BOOL) hasTagId {
  return !!hasTagId_;
}
- (void) setHasTagId:(BOOL) _value_ {
  hasTagId_ = !!_value_;
}
@synthesize tagId;
- (BOOL) hasAuthorId {
  return !!hasAuthorId_;
}
- (void) setHasAuthorId:(BOOL) _value_ {
  hasAuthorId_ = !!_value_;
}
@synthesize authorId;
- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (instancetype) init {
  if ((self = [super init])) {
    self.tagId = 0L;
    self.authorId = 0L;
    self.maxId = 0L;
    self.sinceId = 0L;
  }
  return self;
}
static TXPBFetchKnowledgesRequest* defaultTXPBFetchKnowledgesRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchKnowledgesRequest class]) {
    defaultTXPBFetchKnowledgesRequestInstance = [[TXPBFetchKnowledgesRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgesRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgesRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTagId) {
    [output writeInt64:1 value:self.tagId];
  }
  if (self.hasAuthorId) {
    [output writeInt64:2 value:self.authorId];
  }
  if (self.hasMaxId) {
    [output writeInt64:3 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:4 value:self.sinceId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTagId) {
    size_ += computeInt64Size(1, self.tagId);
  }
  if (self.hasAuthorId) {
    size_ += computeInt64Size(2, self.authorId);
  }
  if (self.hasMaxId) {
    size_ += computeInt64Size(3, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(4, self.sinceId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchKnowledgesRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchKnowledgesRequest*)[[[TXPBFetchKnowledgesRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchKnowledgesRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgesRequest*)[[[TXPBFetchKnowledgesRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgesRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchKnowledgesRequest*)[[[TXPBFetchKnowledgesRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchKnowledgesRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgesRequest*)[[[TXPBFetchKnowledgesRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchKnowledgesRequest*)[[[TXPBFetchKnowledgesRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchKnowledgesRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgesRequest*)[[[TXPBFetchKnowledgesRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgesRequestBuilder*) builder {
  return [[TXPBFetchKnowledgesRequestBuilder alloc] init];
}
+ (TXPBFetchKnowledgesRequestBuilder*) builderWithPrototype:(TXPBFetchKnowledgesRequest*) prototype {
  return [[TXPBFetchKnowledgesRequest builder] mergeFrom:prototype];
}
- (TXPBFetchKnowledgesRequestBuilder*) builder {
  return [TXPBFetchKnowledgesRequest builder];
}
- (TXPBFetchKnowledgesRequestBuilder*) toBuilder {
  return [TXPBFetchKnowledgesRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTagId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tagId", [NSNumber numberWithLongLong:self.tagId]];
  }
  if (self.hasAuthorId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"authorId", [NSNumber numberWithLongLong:self.authorId]];
  }
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTagId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.tagId] forKey: @"tagId"];
  }
  if (self.hasAuthorId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.authorId] forKey: @"authorId"];
  }
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchKnowledgesRequest class]]) {
    return NO;
  }
  TXPBFetchKnowledgesRequest *otherMessage = other;
  return
      self.hasTagId == otherMessage.hasTagId &&
      (!self.hasTagId || self.tagId == otherMessage.tagId) &&
      self.hasAuthorId == otherMessage.hasAuthorId &&
      (!self.hasAuthorId || self.authorId == otherMessage.authorId) &&
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTagId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.tagId] hash];
  }
  if (self.hasAuthorId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.authorId] hash];
  }
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchKnowledgesRequestBuilder()
@property (strong) TXPBFetchKnowledgesRequest* resultFetchKnowledgesRequest;
@end

@implementation TXPBFetchKnowledgesRequestBuilder
@synthesize resultFetchKnowledgesRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchKnowledgesRequest = [[TXPBFetchKnowledgesRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchKnowledgesRequest;
}
- (TXPBFetchKnowledgesRequestBuilder*) clear {
  self.resultFetchKnowledgesRequest = [[TXPBFetchKnowledgesRequest alloc] init];
  return self;
}
- (TXPBFetchKnowledgesRequestBuilder*) clone {
  return [TXPBFetchKnowledgesRequest builderWithPrototype:resultFetchKnowledgesRequest];
}
- (TXPBFetchKnowledgesRequest*) defaultInstance {
  return [TXPBFetchKnowledgesRequest defaultInstance];
}
- (TXPBFetchKnowledgesRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchKnowledgesRequest*) buildPartial {
  TXPBFetchKnowledgesRequest* returnMe = resultFetchKnowledgesRequest;
  self.resultFetchKnowledgesRequest = nil;
  return returnMe;
}
- (TXPBFetchKnowledgesRequestBuilder*) mergeFrom:(TXPBFetchKnowledgesRequest*) other {
  if (other == [TXPBFetchKnowledgesRequest defaultInstance]) {
    return self;
  }
  if (other.hasTagId) {
    [self setTagId:other.tagId];
  }
  if (other.hasAuthorId) {
    [self setAuthorId:other.authorId];
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchKnowledgesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchKnowledgesRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTagId:[input readInt64]];
        break;
      }
      case 16: {
        [self setAuthorId:[input readInt64]];
        break;
      }
      case 24: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 32: {
        [self setSinceId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasTagId {
  return resultFetchKnowledgesRequest.hasTagId;
}
- (SInt64) tagId {
  return resultFetchKnowledgesRequest.tagId;
}
- (TXPBFetchKnowledgesRequestBuilder*) setTagId:(SInt64) value {
  resultFetchKnowledgesRequest.hasTagId = YES;
  resultFetchKnowledgesRequest.tagId = value;
  return self;
}
- (TXPBFetchKnowledgesRequestBuilder*) clearTagId {
  resultFetchKnowledgesRequest.hasTagId = NO;
  resultFetchKnowledgesRequest.tagId = 0L;
  return self;
}
- (BOOL) hasAuthorId {
  return resultFetchKnowledgesRequest.hasAuthorId;
}
- (SInt64) authorId {
  return resultFetchKnowledgesRequest.authorId;
}
- (TXPBFetchKnowledgesRequestBuilder*) setAuthorId:(SInt64) value {
  resultFetchKnowledgesRequest.hasAuthorId = YES;
  resultFetchKnowledgesRequest.authorId = value;
  return self;
}
- (TXPBFetchKnowledgesRequestBuilder*) clearAuthorId {
  resultFetchKnowledgesRequest.hasAuthorId = NO;
  resultFetchKnowledgesRequest.authorId = 0L;
  return self;
}
- (BOOL) hasMaxId {
  return resultFetchKnowledgesRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchKnowledgesRequest.maxId;
}
- (TXPBFetchKnowledgesRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchKnowledgesRequest.hasMaxId = YES;
  resultFetchKnowledgesRequest.maxId = value;
  return self;
}
- (TXPBFetchKnowledgesRequestBuilder*) clearMaxId {
  resultFetchKnowledgesRequest.hasMaxId = NO;
  resultFetchKnowledgesRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchKnowledgesRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchKnowledgesRequest.sinceId;
}
- (TXPBFetchKnowledgesRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchKnowledgesRequest.hasSinceId = YES;
  resultFetchKnowledgesRequest.sinceId = value;
  return self;
}
- (TXPBFetchKnowledgesRequestBuilder*) clearSinceId {
  resultFetchKnowledgesRequest.hasSinceId = NO;
  resultFetchKnowledgesRequest.sinceId = 0L;
  return self;
}
@end

@interface TXPBFetchKnowledgesResponse ()
@property (strong) NSMutableArray * knowledgesArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchKnowledgesResponse

@synthesize knowledgesArray;
@dynamic knowledges;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchKnowledgesResponse* defaultTXPBFetchKnowledgesResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchKnowledgesResponse class]) {
    defaultTXPBFetchKnowledgesResponseInstance = [[TXPBFetchKnowledgesResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgesResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgesResponseInstance;
}
- (NSArray *)knowledges {
  return knowledgesArray;
}
- (TXPBKnowledge*)knowledgesAtIndex:(NSUInteger)index {
  return [knowledgesArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitknowledges = YES;
   [self.knowledges enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitknowledges = NO;
      *stop = YES;
    }
  }];
  if (!isInitknowledges) return isInitknowledges;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchKnowledgesResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchKnowledgesResponse*)[[[TXPBFetchKnowledgesResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchKnowledgesResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgesResponse*)[[[TXPBFetchKnowledgesResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgesResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchKnowledgesResponse*)[[[TXPBFetchKnowledgesResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchKnowledgesResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgesResponse*)[[[TXPBFetchKnowledgesResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchKnowledgesResponse*)[[[TXPBFetchKnowledgesResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchKnowledgesResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgesResponse*)[[[TXPBFetchKnowledgesResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgesResponseBuilder*) builder {
  return [[TXPBFetchKnowledgesResponseBuilder alloc] init];
}
+ (TXPBFetchKnowledgesResponseBuilder*) builderWithPrototype:(TXPBFetchKnowledgesResponse*) prototype {
  return [[TXPBFetchKnowledgesResponse builder] mergeFrom:prototype];
}
- (TXPBFetchKnowledgesResponseBuilder*) builder {
  return [TXPBFetchKnowledgesResponse builder];
}
- (TXPBFetchKnowledgesResponseBuilder*) toBuilder {
  return [TXPBFetchKnowledgesResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"knowledges"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBKnowledge* element in self.knowledgesArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"knowledges"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchKnowledgesResponse class]]) {
    return NO;
  }
  TXPBFetchKnowledgesResponse *otherMessage = other;
  return
      [self.knowledgesArray isEqualToArray:otherMessage.knowledgesArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.knowledgesArray enumerateObjectsUsingBlock:^(TXPBKnowledge *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchKnowledgesResponseBuilder()
@property (strong) TXPBFetchKnowledgesResponse* resultFetchKnowledgesResponse;
@end

@implementation TXPBFetchKnowledgesResponseBuilder
@synthesize resultFetchKnowledgesResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchKnowledgesResponse = [[TXPBFetchKnowledgesResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchKnowledgesResponse;
}
- (TXPBFetchKnowledgesResponseBuilder*) clear {
  self.resultFetchKnowledgesResponse = [[TXPBFetchKnowledgesResponse alloc] init];
  return self;
}
- (TXPBFetchKnowledgesResponseBuilder*) clone {
  return [TXPBFetchKnowledgesResponse builderWithPrototype:resultFetchKnowledgesResponse];
}
- (TXPBFetchKnowledgesResponse*) defaultInstance {
  return [TXPBFetchKnowledgesResponse defaultInstance];
}
- (TXPBFetchKnowledgesResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchKnowledgesResponse*) buildPartial {
  TXPBFetchKnowledgesResponse* returnMe = resultFetchKnowledgesResponse;
  self.resultFetchKnowledgesResponse = nil;
  return returnMe;
}
- (TXPBFetchKnowledgesResponseBuilder*) mergeFrom:(TXPBFetchKnowledgesResponse*) other {
  if (other == [TXPBFetchKnowledgesResponse defaultInstance]) {
    return self;
  }
  if (other.knowledgesArray.count > 0) {
    if (resultFetchKnowledgesResponse.knowledgesArray == nil) {
      resultFetchKnowledgesResponse.knowledgesArray = [[NSMutableArray alloc] initWithArray:other.knowledgesArray];
    } else {
      [resultFetchKnowledgesResponse.knowledgesArray addObjectsFromArray:other.knowledgesArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchKnowledgesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchKnowledgesResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBKnowledgeBuilder* subBuilder = [TXPBKnowledge builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addKnowledges:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)knowledges {
  return resultFetchKnowledgesResponse.knowledgesArray;
}
- (TXPBKnowledge*)knowledgesAtIndex:(NSUInteger)index {
  return [resultFetchKnowledgesResponse knowledgesAtIndex:index];
}
- (TXPBFetchKnowledgesResponseBuilder *)addKnowledges:(TXPBKnowledge*)value {
  if (resultFetchKnowledgesResponse.knowledgesArray == nil) {
    resultFetchKnowledgesResponse.knowledgesArray = [[NSMutableArray alloc]init];
  }
  [resultFetchKnowledgesResponse.knowledgesArray addObject:value];
  return self;
}
- (TXPBFetchKnowledgesResponseBuilder *)setKnowledgesArray:(NSArray *)array {
  resultFetchKnowledgesResponse.knowledgesArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchKnowledgesResponseBuilder *)clearKnowledges {
  resultFetchKnowledgesResponse.knowledgesArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchKnowledgesResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchKnowledgesResponse.hasMore;
}
- (TXPBFetchKnowledgesResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchKnowledgesResponse.hasHasMore = YES;
  resultFetchKnowledgesResponse.hasMore = value;
  return self;
}
- (TXPBFetchKnowledgesResponseBuilder*) clearHasMore {
  resultFetchKnowledgesResponse.hasHasMore = NO;
  resultFetchKnowledgesResponse.hasMore = NO;
  return self;
}
@end

@interface TXPBFetchKnowledgeDetailRequest ()
@property SInt64 knowledgeId;
@end

@implementation TXPBFetchKnowledgeDetailRequest

- (BOOL) hasKnowledgeId {
  return !!hasKnowledgeId_;
}
- (void) setHasKnowledgeId:(BOOL) _value_ {
  hasKnowledgeId_ = !!_value_;
}
@synthesize knowledgeId;
- (instancetype) init {
  if ((self = [super init])) {
    self.knowledgeId = 0L;
  }
  return self;
}
static TXPBFetchKnowledgeDetailRequest* defaultTXPBFetchKnowledgeDetailRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchKnowledgeDetailRequest class]) {
    defaultTXPBFetchKnowledgeDetailRequestInstance = [[TXPBFetchKnowledgeDetailRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgeDetailRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgeDetailRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKnowledgeId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKnowledgeId) {
    [output writeInt64:1 value:self.knowledgeId];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKnowledgeId) {
    size_ += computeInt64Size(1, self.knowledgeId);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchKnowledgeDetailRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchKnowledgeDetailRequest*)[[[TXPBFetchKnowledgeDetailRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchKnowledgeDetailRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgeDetailRequest*)[[[TXPBFetchKnowledgeDetailRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgeDetailRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchKnowledgeDetailRequest*)[[[TXPBFetchKnowledgeDetailRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchKnowledgeDetailRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgeDetailRequest*)[[[TXPBFetchKnowledgeDetailRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgeDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchKnowledgeDetailRequest*)[[[TXPBFetchKnowledgeDetailRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchKnowledgeDetailRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgeDetailRequest*)[[[TXPBFetchKnowledgeDetailRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgeDetailRequestBuilder*) builder {
  return [[TXPBFetchKnowledgeDetailRequestBuilder alloc] init];
}
+ (TXPBFetchKnowledgeDetailRequestBuilder*) builderWithPrototype:(TXPBFetchKnowledgeDetailRequest*) prototype {
  return [[TXPBFetchKnowledgeDetailRequest builder] mergeFrom:prototype];
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) builder {
  return [TXPBFetchKnowledgeDetailRequest builder];
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) toBuilder {
  return [TXPBFetchKnowledgeDetailRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKnowledgeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"knowledgeId", [NSNumber numberWithLongLong:self.knowledgeId]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKnowledgeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.knowledgeId] forKey: @"knowledgeId"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchKnowledgeDetailRequest class]]) {
    return NO;
  }
  TXPBFetchKnowledgeDetailRequest *otherMessage = other;
  return
      self.hasKnowledgeId == otherMessage.hasKnowledgeId &&
      (!self.hasKnowledgeId || self.knowledgeId == otherMessage.knowledgeId) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKnowledgeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.knowledgeId] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchKnowledgeDetailRequestBuilder()
@property (strong) TXPBFetchKnowledgeDetailRequest* resultFetchKnowledgeDetailRequest;
@end

@implementation TXPBFetchKnowledgeDetailRequestBuilder
@synthesize resultFetchKnowledgeDetailRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchKnowledgeDetailRequest = [[TXPBFetchKnowledgeDetailRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchKnowledgeDetailRequest;
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) clear {
  self.resultFetchKnowledgeDetailRequest = [[TXPBFetchKnowledgeDetailRequest alloc] init];
  return self;
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) clone {
  return [TXPBFetchKnowledgeDetailRequest builderWithPrototype:resultFetchKnowledgeDetailRequest];
}
- (TXPBFetchKnowledgeDetailRequest*) defaultInstance {
  return [TXPBFetchKnowledgeDetailRequest defaultInstance];
}
- (TXPBFetchKnowledgeDetailRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchKnowledgeDetailRequest*) buildPartial {
  TXPBFetchKnowledgeDetailRequest* returnMe = resultFetchKnowledgeDetailRequest;
  self.resultFetchKnowledgeDetailRequest = nil;
  return returnMe;
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) mergeFrom:(TXPBFetchKnowledgeDetailRequest*) other {
  if (other == [TXPBFetchKnowledgeDetailRequest defaultInstance]) {
    return self;
  }
  if (other.hasKnowledgeId) {
    [self setKnowledgeId:other.knowledgeId];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setKnowledgeId:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasKnowledgeId {
  return resultFetchKnowledgeDetailRequest.hasKnowledgeId;
}
- (SInt64) knowledgeId {
  return resultFetchKnowledgeDetailRequest.knowledgeId;
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) setKnowledgeId:(SInt64) value {
  resultFetchKnowledgeDetailRequest.hasKnowledgeId = YES;
  resultFetchKnowledgeDetailRequest.knowledgeId = value;
  return self;
}
- (TXPBFetchKnowledgeDetailRequestBuilder*) clearKnowledgeId {
  resultFetchKnowledgeDetailRequest.hasKnowledgeId = NO;
  resultFetchKnowledgeDetailRequest.knowledgeId = 0L;
  return self;
}
@end

@interface TXPBFetchKnowledgeDetailResponse ()
@property (strong) TXPBKnowledge* knowledge;
@end

@implementation TXPBFetchKnowledgeDetailResponse

- (BOOL) hasKnowledge {
  return !!hasKnowledge_;
}
- (void) setHasKnowledge:(BOOL) _value_ {
  hasKnowledge_ = !!_value_;
}
@synthesize knowledge;
- (instancetype) init {
  if ((self = [super init])) {
    self.knowledge = [TXPBKnowledge defaultInstance];
  }
  return self;
}
static TXPBFetchKnowledgeDetailResponse* defaultTXPBFetchKnowledgeDetailResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchKnowledgeDetailResponse class]) {
    defaultTXPBFetchKnowledgeDetailResponseInstance = [[TXPBFetchKnowledgeDetailResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgeDetailResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchKnowledgeDetailResponseInstance;
}
- (BOOL) isInitialized {
  if (self.hasKnowledge) {
    if (!self.knowledge.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKnowledge) {
    [output writeMessage:1 value:self.knowledge];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKnowledge) {
    size_ += computeMessageSize(1, self.knowledge);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchKnowledgeDetailResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchKnowledgeDetailResponse*)[[[TXPBFetchKnowledgeDetailResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchKnowledgeDetailResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgeDetailResponse*)[[[TXPBFetchKnowledgeDetailResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgeDetailResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchKnowledgeDetailResponse*)[[[TXPBFetchKnowledgeDetailResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchKnowledgeDetailResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgeDetailResponse*)[[[TXPBFetchKnowledgeDetailResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgeDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchKnowledgeDetailResponse*)[[[TXPBFetchKnowledgeDetailResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchKnowledgeDetailResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchKnowledgeDetailResponse*)[[[TXPBFetchKnowledgeDetailResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchKnowledgeDetailResponseBuilder*) builder {
  return [[TXPBFetchKnowledgeDetailResponseBuilder alloc] init];
}
+ (TXPBFetchKnowledgeDetailResponseBuilder*) builderWithPrototype:(TXPBFetchKnowledgeDetailResponse*) prototype {
  return [[TXPBFetchKnowledgeDetailResponse builder] mergeFrom:prototype];
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) builder {
  return [TXPBFetchKnowledgeDetailResponse builder];
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) toBuilder {
  return [TXPBFetchKnowledgeDetailResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKnowledge) {
    [output appendFormat:@"%@%@ {\n", indent, @"knowledge"];
    [self.knowledge writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKnowledge) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.knowledge storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"knowledge"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchKnowledgeDetailResponse class]]) {
    return NO;
  }
  TXPBFetchKnowledgeDetailResponse *otherMessage = other;
  return
      self.hasKnowledge == otherMessage.hasKnowledge &&
      (!self.hasKnowledge || [self.knowledge isEqual:otherMessage.knowledge]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKnowledge) {
    hashCode = hashCode * 31 + [self.knowledge hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchKnowledgeDetailResponseBuilder()
@property (strong) TXPBFetchKnowledgeDetailResponse* resultFetchKnowledgeDetailResponse;
@end

@implementation TXPBFetchKnowledgeDetailResponseBuilder
@synthesize resultFetchKnowledgeDetailResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchKnowledgeDetailResponse = [[TXPBFetchKnowledgeDetailResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchKnowledgeDetailResponse;
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) clear {
  self.resultFetchKnowledgeDetailResponse = [[TXPBFetchKnowledgeDetailResponse alloc] init];
  return self;
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) clone {
  return [TXPBFetchKnowledgeDetailResponse builderWithPrototype:resultFetchKnowledgeDetailResponse];
}
- (TXPBFetchKnowledgeDetailResponse*) defaultInstance {
  return [TXPBFetchKnowledgeDetailResponse defaultInstance];
}
- (TXPBFetchKnowledgeDetailResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchKnowledgeDetailResponse*) buildPartial {
  TXPBFetchKnowledgeDetailResponse* returnMe = resultFetchKnowledgeDetailResponse;
  self.resultFetchKnowledgeDetailResponse = nil;
  return returnMe;
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) mergeFrom:(TXPBFetchKnowledgeDetailResponse*) other {
  if (other == [TXPBFetchKnowledgeDetailResponse defaultInstance]) {
    return self;
  }
  if (other.hasKnowledge) {
    [self mergeKnowledge:other.knowledge];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBKnowledgeBuilder* subBuilder = [TXPBKnowledge builder];
        if (self.hasKnowledge) {
          [subBuilder mergeFrom:self.knowledge];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setKnowledge:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasKnowledge {
  return resultFetchKnowledgeDetailResponse.hasKnowledge;
}
- (TXPBKnowledge*) knowledge {
  return resultFetchKnowledgeDetailResponse.knowledge;
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) setKnowledge:(TXPBKnowledge*) value {
  resultFetchKnowledgeDetailResponse.hasKnowledge = YES;
  resultFetchKnowledgeDetailResponse.knowledge = value;
  return self;
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) setKnowledgeBuilder:(TXPBKnowledgeBuilder*) builderForValue {
  return [self setKnowledge:[builderForValue build]];
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) mergeKnowledge:(TXPBKnowledge*) value {
  if (resultFetchKnowledgeDetailResponse.hasKnowledge &&
      resultFetchKnowledgeDetailResponse.knowledge != [TXPBKnowledge defaultInstance]) {
    resultFetchKnowledgeDetailResponse.knowledge =
      [[[TXPBKnowledge builderWithPrototype:resultFetchKnowledgeDetailResponse.knowledge] mergeFrom:value] buildPartial];
  } else {
    resultFetchKnowledgeDetailResponse.knowledge = value;
  }
  resultFetchKnowledgeDetailResponse.hasKnowledge = YES;
  return self;
}
- (TXPBFetchKnowledgeDetailResponseBuilder*) clearKnowledge {
  resultFetchKnowledgeDetailResponse.hasKnowledge = NO;
  resultFetchKnowledgeDetailResponse.knowledge = [TXPBKnowledge defaultInstance];
  return self;
}
@end

@interface TXPBFavoriteKnowledgeRequest ()
@property SInt64 knowledgeId;
@property BOOL isFavorite;
@end

@implementation TXPBFavoriteKnowledgeRequest

- (BOOL) hasKnowledgeId {
  return !!hasKnowledgeId_;
}
- (void) setHasKnowledgeId:(BOOL) _value_ {
  hasKnowledgeId_ = !!_value_;
}
@synthesize knowledgeId;
- (BOOL) hasIsFavorite {
  return !!hasIsFavorite_;
}
- (void) setHasIsFavorite:(BOOL) _value_ {
  hasIsFavorite_ = !!_value_;
}
- (BOOL) isFavorite {
  return !!isFavorite_;
}
- (void) setIsFavorite:(BOOL) _value_ {
  isFavorite_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.knowledgeId = 0L;
    self.isFavorite = NO;
  }
  return self;
}
static TXPBFavoriteKnowledgeRequest* defaultTXPBFavoriteKnowledgeRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFavoriteKnowledgeRequest class]) {
    defaultTXPBFavoriteKnowledgeRequestInstance = [[TXPBFavoriteKnowledgeRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFavoriteKnowledgeRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFavoriteKnowledgeRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasKnowledgeId) {
    return NO;
  }
  if (!self.hasIsFavorite) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasKnowledgeId) {
    [output writeInt64:1 value:self.knowledgeId];
  }
  if (self.hasIsFavorite) {
    [output writeBool:2 value:self.isFavorite];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasKnowledgeId) {
    size_ += computeInt64Size(1, self.knowledgeId);
  }
  if (self.hasIsFavorite) {
    size_ += computeBoolSize(2, self.isFavorite);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFavoriteKnowledgeRequest*) parseFromData:(NSData*) data {
  return (TXPBFavoriteKnowledgeRequest*)[[[TXPBFavoriteKnowledgeRequest builder] mergeFromData:data] build];
}
+ (TXPBFavoriteKnowledgeRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFavoriteKnowledgeRequest*)[[[TXPBFavoriteKnowledgeRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFavoriteKnowledgeRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFavoriteKnowledgeRequest*)[[[TXPBFavoriteKnowledgeRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFavoriteKnowledgeRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFavoriteKnowledgeRequest*)[[[TXPBFavoriteKnowledgeRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFavoriteKnowledgeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFavoriteKnowledgeRequest*)[[[TXPBFavoriteKnowledgeRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFavoriteKnowledgeRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFavoriteKnowledgeRequest*)[[[TXPBFavoriteKnowledgeRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFavoriteKnowledgeRequestBuilder*) builder {
  return [[TXPBFavoriteKnowledgeRequestBuilder alloc] init];
}
+ (TXPBFavoriteKnowledgeRequestBuilder*) builderWithPrototype:(TXPBFavoriteKnowledgeRequest*) prototype {
  return [[TXPBFavoriteKnowledgeRequest builder] mergeFrom:prototype];
}
- (TXPBFavoriteKnowledgeRequestBuilder*) builder {
  return [TXPBFavoriteKnowledgeRequest builder];
}
- (TXPBFavoriteKnowledgeRequestBuilder*) toBuilder {
  return [TXPBFavoriteKnowledgeRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasKnowledgeId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"knowledgeId", [NSNumber numberWithLongLong:self.knowledgeId]];
  }
  if (self.hasIsFavorite) {
    [output appendFormat:@"%@%@: %@\n", indent, @"isFavorite", [NSNumber numberWithBool:self.isFavorite]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasKnowledgeId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.knowledgeId] forKey: @"knowledgeId"];
  }
  if (self.hasIsFavorite) {
    [dictionary setObject: [NSNumber numberWithBool:self.isFavorite] forKey: @"isFavorite"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFavoriteKnowledgeRequest class]]) {
    return NO;
  }
  TXPBFavoriteKnowledgeRequest *otherMessage = other;
  return
      self.hasKnowledgeId == otherMessage.hasKnowledgeId &&
      (!self.hasKnowledgeId || self.knowledgeId == otherMessage.knowledgeId) &&
      self.hasIsFavorite == otherMessage.hasIsFavorite &&
      (!self.hasIsFavorite || self.isFavorite == otherMessage.isFavorite) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasKnowledgeId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.knowledgeId] hash];
  }
  if (self.hasIsFavorite) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.isFavorite] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFavoriteKnowledgeRequestBuilder()
@property (strong) TXPBFavoriteKnowledgeRequest* resultFavoriteKnowledgeRequest;
@end

@implementation TXPBFavoriteKnowledgeRequestBuilder
@synthesize resultFavoriteKnowledgeRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFavoriteKnowledgeRequest = [[TXPBFavoriteKnowledgeRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFavoriteKnowledgeRequest;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) clear {
  self.resultFavoriteKnowledgeRequest = [[TXPBFavoriteKnowledgeRequest alloc] init];
  return self;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) clone {
  return [TXPBFavoriteKnowledgeRequest builderWithPrototype:resultFavoriteKnowledgeRequest];
}
- (TXPBFavoriteKnowledgeRequest*) defaultInstance {
  return [TXPBFavoriteKnowledgeRequest defaultInstance];
}
- (TXPBFavoriteKnowledgeRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFavoriteKnowledgeRequest*) buildPartial {
  TXPBFavoriteKnowledgeRequest* returnMe = resultFavoriteKnowledgeRequest;
  self.resultFavoriteKnowledgeRequest = nil;
  return returnMe;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) mergeFrom:(TXPBFavoriteKnowledgeRequest*) other {
  if (other == [TXPBFavoriteKnowledgeRequest defaultInstance]) {
    return self;
  }
  if (other.hasKnowledgeId) {
    [self setKnowledgeId:other.knowledgeId];
  }
  if (other.hasIsFavorite) {
    [self setIsFavorite:other.isFavorite];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFavoriteKnowledgeRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setKnowledgeId:[input readInt64]];
        break;
      }
      case 16: {
        [self setIsFavorite:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasKnowledgeId {
  return resultFavoriteKnowledgeRequest.hasKnowledgeId;
}
- (SInt64) knowledgeId {
  return resultFavoriteKnowledgeRequest.knowledgeId;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) setKnowledgeId:(SInt64) value {
  resultFavoriteKnowledgeRequest.hasKnowledgeId = YES;
  resultFavoriteKnowledgeRequest.knowledgeId = value;
  return self;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) clearKnowledgeId {
  resultFavoriteKnowledgeRequest.hasKnowledgeId = NO;
  resultFavoriteKnowledgeRequest.knowledgeId = 0L;
  return self;
}
- (BOOL) hasIsFavorite {
  return resultFavoriteKnowledgeRequest.hasIsFavorite;
}
- (BOOL) isFavorite {
  return resultFavoriteKnowledgeRequest.isFavorite;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) setIsFavorite:(BOOL) value {
  resultFavoriteKnowledgeRequest.hasIsFavorite = YES;
  resultFavoriteKnowledgeRequest.isFavorite = value;
  return self;
}
- (TXPBFavoriteKnowledgeRequestBuilder*) clearIsFavorite {
  resultFavoriteKnowledgeRequest.hasIsFavorite = NO;
  resultFavoriteKnowledgeRequest.isFavorite = NO;
  return self;
}
@end

@interface TXPBFavoriteKnowledgeResponse ()
@end

@implementation TXPBFavoriteKnowledgeResponse

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static TXPBFavoriteKnowledgeResponse* defaultTXPBFavoriteKnowledgeResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFavoriteKnowledgeResponse class]) {
    defaultTXPBFavoriteKnowledgeResponseInstance = [[TXPBFavoriteKnowledgeResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFavoriteKnowledgeResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFavoriteKnowledgeResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFavoriteKnowledgeResponse*) parseFromData:(NSData*) data {
  return (TXPBFavoriteKnowledgeResponse*)[[[TXPBFavoriteKnowledgeResponse builder] mergeFromData:data] build];
}
+ (TXPBFavoriteKnowledgeResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFavoriteKnowledgeResponse*)[[[TXPBFavoriteKnowledgeResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFavoriteKnowledgeResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFavoriteKnowledgeResponse*)[[[TXPBFavoriteKnowledgeResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFavoriteKnowledgeResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFavoriteKnowledgeResponse*)[[[TXPBFavoriteKnowledgeResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFavoriteKnowledgeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFavoriteKnowledgeResponse*)[[[TXPBFavoriteKnowledgeResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFavoriteKnowledgeResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFavoriteKnowledgeResponse*)[[[TXPBFavoriteKnowledgeResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFavoriteKnowledgeResponseBuilder*) builder {
  return [[TXPBFavoriteKnowledgeResponseBuilder alloc] init];
}
+ (TXPBFavoriteKnowledgeResponseBuilder*) builderWithPrototype:(TXPBFavoriteKnowledgeResponse*) prototype {
  return [[TXPBFavoriteKnowledgeResponse builder] mergeFrom:prototype];
}
- (TXPBFavoriteKnowledgeResponseBuilder*) builder {
  return [TXPBFavoriteKnowledgeResponse builder];
}
- (TXPBFavoriteKnowledgeResponseBuilder*) toBuilder {
  return [TXPBFavoriteKnowledgeResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFavoriteKnowledgeResponse class]]) {
    return NO;
  }
  TXPBFavoriteKnowledgeResponse *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFavoriteKnowledgeResponseBuilder()
@property (strong) TXPBFavoriteKnowledgeResponse* resultFavoriteKnowledgeResponse;
@end

@implementation TXPBFavoriteKnowledgeResponseBuilder
@synthesize resultFavoriteKnowledgeResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFavoriteKnowledgeResponse = [[TXPBFavoriteKnowledgeResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFavoriteKnowledgeResponse;
}
- (TXPBFavoriteKnowledgeResponseBuilder*) clear {
  self.resultFavoriteKnowledgeResponse = [[TXPBFavoriteKnowledgeResponse alloc] init];
  return self;
}
- (TXPBFavoriteKnowledgeResponseBuilder*) clone {
  return [TXPBFavoriteKnowledgeResponse builderWithPrototype:resultFavoriteKnowledgeResponse];
}
- (TXPBFavoriteKnowledgeResponse*) defaultInstance {
  return [TXPBFavoriteKnowledgeResponse defaultInstance];
}
- (TXPBFavoriteKnowledgeResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFavoriteKnowledgeResponse*) buildPartial {
  TXPBFavoriteKnowledgeResponse* returnMe = resultFavoriteKnowledgeResponse;
  self.resultFavoriteKnowledgeResponse = nil;
  return returnMe;
}
- (TXPBFavoriteKnowledgeResponseBuilder*) mergeFrom:(TXPBFavoriteKnowledgeResponse*) other {
  if (other == [TXPBFavoriteKnowledgeResponse defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFavoriteKnowledgeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFavoriteKnowledgeResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface TXPBCommunionMessage ()
@property SInt64 id;
@property SInt64 toUserId;
@property SInt64 objId;
@property TXPBCommunionObjType objType;
@property TXPBCommunionAction action;
@property SInt64 optUserId;
@property TXPBUserType optUserType;
@property (strong) NSString* optUserName;
@property (strong) NSString* optUserTitle;
@property (strong) NSString* title;
@property (strong) NSString* content;
@property SInt64 createOn;
@property SInt64 refId;
@property (strong) NSString* optUserAvater;
@property (strong) TXPBQuestion* refQuestion;
@property (strong) TXPBQuestionAnswer* refAnswer;
@end

@implementation TXPBCommunionMessage

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasToUserId {
  return !!hasToUserId_;
}
- (void) setHasToUserId:(BOOL) _value_ {
  hasToUserId_ = !!_value_;
}
@synthesize toUserId;
- (BOOL) hasObjId {
  return !!hasObjId_;
}
- (void) setHasObjId:(BOOL) _value_ {
  hasObjId_ = !!_value_;
}
@synthesize objId;
- (BOOL) hasObjType {
  return !!hasObjType_;
}
- (void) setHasObjType:(BOOL) _value_ {
  hasObjType_ = !!_value_;
}
@synthesize objType;
- (BOOL) hasAction {
  return !!hasAction_;
}
- (void) setHasAction:(BOOL) _value_ {
  hasAction_ = !!_value_;
}
@synthesize action;
- (BOOL) hasOptUserId {
  return !!hasOptUserId_;
}
- (void) setHasOptUserId:(BOOL) _value_ {
  hasOptUserId_ = !!_value_;
}
@synthesize optUserId;
- (BOOL) hasOptUserType {
  return !!hasOptUserType_;
}
- (void) setHasOptUserType:(BOOL) _value_ {
  hasOptUserType_ = !!_value_;
}
@synthesize optUserType;
- (BOOL) hasOptUserName {
  return !!hasOptUserName_;
}
- (void) setHasOptUserName:(BOOL) _value_ {
  hasOptUserName_ = !!_value_;
}
@synthesize optUserName;
- (BOOL) hasOptUserTitle {
  return !!hasOptUserTitle_;
}
- (void) setHasOptUserTitle:(BOOL) _value_ {
  hasOptUserTitle_ = !!_value_;
}
@synthesize optUserTitle;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) _value_ {
  hasTitle_ = !!_value_;
}
@synthesize title;
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) _value_ {
  hasContent_ = !!_value_;
}
@synthesize content;
- (BOOL) hasCreateOn {
  return !!hasCreateOn_;
}
- (void) setHasCreateOn:(BOOL) _value_ {
  hasCreateOn_ = !!_value_;
}
@synthesize createOn;
- (BOOL) hasRefId {
  return !!hasRefId_;
}
- (void) setHasRefId:(BOOL) _value_ {
  hasRefId_ = !!_value_;
}
@synthesize refId;
- (BOOL) hasOptUserAvater {
  return !!hasOptUserAvater_;
}
- (void) setHasOptUserAvater:(BOOL) _value_ {
  hasOptUserAvater_ = !!_value_;
}
@synthesize optUserAvater;
- (BOOL) hasRefQuestion {
  return !!hasRefQuestion_;
}
- (void) setHasRefQuestion:(BOOL) _value_ {
  hasRefQuestion_ = !!_value_;
}
@synthesize refQuestion;
- (BOOL) hasRefAnswer {
  return !!hasRefAnswer_;
}
- (void) setHasRefAnswer:(BOOL) _value_ {
  hasRefAnswer_ = !!_value_;
}
@synthesize refAnswer;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.toUserId = 0L;
    self.objId = 0L;
    self.objType = TXPBCommunionObjTypeTQuestion;
    self.action = TXPBCommunionActionAAnswer;
    self.optUserId = 0L;
    self.optUserType = TXPBUserTypeChild;
    self.optUserName = @"";
    self.optUserTitle = @"";
    self.title = @"";
    self.content = @"";
    self.createOn = 0L;
    self.refId = 0L;
    self.optUserAvater = @"";
    self.refQuestion = [TXPBQuestion defaultInstance];
    self.refAnswer = [TXPBQuestionAnswer defaultInstance];
  }
  return self;
}
static TXPBCommunionMessage* defaultTXPBCommunionMessageInstance = nil;
+ (void) initialize {
  if (self == [TXPBCommunionMessage class]) {
    defaultTXPBCommunionMessageInstance = [[TXPBCommunionMessage alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBCommunionMessageInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBCommunionMessageInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasToUserId) {
    return NO;
  }
  if (!self.hasObjId) {
    return NO;
  }
  if (!self.hasObjType) {
    return NO;
  }
  if (!self.hasAction) {
    return NO;
  }
  if (!self.hasOptUserId) {
    return NO;
  }
  if (!self.hasOptUserType) {
    return NO;
  }
  if (!self.hasOptUserName) {
    return NO;
  }
  if (!self.hasCreateOn) {
    return NO;
  }
  if (self.hasRefQuestion) {
    if (!self.refQuestion.isInitialized) {
      return NO;
    }
  }
  if (self.hasRefAnswer) {
    if (!self.refAnswer.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasToUserId) {
    [output writeInt64:2 value:self.toUserId];
  }
  if (self.hasObjId) {
    [output writeInt64:3 value:self.objId];
  }
  if (self.hasObjType) {
    [output writeEnum:4 value:self.objType];
  }
  if (self.hasAction) {
    [output writeEnum:5 value:self.action];
  }
  if (self.hasOptUserId) {
    [output writeInt64:6 value:self.optUserId];
  }
  if (self.hasOptUserType) {
    [output writeEnum:7 value:self.optUserType];
  }
  if (self.hasOptUserName) {
    [output writeString:8 value:self.optUserName];
  }
  if (self.hasOptUserTitle) {
    [output writeString:9 value:self.optUserTitle];
  }
  if (self.hasTitle) {
    [output writeString:10 value:self.title];
  }
  if (self.hasContent) {
    [output writeString:11 value:self.content];
  }
  if (self.hasCreateOn) {
    [output writeInt64:12 value:self.createOn];
  }
  if (self.hasRefId) {
    [output writeInt64:13 value:self.refId];
  }
  if (self.hasOptUserAvater) {
    [output writeString:14 value:self.optUserAvater];
  }
  if (self.hasRefQuestion) {
    [output writeMessage:15 value:self.refQuestion];
  }
  if (self.hasRefAnswer) {
    [output writeMessage:16 value:self.refAnswer];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasToUserId) {
    size_ += computeInt64Size(2, self.toUserId);
  }
  if (self.hasObjId) {
    size_ += computeInt64Size(3, self.objId);
  }
  if (self.hasObjType) {
    size_ += computeEnumSize(4, self.objType);
  }
  if (self.hasAction) {
    size_ += computeEnumSize(5, self.action);
  }
  if (self.hasOptUserId) {
    size_ += computeInt64Size(6, self.optUserId);
  }
  if (self.hasOptUserType) {
    size_ += computeEnumSize(7, self.optUserType);
  }
  if (self.hasOptUserName) {
    size_ += computeStringSize(8, self.optUserName);
  }
  if (self.hasOptUserTitle) {
    size_ += computeStringSize(9, self.optUserTitle);
  }
  if (self.hasTitle) {
    size_ += computeStringSize(10, self.title);
  }
  if (self.hasContent) {
    size_ += computeStringSize(11, self.content);
  }
  if (self.hasCreateOn) {
    size_ += computeInt64Size(12, self.createOn);
  }
  if (self.hasRefId) {
    size_ += computeInt64Size(13, self.refId);
  }
  if (self.hasOptUserAvater) {
    size_ += computeStringSize(14, self.optUserAvater);
  }
  if (self.hasRefQuestion) {
    size_ += computeMessageSize(15, self.refQuestion);
  }
  if (self.hasRefAnswer) {
    size_ += computeMessageSize(16, self.refAnswer);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBCommunionMessage*) parseFromData:(NSData*) data {
  return (TXPBCommunionMessage*)[[[TXPBCommunionMessage builder] mergeFromData:data] build];
}
+ (TXPBCommunionMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCommunionMessage*)[[[TXPBCommunionMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBCommunionMessage*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBCommunionMessage*)[[[TXPBCommunionMessage builder] mergeFromInputStream:input] build];
}
+ (TXPBCommunionMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCommunionMessage*)[[[TXPBCommunionMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCommunionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBCommunionMessage*)[[[TXPBCommunionMessage builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBCommunionMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBCommunionMessage*)[[[TXPBCommunionMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBCommunionMessageBuilder*) builder {
  return [[TXPBCommunionMessageBuilder alloc] init];
}
+ (TXPBCommunionMessageBuilder*) builderWithPrototype:(TXPBCommunionMessage*) prototype {
  return [[TXPBCommunionMessage builder] mergeFrom:prototype];
}
- (TXPBCommunionMessageBuilder*) builder {
  return [TXPBCommunionMessage builder];
}
- (TXPBCommunionMessageBuilder*) toBuilder {
  return [TXPBCommunionMessage builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasToUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"toUserId", [NSNumber numberWithLongLong:self.toUserId]];
  }
  if (self.hasObjId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"objId", [NSNumber numberWithLongLong:self.objId]];
  }
  if (self.hasObjType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"objType", NSStringFromTXPBCommunionObjType(self.objType)];
  }
  if (self.hasAction) {
    [output appendFormat:@"%@%@: %@\n", indent, @"action", NSStringFromTXPBCommunionAction(self.action)];
  }
  if (self.hasOptUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optUserId", [NSNumber numberWithLongLong:self.optUserId]];
  }
  if (self.hasOptUserType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optUserType", NSStringFromTXPBUserType(self.optUserType)];
  }
  if (self.hasOptUserName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optUserName", self.optUserName];
  }
  if (self.hasOptUserTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optUserTitle", self.optUserTitle];
  }
  if (self.hasTitle) {
    [output appendFormat:@"%@%@: %@\n", indent, @"title", self.title];
  }
  if (self.hasContent) {
    [output appendFormat:@"%@%@: %@\n", indent, @"content", self.content];
  }
  if (self.hasCreateOn) {
    [output appendFormat:@"%@%@: %@\n", indent, @"createOn", [NSNumber numberWithLongLong:self.createOn]];
  }
  if (self.hasRefId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"refId", [NSNumber numberWithLongLong:self.refId]];
  }
  if (self.hasOptUserAvater) {
    [output appendFormat:@"%@%@: %@\n", indent, @"optUserAvater", self.optUserAvater];
  }
  if (self.hasRefQuestion) {
    [output appendFormat:@"%@%@ {\n", indent, @"refQuestion"];
    [self.refQuestion writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasRefAnswer) {
    [output appendFormat:@"%@%@ {\n", indent, @"refAnswer"];
    [self.refAnswer writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasToUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.toUserId] forKey: @"toUserId"];
  }
  if (self.hasObjId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.objId] forKey: @"objId"];
  }
  if (self.hasObjType) {
    [dictionary setObject: @(self.objType) forKey: @"objType"];
  }
  if (self.hasAction) {
    [dictionary setObject: @(self.action) forKey: @"action"];
  }
  if (self.hasOptUserId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.optUserId] forKey: @"optUserId"];
  }
  if (self.hasOptUserType) {
    [dictionary setObject: @(self.optUserType) forKey: @"optUserType"];
  }
  if (self.hasOptUserName) {
    [dictionary setObject: self.optUserName forKey: @"optUserName"];
  }
  if (self.hasOptUserTitle) {
    [dictionary setObject: self.optUserTitle forKey: @"optUserTitle"];
  }
  if (self.hasTitle) {
    [dictionary setObject: self.title forKey: @"title"];
  }
  if (self.hasContent) {
    [dictionary setObject: self.content forKey: @"content"];
  }
  if (self.hasCreateOn) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.createOn] forKey: @"createOn"];
  }
  if (self.hasRefId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.refId] forKey: @"refId"];
  }
  if (self.hasOptUserAvater) {
    [dictionary setObject: self.optUserAvater forKey: @"optUserAvater"];
  }
  if (self.hasRefQuestion) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.refQuestion storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"refQuestion"];
  }
  if (self.hasRefAnswer) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.refAnswer storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"refAnswer"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBCommunionMessage class]]) {
    return NO;
  }
  TXPBCommunionMessage *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasToUserId == otherMessage.hasToUserId &&
      (!self.hasToUserId || self.toUserId == otherMessage.toUserId) &&
      self.hasObjId == otherMessage.hasObjId &&
      (!self.hasObjId || self.objId == otherMessage.objId) &&
      self.hasObjType == otherMessage.hasObjType &&
      (!self.hasObjType || self.objType == otherMessage.objType) &&
      self.hasAction == otherMessage.hasAction &&
      (!self.hasAction || self.action == otherMessage.action) &&
      self.hasOptUserId == otherMessage.hasOptUserId &&
      (!self.hasOptUserId || self.optUserId == otherMessage.optUserId) &&
      self.hasOptUserType == otherMessage.hasOptUserType &&
      (!self.hasOptUserType || self.optUserType == otherMessage.optUserType) &&
      self.hasOptUserName == otherMessage.hasOptUserName &&
      (!self.hasOptUserName || [self.optUserName isEqual:otherMessage.optUserName]) &&
      self.hasOptUserTitle == otherMessage.hasOptUserTitle &&
      (!self.hasOptUserTitle || [self.optUserTitle isEqual:otherMessage.optUserTitle]) &&
      self.hasTitle == otherMessage.hasTitle &&
      (!self.hasTitle || [self.title isEqual:otherMessage.title]) &&
      self.hasContent == otherMessage.hasContent &&
      (!self.hasContent || [self.content isEqual:otherMessage.content]) &&
      self.hasCreateOn == otherMessage.hasCreateOn &&
      (!self.hasCreateOn || self.createOn == otherMessage.createOn) &&
      self.hasRefId == otherMessage.hasRefId &&
      (!self.hasRefId || self.refId == otherMessage.refId) &&
      self.hasOptUserAvater == otherMessage.hasOptUserAvater &&
      (!self.hasOptUserAvater || [self.optUserAvater isEqual:otherMessage.optUserAvater]) &&
      self.hasRefQuestion == otherMessage.hasRefQuestion &&
      (!self.hasRefQuestion || [self.refQuestion isEqual:otherMessage.refQuestion]) &&
      self.hasRefAnswer == otherMessage.hasRefAnswer &&
      (!self.hasRefAnswer || [self.refAnswer isEqual:otherMessage.refAnswer]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasToUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.toUserId] hash];
  }
  if (self.hasObjId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.objId] hash];
  }
  if (self.hasObjType) {
    hashCode = hashCode * 31 + self.objType;
  }
  if (self.hasAction) {
    hashCode = hashCode * 31 + self.action;
  }
  if (self.hasOptUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.optUserId] hash];
  }
  if (self.hasOptUserType) {
    hashCode = hashCode * 31 + self.optUserType;
  }
  if (self.hasOptUserName) {
    hashCode = hashCode * 31 + [self.optUserName hash];
  }
  if (self.hasOptUserTitle) {
    hashCode = hashCode * 31 + [self.optUserTitle hash];
  }
  if (self.hasTitle) {
    hashCode = hashCode * 31 + [self.title hash];
  }
  if (self.hasContent) {
    hashCode = hashCode * 31 + [self.content hash];
  }
  if (self.hasCreateOn) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.createOn] hash];
  }
  if (self.hasRefId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.refId] hash];
  }
  if (self.hasOptUserAvater) {
    hashCode = hashCode * 31 + [self.optUserAvater hash];
  }
  if (self.hasRefQuestion) {
    hashCode = hashCode * 31 + [self.refQuestion hash];
  }
  if (self.hasRefAnswer) {
    hashCode = hashCode * 31 + [self.refAnswer hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBCommunionMessageBuilder()
@property (strong) TXPBCommunionMessage* resultCommunionMessage;
@end

@implementation TXPBCommunionMessageBuilder
@synthesize resultCommunionMessage;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultCommunionMessage = [[TXPBCommunionMessage alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultCommunionMessage;
}
- (TXPBCommunionMessageBuilder*) clear {
  self.resultCommunionMessage = [[TXPBCommunionMessage alloc] init];
  return self;
}
- (TXPBCommunionMessageBuilder*) clone {
  return [TXPBCommunionMessage builderWithPrototype:resultCommunionMessage];
}
- (TXPBCommunionMessage*) defaultInstance {
  return [TXPBCommunionMessage defaultInstance];
}
- (TXPBCommunionMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBCommunionMessage*) buildPartial {
  TXPBCommunionMessage* returnMe = resultCommunionMessage;
  self.resultCommunionMessage = nil;
  return returnMe;
}
- (TXPBCommunionMessageBuilder*) mergeFrom:(TXPBCommunionMessage*) other {
  if (other == [TXPBCommunionMessage defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasToUserId) {
    [self setToUserId:other.toUserId];
  }
  if (other.hasObjId) {
    [self setObjId:other.objId];
  }
  if (other.hasObjType) {
    [self setObjType:other.objType];
  }
  if (other.hasAction) {
    [self setAction:other.action];
  }
  if (other.hasOptUserId) {
    [self setOptUserId:other.optUserId];
  }
  if (other.hasOptUserType) {
    [self setOptUserType:other.optUserType];
  }
  if (other.hasOptUserName) {
    [self setOptUserName:other.optUserName];
  }
  if (other.hasOptUserTitle) {
    [self setOptUserTitle:other.optUserTitle];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasCreateOn) {
    [self setCreateOn:other.createOn];
  }
  if (other.hasRefId) {
    [self setRefId:other.refId];
  }
  if (other.hasOptUserAvater) {
    [self setOptUserAvater:other.optUserAvater];
  }
  if (other.hasRefQuestion) {
    [self mergeRefQuestion:other.refQuestion];
  }
  if (other.hasRefAnswer) {
    [self mergeRefAnswer:other.refAnswer];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBCommunionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBCommunionMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 16: {
        [self setToUserId:[input readInt64]];
        break;
      }
      case 24: {
        [self setObjId:[input readInt64]];
        break;
      }
      case 32: {
        TXPBCommunionObjType value = (TXPBCommunionObjType)[input readEnum];
        if (TXPBCommunionObjTypeIsValidValue(value)) {
          [self setObjType:value];
        } else {
          [unknownFields mergeVarintField:4 value:value];
        }
        break;
      }
      case 40: {
        TXPBCommunionAction value = (TXPBCommunionAction)[input readEnum];
        if (TXPBCommunionActionIsValidValue(value)) {
          [self setAction:value];
        } else {
          [unknownFields mergeVarintField:5 value:value];
        }
        break;
      }
      case 48: {
        [self setOptUserId:[input readInt64]];
        break;
      }
      case 56: {
        TXPBUserType value = (TXPBUserType)[input readEnum];
        if (TXPBUserTypeIsValidValue(value)) {
          [self setOptUserType:value];
        } else {
          [unknownFields mergeVarintField:7 value:value];
        }
        break;
      }
      case 66: {
        [self setOptUserName:[input readString]];
        break;
      }
      case 74: {
        [self setOptUserTitle:[input readString]];
        break;
      }
      case 82: {
        [self setTitle:[input readString]];
        break;
      }
      case 90: {
        [self setContent:[input readString]];
        break;
      }
      case 96: {
        [self setCreateOn:[input readInt64]];
        break;
      }
      case 104: {
        [self setRefId:[input readInt64]];
        break;
      }
      case 114: {
        [self setOptUserAvater:[input readString]];
        break;
      }
      case 122: {
        TXPBQuestionBuilder* subBuilder = [TXPBQuestion builder];
        if (self.hasRefQuestion) {
          [subBuilder mergeFrom:self.refQuestion];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRefQuestion:[subBuilder buildPartial]];
        break;
      }
      case 130: {
        TXPBQuestionAnswerBuilder* subBuilder = [TXPBQuestionAnswer builder];
        if (self.hasRefAnswer) {
          [subBuilder mergeFrom:self.refAnswer];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setRefAnswer:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultCommunionMessage.hasId;
}
- (SInt64) id {
  return resultCommunionMessage.id;
}
- (TXPBCommunionMessageBuilder*) setId:(SInt64) value {
  resultCommunionMessage.hasId = YES;
  resultCommunionMessage.id = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearId {
  resultCommunionMessage.hasId = NO;
  resultCommunionMessage.id = 0L;
  return self;
}
- (BOOL) hasToUserId {
  return resultCommunionMessage.hasToUserId;
}
- (SInt64) toUserId {
  return resultCommunionMessage.toUserId;
}
- (TXPBCommunionMessageBuilder*) setToUserId:(SInt64) value {
  resultCommunionMessage.hasToUserId = YES;
  resultCommunionMessage.toUserId = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearToUserId {
  resultCommunionMessage.hasToUserId = NO;
  resultCommunionMessage.toUserId = 0L;
  return self;
}
- (BOOL) hasObjId {
  return resultCommunionMessage.hasObjId;
}
- (SInt64) objId {
  return resultCommunionMessage.objId;
}
- (TXPBCommunionMessageBuilder*) setObjId:(SInt64) value {
  resultCommunionMessage.hasObjId = YES;
  resultCommunionMessage.objId = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearObjId {
  resultCommunionMessage.hasObjId = NO;
  resultCommunionMessage.objId = 0L;
  return self;
}
- (BOOL) hasObjType {
  return resultCommunionMessage.hasObjType;
}
- (TXPBCommunionObjType) objType {
  return resultCommunionMessage.objType;
}
- (TXPBCommunionMessageBuilder*) setObjType:(TXPBCommunionObjType) value {
  resultCommunionMessage.hasObjType = YES;
  resultCommunionMessage.objType = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearObjType {
  resultCommunionMessage.hasObjType = NO;
  resultCommunionMessage.objType = TXPBCommunionObjTypeTQuestion;
  return self;
}
- (BOOL) hasAction {
  return resultCommunionMessage.hasAction;
}
- (TXPBCommunionAction) action {
  return resultCommunionMessage.action;
}
- (TXPBCommunionMessageBuilder*) setAction:(TXPBCommunionAction) value {
  resultCommunionMessage.hasAction = YES;
  resultCommunionMessage.action = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearAction {
  resultCommunionMessage.hasAction = NO;
  resultCommunionMessage.action = TXPBCommunionActionAAnswer;
  return self;
}
- (BOOL) hasOptUserId {
  return resultCommunionMessage.hasOptUserId;
}
- (SInt64) optUserId {
  return resultCommunionMessage.optUserId;
}
- (TXPBCommunionMessageBuilder*) setOptUserId:(SInt64) value {
  resultCommunionMessage.hasOptUserId = YES;
  resultCommunionMessage.optUserId = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearOptUserId {
  resultCommunionMessage.hasOptUserId = NO;
  resultCommunionMessage.optUserId = 0L;
  return self;
}
- (BOOL) hasOptUserType {
  return resultCommunionMessage.hasOptUserType;
}
- (TXPBUserType) optUserType {
  return resultCommunionMessage.optUserType;
}
- (TXPBCommunionMessageBuilder*) setOptUserType:(TXPBUserType) value {
  resultCommunionMessage.hasOptUserType = YES;
  resultCommunionMessage.optUserType = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearOptUserType {
  resultCommunionMessage.hasOptUserType = NO;
  resultCommunionMessage.optUserType = TXPBUserTypeChild;
  return self;
}
- (BOOL) hasOptUserName {
  return resultCommunionMessage.hasOptUserName;
}
- (NSString*) optUserName {
  return resultCommunionMessage.optUserName;
}
- (TXPBCommunionMessageBuilder*) setOptUserName:(NSString*) value {
  resultCommunionMessage.hasOptUserName = YES;
  resultCommunionMessage.optUserName = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearOptUserName {
  resultCommunionMessage.hasOptUserName = NO;
  resultCommunionMessage.optUserName = @"";
  return self;
}
- (BOOL) hasOptUserTitle {
  return resultCommunionMessage.hasOptUserTitle;
}
- (NSString*) optUserTitle {
  return resultCommunionMessage.optUserTitle;
}
- (TXPBCommunionMessageBuilder*) setOptUserTitle:(NSString*) value {
  resultCommunionMessage.hasOptUserTitle = YES;
  resultCommunionMessage.optUserTitle = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearOptUserTitle {
  resultCommunionMessage.hasOptUserTitle = NO;
  resultCommunionMessage.optUserTitle = @"";
  return self;
}
- (BOOL) hasTitle {
  return resultCommunionMessage.hasTitle;
}
- (NSString*) title {
  return resultCommunionMessage.title;
}
- (TXPBCommunionMessageBuilder*) setTitle:(NSString*) value {
  resultCommunionMessage.hasTitle = YES;
  resultCommunionMessage.title = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearTitle {
  resultCommunionMessage.hasTitle = NO;
  resultCommunionMessage.title = @"";
  return self;
}
- (BOOL) hasContent {
  return resultCommunionMessage.hasContent;
}
- (NSString*) content {
  return resultCommunionMessage.content;
}
- (TXPBCommunionMessageBuilder*) setContent:(NSString*) value {
  resultCommunionMessage.hasContent = YES;
  resultCommunionMessage.content = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearContent {
  resultCommunionMessage.hasContent = NO;
  resultCommunionMessage.content = @"";
  return self;
}
- (BOOL) hasCreateOn {
  return resultCommunionMessage.hasCreateOn;
}
- (SInt64) createOn {
  return resultCommunionMessage.createOn;
}
- (TXPBCommunionMessageBuilder*) setCreateOn:(SInt64) value {
  resultCommunionMessage.hasCreateOn = YES;
  resultCommunionMessage.createOn = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearCreateOn {
  resultCommunionMessage.hasCreateOn = NO;
  resultCommunionMessage.createOn = 0L;
  return self;
}
- (BOOL) hasRefId {
  return resultCommunionMessage.hasRefId;
}
- (SInt64) refId {
  return resultCommunionMessage.refId;
}
- (TXPBCommunionMessageBuilder*) setRefId:(SInt64) value {
  resultCommunionMessage.hasRefId = YES;
  resultCommunionMessage.refId = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearRefId {
  resultCommunionMessage.hasRefId = NO;
  resultCommunionMessage.refId = 0L;
  return self;
}
- (BOOL) hasOptUserAvater {
  return resultCommunionMessage.hasOptUserAvater;
}
- (NSString*) optUserAvater {
  return resultCommunionMessage.optUserAvater;
}
- (TXPBCommunionMessageBuilder*) setOptUserAvater:(NSString*) value {
  resultCommunionMessage.hasOptUserAvater = YES;
  resultCommunionMessage.optUserAvater = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearOptUserAvater {
  resultCommunionMessage.hasOptUserAvater = NO;
  resultCommunionMessage.optUserAvater = @"";
  return self;
}
- (BOOL) hasRefQuestion {
  return resultCommunionMessage.hasRefQuestion;
}
- (TXPBQuestion*) refQuestion {
  return resultCommunionMessage.refQuestion;
}
- (TXPBCommunionMessageBuilder*) setRefQuestion:(TXPBQuestion*) value {
  resultCommunionMessage.hasRefQuestion = YES;
  resultCommunionMessage.refQuestion = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) setRefQuestionBuilder:(TXPBQuestionBuilder*) builderForValue {
  return [self setRefQuestion:[builderForValue build]];
}
- (TXPBCommunionMessageBuilder*) mergeRefQuestion:(TXPBQuestion*) value {
  if (resultCommunionMessage.hasRefQuestion &&
      resultCommunionMessage.refQuestion != [TXPBQuestion defaultInstance]) {
    resultCommunionMessage.refQuestion =
      [[[TXPBQuestion builderWithPrototype:resultCommunionMessage.refQuestion] mergeFrom:value] buildPartial];
  } else {
    resultCommunionMessage.refQuestion = value;
  }
  resultCommunionMessage.hasRefQuestion = YES;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearRefQuestion {
  resultCommunionMessage.hasRefQuestion = NO;
  resultCommunionMessage.refQuestion = [TXPBQuestion defaultInstance];
  return self;
}
- (BOOL) hasRefAnswer {
  return resultCommunionMessage.hasRefAnswer;
}
- (TXPBQuestionAnswer*) refAnswer {
  return resultCommunionMessage.refAnswer;
}
- (TXPBCommunionMessageBuilder*) setRefAnswer:(TXPBQuestionAnswer*) value {
  resultCommunionMessage.hasRefAnswer = YES;
  resultCommunionMessage.refAnswer = value;
  return self;
}
- (TXPBCommunionMessageBuilder*) setRefAnswerBuilder:(TXPBQuestionAnswerBuilder*) builderForValue {
  return [self setRefAnswer:[builderForValue build]];
}
- (TXPBCommunionMessageBuilder*) mergeRefAnswer:(TXPBQuestionAnswer*) value {
  if (resultCommunionMessage.hasRefAnswer &&
      resultCommunionMessage.refAnswer != [TXPBQuestionAnswer defaultInstance]) {
    resultCommunionMessage.refAnswer =
      [[[TXPBQuestionAnswer builderWithPrototype:resultCommunionMessage.refAnswer] mergeFrom:value] buildPartial];
  } else {
    resultCommunionMessage.refAnswer = value;
  }
  resultCommunionMessage.hasRefAnswer = YES;
  return self;
}
- (TXPBCommunionMessageBuilder*) clearRefAnswer {
  resultCommunionMessage.hasRefAnswer = NO;
  resultCommunionMessage.refAnswer = [TXPBQuestionAnswer defaultInstance];
  return self;
}
@end

@interface TXPBFetchCommunionMessageRequest ()
@property SInt64 maxId;
@property SInt64 sinceId;
@property SInt64 sinceTime;
@end

@implementation TXPBFetchCommunionMessageRequest

- (BOOL) hasMaxId {
  return !!hasMaxId_;
}
- (void) setHasMaxId:(BOOL) _value_ {
  hasMaxId_ = !!_value_;
}
@synthesize maxId;
- (BOOL) hasSinceId {
  return !!hasSinceId_;
}
- (void) setHasSinceId:(BOOL) _value_ {
  hasSinceId_ = !!_value_;
}
@synthesize sinceId;
- (BOOL) hasSinceTime {
  return !!hasSinceTime_;
}
- (void) setHasSinceTime:(BOOL) _value_ {
  hasSinceTime_ = !!_value_;
}
@synthesize sinceTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.maxId = 0L;
    self.sinceId = 0L;
    self.sinceTime = 0L;
  }
  return self;
}
static TXPBFetchCommunionMessageRequest* defaultTXPBFetchCommunionMessageRequestInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCommunionMessageRequest class]) {
    defaultTXPBFetchCommunionMessageRequestInstance = [[TXPBFetchCommunionMessageRequest alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCommunionMessageRequestInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCommunionMessageRequestInstance;
}
- (BOOL) isInitialized {
  if (!self.hasMaxId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMaxId) {
    [output writeInt64:1 value:self.maxId];
  }
  if (self.hasSinceId) {
    [output writeInt64:2 value:self.sinceId];
  }
  if (self.hasSinceTime) {
    [output writeInt64:3 value:self.sinceTime];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasMaxId) {
    size_ += computeInt64Size(1, self.maxId);
  }
  if (self.hasSinceId) {
    size_ += computeInt64Size(2, self.sinceId);
  }
  if (self.hasSinceTime) {
    size_ += computeInt64Size(3, self.sinceTime);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCommunionMessageRequest*) parseFromData:(NSData*) data {
  return (TXPBFetchCommunionMessageRequest*)[[[TXPBFetchCommunionMessageRequest builder] mergeFromData:data] build];
}
+ (TXPBFetchCommunionMessageRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCommunionMessageRequest*)[[[TXPBFetchCommunionMessageRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCommunionMessageRequest*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCommunionMessageRequest*)[[[TXPBFetchCommunionMessageRequest builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCommunionMessageRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCommunionMessageRequest*)[[[TXPBFetchCommunionMessageRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCommunionMessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCommunionMessageRequest*)[[[TXPBFetchCommunionMessageRequest builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCommunionMessageRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCommunionMessageRequest*)[[[TXPBFetchCommunionMessageRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCommunionMessageRequestBuilder*) builder {
  return [[TXPBFetchCommunionMessageRequestBuilder alloc] init];
}
+ (TXPBFetchCommunionMessageRequestBuilder*) builderWithPrototype:(TXPBFetchCommunionMessageRequest*) prototype {
  return [[TXPBFetchCommunionMessageRequest builder] mergeFrom:prototype];
}
- (TXPBFetchCommunionMessageRequestBuilder*) builder {
  return [TXPBFetchCommunionMessageRequest builder];
}
- (TXPBFetchCommunionMessageRequestBuilder*) toBuilder {
  return [TXPBFetchCommunionMessageRequest builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasMaxId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"maxId", [NSNumber numberWithLongLong:self.maxId]];
  }
  if (self.hasSinceId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceId", [NSNumber numberWithLongLong:self.sinceId]];
  }
  if (self.hasSinceTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"sinceTime", [NSNumber numberWithLongLong:self.sinceTime]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasMaxId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.maxId] forKey: @"maxId"];
  }
  if (self.hasSinceId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceId] forKey: @"sinceId"];
  }
  if (self.hasSinceTime) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.sinceTime] forKey: @"sinceTime"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCommunionMessageRequest class]]) {
    return NO;
  }
  TXPBFetchCommunionMessageRequest *otherMessage = other;
  return
      self.hasMaxId == otherMessage.hasMaxId &&
      (!self.hasMaxId || self.maxId == otherMessage.maxId) &&
      self.hasSinceId == otherMessage.hasSinceId &&
      (!self.hasSinceId || self.sinceId == otherMessage.sinceId) &&
      self.hasSinceTime == otherMessage.hasSinceTime &&
      (!self.hasSinceTime || self.sinceTime == otherMessage.sinceTime) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasMaxId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.maxId] hash];
  }
  if (self.hasSinceId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceId] hash];
  }
  if (self.hasSinceTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.sinceTime] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCommunionMessageRequestBuilder()
@property (strong) TXPBFetchCommunionMessageRequest* resultFetchCommunionMessageRequest;
@end

@implementation TXPBFetchCommunionMessageRequestBuilder
@synthesize resultFetchCommunionMessageRequest;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCommunionMessageRequest = [[TXPBFetchCommunionMessageRequest alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCommunionMessageRequest;
}
- (TXPBFetchCommunionMessageRequestBuilder*) clear {
  self.resultFetchCommunionMessageRequest = [[TXPBFetchCommunionMessageRequest alloc] init];
  return self;
}
- (TXPBFetchCommunionMessageRequestBuilder*) clone {
  return [TXPBFetchCommunionMessageRequest builderWithPrototype:resultFetchCommunionMessageRequest];
}
- (TXPBFetchCommunionMessageRequest*) defaultInstance {
  return [TXPBFetchCommunionMessageRequest defaultInstance];
}
- (TXPBFetchCommunionMessageRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCommunionMessageRequest*) buildPartial {
  TXPBFetchCommunionMessageRequest* returnMe = resultFetchCommunionMessageRequest;
  self.resultFetchCommunionMessageRequest = nil;
  return returnMe;
}
- (TXPBFetchCommunionMessageRequestBuilder*) mergeFrom:(TXPBFetchCommunionMessageRequest*) other {
  if (other == [TXPBFetchCommunionMessageRequest defaultInstance]) {
    return self;
  }
  if (other.hasMaxId) {
    [self setMaxId:other.maxId];
  }
  if (other.hasSinceId) {
    [self setSinceId:other.sinceId];
  }
  if (other.hasSinceTime) {
    [self setSinceTime:other.sinceTime];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCommunionMessageRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCommunionMessageRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMaxId:[input readInt64]];
        break;
      }
      case 16: {
        [self setSinceId:[input readInt64]];
        break;
      }
      case 24: {
        [self setSinceTime:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasMaxId {
  return resultFetchCommunionMessageRequest.hasMaxId;
}
- (SInt64) maxId {
  return resultFetchCommunionMessageRequest.maxId;
}
- (TXPBFetchCommunionMessageRequestBuilder*) setMaxId:(SInt64) value {
  resultFetchCommunionMessageRequest.hasMaxId = YES;
  resultFetchCommunionMessageRequest.maxId = value;
  return self;
}
- (TXPBFetchCommunionMessageRequestBuilder*) clearMaxId {
  resultFetchCommunionMessageRequest.hasMaxId = NO;
  resultFetchCommunionMessageRequest.maxId = 0L;
  return self;
}
- (BOOL) hasSinceId {
  return resultFetchCommunionMessageRequest.hasSinceId;
}
- (SInt64) sinceId {
  return resultFetchCommunionMessageRequest.sinceId;
}
- (TXPBFetchCommunionMessageRequestBuilder*) setSinceId:(SInt64) value {
  resultFetchCommunionMessageRequest.hasSinceId = YES;
  resultFetchCommunionMessageRequest.sinceId = value;
  return self;
}
- (TXPBFetchCommunionMessageRequestBuilder*) clearSinceId {
  resultFetchCommunionMessageRequest.hasSinceId = NO;
  resultFetchCommunionMessageRequest.sinceId = 0L;
  return self;
}
- (BOOL) hasSinceTime {
  return resultFetchCommunionMessageRequest.hasSinceTime;
}
- (SInt64) sinceTime {
  return resultFetchCommunionMessageRequest.sinceTime;
}
- (TXPBFetchCommunionMessageRequestBuilder*) setSinceTime:(SInt64) value {
  resultFetchCommunionMessageRequest.hasSinceTime = YES;
  resultFetchCommunionMessageRequest.sinceTime = value;
  return self;
}
- (TXPBFetchCommunionMessageRequestBuilder*) clearSinceTime {
  resultFetchCommunionMessageRequest.hasSinceTime = NO;
  resultFetchCommunionMessageRequest.sinceTime = 0L;
  return self;
}
@end

@interface TXPBFetchCommunionMessageResponse ()
@property (strong) NSMutableArray * msgsArray;
@property BOOL hasMore;
@end

@implementation TXPBFetchCommunionMessageResponse

@synthesize msgsArray;
@dynamic msgs;
- (BOOL) hasHasMore {
  return !!hasHasMore_;
}
- (void) setHasHasMore:(BOOL) _value_ {
  hasHasMore_ = !!_value_;
}
- (BOOL) hasMore {
  return !!hasMore_;
}
- (void) setHasMore:(BOOL) _value_ {
  hasMore_ = !!_value_;
}
- (instancetype) init {
  if ((self = [super init])) {
    self.hasMore = NO;
  }
  return self;
}
static TXPBFetchCommunionMessageResponse* defaultTXPBFetchCommunionMessageResponseInstance = nil;
+ (void) initialize {
  if (self == [TXPBFetchCommunionMessageResponse class]) {
    defaultTXPBFetchCommunionMessageResponseInstance = [[TXPBFetchCommunionMessageResponse alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultTXPBFetchCommunionMessageResponseInstance;
}
- (instancetype) defaultInstance {
  return defaultTXPBFetchCommunionMessageResponseInstance;
}
- (NSArray *)msgs {
  return msgsArray;
}
- (TXPBCommunionMessage*)msgsAtIndex:(NSUInteger)index {
  return [msgsArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasHasMore) {
    return NO;
  }
  __block BOOL isInitmsgs = YES;
   [self.msgs enumerateObjectsUsingBlock:^(TXPBCommunionMessage *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitmsgs = NO;
      *stop = YES;
    }
  }];
  if (!isInitmsgs) return isInitmsgs;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.msgsArray enumerateObjectsUsingBlock:^(TXPBCommunionMessage *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:1 value:element];
  }];
  if (self.hasHasMore) {
    [output writeBool:2 value:self.hasMore];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  [self.msgsArray enumerateObjectsUsingBlock:^(TXPBCommunionMessage *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(1, element);
  }];
  if (self.hasHasMore) {
    size_ += computeBoolSize(2, self.hasMore);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (TXPBFetchCommunionMessageResponse*) parseFromData:(NSData*) data {
  return (TXPBFetchCommunionMessageResponse*)[[[TXPBFetchCommunionMessageResponse builder] mergeFromData:data] build];
}
+ (TXPBFetchCommunionMessageResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCommunionMessageResponse*)[[[TXPBFetchCommunionMessageResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCommunionMessageResponse*) parseFromInputStream:(NSInputStream*) input {
  return (TXPBFetchCommunionMessageResponse*)[[[TXPBFetchCommunionMessageResponse builder] mergeFromInputStream:input] build];
}
+ (TXPBFetchCommunionMessageResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCommunionMessageResponse*)[[[TXPBFetchCommunionMessageResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCommunionMessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TXPBFetchCommunionMessageResponse*)[[[TXPBFetchCommunionMessageResponse builder] mergeFromCodedInputStream:input] build];
}
+ (TXPBFetchCommunionMessageResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TXPBFetchCommunionMessageResponse*)[[[TXPBFetchCommunionMessageResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (TXPBFetchCommunionMessageResponseBuilder*) builder {
  return [[TXPBFetchCommunionMessageResponseBuilder alloc] init];
}
+ (TXPBFetchCommunionMessageResponseBuilder*) builderWithPrototype:(TXPBFetchCommunionMessageResponse*) prototype {
  return [[TXPBFetchCommunionMessageResponse builder] mergeFrom:prototype];
}
- (TXPBFetchCommunionMessageResponseBuilder*) builder {
  return [TXPBFetchCommunionMessageResponse builder];
}
- (TXPBFetchCommunionMessageResponseBuilder*) toBuilder {
  return [TXPBFetchCommunionMessageResponse builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.msgsArray enumerateObjectsUsingBlock:^(TXPBCommunionMessage *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"msgs"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasHasMore) {
    [output appendFormat:@"%@%@: %@\n", indent, @"hasMore", [NSNumber numberWithBool:self.hasMore]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  for (TXPBCommunionMessage* element in self.msgsArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"msgs"];
  }
  if (self.hasHasMore) {
    [dictionary setObject: [NSNumber numberWithBool:self.hasMore] forKey: @"hasMore"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[TXPBFetchCommunionMessageResponse class]]) {
    return NO;
  }
  TXPBFetchCommunionMessageResponse *otherMessage = other;
  return
      [self.msgsArray isEqualToArray:otherMessage.msgsArray] &&
      self.hasHasMore == otherMessage.hasHasMore &&
      (!self.hasHasMore || self.hasMore == otherMessage.hasMore) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  [self.msgsArray enumerateObjectsUsingBlock:^(TXPBCommunionMessage *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasHasMore) {
    hashCode = hashCode * 31 + [[NSNumber numberWithBool:self.hasMore] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface TXPBFetchCommunionMessageResponseBuilder()
@property (strong) TXPBFetchCommunionMessageResponse* resultFetchCommunionMessageResponse;
@end

@implementation TXPBFetchCommunionMessageResponseBuilder
@synthesize resultFetchCommunionMessageResponse;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultFetchCommunionMessageResponse = [[TXPBFetchCommunionMessageResponse alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultFetchCommunionMessageResponse;
}
- (TXPBFetchCommunionMessageResponseBuilder*) clear {
  self.resultFetchCommunionMessageResponse = [[TXPBFetchCommunionMessageResponse alloc] init];
  return self;
}
- (TXPBFetchCommunionMessageResponseBuilder*) clone {
  return [TXPBFetchCommunionMessageResponse builderWithPrototype:resultFetchCommunionMessageResponse];
}
- (TXPBFetchCommunionMessageResponse*) defaultInstance {
  return [TXPBFetchCommunionMessageResponse defaultInstance];
}
- (TXPBFetchCommunionMessageResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (TXPBFetchCommunionMessageResponse*) buildPartial {
  TXPBFetchCommunionMessageResponse* returnMe = resultFetchCommunionMessageResponse;
  self.resultFetchCommunionMessageResponse = nil;
  return returnMe;
}
- (TXPBFetchCommunionMessageResponseBuilder*) mergeFrom:(TXPBFetchCommunionMessageResponse*) other {
  if (other == [TXPBFetchCommunionMessageResponse defaultInstance]) {
    return self;
  }
  if (other.msgsArray.count > 0) {
    if (resultFetchCommunionMessageResponse.msgsArray == nil) {
      resultFetchCommunionMessageResponse.msgsArray = [[NSMutableArray alloc] initWithArray:other.msgsArray];
    } else {
      [resultFetchCommunionMessageResponse.msgsArray addObjectsFromArray:other.msgsArray];
    }
  }
  if (other.hasHasMore) {
    [self setHasMore:other.hasMore];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (TXPBFetchCommunionMessageResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (TXPBFetchCommunionMessageResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TXPBCommunionMessageBuilder* subBuilder = [TXPBCommunionMessage builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addMsgs:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setHasMore:[input readBool]];
        break;
      }
    }
  }
}
- (NSMutableArray *)msgs {
  return resultFetchCommunionMessageResponse.msgsArray;
}
- (TXPBCommunionMessage*)msgsAtIndex:(NSUInteger)index {
  return [resultFetchCommunionMessageResponse msgsAtIndex:index];
}
- (TXPBFetchCommunionMessageResponseBuilder *)addMsgs:(TXPBCommunionMessage*)value {
  if (resultFetchCommunionMessageResponse.msgsArray == nil) {
    resultFetchCommunionMessageResponse.msgsArray = [[NSMutableArray alloc]init];
  }
  [resultFetchCommunionMessageResponse.msgsArray addObject:value];
  return self;
}
- (TXPBFetchCommunionMessageResponseBuilder *)setMsgsArray:(NSArray *)array {
  resultFetchCommunionMessageResponse.msgsArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (TXPBFetchCommunionMessageResponseBuilder *)clearMsgs {
  resultFetchCommunionMessageResponse.msgsArray = nil;
  return self;
}
- (BOOL) hasHasMore {
  return resultFetchCommunionMessageResponse.hasHasMore;
}
- (BOOL) hasMore {
  return resultFetchCommunionMessageResponse.hasMore;
}
- (TXPBFetchCommunionMessageResponseBuilder*) setHasMore:(BOOL) value {
  resultFetchCommunionMessageResponse.hasHasMore = YES;
  resultFetchCommunionMessageResponse.hasMore = value;
  return self;
}
- (TXPBFetchCommunionMessageResponseBuilder*) clearHasMore {
  resultFetchCommunionMessageResponse.hasHasMore = NO;
  resultFetchCommunionMessageResponse.hasMore = NO;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
